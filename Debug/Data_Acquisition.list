
Data_Acquisition.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000720c  08000110  08000110  00001110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  0800731c  0800731c  0000831c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080073d0  080073d0  00009064  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080073d0  080073d0  00009064  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080073d0  080073d0  00009064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080073d0  080073d0  000083d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080073d4  080073d4  000083d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  080073d8  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001e9c  20000064  0800743c  00009064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001f00  0800743c  00009f00  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00009064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000187a3  00000000  00000000  0000908d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000410a  00000000  00000000  00021830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001528  00000000  00000000  00025940  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001032  00000000  00000000  00026e68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001b787  00000000  00000000  00027e9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000196c6  00000000  00000000  00043621  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009ab01  00000000  00000000  0005cce7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000f77e8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005a98  00000000  00000000  000f782c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000fd2c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000064 	.word	0x20000064
 800012c:	00000000 	.word	0x00000000
 8000130:	08007304 	.word	0x08007304

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000068 	.word	0x20000068
 800014c:	08007304 	.word	0x08007304

08000150 <__aeabi_frsub>:
 8000150:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000154:	e002      	b.n	800015c <__addsf3>
 8000156:	bf00      	nop

08000158 <__aeabi_fsub>:
 8000158:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

0800015c <__addsf3>:
 800015c:	0042      	lsls	r2, r0, #1
 800015e:	bf1f      	itttt	ne
 8000160:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000164:	ea92 0f03 	teqne	r2, r3
 8000168:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 800016c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000170:	d06a      	beq.n	8000248 <__addsf3+0xec>
 8000172:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000176:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 800017a:	bfc1      	itttt	gt
 800017c:	18d2      	addgt	r2, r2, r3
 800017e:	4041      	eorgt	r1, r0
 8000180:	4048      	eorgt	r0, r1
 8000182:	4041      	eorgt	r1, r0
 8000184:	bfb8      	it	lt
 8000186:	425b      	neglt	r3, r3
 8000188:	2b19      	cmp	r3, #25
 800018a:	bf88      	it	hi
 800018c:	4770      	bxhi	lr
 800018e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000192:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000196:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 800019a:	bf18      	it	ne
 800019c:	4240      	negne	r0, r0
 800019e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001a2:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80001a6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80001aa:	bf18      	it	ne
 80001ac:	4249      	negne	r1, r1
 80001ae:	ea92 0f03 	teq	r2, r3
 80001b2:	d03f      	beq.n	8000234 <__addsf3+0xd8>
 80001b4:	f1a2 0201 	sub.w	r2, r2, #1
 80001b8:	fa41 fc03 	asr.w	ip, r1, r3
 80001bc:	eb10 000c 	adds.w	r0, r0, ip
 80001c0:	f1c3 0320 	rsb	r3, r3, #32
 80001c4:	fa01 f103 	lsl.w	r1, r1, r3
 80001c8:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 80001cc:	d502      	bpl.n	80001d4 <__addsf3+0x78>
 80001ce:	4249      	negs	r1, r1
 80001d0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80001d4:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 80001d8:	d313      	bcc.n	8000202 <__addsf3+0xa6>
 80001da:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 80001de:	d306      	bcc.n	80001ee <__addsf3+0x92>
 80001e0:	0840      	lsrs	r0, r0, #1
 80001e2:	ea4f 0131 	mov.w	r1, r1, rrx
 80001e6:	f102 0201 	add.w	r2, r2, #1
 80001ea:	2afe      	cmp	r2, #254	@ 0xfe
 80001ec:	d251      	bcs.n	8000292 <__addsf3+0x136>
 80001ee:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 80001f2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001f6:	bf08      	it	eq
 80001f8:	f020 0001 	biceq.w	r0, r0, #1
 80001fc:	ea40 0003 	orr.w	r0, r0, r3
 8000200:	4770      	bx	lr
 8000202:	0049      	lsls	r1, r1, #1
 8000204:	eb40 0000 	adc.w	r0, r0, r0
 8000208:	3a01      	subs	r2, #1
 800020a:	bf28      	it	cs
 800020c:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000210:	d2ed      	bcs.n	80001ee <__addsf3+0x92>
 8000212:	fab0 fc80 	clz	ip, r0
 8000216:	f1ac 0c08 	sub.w	ip, ip, #8
 800021a:	ebb2 020c 	subs.w	r2, r2, ip
 800021e:	fa00 f00c 	lsl.w	r0, r0, ip
 8000222:	bfaa      	itet	ge
 8000224:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000228:	4252      	neglt	r2, r2
 800022a:	4318      	orrge	r0, r3
 800022c:	bfbc      	itt	lt
 800022e:	40d0      	lsrlt	r0, r2
 8000230:	4318      	orrlt	r0, r3
 8000232:	4770      	bx	lr
 8000234:	f092 0f00 	teq	r2, #0
 8000238:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 800023c:	bf06      	itte	eq
 800023e:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000242:	3201      	addeq	r2, #1
 8000244:	3b01      	subne	r3, #1
 8000246:	e7b5      	b.n	80001b4 <__addsf3+0x58>
 8000248:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800024c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000250:	bf18      	it	ne
 8000252:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000256:	d021      	beq.n	800029c <__addsf3+0x140>
 8000258:	ea92 0f03 	teq	r2, r3
 800025c:	d004      	beq.n	8000268 <__addsf3+0x10c>
 800025e:	f092 0f00 	teq	r2, #0
 8000262:	bf08      	it	eq
 8000264:	4608      	moveq	r0, r1
 8000266:	4770      	bx	lr
 8000268:	ea90 0f01 	teq	r0, r1
 800026c:	bf1c      	itt	ne
 800026e:	2000      	movne	r0, #0
 8000270:	4770      	bxne	lr
 8000272:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000276:	d104      	bne.n	8000282 <__addsf3+0x126>
 8000278:	0040      	lsls	r0, r0, #1
 800027a:	bf28      	it	cs
 800027c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000280:	4770      	bx	lr
 8000282:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000286:	bf3c      	itt	cc
 8000288:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 800028c:	4770      	bxcc	lr
 800028e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000292:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000296:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 800029a:	4770      	bx	lr
 800029c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80002a0:	bf16      	itet	ne
 80002a2:	4608      	movne	r0, r1
 80002a4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80002a8:	4601      	movne	r1, r0
 80002aa:	0242      	lsls	r2, r0, #9
 80002ac:	bf06      	itte	eq
 80002ae:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80002b2:	ea90 0f01 	teqeq	r0, r1
 80002b6:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 80002ba:	4770      	bx	lr

080002bc <__aeabi_ui2f>:
 80002bc:	f04f 0300 	mov.w	r3, #0
 80002c0:	e004      	b.n	80002cc <__aeabi_i2f+0x8>
 80002c2:	bf00      	nop

080002c4 <__aeabi_i2f>:
 80002c4:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 80002c8:	bf48      	it	mi
 80002ca:	4240      	negmi	r0, r0
 80002cc:	ea5f 0c00 	movs.w	ip, r0
 80002d0:	bf08      	it	eq
 80002d2:	4770      	bxeq	lr
 80002d4:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 80002d8:	4601      	mov	r1, r0
 80002da:	f04f 0000 	mov.w	r0, #0
 80002de:	e01c      	b.n	800031a <__aeabi_l2f+0x2a>

080002e0 <__aeabi_ul2f>:
 80002e0:	ea50 0201 	orrs.w	r2, r0, r1
 80002e4:	bf08      	it	eq
 80002e6:	4770      	bxeq	lr
 80002e8:	f04f 0300 	mov.w	r3, #0
 80002ec:	e00a      	b.n	8000304 <__aeabi_l2f+0x14>
 80002ee:	bf00      	nop

080002f0 <__aeabi_l2f>:
 80002f0:	ea50 0201 	orrs.w	r2, r0, r1
 80002f4:	bf08      	it	eq
 80002f6:	4770      	bxeq	lr
 80002f8:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 80002fc:	d502      	bpl.n	8000304 <__aeabi_l2f+0x14>
 80002fe:	4240      	negs	r0, r0
 8000300:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000304:	ea5f 0c01 	movs.w	ip, r1
 8000308:	bf02      	ittt	eq
 800030a:	4684      	moveq	ip, r0
 800030c:	4601      	moveq	r1, r0
 800030e:	2000      	moveq	r0, #0
 8000310:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000314:	bf08      	it	eq
 8000316:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 800031a:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 800031e:	fabc f28c 	clz	r2, ip
 8000322:	3a08      	subs	r2, #8
 8000324:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000328:	db10      	blt.n	800034c <__aeabi_l2f+0x5c>
 800032a:	fa01 fc02 	lsl.w	ip, r1, r2
 800032e:	4463      	add	r3, ip
 8000330:	fa00 fc02 	lsl.w	ip, r0, r2
 8000334:	f1c2 0220 	rsb	r2, r2, #32
 8000338:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800033c:	fa20 f202 	lsr.w	r2, r0, r2
 8000340:	eb43 0002 	adc.w	r0, r3, r2
 8000344:	bf08      	it	eq
 8000346:	f020 0001 	biceq.w	r0, r0, #1
 800034a:	4770      	bx	lr
 800034c:	f102 0220 	add.w	r2, r2, #32
 8000350:	fa01 fc02 	lsl.w	ip, r1, r2
 8000354:	f1c2 0220 	rsb	r2, r2, #32
 8000358:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 800035c:	fa21 f202 	lsr.w	r2, r1, r2
 8000360:	eb43 0002 	adc.w	r0, r3, r2
 8000364:	bf08      	it	eq
 8000366:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800036a:	4770      	bx	lr

0800036c <__aeabi_fmul>:
 800036c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000370:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000374:	bf1e      	ittt	ne
 8000376:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800037a:	ea92 0f0c 	teqne	r2, ip
 800037e:	ea93 0f0c 	teqne	r3, ip
 8000382:	d06f      	beq.n	8000464 <__aeabi_fmul+0xf8>
 8000384:	441a      	add	r2, r3
 8000386:	ea80 0c01 	eor.w	ip, r0, r1
 800038a:	0240      	lsls	r0, r0, #9
 800038c:	bf18      	it	ne
 800038e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000392:	d01e      	beq.n	80003d2 <__aeabi_fmul+0x66>
 8000394:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000398:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800039c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80003a0:	fba0 3101 	umull	r3, r1, r0, r1
 80003a4:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80003a8:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80003ac:	bf3e      	ittt	cc
 80003ae:	0049      	lslcc	r1, r1, #1
 80003b0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80003b4:	005b      	lslcc	r3, r3, #1
 80003b6:	ea40 0001 	orr.w	r0, r0, r1
 80003ba:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80003be:	2afd      	cmp	r2, #253	@ 0xfd
 80003c0:	d81d      	bhi.n	80003fe <__aeabi_fmul+0x92>
 80003c2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80003c6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003ca:	bf08      	it	eq
 80003cc:	f020 0001 	biceq.w	r0, r0, #1
 80003d0:	4770      	bx	lr
 80003d2:	f090 0f00 	teq	r0, #0
 80003d6:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80003da:	bf08      	it	eq
 80003dc:	0249      	lsleq	r1, r1, #9
 80003de:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80003e2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80003e6:	3a7f      	subs	r2, #127	@ 0x7f
 80003e8:	bfc2      	ittt	gt
 80003ea:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 80003ee:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80003f2:	4770      	bxgt	lr
 80003f4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80003f8:	f04f 0300 	mov.w	r3, #0
 80003fc:	3a01      	subs	r2, #1
 80003fe:	dc5d      	bgt.n	80004bc <__aeabi_fmul+0x150>
 8000400:	f112 0f19 	cmn.w	r2, #25
 8000404:	bfdc      	itt	le
 8000406:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 800040a:	4770      	bxle	lr
 800040c:	f1c2 0200 	rsb	r2, r2, #0
 8000410:	0041      	lsls	r1, r0, #1
 8000412:	fa21 f102 	lsr.w	r1, r1, r2
 8000416:	f1c2 0220 	rsb	r2, r2, #32
 800041a:	fa00 fc02 	lsl.w	ip, r0, r2
 800041e:	ea5f 0031 	movs.w	r0, r1, rrx
 8000422:	f140 0000 	adc.w	r0, r0, #0
 8000426:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800042a:	bf08      	it	eq
 800042c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000430:	4770      	bx	lr
 8000432:	f092 0f00 	teq	r2, #0
 8000436:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800043a:	bf02      	ittt	eq
 800043c:	0040      	lsleq	r0, r0, #1
 800043e:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000442:	3a01      	subeq	r2, #1
 8000444:	d0f9      	beq.n	800043a <__aeabi_fmul+0xce>
 8000446:	ea40 000c 	orr.w	r0, r0, ip
 800044a:	f093 0f00 	teq	r3, #0
 800044e:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000452:	bf02      	ittt	eq
 8000454:	0049      	lsleq	r1, r1, #1
 8000456:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800045a:	3b01      	subeq	r3, #1
 800045c:	d0f9      	beq.n	8000452 <__aeabi_fmul+0xe6>
 800045e:	ea41 010c 	orr.w	r1, r1, ip
 8000462:	e78f      	b.n	8000384 <__aeabi_fmul+0x18>
 8000464:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000468:	ea92 0f0c 	teq	r2, ip
 800046c:	bf18      	it	ne
 800046e:	ea93 0f0c 	teqne	r3, ip
 8000472:	d00a      	beq.n	800048a <__aeabi_fmul+0x11e>
 8000474:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000478:	bf18      	it	ne
 800047a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800047e:	d1d8      	bne.n	8000432 <__aeabi_fmul+0xc6>
 8000480:	ea80 0001 	eor.w	r0, r0, r1
 8000484:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000488:	4770      	bx	lr
 800048a:	f090 0f00 	teq	r0, #0
 800048e:	bf17      	itett	ne
 8000490:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000494:	4608      	moveq	r0, r1
 8000496:	f091 0f00 	teqne	r1, #0
 800049a:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 800049e:	d014      	beq.n	80004ca <__aeabi_fmul+0x15e>
 80004a0:	ea92 0f0c 	teq	r2, ip
 80004a4:	d101      	bne.n	80004aa <__aeabi_fmul+0x13e>
 80004a6:	0242      	lsls	r2, r0, #9
 80004a8:	d10f      	bne.n	80004ca <__aeabi_fmul+0x15e>
 80004aa:	ea93 0f0c 	teq	r3, ip
 80004ae:	d103      	bne.n	80004b8 <__aeabi_fmul+0x14c>
 80004b0:	024b      	lsls	r3, r1, #9
 80004b2:	bf18      	it	ne
 80004b4:	4608      	movne	r0, r1
 80004b6:	d108      	bne.n	80004ca <__aeabi_fmul+0x15e>
 80004b8:	ea80 0001 	eor.w	r0, r0, r1
 80004bc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80004c0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80004c4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80004c8:	4770      	bx	lr
 80004ca:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80004ce:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80004d2:	4770      	bx	lr

080004d4 <__aeabi_fdiv>:
 80004d4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004d8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80004dc:	bf1e      	ittt	ne
 80004de:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80004e2:	ea92 0f0c 	teqne	r2, ip
 80004e6:	ea93 0f0c 	teqne	r3, ip
 80004ea:	d069      	beq.n	80005c0 <__aeabi_fdiv+0xec>
 80004ec:	eba2 0203 	sub.w	r2, r2, r3
 80004f0:	ea80 0c01 	eor.w	ip, r0, r1
 80004f4:	0249      	lsls	r1, r1, #9
 80004f6:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80004fa:	d037      	beq.n	800056c <__aeabi_fdiv+0x98>
 80004fc:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000500:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000504:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000508:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 800050c:	428b      	cmp	r3, r1
 800050e:	bf38      	it	cc
 8000510:	005b      	lslcc	r3, r3, #1
 8000512:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000516:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 800051a:	428b      	cmp	r3, r1
 800051c:	bf24      	itt	cs
 800051e:	1a5b      	subcs	r3, r3, r1
 8000520:	ea40 000c 	orrcs.w	r0, r0, ip
 8000524:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000528:	bf24      	itt	cs
 800052a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800052e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000532:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000536:	bf24      	itt	cs
 8000538:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 800053c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000540:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000544:	bf24      	itt	cs
 8000546:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800054a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800054e:	011b      	lsls	r3, r3, #4
 8000550:	bf18      	it	ne
 8000552:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000556:	d1e0      	bne.n	800051a <__aeabi_fdiv+0x46>
 8000558:	2afd      	cmp	r2, #253	@ 0xfd
 800055a:	f63f af50 	bhi.w	80003fe <__aeabi_fmul+0x92>
 800055e:	428b      	cmp	r3, r1
 8000560:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000564:	bf08      	it	eq
 8000566:	f020 0001 	biceq.w	r0, r0, #1
 800056a:	4770      	bx	lr
 800056c:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000570:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000574:	327f      	adds	r2, #127	@ 0x7f
 8000576:	bfc2      	ittt	gt
 8000578:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 800057c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000580:	4770      	bxgt	lr
 8000582:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000586:	f04f 0300 	mov.w	r3, #0
 800058a:	3a01      	subs	r2, #1
 800058c:	e737      	b.n	80003fe <__aeabi_fmul+0x92>
 800058e:	f092 0f00 	teq	r2, #0
 8000592:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000596:	bf02      	ittt	eq
 8000598:	0040      	lsleq	r0, r0, #1
 800059a:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 800059e:	3a01      	subeq	r2, #1
 80005a0:	d0f9      	beq.n	8000596 <__aeabi_fdiv+0xc2>
 80005a2:	ea40 000c 	orr.w	r0, r0, ip
 80005a6:	f093 0f00 	teq	r3, #0
 80005aa:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 80005ae:	bf02      	ittt	eq
 80005b0:	0049      	lsleq	r1, r1, #1
 80005b2:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 80005b6:	3b01      	subeq	r3, #1
 80005b8:	d0f9      	beq.n	80005ae <__aeabi_fdiv+0xda>
 80005ba:	ea41 010c 	orr.w	r1, r1, ip
 80005be:	e795      	b.n	80004ec <__aeabi_fdiv+0x18>
 80005c0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80005c4:	ea92 0f0c 	teq	r2, ip
 80005c8:	d108      	bne.n	80005dc <__aeabi_fdiv+0x108>
 80005ca:	0242      	lsls	r2, r0, #9
 80005cc:	f47f af7d 	bne.w	80004ca <__aeabi_fmul+0x15e>
 80005d0:	ea93 0f0c 	teq	r3, ip
 80005d4:	f47f af70 	bne.w	80004b8 <__aeabi_fmul+0x14c>
 80005d8:	4608      	mov	r0, r1
 80005da:	e776      	b.n	80004ca <__aeabi_fmul+0x15e>
 80005dc:	ea93 0f0c 	teq	r3, ip
 80005e0:	d104      	bne.n	80005ec <__aeabi_fdiv+0x118>
 80005e2:	024b      	lsls	r3, r1, #9
 80005e4:	f43f af4c 	beq.w	8000480 <__aeabi_fmul+0x114>
 80005e8:	4608      	mov	r0, r1
 80005ea:	e76e      	b.n	80004ca <__aeabi_fmul+0x15e>
 80005ec:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 80005f0:	bf18      	it	ne
 80005f2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 80005f6:	d1ca      	bne.n	800058e <__aeabi_fdiv+0xba>
 80005f8:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 80005fc:	f47f af5c 	bne.w	80004b8 <__aeabi_fmul+0x14c>
 8000600:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000604:	f47f af3c 	bne.w	8000480 <__aeabi_fmul+0x114>
 8000608:	e75f      	b.n	80004ca <__aeabi_fmul+0x15e>
 800060a:	bf00      	nop

0800060c <__gesf2>:
 800060c:	f04f 3cff 	mov.w	ip, #4294967295
 8000610:	e006      	b.n	8000620 <__cmpsf2+0x4>
 8000612:	bf00      	nop

08000614 <__lesf2>:
 8000614:	f04f 0c01 	mov.w	ip, #1
 8000618:	e002      	b.n	8000620 <__cmpsf2+0x4>
 800061a:	bf00      	nop

0800061c <__cmpsf2>:
 800061c:	f04f 0c01 	mov.w	ip, #1
 8000620:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000624:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000628:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800062c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000630:	bf18      	it	ne
 8000632:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000636:	d011      	beq.n	800065c <__cmpsf2+0x40>
 8000638:	b001      	add	sp, #4
 800063a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800063e:	bf18      	it	ne
 8000640:	ea90 0f01 	teqne	r0, r1
 8000644:	bf58      	it	pl
 8000646:	ebb2 0003 	subspl.w	r0, r2, r3
 800064a:	bf88      	it	hi
 800064c:	17c8      	asrhi	r0, r1, #31
 800064e:	bf38      	it	cc
 8000650:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000654:	bf18      	it	ne
 8000656:	f040 0001 	orrne.w	r0, r0, #1
 800065a:	4770      	bx	lr
 800065c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000660:	d102      	bne.n	8000668 <__cmpsf2+0x4c>
 8000662:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000666:	d105      	bne.n	8000674 <__cmpsf2+0x58>
 8000668:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800066c:	d1e4      	bne.n	8000638 <__cmpsf2+0x1c>
 800066e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000672:	d0e1      	beq.n	8000638 <__cmpsf2+0x1c>
 8000674:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop

0800067c <__aeabi_cfrcmple>:
 800067c:	4684      	mov	ip, r0
 800067e:	4608      	mov	r0, r1
 8000680:	4661      	mov	r1, ip
 8000682:	e7ff      	b.n	8000684 <__aeabi_cfcmpeq>

08000684 <__aeabi_cfcmpeq>:
 8000684:	b50f      	push	{r0, r1, r2, r3, lr}
 8000686:	f7ff ffc9 	bl	800061c <__cmpsf2>
 800068a:	2800      	cmp	r0, #0
 800068c:	bf48      	it	mi
 800068e:	f110 0f00 	cmnmi.w	r0, #0
 8000692:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000694 <__aeabi_fcmpeq>:
 8000694:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000698:	f7ff fff4 	bl	8000684 <__aeabi_cfcmpeq>
 800069c:	bf0c      	ite	eq
 800069e:	2001      	moveq	r0, #1
 80006a0:	2000      	movne	r0, #0
 80006a2:	f85d fb08 	ldr.w	pc, [sp], #8
 80006a6:	bf00      	nop

080006a8 <__aeabi_fcmplt>:
 80006a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006ac:	f7ff ffea 	bl	8000684 <__aeabi_cfcmpeq>
 80006b0:	bf34      	ite	cc
 80006b2:	2001      	movcc	r0, #1
 80006b4:	2000      	movcs	r0, #0
 80006b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80006ba:	bf00      	nop

080006bc <__aeabi_fcmple>:
 80006bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006c0:	f7ff ffe0 	bl	8000684 <__aeabi_cfcmpeq>
 80006c4:	bf94      	ite	ls
 80006c6:	2001      	movls	r0, #1
 80006c8:	2000      	movhi	r0, #0
 80006ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80006ce:	bf00      	nop

080006d0 <__aeabi_fcmpge>:
 80006d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006d4:	f7ff ffd2 	bl	800067c <__aeabi_cfrcmple>
 80006d8:	bf94      	ite	ls
 80006da:	2001      	movls	r0, #1
 80006dc:	2000      	movhi	r0, #0
 80006de:	f85d fb08 	ldr.w	pc, [sp], #8
 80006e2:	bf00      	nop

080006e4 <__aeabi_fcmpgt>:
 80006e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006e8:	f7ff ffc8 	bl	800067c <__aeabi_cfrcmple>
 80006ec:	bf34      	ite	cc
 80006ee:	2001      	movcc	r0, #1
 80006f0:	2000      	movcs	r0, #0
 80006f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80006f6:	bf00      	nop

080006f8 <__aeabi_f2uiz>:
 80006f8:	0042      	lsls	r2, r0, #1
 80006fa:	d20e      	bcs.n	800071a <__aeabi_f2uiz+0x22>
 80006fc:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000700:	d30b      	bcc.n	800071a <__aeabi_f2uiz+0x22>
 8000702:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8000706:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800070a:	d409      	bmi.n	8000720 <__aeabi_f2uiz+0x28>
 800070c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000710:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000714:	fa23 f002 	lsr.w	r0, r3, r2
 8000718:	4770      	bx	lr
 800071a:	f04f 0000 	mov.w	r0, #0
 800071e:	4770      	bx	lr
 8000720:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8000724:	d101      	bne.n	800072a <__aeabi_f2uiz+0x32>
 8000726:	0242      	lsls	r2, r0, #9
 8000728:	d102      	bne.n	8000730 <__aeabi_f2uiz+0x38>
 800072a:	f04f 30ff 	mov.w	r0, #4294967295
 800072e:	4770      	bx	lr
 8000730:	f04f 0000 	mov.w	r0, #0
 8000734:	4770      	bx	lr
 8000736:	bf00      	nop

08000738 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
ADC_HandleTypeDef hadc2;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8000738:	b580      	push	{r7, lr}
 800073a:	b084      	sub	sp, #16
 800073c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800073e:	1d3b      	adds	r3, r7, #4
 8000740:	2200      	movs	r2, #0
 8000742:	601a      	str	r2, [r3, #0]
 8000744:	605a      	str	r2, [r3, #4]
 8000746:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000748:	4b18      	ldr	r3, [pc, #96]	@ (80007ac <MX_ADC1_Init+0x74>)
 800074a:	4a19      	ldr	r2, [pc, #100]	@ (80007b0 <MX_ADC1_Init+0x78>)
 800074c:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800074e:	4b17      	ldr	r3, [pc, #92]	@ (80007ac <MX_ADC1_Init+0x74>)
 8000750:	2200      	movs	r2, #0
 8000752:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000754:	4b15      	ldr	r3, [pc, #84]	@ (80007ac <MX_ADC1_Init+0x74>)
 8000756:	2201      	movs	r2, #1
 8000758:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800075a:	4b14      	ldr	r3, [pc, #80]	@ (80007ac <MX_ADC1_Init+0x74>)
 800075c:	2200      	movs	r2, #0
 800075e:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000760:	4b12      	ldr	r3, [pc, #72]	@ (80007ac <MX_ADC1_Init+0x74>)
 8000762:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 8000766:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000768:	4b10      	ldr	r3, [pc, #64]	@ (80007ac <MX_ADC1_Init+0x74>)
 800076a:	2200      	movs	r2, #0
 800076c:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 1;
 800076e:	4b0f      	ldr	r3, [pc, #60]	@ (80007ac <MX_ADC1_Init+0x74>)
 8000770:	2201      	movs	r2, #1
 8000772:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000774:	480d      	ldr	r0, [pc, #52]	@ (80007ac <MX_ADC1_Init+0x74>)
 8000776:	f001 fc19 	bl	8001fac <HAL_ADC_Init>
 800077a:	4603      	mov	r3, r0
 800077c:	2b00      	cmp	r3, #0
 800077e:	d001      	beq.n	8000784 <MX_ADC1_Init+0x4c>
  {
    Error_Handler();
 8000780:	f001 f996 	bl	8001ab0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000784:	2301      	movs	r3, #1
 8000786:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000788:	2301      	movs	r3, #1
 800078a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 800078c:	2302      	movs	r3, #2
 800078e:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000790:	1d3b      	adds	r3, r7, #4
 8000792:	4619      	mov	r1, r3
 8000794:	4805      	ldr	r0, [pc, #20]	@ (80007ac <MX_ADC1_Init+0x74>)
 8000796:	f001 fecd 	bl	8002534 <HAL_ADC_ConfigChannel>
 800079a:	4603      	mov	r3, r0
 800079c:	2b00      	cmp	r3, #0
 800079e:	d001      	beq.n	80007a4 <MX_ADC1_Init+0x6c>
  {
    Error_Handler();
 80007a0:	f001 f986 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80007a4:	bf00      	nop
 80007a6:	3710      	adds	r7, #16
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bd80      	pop	{r7, pc}
 80007ac:	20000080 	.word	0x20000080
 80007b0:	40012400 	.word	0x40012400

080007b4 <MX_ADC2_Init>:
/* ADC2 init function */
void MX_ADC2_Init(void)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b084      	sub	sp, #16
 80007b8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80007ba:	1d3b      	adds	r3, r7, #4
 80007bc:	2200      	movs	r2, #0
 80007be:	601a      	str	r2, [r3, #0]
 80007c0:	605a      	str	r2, [r3, #4]
 80007c2:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 80007c4:	4b18      	ldr	r3, [pc, #96]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007c6:	4a19      	ldr	r2, [pc, #100]	@ (800082c <MX_ADC2_Init+0x78>)
 80007c8:	601a      	str	r2, [r3, #0]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80007ca:	4b17      	ldr	r3, [pc, #92]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	609a      	str	r2, [r3, #8]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80007d0:	4b15      	ldr	r3, [pc, #84]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007d2:	2201      	movs	r2, #1
 80007d4:	731a      	strb	r2, [r3, #12]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80007d6:	4b14      	ldr	r3, [pc, #80]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007d8:	2200      	movs	r2, #0
 80007da:	751a      	strb	r2, [r3, #20]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80007dc:	4b12      	ldr	r3, [pc, #72]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007de:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 80007e2:	61da      	str	r2, [r3, #28]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80007e4:	4b10      	ldr	r3, [pc, #64]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007e6:	2200      	movs	r2, #0
 80007e8:	605a      	str	r2, [r3, #4]
  hadc2.Init.NbrOfConversion = 1;
 80007ea:	4b0f      	ldr	r3, [pc, #60]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007ec:	2201      	movs	r2, #1
 80007ee:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80007f0:	480d      	ldr	r0, [pc, #52]	@ (8000828 <MX_ADC2_Init+0x74>)
 80007f2:	f001 fbdb 	bl	8001fac <HAL_ADC_Init>
 80007f6:	4603      	mov	r3, r0
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	d001      	beq.n	8000800 <MX_ADC2_Init+0x4c>
  {
    Error_Handler();
 80007fc:	f001 f958 	bl	8001ab0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000800:	2300      	movs	r3, #0
 8000802:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000804:	2301      	movs	r3, #1
 8000806:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 8000808:	2302      	movs	r3, #2
 800080a:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800080c:	1d3b      	adds	r3, r7, #4
 800080e:	4619      	mov	r1, r3
 8000810:	4805      	ldr	r0, [pc, #20]	@ (8000828 <MX_ADC2_Init+0x74>)
 8000812:	f001 fe8f 	bl	8002534 <HAL_ADC_ConfigChannel>
 8000816:	4603      	mov	r3, r0
 8000818:	2b00      	cmp	r3, #0
 800081a:	d001      	beq.n	8000820 <MX_ADC2_Init+0x6c>
  {
    Error_Handler();
 800081c:	f001 f948 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8000820:	bf00      	nop
 8000822:	3710      	adds	r7, #16
 8000824:	46bd      	mov	sp, r7
 8000826:	bd80      	pop	{r7, pc}
 8000828:	200000b0 	.word	0x200000b0
 800082c:	40012800 	.word	0x40012800

08000830 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8000830:	b580      	push	{r7, lr}
 8000832:	b08a      	sub	sp, #40	@ 0x28
 8000834:	af00      	add	r7, sp, #0
 8000836:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000838:	f107 0318 	add.w	r3, r7, #24
 800083c:	2200      	movs	r2, #0
 800083e:	601a      	str	r2, [r3, #0]
 8000840:	605a      	str	r2, [r3, #4]
 8000842:	609a      	str	r2, [r3, #8]
 8000844:	60da      	str	r2, [r3, #12]
  if(adcHandle->Instance==ADC1)
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	4a28      	ldr	r2, [pc, #160]	@ (80008ec <HAL_ADC_MspInit+0xbc>)
 800084c:	4293      	cmp	r3, r2
 800084e:	d122      	bne.n	8000896 <HAL_ADC_MspInit+0x66>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000850:	4b27      	ldr	r3, [pc, #156]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 8000852:	699b      	ldr	r3, [r3, #24]
 8000854:	4a26      	ldr	r2, [pc, #152]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 8000856:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800085a:	6193      	str	r3, [r2, #24]
 800085c:	4b24      	ldr	r3, [pc, #144]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 800085e:	699b      	ldr	r3, [r3, #24]
 8000860:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8000864:	617b      	str	r3, [r7, #20]
 8000866:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000868:	4b21      	ldr	r3, [pc, #132]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 800086a:	699b      	ldr	r3, [r3, #24]
 800086c:	4a20      	ldr	r2, [pc, #128]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 800086e:	f043 0304 	orr.w	r3, r3, #4
 8000872:	6193      	str	r3, [r2, #24]
 8000874:	4b1e      	ldr	r3, [pc, #120]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 8000876:	699b      	ldr	r3, [r3, #24]
 8000878:	f003 0304 	and.w	r3, r3, #4
 800087c:	613b      	str	r3, [r7, #16]
 800087e:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PA1     ------> ADC1_IN1
    PA2     ------> ADC1_IN2
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000880:	230e      	movs	r3, #14
 8000882:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000884:	2303      	movs	r3, #3
 8000886:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000888:	f107 0318 	add.w	r3, r7, #24
 800088c:	4619      	mov	r1, r3
 800088e:	4819      	ldr	r0, [pc, #100]	@ (80008f4 <HAL_ADC_MspInit+0xc4>)
 8000890:	f002 faf4 	bl	8002e7c <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }
}
 8000894:	e026      	b.n	80008e4 <HAL_ADC_MspInit+0xb4>
  else if(adcHandle->Instance==ADC2)
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	4a17      	ldr	r2, [pc, #92]	@ (80008f8 <HAL_ADC_MspInit+0xc8>)
 800089c:	4293      	cmp	r3, r2
 800089e:	d121      	bne.n	80008e4 <HAL_ADC_MspInit+0xb4>
    __HAL_RCC_ADC2_CLK_ENABLE();
 80008a0:	4b13      	ldr	r3, [pc, #76]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 80008a2:	699b      	ldr	r3, [r3, #24]
 80008a4:	4a12      	ldr	r2, [pc, #72]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 80008a6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80008aa:	6193      	str	r3, [r2, #24]
 80008ac:	4b10      	ldr	r3, [pc, #64]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 80008ae:	699b      	ldr	r3, [r3, #24]
 80008b0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80008b4:	60fb      	str	r3, [r7, #12]
 80008b6:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80008b8:	4b0d      	ldr	r3, [pc, #52]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 80008ba:	699b      	ldr	r3, [r3, #24]
 80008bc:	4a0c      	ldr	r2, [pc, #48]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 80008be:	f043 0304 	orr.w	r3, r3, #4
 80008c2:	6193      	str	r3, [r2, #24]
 80008c4:	4b0a      	ldr	r3, [pc, #40]	@ (80008f0 <HAL_ADC_MspInit+0xc0>)
 80008c6:	699b      	ldr	r3, [r3, #24]
 80008c8:	f003 0304 	and.w	r3, r3, #4
 80008cc:	60bb      	str	r3, [r7, #8]
 80008ce:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 80008d0:	2371      	movs	r3, #113	@ 0x71
 80008d2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80008d4:	2303      	movs	r3, #3
 80008d6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008d8:	f107 0318 	add.w	r3, r7, #24
 80008dc:	4619      	mov	r1, r3
 80008de:	4805      	ldr	r0, [pc, #20]	@ (80008f4 <HAL_ADC_MspInit+0xc4>)
 80008e0:	f002 facc 	bl	8002e7c <HAL_GPIO_Init>
}
 80008e4:	bf00      	nop
 80008e6:	3728      	adds	r7, #40	@ 0x28
 80008e8:	46bd      	mov	sp, r7
 80008ea:	bd80      	pop	{r7, pc}
 80008ec:	40012400 	.word	0x40012400
 80008f0:	40021000 	.word	0x40021000
 80008f4:	40010800 	.word	0x40010800
 80008f8:	40012800 	.word	0x40012800

080008fc <setADCChannel1>:
unsigned char readings_qtt=5;


unsigned short sensorData[sensor_qtt][sensor_buffer_size];

HAL_StatusTypeDef setADCChannel1(unsigned char channel){
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b082      	sub	sp, #8
 8000900:	af00      	add	r7, sp, #0
 8000902:	4603      	mov	r3, r0
 8000904:	71fb      	strb	r3, [r7, #7]
	switch(channel) {
 8000906:	79fb      	ldrb	r3, [r7, #7]
 8000908:	2b11      	cmp	r3, #17
 800090a:	d86f      	bhi.n	80009ec <setADCChannel1+0xf0>
 800090c:	a201      	add	r2, pc, #4	@ (adr r2, 8000914 <setADCChannel1+0x18>)
 800090e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000912:	bf00      	nop
 8000914:	0800095d 	.word	0x0800095d
 8000918:	08000965 	.word	0x08000965
 800091c:	0800096d 	.word	0x0800096d
 8000920:	08000975 	.word	0x08000975
 8000924:	0800097d 	.word	0x0800097d
 8000928:	08000985 	.word	0x08000985
 800092c:	0800098d 	.word	0x0800098d
 8000930:	08000995 	.word	0x08000995
 8000934:	0800099d 	.word	0x0800099d
 8000938:	080009a5 	.word	0x080009a5
 800093c:	080009ad 	.word	0x080009ad
 8000940:	080009b5 	.word	0x080009b5
 8000944:	080009bd 	.word	0x080009bd
 8000948:	080009c5 	.word	0x080009c5
 800094c:	080009cd 	.word	0x080009cd
 8000950:	080009d5 	.word	0x080009d5
 8000954:	080009dd 	.word	0x080009dd
 8000958:	080009e5 	.word	0x080009e5
	       	case 0:
	            sConfig1.Channel = ADC_CHANNEL_0;
 800095c:	4b2c      	ldr	r3, [pc, #176]	@ (8000a10 <setADCChannel1+0x114>)
 800095e:	2200      	movs	r2, #0
 8000960:	601a      	str	r2, [r3, #0]
	            break;
 8000962:	e045      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 1:
	            sConfig1.Channel = ADC_CHANNEL_1;
 8000964:	4b2a      	ldr	r3, [pc, #168]	@ (8000a10 <setADCChannel1+0x114>)
 8000966:	2201      	movs	r2, #1
 8000968:	601a      	str	r2, [r3, #0]
	            break;
 800096a:	e041      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 2:
	            sConfig1.Channel = ADC_CHANNEL_2;
 800096c:	4b28      	ldr	r3, [pc, #160]	@ (8000a10 <setADCChannel1+0x114>)
 800096e:	2202      	movs	r2, #2
 8000970:	601a      	str	r2, [r3, #0]
	            break;
 8000972:	e03d      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 3:
	            sConfig1.Channel = ADC_CHANNEL_3;
 8000974:	4b26      	ldr	r3, [pc, #152]	@ (8000a10 <setADCChannel1+0x114>)
 8000976:	2203      	movs	r2, #3
 8000978:	601a      	str	r2, [r3, #0]
	            break;
 800097a:	e039      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 4:
	            sConfig1.Channel = ADC_CHANNEL_4;
 800097c:	4b24      	ldr	r3, [pc, #144]	@ (8000a10 <setADCChannel1+0x114>)
 800097e:	2204      	movs	r2, #4
 8000980:	601a      	str	r2, [r3, #0]
	            break;
 8000982:	e035      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 5:
	            sConfig1.Channel = ADC_CHANNEL_5;
 8000984:	4b22      	ldr	r3, [pc, #136]	@ (8000a10 <setADCChannel1+0x114>)
 8000986:	2205      	movs	r2, #5
 8000988:	601a      	str	r2, [r3, #0]
	            break;
 800098a:	e031      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 6:
	            sConfig1.Channel = ADC_CHANNEL_6;
 800098c:	4b20      	ldr	r3, [pc, #128]	@ (8000a10 <setADCChannel1+0x114>)
 800098e:	2206      	movs	r2, #6
 8000990:	601a      	str	r2, [r3, #0]
	            break;
 8000992:	e02d      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 7:
	            sConfig1.Channel = ADC_CHANNEL_7;
 8000994:	4b1e      	ldr	r3, [pc, #120]	@ (8000a10 <setADCChannel1+0x114>)
 8000996:	2207      	movs	r2, #7
 8000998:	601a      	str	r2, [r3, #0]
	            break;
 800099a:	e029      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 8:
	            sConfig1.Channel = ADC_CHANNEL_8;
 800099c:	4b1c      	ldr	r3, [pc, #112]	@ (8000a10 <setADCChannel1+0x114>)
 800099e:	2208      	movs	r2, #8
 80009a0:	601a      	str	r2, [r3, #0]
	            break;
 80009a2:	e025      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 9:
	            sConfig1.Channel = ADC_CHANNEL_9;
 80009a4:	4b1a      	ldr	r3, [pc, #104]	@ (8000a10 <setADCChannel1+0x114>)
 80009a6:	2209      	movs	r2, #9
 80009a8:	601a      	str	r2, [r3, #0]
	            break;
 80009aa:	e021      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 10:
	            sConfig1.Channel = ADC_CHANNEL_10;
 80009ac:	4b18      	ldr	r3, [pc, #96]	@ (8000a10 <setADCChannel1+0x114>)
 80009ae:	220a      	movs	r2, #10
 80009b0:	601a      	str	r2, [r3, #0]
	            break;
 80009b2:	e01d      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 11:
	            sConfig1.Channel = ADC_CHANNEL_11;
 80009b4:	4b16      	ldr	r3, [pc, #88]	@ (8000a10 <setADCChannel1+0x114>)
 80009b6:	220b      	movs	r2, #11
 80009b8:	601a      	str	r2, [r3, #0]
	            break;
 80009ba:	e019      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 12:
	            sConfig1.Channel = ADC_CHANNEL_12;
 80009bc:	4b14      	ldr	r3, [pc, #80]	@ (8000a10 <setADCChannel1+0x114>)
 80009be:	220c      	movs	r2, #12
 80009c0:	601a      	str	r2, [r3, #0]
	            break;
 80009c2:	e015      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 13:
	            sConfig1.Channel = ADC_CHANNEL_13;
 80009c4:	4b12      	ldr	r3, [pc, #72]	@ (8000a10 <setADCChannel1+0x114>)
 80009c6:	220d      	movs	r2, #13
 80009c8:	601a      	str	r2, [r3, #0]
	            break;
 80009ca:	e011      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 14:
	            sConfig1.Channel = ADC_CHANNEL_14;
 80009cc:	4b10      	ldr	r3, [pc, #64]	@ (8000a10 <setADCChannel1+0x114>)
 80009ce:	220e      	movs	r2, #14
 80009d0:	601a      	str	r2, [r3, #0]
	            break;
 80009d2:	e00d      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 15:
	            sConfig1.Channel = ADC_CHANNEL_15;
 80009d4:	4b0e      	ldr	r3, [pc, #56]	@ (8000a10 <setADCChannel1+0x114>)
 80009d6:	220f      	movs	r2, #15
 80009d8:	601a      	str	r2, [r3, #0]
	            break;
 80009da:	e009      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 16:
	            sConfig1.Channel = ADC_CHANNEL_16;
 80009dc:	4b0c      	ldr	r3, [pc, #48]	@ (8000a10 <setADCChannel1+0x114>)
 80009de:	2210      	movs	r2, #16
 80009e0:	601a      	str	r2, [r3, #0]
	            break;
 80009e2:	e005      	b.n	80009f0 <setADCChannel1+0xf4>
	        case 17:
	            sConfig1.Channel = ADC_CHANNEL_17;
 80009e4:	4b0a      	ldr	r3, [pc, #40]	@ (8000a10 <setADCChannel1+0x114>)
 80009e6:	2211      	movs	r2, #17
 80009e8:	601a      	str	r2, [r3, #0]
	            break;
 80009ea:	e001      	b.n	80009f0 <setADCChannel1+0xf4>
	        default:
	            return HAL_ERROR; // Canal inválido
 80009ec:	2301      	movs	r3, #1
 80009ee:	e00a      	b.n	8000a06 <setADCChannel1+0x10a>
	    }

	    sConfig1.Rank = ADC_REGULAR_RANK_1;
 80009f0:	4b07      	ldr	r3, [pc, #28]	@ (8000a10 <setADCChannel1+0x114>)
 80009f2:	2201      	movs	r2, #1
 80009f4:	605a      	str	r2, [r3, #4]
	    sConfig1.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 80009f6:	4b06      	ldr	r3, [pc, #24]	@ (8000a10 <setADCChannel1+0x114>)
 80009f8:	2205      	movs	r2, #5
 80009fa:	609a      	str	r2, [r3, #8]

	    return HAL_ADC_ConfigChannel(&hadc1, &sConfig1);
 80009fc:	4904      	ldr	r1, [pc, #16]	@ (8000a10 <setADCChannel1+0x114>)
 80009fe:	4805      	ldr	r0, [pc, #20]	@ (8000a14 <setADCChannel1+0x118>)
 8000a00:	f001 fd98 	bl	8002534 <HAL_ADC_ConfigChannel>
 8000a04:	4603      	mov	r3, r0

}
 8000a06:	4618      	mov	r0, r3
 8000a08:	3708      	adds	r7, #8
 8000a0a:	46bd      	mov	sp, r7
 8000a0c:	bd80      	pop	{r7, pc}
 8000a0e:	bf00      	nop
 8000a10:	200000e0 	.word	0x200000e0
 8000a14:	20000080 	.word	0x20000080

08000a18 <setADCChannel2>:

HAL_StatusTypeDef setADCChannel2(unsigned char channel){
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b082      	sub	sp, #8
 8000a1c:	af00      	add	r7, sp, #0
 8000a1e:	4603      	mov	r3, r0
 8000a20:	71fb      	strb	r3, [r7, #7]
	switch(channel) {
 8000a22:	79fb      	ldrb	r3, [r7, #7]
 8000a24:	2b11      	cmp	r3, #17
 8000a26:	d86f      	bhi.n	8000b08 <setADCChannel2+0xf0>
 8000a28:	a201      	add	r2, pc, #4	@ (adr r2, 8000a30 <setADCChannel2+0x18>)
 8000a2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a2e:	bf00      	nop
 8000a30:	08000a79 	.word	0x08000a79
 8000a34:	08000a81 	.word	0x08000a81
 8000a38:	08000a89 	.word	0x08000a89
 8000a3c:	08000a91 	.word	0x08000a91
 8000a40:	08000a99 	.word	0x08000a99
 8000a44:	08000aa1 	.word	0x08000aa1
 8000a48:	08000aa9 	.word	0x08000aa9
 8000a4c:	08000ab1 	.word	0x08000ab1
 8000a50:	08000ab9 	.word	0x08000ab9
 8000a54:	08000ac1 	.word	0x08000ac1
 8000a58:	08000ac9 	.word	0x08000ac9
 8000a5c:	08000ad1 	.word	0x08000ad1
 8000a60:	08000ad9 	.word	0x08000ad9
 8000a64:	08000ae1 	.word	0x08000ae1
 8000a68:	08000ae9 	.word	0x08000ae9
 8000a6c:	08000af1 	.word	0x08000af1
 8000a70:	08000af9 	.word	0x08000af9
 8000a74:	08000b01 	.word	0x08000b01
	        case 0:
	            sConfig2.Channel = ADC_CHANNEL_0;
 8000a78:	4b2c      	ldr	r3, [pc, #176]	@ (8000b2c <setADCChannel2+0x114>)
 8000a7a:	2200      	movs	r2, #0
 8000a7c:	601a      	str	r2, [r3, #0]
	            break;
 8000a7e:	e045      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 1:
	            sConfig2.Channel = ADC_CHANNEL_1;
 8000a80:	4b2a      	ldr	r3, [pc, #168]	@ (8000b2c <setADCChannel2+0x114>)
 8000a82:	2201      	movs	r2, #1
 8000a84:	601a      	str	r2, [r3, #0]
	            break;
 8000a86:	e041      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 2:
	            sConfig2.Channel = ADC_CHANNEL_2;
 8000a88:	4b28      	ldr	r3, [pc, #160]	@ (8000b2c <setADCChannel2+0x114>)
 8000a8a:	2202      	movs	r2, #2
 8000a8c:	601a      	str	r2, [r3, #0]
	            break;
 8000a8e:	e03d      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 3:
	            sConfig2.Channel = ADC_CHANNEL_3;
 8000a90:	4b26      	ldr	r3, [pc, #152]	@ (8000b2c <setADCChannel2+0x114>)
 8000a92:	2203      	movs	r2, #3
 8000a94:	601a      	str	r2, [r3, #0]
	            break;
 8000a96:	e039      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 4:
	            sConfig2.Channel = ADC_CHANNEL_4;
 8000a98:	4b24      	ldr	r3, [pc, #144]	@ (8000b2c <setADCChannel2+0x114>)
 8000a9a:	2204      	movs	r2, #4
 8000a9c:	601a      	str	r2, [r3, #0]
	            break;
 8000a9e:	e035      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 5:
	            sConfig2.Channel = ADC_CHANNEL_5;
 8000aa0:	4b22      	ldr	r3, [pc, #136]	@ (8000b2c <setADCChannel2+0x114>)
 8000aa2:	2205      	movs	r2, #5
 8000aa4:	601a      	str	r2, [r3, #0]
	            break;
 8000aa6:	e031      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 6:
	            sConfig2.Channel = ADC_CHANNEL_6;
 8000aa8:	4b20      	ldr	r3, [pc, #128]	@ (8000b2c <setADCChannel2+0x114>)
 8000aaa:	2206      	movs	r2, #6
 8000aac:	601a      	str	r2, [r3, #0]
	            break;
 8000aae:	e02d      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 7:
	            sConfig2.Channel = ADC_CHANNEL_7;
 8000ab0:	4b1e      	ldr	r3, [pc, #120]	@ (8000b2c <setADCChannel2+0x114>)
 8000ab2:	2207      	movs	r2, #7
 8000ab4:	601a      	str	r2, [r3, #0]
	            break;
 8000ab6:	e029      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 8:
	            sConfig2.Channel = ADC_CHANNEL_8;
 8000ab8:	4b1c      	ldr	r3, [pc, #112]	@ (8000b2c <setADCChannel2+0x114>)
 8000aba:	2208      	movs	r2, #8
 8000abc:	601a      	str	r2, [r3, #0]
	            break;
 8000abe:	e025      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 9:
	            sConfig2.Channel = ADC_CHANNEL_9;
 8000ac0:	4b1a      	ldr	r3, [pc, #104]	@ (8000b2c <setADCChannel2+0x114>)
 8000ac2:	2209      	movs	r2, #9
 8000ac4:	601a      	str	r2, [r3, #0]
	            break;
 8000ac6:	e021      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 10:
	            sConfig2.Channel = ADC_CHANNEL_10;
 8000ac8:	4b18      	ldr	r3, [pc, #96]	@ (8000b2c <setADCChannel2+0x114>)
 8000aca:	220a      	movs	r2, #10
 8000acc:	601a      	str	r2, [r3, #0]
	            break;
 8000ace:	e01d      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 11:
	            sConfig2.Channel = ADC_CHANNEL_11;
 8000ad0:	4b16      	ldr	r3, [pc, #88]	@ (8000b2c <setADCChannel2+0x114>)
 8000ad2:	220b      	movs	r2, #11
 8000ad4:	601a      	str	r2, [r3, #0]
	            break;
 8000ad6:	e019      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 12:
	            sConfig2.Channel = ADC_CHANNEL_12;
 8000ad8:	4b14      	ldr	r3, [pc, #80]	@ (8000b2c <setADCChannel2+0x114>)
 8000ada:	220c      	movs	r2, #12
 8000adc:	601a      	str	r2, [r3, #0]
	            break;
 8000ade:	e015      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 13:
	            sConfig2.Channel = ADC_CHANNEL_13;
 8000ae0:	4b12      	ldr	r3, [pc, #72]	@ (8000b2c <setADCChannel2+0x114>)
 8000ae2:	220d      	movs	r2, #13
 8000ae4:	601a      	str	r2, [r3, #0]
	            break;
 8000ae6:	e011      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 14:
	            sConfig2.Channel = ADC_CHANNEL_14;
 8000ae8:	4b10      	ldr	r3, [pc, #64]	@ (8000b2c <setADCChannel2+0x114>)
 8000aea:	220e      	movs	r2, #14
 8000aec:	601a      	str	r2, [r3, #0]
	            break;
 8000aee:	e00d      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 15:
	            sConfig2.Channel = ADC_CHANNEL_15;
 8000af0:	4b0e      	ldr	r3, [pc, #56]	@ (8000b2c <setADCChannel2+0x114>)
 8000af2:	220f      	movs	r2, #15
 8000af4:	601a      	str	r2, [r3, #0]
	            break;
 8000af6:	e009      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 16:
	            sConfig2.Channel = ADC_CHANNEL_16;
 8000af8:	4b0c      	ldr	r3, [pc, #48]	@ (8000b2c <setADCChannel2+0x114>)
 8000afa:	2210      	movs	r2, #16
 8000afc:	601a      	str	r2, [r3, #0]
	            break;
 8000afe:	e005      	b.n	8000b0c <setADCChannel2+0xf4>
	        case 17:
	            sConfig2.Channel = ADC_CHANNEL_17;
 8000b00:	4b0a      	ldr	r3, [pc, #40]	@ (8000b2c <setADCChannel2+0x114>)
 8000b02:	2211      	movs	r2, #17
 8000b04:	601a      	str	r2, [r3, #0]
	            break;
 8000b06:	e001      	b.n	8000b0c <setADCChannel2+0xf4>
	        default:
	            return HAL_ERROR; // canal inválido
 8000b08:	2301      	movs	r3, #1
 8000b0a:	e00a      	b.n	8000b22 <setADCChannel2+0x10a>
	    }

	    sConfig2.Rank = ADC_REGULAR_RANK_1;
 8000b0c:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <setADCChannel2+0x114>)
 8000b0e:	2201      	movs	r2, #1
 8000b10:	605a      	str	r2, [r3, #4]
	    sConfig2.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 8000b12:	4b06      	ldr	r3, [pc, #24]	@ (8000b2c <setADCChannel2+0x114>)
 8000b14:	2205      	movs	r2, #5
 8000b16:	609a      	str	r2, [r3, #8]
	    return HAL_ADC_ConfigChannel(&hadc2, &sConfig2);
 8000b18:	4904      	ldr	r1, [pc, #16]	@ (8000b2c <setADCChannel2+0x114>)
 8000b1a:	4805      	ldr	r0, [pc, #20]	@ (8000b30 <setADCChannel2+0x118>)
 8000b1c:	f001 fd0a 	bl	8002534 <HAL_ADC_ConfigChannel>
 8000b20:	4603      	mov	r3, r0

}
 8000b22:	4618      	mov	r0, r3
 8000b24:	3708      	adds	r7, #8
 8000b26:	46bd      	mov	sp, r7
 8000b28:	bd80      	pop	{r7, pc}
 8000b2a:	bf00      	nop
 8000b2c:	200000ec 	.word	0x200000ec
 8000b30:	200000b0 	.word	0x200000b0

08000b34 <readADCValue1>:

uint16_t readADCValue1(unsigned char channelNumber) {
 8000b34:	b580      	push	{r7, lr}
 8000b36:	b084      	sub	sp, #16
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	71fb      	strb	r3, [r7, #7]

    if (setADCChannel1(channelNumber) != HAL_OK) {
 8000b3e:	79fb      	ldrb	r3, [r7, #7]
 8000b40:	4618      	mov	r0, r3
 8000b42:	f7ff fedb 	bl	80008fc <setADCChannel1>
 8000b46:	4603      	mov	r3, r0
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d002      	beq.n	8000b52 <readADCValue1+0x1e>
        return 0xFFFF;  // erro
 8000b4c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000b50:	e031      	b.n	8000bb6 <readADCValue1+0x82>
    }
    delay_us(10);
 8000b52:	200a      	movs	r0, #10
 8000b54:	f000 f91a 	bl	8000d8c <delay_us>
    uint32_t sum=0;
 8000b58:	2300      	movs	r3, #0
 8000b5a:	60fb      	str	r3, [r7, #12]
    HAL_ADC_Start(&hadc1);
 8000b5c:	4818      	ldr	r0, [pc, #96]	@ (8000bc0 <readADCValue1+0x8c>)
 8000b5e:	f001 fafd 	bl	800215c <HAL_ADC_Start>
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000b62:	2300      	movs	r3, #0
 8000b64:	72fb      	strb	r3, [r7, #11]
 8000b66:	e017      	b.n	8000b98 <readADCValue1+0x64>
    	if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) != HAL_OK) {
 8000b68:	f04f 31ff 	mov.w	r1, #4294967295
 8000b6c:	4814      	ldr	r0, [pc, #80]	@ (8000bc0 <readADCValue1+0x8c>)
 8000b6e:	f001 fbcf 	bl	8002310 <HAL_ADC_PollForConversion>
 8000b72:	4603      	mov	r3, r0
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	d005      	beq.n	8000b84 <readADCValue1+0x50>
    		HAL_ADC_Stop(&hadc1);
 8000b78:	4811      	ldr	r0, [pc, #68]	@ (8000bc0 <readADCValue1+0x8c>)
 8000b7a:	f001 fb9d 	bl	80022b8 <HAL_ADC_Stop>
    		return 0xFFFF;  // erro
 8000b7e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000b82:	e018      	b.n	8000bb6 <readADCValue1+0x82>
    	}
    	sum += HAL_ADC_GetValue(&hadc1);
 8000b84:	480e      	ldr	r0, [pc, #56]	@ (8000bc0 <readADCValue1+0x8c>)
 8000b86:	f001 fcc9 	bl	800251c <HAL_ADC_GetValue>
 8000b8a:	4602      	mov	r2, r0
 8000b8c:	68fb      	ldr	r3, [r7, #12]
 8000b8e:	4413      	add	r3, r2
 8000b90:	60fb      	str	r3, [r7, #12]
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000b92:	7afb      	ldrb	r3, [r7, #11]
 8000b94:	3301      	adds	r3, #1
 8000b96:	72fb      	strb	r3, [r7, #11]
 8000b98:	4b0a      	ldr	r3, [pc, #40]	@ (8000bc4 <readADCValue1+0x90>)
 8000b9a:	781b      	ldrb	r3, [r3, #0]
 8000b9c:	7afa      	ldrb	r2, [r7, #11]
 8000b9e:	429a      	cmp	r2, r3
 8000ba0:	d3e2      	bcc.n	8000b68 <readADCValue1+0x34>
    }
    HAL_ADC_Stop(&hadc1);
 8000ba2:	4807      	ldr	r0, [pc, #28]	@ (8000bc0 <readADCValue1+0x8c>)
 8000ba4:	f001 fb88 	bl	80022b8 <HAL_ADC_Stop>
    return (uint16_t)(sum / readings_qtt);
 8000ba8:	4b06      	ldr	r3, [pc, #24]	@ (8000bc4 <readADCValue1+0x90>)
 8000baa:	781b      	ldrb	r3, [r3, #0]
 8000bac:	461a      	mov	r2, r3
 8000bae:	68fb      	ldr	r3, [r7, #12]
 8000bb0:	fbb3 f3f2 	udiv	r3, r3, r2
 8000bb4:	b29b      	uxth	r3, r3
}
 8000bb6:	4618      	mov	r0, r3
 8000bb8:	3710      	adds	r7, #16
 8000bba:	46bd      	mov	sp, r7
 8000bbc:	bd80      	pop	{r7, pc}
 8000bbe:	bf00      	nop
 8000bc0:	20000080 	.word	0x20000080
 8000bc4:	20000000 	.word	0x20000000

08000bc8 <readADCValue2>:

uint16_t readADCValue2(unsigned char channelNumber) {
 8000bc8:	b580      	push	{r7, lr}
 8000bca:	b084      	sub	sp, #16
 8000bcc:	af00      	add	r7, sp, #0
 8000bce:	4603      	mov	r3, r0
 8000bd0:	71fb      	strb	r3, [r7, #7]
    if (setADCChannel2(channelNumber) != HAL_OK) {
 8000bd2:	79fb      	ldrb	r3, [r7, #7]
 8000bd4:	4618      	mov	r0, r3
 8000bd6:	f7ff ff1f 	bl	8000a18 <setADCChannel2>
 8000bda:	4603      	mov	r3, r0
 8000bdc:	2b00      	cmp	r3, #0
 8000bde:	d002      	beq.n	8000be6 <readADCValue2+0x1e>
        return 0xFFFF;  // erro
 8000be0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000be4:	e031      	b.n	8000c4a <readADCValue2+0x82>
    }
    delay_us(10);
 8000be6:	200a      	movs	r0, #10
 8000be8:	f000 f8d0 	bl	8000d8c <delay_us>
    uint32_t sum=0;
 8000bec:	2300      	movs	r3, #0
 8000bee:	60fb      	str	r3, [r7, #12]
    HAL_ADC_Start(&hadc2);
 8000bf0:	4818      	ldr	r0, [pc, #96]	@ (8000c54 <readADCValue2+0x8c>)
 8000bf2:	f001 fab3 	bl	800215c <HAL_ADC_Start>
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	72fb      	strb	r3, [r7, #11]
 8000bfa:	e017      	b.n	8000c2c <readADCValue2+0x64>
        if (HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY) != HAL_OK) {
 8000bfc:	f04f 31ff 	mov.w	r1, #4294967295
 8000c00:	4814      	ldr	r0, [pc, #80]	@ (8000c54 <readADCValue2+0x8c>)
 8000c02:	f001 fb85 	bl	8002310 <HAL_ADC_PollForConversion>
 8000c06:	4603      	mov	r3, r0
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d005      	beq.n	8000c18 <readADCValue2+0x50>
            HAL_ADC_Stop(&hadc2);
 8000c0c:	4811      	ldr	r0, [pc, #68]	@ (8000c54 <readADCValue2+0x8c>)
 8000c0e:	f001 fb53 	bl	80022b8 <HAL_ADC_Stop>
            return 0xFFFF;
 8000c12:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000c16:	e018      	b.n	8000c4a <readADCValue2+0x82>
        }
        sum += HAL_ADC_GetValue(&hadc2);
 8000c18:	480e      	ldr	r0, [pc, #56]	@ (8000c54 <readADCValue2+0x8c>)
 8000c1a:	f001 fc7f 	bl	800251c <HAL_ADC_GetValue>
 8000c1e:	4602      	mov	r2, r0
 8000c20:	68fb      	ldr	r3, [r7, #12]
 8000c22:	4413      	add	r3, r2
 8000c24:	60fb      	str	r3, [r7, #12]
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000c26:	7afb      	ldrb	r3, [r7, #11]
 8000c28:	3301      	adds	r3, #1
 8000c2a:	72fb      	strb	r3, [r7, #11]
 8000c2c:	4b0a      	ldr	r3, [pc, #40]	@ (8000c58 <readADCValue2+0x90>)
 8000c2e:	781b      	ldrb	r3, [r3, #0]
 8000c30:	7afa      	ldrb	r2, [r7, #11]
 8000c32:	429a      	cmp	r2, r3
 8000c34:	d3e2      	bcc.n	8000bfc <readADCValue2+0x34>
    }
    HAL_ADC_Stop(&hadc2);
 8000c36:	4807      	ldr	r0, [pc, #28]	@ (8000c54 <readADCValue2+0x8c>)
 8000c38:	f001 fb3e 	bl	80022b8 <HAL_ADC_Stop>
    return (uint16_t)(sum / readings_qtt);
 8000c3c:	4b06      	ldr	r3, [pc, #24]	@ (8000c58 <readADCValue2+0x90>)
 8000c3e:	781b      	ldrb	r3, [r3, #0]
 8000c40:	461a      	mov	r2, r3
 8000c42:	68fb      	ldr	r3, [r7, #12]
 8000c44:	fbb3 f3f2 	udiv	r3, r3, r2
 8000c48:	b29b      	uxth	r3, r3
}
 8000c4a:	4618      	mov	r0, r3
 8000c4c:	3710      	adds	r7, #16
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	bd80      	pop	{r7, pc}
 8000c52:	bf00      	nop
 8000c54:	200000b0 	.word	0x200000b0
 8000c58:	20000000 	.word	0x20000000

08000c5c <readSensor>:

uint16_t readSensor(unsigned char mux_pin, unsigned char index){
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b084      	sub	sp, #16
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	4603      	mov	r3, r0
 8000c64:	460a      	mov	r2, r1
 8000c66:	71fb      	strb	r3, [r7, #7]
 8000c68:	4613      	mov	r3, r2
 8000c6a:	71bb      	strb	r3, [r7, #6]
	unsigned char mux = mux_pin>>4;
 8000c6c:	79fb      	ldrb	r3, [r7, #7]
 8000c6e:	091b      	lsrs	r3, r3, #4
 8000c70:	737b      	strb	r3, [r7, #13]
	unsigned char porta  = mux_pin&0b1111;
 8000c72:	79fb      	ldrb	r3, [r7, #7]
 8000c74:	f003 030f 	and.w	r3, r3, #15
 8000c78:	733b      	strb	r3, [r7, #12]
	_Bool s0 = porta&0b0001;
 8000c7a:	7b3b      	ldrb	r3, [r7, #12]
 8000c7c:	f003 0301 	and.w	r3, r3, #1
 8000c80:	2b00      	cmp	r3, #0
 8000c82:	bf14      	ite	ne
 8000c84:	2301      	movne	r3, #1
 8000c86:	2300      	moveq	r3, #0
 8000c88:	72fb      	strb	r3, [r7, #11]
	_Bool s1 = (porta&0b0010)>>1;
 8000c8a:	7b3b      	ldrb	r3, [r7, #12]
 8000c8c:	105b      	asrs	r3, r3, #1
 8000c8e:	f003 0301 	and.w	r3, r3, #1
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	bf14      	ite	ne
 8000c96:	2301      	movne	r3, #1
 8000c98:	2300      	moveq	r3, #0
 8000c9a:	72bb      	strb	r3, [r7, #10]
	_Bool s2 = (porta&0b0100)>>2;
 8000c9c:	7b3b      	ldrb	r3, [r7, #12]
 8000c9e:	109b      	asrs	r3, r3, #2
 8000ca0:	f003 0301 	and.w	r3, r3, #1
 8000ca4:	2b00      	cmp	r3, #0
 8000ca6:	bf14      	ite	ne
 8000ca8:	2301      	movne	r3, #1
 8000caa:	2300      	moveq	r3, #0
 8000cac:	727b      	strb	r3, [r7, #9]
	_Bool s3 = (porta&0b1000)>>3;
 8000cae:	7b3b      	ldrb	r3, [r7, #12]
 8000cb0:	10db      	asrs	r3, r3, #3
 8000cb2:	f003 0301 	and.w	r3, r3, #1
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	bf14      	ite	ne
 8000cba:	2301      	movne	r3, #1
 8000cbc:	2300      	moveq	r3, #0
 8000cbe:	723b      	strb	r3, [r7, #8]

	HAL_GPIO_WritePin(EN1_GPIO, EN1_PIN, GPIO_PIN_SET); // EN1 (B4)
 8000cc0:	2201      	movs	r2, #1
 8000cc2:	2110      	movs	r1, #16
 8000cc4:	482f      	ldr	r0, [pc, #188]	@ (8000d84 <readSensor+0x128>)
 8000cc6:	f002 fa5d 	bl	8003184 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN2_GPIO, EN2_PIN, GPIO_PIN_SET); // EN2 (B3)
 8000cca:	2201      	movs	r2, #1
 8000ccc:	2108      	movs	r1, #8
 8000cce:	482d      	ldr	r0, [pc, #180]	@ (8000d84 <readSensor+0x128>)
 8000cd0:	f002 fa58 	bl	8003184 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN3_GPIO, EN3_PIN, GPIO_PIN_SET); // EN3 (A15)
 8000cd4:	2201      	movs	r2, #1
 8000cd6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000cda:	482b      	ldr	r0, [pc, #172]	@ (8000d88 <readSensor+0x12c>)
 8000cdc:	f002 fa52 	bl	8003184 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(S0_GPIO, S0_PIN, s0);
 8000ce0:	7afb      	ldrb	r3, [r7, #11]
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	2180      	movs	r1, #128	@ 0x80
 8000ce6:	4827      	ldr	r0, [pc, #156]	@ (8000d84 <readSensor+0x128>)
 8000ce8:	f002 fa4c 	bl	8003184 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S1_GPIO, S1_PIN, s1);
 8000cec:	7abb      	ldrb	r3, [r7, #10]
 8000cee:	461a      	mov	r2, r3
 8000cf0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000cf4:	4823      	ldr	r0, [pc, #140]	@ (8000d84 <readSensor+0x128>)
 8000cf6:	f002 fa45 	bl	8003184 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S2_GPIO, S2_PIN, s2);
 8000cfa:	7a7b      	ldrb	r3, [r7, #9]
 8000cfc:	461a      	mov	r2, r3
 8000cfe:	2120      	movs	r1, #32
 8000d00:	4820      	ldr	r0, [pc, #128]	@ (8000d84 <readSensor+0x128>)
 8000d02:	f002 fa3f 	bl	8003184 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S3_GPIO, S3_PIN, s3);
 8000d06:	7a3b      	ldrb	r3, [r7, #8]
 8000d08:	461a      	mov	r2, r3
 8000d0a:	2140      	movs	r1, #64	@ 0x40
 8000d0c:	481d      	ldr	r0, [pc, #116]	@ (8000d84 <readSensor+0x128>)
 8000d0e:	f002 fa39 	bl	8003184 <HAL_GPIO_WritePin>

	uint16_t value;
	switch (mux) {
 8000d12:	7b7b      	ldrb	r3, [r7, #13]
 8000d14:	2b03      	cmp	r3, #3
 8000d16:	d01c      	beq.n	8000d52 <readSensor+0xf6>
 8000d18:	2b03      	cmp	r3, #3
 8000d1a:	dc26      	bgt.n	8000d6a <readSensor+0x10e>
 8000d1c:	2b01      	cmp	r3, #1
 8000d1e:	d002      	beq.n	8000d26 <readSensor+0xca>
 8000d20:	2b02      	cmp	r3, #2
 8000d22:	d00b      	beq.n	8000d3c <readSensor+0xe0>
	        case 3:
	            HAL_GPIO_WritePin(EN3_GPIO, EN3_PIN, GPIO_PIN_RESET); // Ativa EN3 (A15)
	            value = readADCValue1(3);
	            break;
	        default:
	            break;
 8000d24:	e021      	b.n	8000d6a <readSensor+0x10e>
	            HAL_GPIO_WritePin(EN1_GPIO, EN1_PIN, GPIO_PIN_RESET); // Ativa EN1 (B4)
 8000d26:	2200      	movs	r2, #0
 8000d28:	2110      	movs	r1, #16
 8000d2a:	4816      	ldr	r0, [pc, #88]	@ (8000d84 <readSensor+0x128>)
 8000d2c:	f002 fa2a 	bl	8003184 <HAL_GPIO_WritePin>
	            value = readADCValue1(1);
 8000d30:	2001      	movs	r0, #1
 8000d32:	f7ff feff 	bl	8000b34 <readADCValue1>
 8000d36:	4603      	mov	r3, r0
 8000d38:	81fb      	strh	r3, [r7, #14]
	            break;
 8000d3a:	e017      	b.n	8000d6c <readSensor+0x110>
	            HAL_GPIO_WritePin(EN2_GPIO, EN2_PIN, GPIO_PIN_RESET); // Ativa EN2 (B3)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	2108      	movs	r1, #8
 8000d40:	4810      	ldr	r0, [pc, #64]	@ (8000d84 <readSensor+0x128>)
 8000d42:	f002 fa1f 	bl	8003184 <HAL_GPIO_WritePin>
	            value = readADCValue1(2);
 8000d46:	2002      	movs	r0, #2
 8000d48:	f7ff fef4 	bl	8000b34 <readADCValue1>
 8000d4c:	4603      	mov	r3, r0
 8000d4e:	81fb      	strh	r3, [r7, #14]
	            break;
 8000d50:	e00c      	b.n	8000d6c <readSensor+0x110>
	            HAL_GPIO_WritePin(EN3_GPIO, EN3_PIN, GPIO_PIN_RESET); // Ativa EN3 (A15)
 8000d52:	2200      	movs	r2, #0
 8000d54:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000d58:	480b      	ldr	r0, [pc, #44]	@ (8000d88 <readSensor+0x12c>)
 8000d5a:	f002 fa13 	bl	8003184 <HAL_GPIO_WritePin>
	            value = readADCValue1(3);
 8000d5e:	2003      	movs	r0, #3
 8000d60:	f7ff fee8 	bl	8000b34 <readADCValue1>
 8000d64:	4603      	mov	r3, r0
 8000d66:	81fb      	strh	r3, [r7, #14]
	            break;
 8000d68:	e000      	b.n	8000d6c <readSensor+0x110>
	            break;
 8000d6a:	bf00      	nop
	    }
	return returnAvgData(value,index);
 8000d6c:	79ba      	ldrb	r2, [r7, #6]
 8000d6e:	89fb      	ldrh	r3, [r7, #14]
 8000d70:	4611      	mov	r1, r2
 8000d72:	4618      	mov	r0, r3
 8000d74:	f000 f826 	bl	8000dc4 <returnAvgData>
 8000d78:	4603      	mov	r3, r0
}
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	3710      	adds	r7, #16
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	bd80      	pop	{r7, pc}
 8000d82:	bf00      	nop
 8000d84:	40010c00 	.word	0x40010c00
 8000d88:	40010800 	.word	0x40010800

08000d8c <delay_us>:

void delay_us(unsigned short us)
{
 8000d8c:	b580      	push	{r7, lr}
 8000d8e:	b082      	sub	sp, #8
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	4603      	mov	r3, r0
 8000d94:	80fb      	strh	r3, [r7, #6]
    __HAL_TIM_SET_COUNTER(&htim1, 0);
 8000d96:	4b0a      	ldr	r3, [pc, #40]	@ (8000dc0 <delay_us+0x34>)
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	2200      	movs	r2, #0
 8000d9c:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_TIM_Base_Start(&htim1);
 8000d9e:	4808      	ldr	r0, [pc, #32]	@ (8000dc0 <delay_us+0x34>)
 8000da0:	f003 f804 	bl	8003dac <HAL_TIM_Base_Start>

    while (__HAL_TIM_GET_COUNTER(&htim1) < us);
 8000da4:	bf00      	nop
 8000da6:	4b06      	ldr	r3, [pc, #24]	@ (8000dc0 <delay_us+0x34>)
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000dac:	88fb      	ldrh	r3, [r7, #6]
 8000dae:	429a      	cmp	r2, r3
 8000db0:	d3f9      	bcc.n	8000da6 <delay_us+0x1a>

    HAL_TIM_Base_Stop(&htim1);
 8000db2:	4803      	ldr	r0, [pc, #12]	@ (8000dc0 <delay_us+0x34>)
 8000db4:	f003 f844 	bl	8003e40 <HAL_TIM_Base_Stop>
}
 8000db8:	bf00      	nop
 8000dba:	3708      	adds	r7, #8
 8000dbc:	46bd      	mov	sp, r7
 8000dbe:	bd80      	pop	{r7, pc}
 8000dc0:	2000038c 	.word	0x2000038c

08000dc4 <returnAvgData>:

uint16_t returnAvgData(uint16_t data, uint8_t index){
 8000dc4:	b5b0      	push	{r4, r5, r7, lr}
 8000dc6:	b086      	sub	sp, #24
 8000dc8:	af00      	add	r7, sp, #0
 8000dca:	4603      	mov	r3, r0
 8000dcc:	460a      	mov	r2, r1
 8000dce:	80fb      	strh	r3, [r7, #6]
 8000dd0:	4613      	mov	r3, r2
 8000dd2:	717b      	strb	r3, [r7, #5]
	uint8_t weight = 3;
 8000dd4:	2303      	movs	r3, #3
 8000dd6:	743b      	strb	r3, [r7, #16]
	uint32_t sum=data*weight;
 8000dd8:	88fb      	ldrh	r3, [r7, #6]
 8000dda:	7c3a      	ldrb	r2, [r7, #16]
 8000ddc:	fb02 f303 	mul.w	r3, r2, r3
 8000de0:	617b      	str	r3, [r7, #20]
  float factor = 0.95;
 8000de2:	4b60      	ldr	r3, [pc, #384]	@ (8000f64 <returnAvgData+0x1a0>)
 8000de4:	60fb      	str	r3, [r7, #12]
	uint8_t n = weight;
 8000de6:	7c3b      	ldrb	r3, [r7, #16]
 8000de8:	74fb      	strb	r3, [r7, #19]
	for (uint8_t i=0;i<sensor_buffer_size;i++){
 8000dea:	2300      	movs	r3, #0
 8000dec:	74bb      	strb	r3, [r7, #18]
 8000dee:	e07c      	b.n	8000eea <returnAvgData+0x126>
		if (sensorData[index][i]==0xFFFF){
 8000df0:	797a      	ldrb	r2, [r7, #5]
 8000df2:	7cb9      	ldrb	r1, [r7, #18]
 8000df4:	485c      	ldr	r0, [pc, #368]	@ (8000f68 <returnAvgData+0x1a4>)
 8000df6:	4613      	mov	r3, r2
 8000df8:	009b      	lsls	r3, r3, #2
 8000dfa:	4413      	add	r3, r2
 8000dfc:	440b      	add	r3, r1
 8000dfe:	f830 3013 	ldrh.w	r3, [r0, r3, lsl #1]
 8000e02:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000e06:	4293      	cmp	r3, r2
 8000e08:	d113      	bne.n	8000e32 <returnAvgData+0x6e>
			sensorData[index][i]=data;
 8000e0a:	797a      	ldrb	r2, [r7, #5]
 8000e0c:	7cb9      	ldrb	r1, [r7, #18]
 8000e0e:	4856      	ldr	r0, [pc, #344]	@ (8000f68 <returnAvgData+0x1a4>)
 8000e10:	4613      	mov	r3, r2
 8000e12:	009b      	lsls	r3, r3, #2
 8000e14:	4413      	add	r3, r2
 8000e16:	440b      	add	r3, r1
 8000e18:	88fa      	ldrh	r2, [r7, #6]
 8000e1a:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
			return sensorData[index][i];
 8000e1e:	797a      	ldrb	r2, [r7, #5]
 8000e20:	7cb9      	ldrb	r1, [r7, #18]
 8000e22:	4851      	ldr	r0, [pc, #324]	@ (8000f68 <returnAvgData+0x1a4>)
 8000e24:	4613      	mov	r3, r2
 8000e26:	009b      	lsls	r3, r3, #2
 8000e28:	4413      	add	r3, r2
 8000e2a:	440b      	add	r3, r1
 8000e2c:	f830 3013 	ldrh.w	r3, [r0, r3, lsl #1]
 8000e30:	e094      	b.n	8000f5c <returnAvgData+0x198>
		}
		else{
      if (sensorData[index][i]>(factor*data)&&sensorData[index][i]<((1+(1-factor))*data)){
 8000e32:	797a      	ldrb	r2, [r7, #5]
 8000e34:	7cb9      	ldrb	r1, [r7, #18]
 8000e36:	484c      	ldr	r0, [pc, #304]	@ (8000f68 <returnAvgData+0x1a4>)
 8000e38:	4613      	mov	r3, r2
 8000e3a:	009b      	lsls	r3, r3, #2
 8000e3c:	4413      	add	r3, r2
 8000e3e:	440b      	add	r3, r1
 8000e40:	f830 3013 	ldrh.w	r3, [r0, r3, lsl #1]
 8000e44:	4618      	mov	r0, r3
 8000e46:	f7ff fa3d 	bl	80002c4 <__aeabi_i2f>
 8000e4a:	4604      	mov	r4, r0
 8000e4c:	88fb      	ldrh	r3, [r7, #6]
 8000e4e:	4618      	mov	r0, r3
 8000e50:	f7ff fa38 	bl	80002c4 <__aeabi_i2f>
 8000e54:	4603      	mov	r3, r0
 8000e56:	68f9      	ldr	r1, [r7, #12]
 8000e58:	4618      	mov	r0, r3
 8000e5a:	f7ff fa87 	bl	800036c <__aeabi_fmul>
 8000e5e:	4603      	mov	r3, r0
 8000e60:	4619      	mov	r1, r3
 8000e62:	4620      	mov	r0, r4
 8000e64:	f7ff fc3e 	bl	80006e4 <__aeabi_fcmpgt>
 8000e68:	4603      	mov	r3, r0
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d03a      	beq.n	8000ee4 <returnAvgData+0x120>
 8000e6e:	797a      	ldrb	r2, [r7, #5]
 8000e70:	7cb9      	ldrb	r1, [r7, #18]
 8000e72:	483d      	ldr	r0, [pc, #244]	@ (8000f68 <returnAvgData+0x1a4>)
 8000e74:	4613      	mov	r3, r2
 8000e76:	009b      	lsls	r3, r3, #2
 8000e78:	4413      	add	r3, r2
 8000e7a:	440b      	add	r3, r1
 8000e7c:	f830 3013 	ldrh.w	r3, [r0, r3, lsl #1]
 8000e80:	4618      	mov	r0, r3
 8000e82:	f7ff fa1f 	bl	80002c4 <__aeabi_i2f>
 8000e86:	4604      	mov	r4, r0
 8000e88:	68f9      	ldr	r1, [r7, #12]
 8000e8a:	f04f 507e 	mov.w	r0, #1065353216	@ 0x3f800000
 8000e8e:	f7ff f963 	bl	8000158 <__aeabi_fsub>
 8000e92:	4603      	mov	r3, r0
 8000e94:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 8000e98:	4618      	mov	r0, r3
 8000e9a:	f7ff f95f 	bl	800015c <__addsf3>
 8000e9e:	4603      	mov	r3, r0
 8000ea0:	461d      	mov	r5, r3
 8000ea2:	88fb      	ldrh	r3, [r7, #6]
 8000ea4:	4618      	mov	r0, r3
 8000ea6:	f7ff fa0d 	bl	80002c4 <__aeabi_i2f>
 8000eaa:	4603      	mov	r3, r0
 8000eac:	4619      	mov	r1, r3
 8000eae:	4628      	mov	r0, r5
 8000eb0:	f7ff fa5c 	bl	800036c <__aeabi_fmul>
 8000eb4:	4603      	mov	r3, r0
 8000eb6:	4619      	mov	r1, r3
 8000eb8:	4620      	mov	r0, r4
 8000eba:	f7ff fbf5 	bl	80006a8 <__aeabi_fcmplt>
 8000ebe:	4603      	mov	r3, r0
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	d00f      	beq.n	8000ee4 <returnAvgData+0x120>
			sum = sum+sensorData[index][i];
 8000ec4:	797a      	ldrb	r2, [r7, #5]
 8000ec6:	7cb9      	ldrb	r1, [r7, #18]
 8000ec8:	4827      	ldr	r0, [pc, #156]	@ (8000f68 <returnAvgData+0x1a4>)
 8000eca:	4613      	mov	r3, r2
 8000ecc:	009b      	lsls	r3, r3, #2
 8000ece:	4413      	add	r3, r2
 8000ed0:	440b      	add	r3, r1
 8000ed2:	f830 3013 	ldrh.w	r3, [r0, r3, lsl #1]
 8000ed6:	461a      	mov	r2, r3
 8000ed8:	697b      	ldr	r3, [r7, #20]
 8000eda:	4413      	add	r3, r2
 8000edc:	617b      	str	r3, [r7, #20]
			n++;
 8000ede:	7cfb      	ldrb	r3, [r7, #19]
 8000ee0:	3301      	adds	r3, #1
 8000ee2:	74fb      	strb	r3, [r7, #19]
	for (uint8_t i=0;i<sensor_buffer_size;i++){
 8000ee4:	7cbb      	ldrb	r3, [r7, #18]
 8000ee6:	3301      	adds	r3, #1
 8000ee8:	74bb      	strb	r3, [r7, #18]
 8000eea:	7cbb      	ldrb	r3, [r7, #18]
 8000eec:	2b04      	cmp	r3, #4
 8000eee:	f67f af7f 	bls.w	8000df0 <returnAvgData+0x2c>
      }
		}
	}
  for (uint8_t i=0;i<sensor_buffer_size-1;i++){
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	747b      	strb	r3, [r7, #17]
 8000ef6:	e016      	b.n	8000f26 <returnAvgData+0x162>
    sensorData[index][i]=sensorData[index][i+1];
 8000ef8:	7979      	ldrb	r1, [r7, #5]
 8000efa:	7c7b      	ldrb	r3, [r7, #17]
 8000efc:	1c5c      	adds	r4, r3, #1
 8000efe:	797a      	ldrb	r2, [r7, #5]
 8000f00:	7c78      	ldrb	r0, [r7, #17]
 8000f02:	4d19      	ldr	r5, [pc, #100]	@ (8000f68 <returnAvgData+0x1a4>)
 8000f04:	460b      	mov	r3, r1
 8000f06:	009b      	lsls	r3, r3, #2
 8000f08:	440b      	add	r3, r1
 8000f0a:	4423      	add	r3, r4
 8000f0c:	f835 4013 	ldrh.w	r4, [r5, r3, lsl #1]
 8000f10:	4915      	ldr	r1, [pc, #84]	@ (8000f68 <returnAvgData+0x1a4>)
 8000f12:	4613      	mov	r3, r2
 8000f14:	009b      	lsls	r3, r3, #2
 8000f16:	4413      	add	r3, r2
 8000f18:	4403      	add	r3, r0
 8000f1a:	4622      	mov	r2, r4
 8000f1c:	f821 2013 	strh.w	r2, [r1, r3, lsl #1]
  for (uint8_t i=0;i<sensor_buffer_size-1;i++){
 8000f20:	7c7b      	ldrb	r3, [r7, #17]
 8000f22:	3301      	adds	r3, #1
 8000f24:	747b      	strb	r3, [r7, #17]
 8000f26:	7c7b      	ldrb	r3, [r7, #17]
 8000f28:	2b03      	cmp	r3, #3
 8000f2a:	d9e5      	bls.n	8000ef8 <returnAvgData+0x134>
  }
	sensorData[index][sensor_buffer_size-1]=sum/n;
 8000f2c:	7cfb      	ldrb	r3, [r7, #19]
 8000f2e:	697a      	ldr	r2, [r7, #20]
 8000f30:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f34:	797a      	ldrb	r2, [r7, #5]
 8000f36:	b298      	uxth	r0, r3
 8000f38:	490b      	ldr	r1, [pc, #44]	@ (8000f68 <returnAvgData+0x1a4>)
 8000f3a:	4613      	mov	r3, r2
 8000f3c:	009b      	lsls	r3, r3, #2
 8000f3e:	4413      	add	r3, r2
 8000f40:	005b      	lsls	r3, r3, #1
 8000f42:	440b      	add	r3, r1
 8000f44:	3308      	adds	r3, #8
 8000f46:	4602      	mov	r2, r0
 8000f48:	801a      	strh	r2, [r3, #0]
	return sensorData[index][sensor_buffer_size-1];
 8000f4a:	797a      	ldrb	r2, [r7, #5]
 8000f4c:	4906      	ldr	r1, [pc, #24]	@ (8000f68 <returnAvgData+0x1a4>)
 8000f4e:	4613      	mov	r3, r2
 8000f50:	009b      	lsls	r3, r3, #2
 8000f52:	4413      	add	r3, r2
 8000f54:	005b      	lsls	r3, r3, #1
 8000f56:	440b      	add	r3, r1
 8000f58:	3308      	adds	r3, #8
 8000f5a:	881b      	ldrh	r3, [r3, #0]
}
 8000f5c:	4618      	mov	r0, r3
 8000f5e:	3718      	adds	r7, #24
 8000f60:	46bd      	mov	sp, r7
 8000f62:	bdb0      	pop	{r4, r5, r7, pc}
 8000f64:	3f733333 	.word	0x3f733333
 8000f68:	200000f8 	.word	0x200000f8

08000f6c <setAvgDataEmpty>:

void setAvgDataEmpty(){
 8000f6c:	b480      	push	{r7}
 8000f6e:	b083      	sub	sp, #12
 8000f70:	af00      	add	r7, sp, #0
	for (uint8_t i=0;i<sensor_qtt;i++){
 8000f72:	2300      	movs	r3, #0
 8000f74:	71fb      	strb	r3, [r7, #7]
 8000f76:	e016      	b.n	8000fa6 <setAvgDataEmpty+0x3a>
		for (uint8_t j=0;j<sensor_buffer_size;j++){
 8000f78:	2300      	movs	r3, #0
 8000f7a:	71bb      	strb	r3, [r7, #6]
 8000f7c:	e00d      	b.n	8000f9a <setAvgDataEmpty+0x2e>
			sensorData[i][j]=0xFFFF;
 8000f7e:	79fa      	ldrb	r2, [r7, #7]
 8000f80:	79b9      	ldrb	r1, [r7, #6]
 8000f82:	480d      	ldr	r0, [pc, #52]	@ (8000fb8 <setAvgDataEmpty+0x4c>)
 8000f84:	4613      	mov	r3, r2
 8000f86:	009b      	lsls	r3, r3, #2
 8000f88:	4413      	add	r3, r2
 8000f8a:	440b      	add	r3, r1
 8000f8c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000f90:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
		for (uint8_t j=0;j<sensor_buffer_size;j++){
 8000f94:	79bb      	ldrb	r3, [r7, #6]
 8000f96:	3301      	adds	r3, #1
 8000f98:	71bb      	strb	r3, [r7, #6]
 8000f9a:	79bb      	ldrb	r3, [r7, #6]
 8000f9c:	2b04      	cmp	r3, #4
 8000f9e:	d9ee      	bls.n	8000f7e <setAvgDataEmpty+0x12>
	for (uint8_t i=0;i<sensor_qtt;i++){
 8000fa0:	79fb      	ldrb	r3, [r7, #7]
 8000fa2:	3301      	adds	r3, #1
 8000fa4:	71fb      	strb	r3, [r7, #7]
 8000fa6:	79fb      	ldrb	r3, [r7, #7]
 8000fa8:	2b24      	cmp	r3, #36	@ 0x24
 8000faa:	d9e5      	bls.n	8000f78 <setAvgDataEmpty+0xc>
		}
	}
}
 8000fac:	bf00      	nop
 8000fae:	bf00      	nop
 8000fb0:	370c      	adds	r7, #12
 8000fb2:	46bd      	mov	sp, r7
 8000fb4:	bc80      	pop	{r7}
 8000fb6:	4770      	bx	lr
 8000fb8:	200000f8 	.word	0x200000f8

08000fbc <MX_CAN_Init>:

CAN_HandleTypeDef hcan;

/* CAN init function */
void MX_CAN_Init(void)
{
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	af00      	add	r7, sp, #0
  /* USER CODE END CAN_Init 0 */

  /* USER CODE BEGIN CAN_Init 1 */

  /* USER CODE END CAN_Init 1 */
  hcan.Instance = CAN1;
 8000fc0:	4b17      	ldr	r3, [pc, #92]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fc2:	4a18      	ldr	r2, [pc, #96]	@ (8001024 <MX_CAN_Init+0x68>)
 8000fc4:	601a      	str	r2, [r3, #0]
  hcan.Init.Prescaler = 4;
 8000fc6:	4b16      	ldr	r3, [pc, #88]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fc8:	2204      	movs	r2, #4
 8000fca:	605a      	str	r2, [r3, #4]
  hcan.Init.Mode = CAN_MODE_NORMAL;
 8000fcc:	4b14      	ldr	r3, [pc, #80]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	609a      	str	r2, [r3, #8]
  hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000fd2:	4b13      	ldr	r3, [pc, #76]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	60da      	str	r2, [r3, #12]
  hcan.Init.TimeSeg1 = CAN_BS1_4TQ;
 8000fd8:	4b11      	ldr	r3, [pc, #68]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fda:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8000fde:	611a      	str	r2, [r3, #16]
  hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 8000fe0:	4b0f      	ldr	r3, [pc, #60]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fe2:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8000fe6:	615a      	str	r2, [r3, #20]
  hcan.Init.TimeTriggeredMode = DISABLE;
 8000fe8:	4b0d      	ldr	r3, [pc, #52]	@ (8001020 <MX_CAN_Init+0x64>)
 8000fea:	2200      	movs	r2, #0
 8000fec:	761a      	strb	r2, [r3, #24]
  hcan.Init.AutoBusOff = DISABLE;
 8000fee:	4b0c      	ldr	r3, [pc, #48]	@ (8001020 <MX_CAN_Init+0x64>)
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	765a      	strb	r2, [r3, #25]
  hcan.Init.AutoWakeUp = DISABLE;
 8000ff4:	4b0a      	ldr	r3, [pc, #40]	@ (8001020 <MX_CAN_Init+0x64>)
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	769a      	strb	r2, [r3, #26]
  hcan.Init.AutoRetransmission = DISABLE;
 8000ffa:	4b09      	ldr	r3, [pc, #36]	@ (8001020 <MX_CAN_Init+0x64>)
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	76da      	strb	r2, [r3, #27]
  hcan.Init.ReceiveFifoLocked = DISABLE;
 8001000:	4b07      	ldr	r3, [pc, #28]	@ (8001020 <MX_CAN_Init+0x64>)
 8001002:	2200      	movs	r2, #0
 8001004:	771a      	strb	r2, [r3, #28]
  hcan.Init.TransmitFifoPriority = DISABLE;
 8001006:	4b06      	ldr	r3, [pc, #24]	@ (8001020 <MX_CAN_Init+0x64>)
 8001008:	2200      	movs	r2, #0
 800100a:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan) != HAL_OK)
 800100c:	4804      	ldr	r0, [pc, #16]	@ (8001020 <MX_CAN_Init+0x64>)
 800100e:	f001 fc24 	bl	800285a <HAL_CAN_Init>
 8001012:	4603      	mov	r3, r0
 8001014:	2b00      	cmp	r3, #0
 8001016:	d001      	beq.n	800101c <MX_CAN_Init+0x60>
  {
    Error_Handler();
 8001018:	f000 fd4a 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN CAN_Init 2 */

  /* USER CODE END CAN_Init 2 */

}
 800101c:	bf00      	nop
 800101e:	bd80      	pop	{r7, pc}
 8001020:	2000026c 	.word	0x2000026c
 8001024:	40006400 	.word	0x40006400

08001028 <HAL_CAN_MspInit>:

void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
{
 8001028:	b580      	push	{r7, lr}
 800102a:	b088      	sub	sp, #32
 800102c:	af00      	add	r7, sp, #0
 800102e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001030:	f107 0310 	add.w	r3, r7, #16
 8001034:	2200      	movs	r2, #0
 8001036:	601a      	str	r2, [r3, #0]
 8001038:	605a      	str	r2, [r3, #4]
 800103a:	609a      	str	r2, [r3, #8]
 800103c:	60da      	str	r2, [r3, #12]
  if(canHandle->Instance==CAN1)
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	4a1c      	ldr	r2, [pc, #112]	@ (80010b4 <HAL_CAN_MspInit+0x8c>)
 8001044:	4293      	cmp	r3, r2
 8001046:	d131      	bne.n	80010ac <HAL_CAN_MspInit+0x84>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* CAN1 clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001048:	4b1b      	ldr	r3, [pc, #108]	@ (80010b8 <HAL_CAN_MspInit+0x90>)
 800104a:	69db      	ldr	r3, [r3, #28]
 800104c:	4a1a      	ldr	r2, [pc, #104]	@ (80010b8 <HAL_CAN_MspInit+0x90>)
 800104e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001052:	61d3      	str	r3, [r2, #28]
 8001054:	4b18      	ldr	r3, [pc, #96]	@ (80010b8 <HAL_CAN_MspInit+0x90>)
 8001056:	69db      	ldr	r3, [r3, #28]
 8001058:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800105c:	60fb      	str	r3, [r7, #12]
 800105e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001060:	4b15      	ldr	r3, [pc, #84]	@ (80010b8 <HAL_CAN_MspInit+0x90>)
 8001062:	699b      	ldr	r3, [r3, #24]
 8001064:	4a14      	ldr	r2, [pc, #80]	@ (80010b8 <HAL_CAN_MspInit+0x90>)
 8001066:	f043 0304 	orr.w	r3, r3, #4
 800106a:	6193      	str	r3, [r2, #24]
 800106c:	4b12      	ldr	r3, [pc, #72]	@ (80010b8 <HAL_CAN_MspInit+0x90>)
 800106e:	699b      	ldr	r3, [r3, #24]
 8001070:	f003 0304 	and.w	r3, r3, #4
 8001074:	60bb      	str	r3, [r7, #8]
 8001076:	68bb      	ldr	r3, [r7, #8]
    /**CAN GPIO Configuration
    PA11     ------> CAN_RX
    PA12     ------> CAN_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001078:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800107c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800107e:	2300      	movs	r3, #0
 8001080:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001082:	2300      	movs	r3, #0
 8001084:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001086:	f107 0310 	add.w	r3, r7, #16
 800108a:	4619      	mov	r1, r3
 800108c:	480b      	ldr	r0, [pc, #44]	@ (80010bc <HAL_CAN_MspInit+0x94>)
 800108e:	f001 fef5 	bl	8002e7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001092:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001096:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001098:	2302      	movs	r3, #2
 800109a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800109c:	2303      	movs	r3, #3
 800109e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010a0:	f107 0310 	add.w	r3, r7, #16
 80010a4:	4619      	mov	r1, r3
 80010a6:	4805      	ldr	r0, [pc, #20]	@ (80010bc <HAL_CAN_MspInit+0x94>)
 80010a8:	f001 fee8 	bl	8002e7c <HAL_GPIO_Init>

  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }
}
 80010ac:	bf00      	nop
 80010ae:	3720      	adds	r7, #32
 80010b0:	46bd      	mov	sp, r7
 80010b2:	bd80      	pop	{r7, pc}
 80010b4:	40006400 	.word	0x40006400
 80010b8:	40021000 	.word	0x40021000
 80010bc:	40010800 	.word	0x40010800

080010c0 <sendCANString>:


const unsigned char DEBUG_ID = 0x7B;
const unsigned char DEBUG_DLC = 8;

HAL_StatusTypeDef sendCANString(const char* message){
 80010c0:	b580      	push	{r7, lr}
 80010c2:	b08e      	sub	sp, #56	@ 0x38
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	6078      	str	r0, [r7, #4]
	CAN_TxHeaderTypeDef txHeader;
	unsigned long txMailbox;
	unsigned char txData[8];
	
	HAL_StatusTypeDef status = HAL_OK;
 80010c8:	2300      	movs	r3, #0
 80010ca:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
	
	txHeader.StdId = DEBUG_ID;
 80010ce:	237b      	movs	r3, #123	@ 0x7b
 80010d0:	61bb      	str	r3, [r7, #24]
    txHeader.ExtId = 0;
 80010d2:	2300      	movs	r3, #0
 80010d4:	61fb      	str	r3, [r7, #28]
    txHeader.IDE = CAN_ID_STD;
 80010d6:	2300      	movs	r3, #0
 80010d8:	623b      	str	r3, [r7, #32]
    txHeader.RTR = CAN_RTR_DATA;
 80010da:	2300      	movs	r3, #0
 80010dc:	627b      	str	r3, [r7, #36]	@ 0x24
    txHeader.DLC = DEBUG_DLC;
 80010de:	2308      	movs	r3, #8
 80010e0:	62bb      	str	r3, [r7, #40]	@ 0x28
    txHeader.TransmitGlobalTime = DISABLE;
 80010e2:	2300      	movs	r3, #0
 80010e4:	f887 302c 	strb.w	r3, [r7, #44]	@ 0x2c
	
	unsigned char len = 0;
 80010e8:	2300      	movs	r3, #0
 80010ea:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
    while (1) {
        if (message[len] == '\0') {
 80010ee:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 80010f2:	687a      	ldr	r2, [r7, #4]
 80010f4:	4413      	add	r3, r2
 80010f6:	781b      	ldrb	r3, [r3, #0]
 80010f8:	2b00      	cmp	r3, #0
 80010fa:	d109      	bne.n	8001110 <sendCANString+0x50>
        	  len++;
 80010fc:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001100:	3301      	adds	r3, #1
 8001102:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
              break;
 8001106:	bf00      	nop
        }
        len++;
    }
	
	for (unsigned char i = 0; i < len; i += 8) {
 8001108:	2300      	movs	r3, #0
 800110a:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
 800110e:	e060      	b.n	80011d2 <sendCANString+0x112>
        len++;
 8001110:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001114:	3301      	adds	r3, #1
 8001116:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
        if (message[len] == '\0') {
 800111a:	e7e8      	b.n	80010ee <sendCANString+0x2e>
        txHeader.DLC = (len - i > 8) ? 8 : (len - i);
 800111c:	f897 2037 	ldrb.w	r2, [r7, #55]	@ 0x37
 8001120:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8001124:	1ad3      	subs	r3, r2, r3
 8001126:	2b08      	cmp	r3, #8
 8001128:	bfa8      	it	ge
 800112a:	2308      	movge	r3, #8
 800112c:	62bb      	str	r3, [r7, #40]	@ 0x28
        for (unsigned char j = 0; j < 8; j++) {
 800112e:	2300      	movs	r3, #0
 8001130:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
 8001134:	e00b      	b.n	800114e <sendCANString+0x8e>
            txData[j] = 0;
 8001136:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 800113a:	3338      	adds	r3, #56	@ 0x38
 800113c:	443b      	add	r3, r7
 800113e:	2200      	movs	r2, #0
 8001140:	f803 2c2c 	strb.w	r2, [r3, #-44]
        for (unsigned char j = 0; j < 8; j++) {
 8001144:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8001148:	3301      	adds	r3, #1
 800114a:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
 800114e:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8001152:	2b07      	cmp	r3, #7
 8001154:	d9ef      	bls.n	8001136 <sendCANString+0x76>
        }
        for (unsigned char j = 0; j < txHeader.DLC; j++) {
 8001156:	2300      	movs	r3, #0
 8001158:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
 800115c:	e013      	b.n	8001186 <sendCANString+0xc6>
            txData[j] = message[i + j];
 800115e:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8001162:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8001166:	4413      	add	r3, r2
 8001168:	461a      	mov	r2, r3
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	441a      	add	r2, r3
 800116e:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8001172:	7812      	ldrb	r2, [r2, #0]
 8001174:	3338      	adds	r3, #56	@ 0x38
 8001176:	443b      	add	r3, r7
 8001178:	f803 2c2c 	strb.w	r2, [r3, #-44]
        for (unsigned char j = 0; j < txHeader.DLC; j++) {
 800117c:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8001180:	3301      	adds	r3, #1
 8001182:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
 8001186:	f897 2034 	ldrb.w	r2, [r7, #52]	@ 0x34
 800118a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800118c:	429a      	cmp	r2, r3
 800118e:	d3e6      	bcc.n	800115e <sendCANString+0x9e>
        }
        status = HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &txMailbox);
 8001190:	f107 0314 	add.w	r3, r7, #20
 8001194:	f107 020c 	add.w	r2, r7, #12
 8001198:	f107 0118 	add.w	r1, r7, #24
 800119c:	4812      	ldr	r0, [pc, #72]	@ (80011e8 <sendCANString+0x128>)
 800119e:	f001 fc9b 	bl	8002ad8 <HAL_CAN_AddTxMessage>
 80011a2:	4603      	mov	r3, r0
 80011a4:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
        if (status != HAL_OK) {
 80011a8:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 80011ac:	2b00      	cmp	r3, #0
 80011ae:	d002      	beq.n	80011b6 <sendCANString+0xf6>
            return status;
 80011b0:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 80011b4:	e014      	b.n	80011e0 <sendCANString+0x120>
        }
        while (HAL_CAN_IsTxMessagePending(&hcan, txMailbox));
 80011b6:	bf00      	nop
 80011b8:	697b      	ldr	r3, [r7, #20]
 80011ba:	4619      	mov	r1, r3
 80011bc:	480a      	ldr	r0, [pc, #40]	@ (80011e8 <sendCANString+0x128>)
 80011be:	f001 fd5a 	bl	8002c76 <HAL_CAN_IsTxMessagePending>
 80011c2:	4603      	mov	r3, r0
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d1f7      	bne.n	80011b8 <sendCANString+0xf8>
	for (unsigned char i = 0; i < len; i += 8) {
 80011c8:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 80011cc:	3308      	adds	r3, #8
 80011ce:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
 80011d2:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 80011d6:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 80011da:	429a      	cmp	r2, r3
 80011dc:	d39e      	bcc.n	800111c <sendCANString+0x5c>
    }
	return HAL_OK;
 80011de:	2300      	movs	r3, #0

}
 80011e0:	4618      	mov	r0, r3
 80011e2:	3738      	adds	r7, #56	@ 0x38
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}
 80011e8:	2000026c 	.word	0x2000026c

080011ec <sendCANData>:


HAL_StatusTypeDef sendCANData(unsigned char message[8], unsigned char CAN_ID, unsigned char CAN_DLC){
 80011ec:	b580      	push	{r7, lr}
 80011ee:	b08a      	sub	sp, #40	@ 0x28
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	6078      	str	r0, [r7, #4]
 80011f4:	460b      	mov	r3, r1
 80011f6:	70fb      	strb	r3, [r7, #3]
 80011f8:	4613      	mov	r3, r2
 80011fa:	70bb      	strb	r3, [r7, #2]
	CAN_TxHeaderTypeDef txHeader;
	unsigned long txMailbox;

	HAL_StatusTypeDef status = HAL_OK;
 80011fc:	2300      	movs	r3, #0
 80011fe:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

	txHeader.StdId = CAN_ID;
 8001202:	78fb      	ldrb	r3, [r7, #3]
 8001204:	60fb      	str	r3, [r7, #12]
    txHeader.ExtId = 0;
 8001206:	2300      	movs	r3, #0
 8001208:	613b      	str	r3, [r7, #16]
    txHeader.IDE = CAN_ID_STD;
 800120a:	2300      	movs	r3, #0
 800120c:	617b      	str	r3, [r7, #20]
    txHeader.RTR = CAN_RTR_DATA;
 800120e:	2300      	movs	r3, #0
 8001210:	61bb      	str	r3, [r7, #24]
    txHeader.DLC = CAN_DLC;
 8001212:	78bb      	ldrb	r3, [r7, #2]
 8001214:	61fb      	str	r3, [r7, #28]
    txHeader.TransmitGlobalTime = DISABLE;
 8001216:	2300      	movs	r3, #0
 8001218:	f887 3020 	strb.w	r3, [r7, #32]

    status = HAL_CAN_AddTxMessage(&hcan, &txHeader, message, &txMailbox);
 800121c:	f107 0308 	add.w	r3, r7, #8
 8001220:	f107 010c 	add.w	r1, r7, #12
 8001224:	687a      	ldr	r2, [r7, #4]
 8001226:	480d      	ldr	r0, [pc, #52]	@ (800125c <sendCANData+0x70>)
 8001228:	f001 fc56 	bl	8002ad8 <HAL_CAN_AddTxMessage>
 800122c:	4603      	mov	r3, r0
 800122e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    if (status != HAL_OK) {
 8001232:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001236:	2b00      	cmp	r3, #0
 8001238:	d002      	beq.n	8001240 <sendCANData+0x54>
        return status;
 800123a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800123e:	e009      	b.n	8001254 <sendCANData+0x68>
    }
    while (HAL_CAN_IsTxMessagePending(&hcan, txMailbox)){}
 8001240:	bf00      	nop
 8001242:	68bb      	ldr	r3, [r7, #8]
 8001244:	4619      	mov	r1, r3
 8001246:	4805      	ldr	r0, [pc, #20]	@ (800125c <sendCANData+0x70>)
 8001248:	f001 fd15 	bl	8002c76 <HAL_CAN_IsTxMessagePending>
 800124c:	4603      	mov	r3, r0
 800124e:	2b00      	cmp	r3, #0
 8001250:	d1f7      	bne.n	8001242 <sendCANData+0x56>
	return HAL_OK;
 8001252:	2300      	movs	r3, #0
}
 8001254:	4618      	mov	r0, r3
 8001256:	3728      	adds	r7, #40	@ 0x28
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}
 800125c:	2000026c 	.word	0x2000026c

08001260 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS initialization
  * @param  None
  * @retval None
  */
void MX_FREERTOS_Init(void) {
 8001260:	b580      	push	{r7, lr}
 8001262:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Init */
	setAvgDataEmpty();
 8001264:	f7ff fe82 	bl	8000f6c <setAvgDataEmpty>
	hal_message=setupSensors();
 8001268:	f000 fc28 	bl	8001abc <setupSensors>
 800126c:	4603      	mov	r3, r0
 800126e:	461a      	mov	r2, r3
 8001270:	4b1e      	ldr	r3, [pc, #120]	@ (80012ec <MX_FREERTOS_Init+0x8c>)
 8001272:	701a      	strb	r2, [r3, #0]

	Message_Debug_Time = HAL_GetTick();
 8001274:	f000 fe90 	bl	8001f98 <HAL_GetTick>
 8001278:	4603      	mov	r3, r0
 800127a:	4a1d      	ldr	r2, [pc, #116]	@ (80012f0 <MX_FREERTOS_Init+0x90>)
 800127c:	6013      	str	r3, [r2, #0]

	DATA_01.time = HAL_GetTick();
 800127e:	f000 fe8b 	bl	8001f98 <HAL_GetTick>
 8001282:	4603      	mov	r3, r0
 8001284:	4a1b      	ldr	r2, [pc, #108]	@ (80012f4 <MX_FREERTOS_Init+0x94>)
 8001286:	6013      	str	r3, [r2, #0]
	DATA_02.time = HAL_GetTick();
 8001288:	f000 fe86 	bl	8001f98 <HAL_GetTick>
 800128c:	4603      	mov	r3, r0
 800128e:	4a1a      	ldr	r2, [pc, #104]	@ (80012f8 <MX_FREERTOS_Init+0x98>)
 8001290:	6013      	str	r3, [r2, #0]
	DATA_03.time = HAL_GetTick();
 8001292:	f000 fe81 	bl	8001f98 <HAL_GetTick>
 8001296:	4603      	mov	r3, r0
 8001298:	4a18      	ldr	r2, [pc, #96]	@ (80012fc <MX_FREERTOS_Init+0x9c>)
 800129a:	6013      	str	r3, [r2, #0]
	DATA_04.time = HAL_GetTick();
 800129c:	f000 fe7c 	bl	8001f98 <HAL_GetTick>
 80012a0:	4603      	mov	r3, r0
 80012a2:	4a17      	ldr	r2, [pc, #92]	@ (8001300 <MX_FREERTOS_Init+0xa0>)
 80012a4:	6013      	str	r3, [r2, #0]
	DATA_05.time = HAL_GetTick();
 80012a6:	f000 fe77 	bl	8001f98 <HAL_GetTick>
 80012aa:	4603      	mov	r3, r0
 80012ac:	4a15      	ldr	r2, [pc, #84]	@ (8001304 <MX_FREERTOS_Init+0xa4>)
 80012ae:	6013      	str	r3, [r2, #0]
	DATA_06.time = HAL_GetTick();
 80012b0:	f000 fe72 	bl	8001f98 <HAL_GetTick>
 80012b4:	4603      	mov	r3, r0
 80012b6:	4a14      	ldr	r2, [pc, #80]	@ (8001308 <MX_FREERTOS_Init+0xa8>)
 80012b8:	6013      	str	r3, [r2, #0]
	DATA_07.time = HAL_GetTick();
 80012ba:	f000 fe6d 	bl	8001f98 <HAL_GetTick>
 80012be:	4603      	mov	r3, r0
 80012c0:	4a12      	ldr	r2, [pc, #72]	@ (800130c <MX_FREERTOS_Init+0xac>)
 80012c2:	6013      	str	r3, [r2, #0]
	DATA_08.time = HAL_GetTick();
 80012c4:	f000 fe68 	bl	8001f98 <HAL_GetTick>
 80012c8:	4603      	mov	r3, r0
 80012ca:	4a11      	ldr	r2, [pc, #68]	@ (8001310 <MX_FREERTOS_Init+0xb0>)
 80012cc:	6013      	str	r3, [r2, #0]
	DATA_09.time = HAL_GetTick();
 80012ce:	f000 fe63 	bl	8001f98 <HAL_GetTick>
 80012d2:	4603      	mov	r3, r0
 80012d4:	4a0f      	ldr	r2, [pc, #60]	@ (8001314 <MX_FREERTOS_Init+0xb4>)
 80012d6:	6013      	str	r3, [r2, #0]
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of sensor_Task */
  sensor_TaskHandle = osThreadNew(sensorTask, NULL, &sensor_Task_attributes);
 80012d8:	4a0f      	ldr	r2, [pc, #60]	@ (8001318 <MX_FREERTOS_Init+0xb8>)
 80012da:	2100      	movs	r1, #0
 80012dc:	480f      	ldr	r0, [pc, #60]	@ (800131c <MX_FREERTOS_Init+0xbc>)
 80012de:	f003 fa03 	bl	80046e8 <osThreadNew>
 80012e2:	4603      	mov	r3, r0
 80012e4:	4a0e      	ldr	r2, [pc, #56]	@ (8001320 <MX_FREERTOS_Init+0xc0>)
 80012e6:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

}
 80012e8:	bf00      	nop
 80012ea:	bd80      	pop	{r7, pc}
 80012ec:	20000294 	.word	0x20000294
 80012f0:	200002a0 	.word	0x200002a0
 80012f4:	200002a4 	.word	0x200002a4
 80012f8:	200002b4 	.word	0x200002b4
 80012fc:	200002c4 	.word	0x200002c4
 8001300:	200002d4 	.word	0x200002d4
 8001304:	200002e4 	.word	0x200002e4
 8001308:	200002f4 	.word	0x200002f4
 800130c:	20000304 	.word	0x20000304
 8001310:	20000314 	.word	0x20000314
 8001314:	20000324 	.word	0x20000324
 8001318:	0800734c 	.word	0x0800734c
 800131c:	08001325 	.word	0x08001325
 8001320:	20000298 	.word	0x20000298

08001324 <sensorTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_sensorTask */
void sensorTask(void *argument)
{
 8001324:	b580      	push	{r7, lr}
 8001326:	b08a      	sub	sp, #40	@ 0x28
 8001328:	af00      	add	r7, sp, #0
 800132a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN sensorTask */
	TickType_t xLastWakeTime = xTaskGetTickCount();
 800132c:	f004 fba2 	bl	8005a74 <xTaskGetTickCount>
 8001330:	4603      	mov	r3, r0
 8001332:	61fb      	str	r3, [r7, #28]
	uint16_t adc_value;
	char value[20];
  /* Infinite loop */
  for(;;)
  {
	RTOS_Time = HAL_GetTick();
 8001334:	f000 fe30 	bl	8001f98 <HAL_GetTick>
 8001338:	6278      	str	r0, [r7, #36]	@ 0x24
	uint16_t v_ref = returnAvgData(readADCValue1(VREF_PIN),V_Ref_index);
 800133a:	2000      	movs	r0, #0
 800133c:	f7ff fbfa 	bl	8000b34 <readADCValue1>
 8001340:	4603      	mov	r3, r0
 8001342:	461a      	mov	r2, r3
 8001344:	4b60      	ldr	r3, [pc, #384]	@ (80014c8 <sensorTask+0x1a4>)
 8001346:	781b      	ldrb	r3, [r3, #0]
 8001348:	4619      	mov	r1, r3
 800134a:	4610      	mov	r0, r2
 800134c:	f7ff fd3a 	bl	8000dc4 <returnAvgData>
 8001350:	4603      	mov	r3, r0
 8001352:	847b      	strh	r3, [r7, #34]	@ 0x22
	uint16_t data;
	if (RTOS_Time - Message_Debug_Time >= MESSAGE_DEBUG_REFRESH_RATE) {
 8001354:	4b5d      	ldr	r3, [pc, #372]	@ (80014cc <sensorTask+0x1a8>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800135a:	1ad3      	subs	r3, r2, r3
 800135c:	4a5c      	ldr	r2, [pc, #368]	@ (80014d0 <sensorTask+0x1ac>)
 800135e:	8812      	ldrh	r2, [r2, #0]
 8001360:	4293      	cmp	r3, r2
 8001362:	d302      	bcc.n	800136a <sensorTask+0x46>
		Message_Debug_Time = RTOS_Time;
 8001364:	4a59      	ldr	r2, [pc, #356]	@ (80014cc <sensorTask+0x1a8>)
 8001366:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001368:	6013      	str	r3, [r2, #0]
		//sprintf(value, "%u$", adc_value);
		//sprintf(value, "%u$", v_ref);
		//hal_message = sendCANString(value);
		}

	if (RTOS_Time - DATA_01.time >= DATA_01.refresh_rate) {
 800136a:	4b5a      	ldr	r3, [pc, #360]	@ (80014d4 <sensorTask+0x1b0>)
 800136c:	681b      	ldr	r3, [r3, #0]
 800136e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001370:	1ad3      	subs	r3, r2, r3
 8001372:	4a58      	ldr	r2, [pc, #352]	@ (80014d4 <sensorTask+0x1b0>)
 8001374:	7912      	ldrb	r2, [r2, #4]
 8001376:	4293      	cmp	r3, r2
 8001378:	f0c0 80c7 	bcc.w	800150a <sensorTask+0x1e6>
	    DATA_01.time = RTOS_Time;
 800137c:	4a55      	ldr	r2, [pc, #340]	@ (80014d4 <sensorTask+0x1b0>)
 800137e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001380:	6013      	str	r3, [r2, #0]

	    data = vBatValue(returnAvgData(readADCValue2(VBAT_PIN),V_Bat_index));  // Tensao da Bateria
 8001382:	2004      	movs	r0, #4
 8001384:	f7ff fc20 	bl	8000bc8 <readADCValue2>
 8001388:	4603      	mov	r3, r0
 800138a:	461a      	mov	r2, r3
 800138c:	4b52      	ldr	r3, [pc, #328]	@ (80014d8 <sensorTask+0x1b4>)
 800138e:	781b      	ldrb	r3, [r3, #0]
 8001390:	4619      	mov	r1, r3
 8001392:	4610      	mov	r0, r2
 8001394:	f7ff fd16 	bl	8000dc4 <returnAvgData>
 8001398:	4603      	mov	r3, r0
 800139a:	4618      	mov	r0, r3
 800139c:	f000 fc30 	bl	8001c00 <vBatValue>
 80013a0:	4603      	mov	r3, r0
 80013a2:	843b      	strh	r3, [r7, #32]
	    DATA_01.data[0] = data&0xFF;
 80013a4:	8c3b      	ldrh	r3, [r7, #32]
 80013a6:	b2da      	uxtb	r2, r3
 80013a8:	4b4a      	ldr	r3, [pc, #296]	@ (80014d4 <sensorTask+0x1b0>)
 80013aa:	71da      	strb	r2, [r3, #7]
	    DATA_01.data[1] = (data>>8)&0x0F;
 80013ac:	8c3b      	ldrh	r3, [r7, #32]
 80013ae:	0a1b      	lsrs	r3, r3, #8
 80013b0:	b29b      	uxth	r3, r3
 80013b2:	b2db      	uxtb	r3, r3
 80013b4:	f003 030f 	and.w	r3, r3, #15
 80013b8:	b2da      	uxtb	r2, r3
 80013ba:	4b46      	ldr	r3, [pc, #280]	@ (80014d4 <sensorTask+0x1b0>)
 80013bc:	721a      	strb	r2, [r3, #8]

	    data = returnAvgData(readADCValue2(TEMP_PIN),Temp_index);  // Sensor de Temperatura Interno
 80013be:	2006      	movs	r0, #6
 80013c0:	f7ff fc02 	bl	8000bc8 <readADCValue2>
 80013c4:	4603      	mov	r3, r0
 80013c6:	461a      	mov	r2, r3
 80013c8:	4b44      	ldr	r3, [pc, #272]	@ (80014dc <sensorTask+0x1b8>)
 80013ca:	781b      	ldrb	r3, [r3, #0]
 80013cc:	4619      	mov	r1, r3
 80013ce:	4610      	mov	r0, r2
 80013d0:	f7ff fcf8 	bl	8000dc4 <returnAvgData>
 80013d4:	4603      	mov	r3, r0
 80013d6:	843b      	strh	r3, [r7, #32]
	    DATA_01.data[1]|=(data&0x0F)<<4;
 80013d8:	4b3e      	ldr	r3, [pc, #248]	@ (80014d4 <sensorTask+0x1b0>)
 80013da:	7a1b      	ldrb	r3, [r3, #8]
 80013dc:	b25a      	sxtb	r2, r3
 80013de:	8c3b      	ldrh	r3, [r7, #32]
 80013e0:	b25b      	sxtb	r3, r3
 80013e2:	011b      	lsls	r3, r3, #4
 80013e4:	b25b      	sxtb	r3, r3
 80013e6:	4313      	orrs	r3, r2
 80013e8:	b25b      	sxtb	r3, r3
 80013ea:	b2da      	uxtb	r2, r3
 80013ec:	4b39      	ldr	r3, [pc, #228]	@ (80014d4 <sensorTask+0x1b0>)
 80013ee:	721a      	strb	r2, [r3, #8]
	    DATA_01.data[2] = (data>>4)&0xFF;
 80013f0:	8c3b      	ldrh	r3, [r7, #32]
 80013f2:	091b      	lsrs	r3, r3, #4
 80013f4:	b29b      	uxth	r3, r3
 80013f6:	b2da      	uxtb	r2, r3
 80013f8:	4b36      	ldr	r3, [pc, #216]	@ (80014d4 <sensorTask+0x1b0>)
 80013fa:	725a      	strb	r2, [r3, #9]
	    DATA_01.data[3] = v_ref&0xFF;    // Tensao Referencia
 80013fc:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 80013fe:	b2da      	uxtb	r2, r3
 8001400:	4b34      	ldr	r3, [pc, #208]	@ (80014d4 <sensorTask+0x1b0>)
 8001402:	729a      	strb	r2, [r3, #10]
	    DATA_01.data[4] = (v_ref>>8)&0x0F;
 8001404:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001406:	0a1b      	lsrs	r3, r3, #8
 8001408:	b29b      	uxth	r3, r3
 800140a:	b2db      	uxtb	r3, r3
 800140c:	f003 030f 	and.w	r3, r3, #15
 8001410:	b2da      	uxtb	r2, r3
 8001412:	4b30      	ldr	r3, [pc, #192]	@ (80014d4 <sensorTask+0x1b0>)
 8001414:	72da      	strb	r2, [r3, #11]
	    data = returnAvgData(readADCValue2(GEAR_PIN),Gear_index);  // Sensor de Marcha
 8001416:	2005      	movs	r0, #5
 8001418:	f7ff fbd6 	bl	8000bc8 <readADCValue2>
 800141c:	4603      	mov	r3, r0
 800141e:	461a      	mov	r2, r3
 8001420:	4b2f      	ldr	r3, [pc, #188]	@ (80014e0 <sensorTask+0x1bc>)
 8001422:	781b      	ldrb	r3, [r3, #0]
 8001424:	4619      	mov	r1, r3
 8001426:	4610      	mov	r0, r2
 8001428:	f7ff fccc 	bl	8000dc4 <returnAvgData>
 800142c:	4603      	mov	r3, r0
 800142e:	843b      	strh	r3, [r7, #32]
	    if (data>3682){
 8001430:	8c3b      	ldrh	r3, [r7, #32]
 8001432:	f640 6262 	movw	r2, #3682	@ 0xe62
 8001436:	4293      	cmp	r3, r2
 8001438:	d907      	bls.n	800144a <sensorTask+0x126>
	    	DATA_01.data[4] |= (7<<4);
 800143a:	4b26      	ldr	r3, [pc, #152]	@ (80014d4 <sensorTask+0x1b0>)
 800143c:	7adb      	ldrb	r3, [r3, #11]
 800143e:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
 8001442:	b2da      	uxtb	r2, r3
 8001444:	4b23      	ldr	r3, [pc, #140]	@ (80014d4 <sensorTask+0x1b0>)
 8001446:	72da      	strb	r2, [r3, #11]
 8001448:	e053      	b.n	80014f2 <sensorTask+0x1ce>
	    	}
	    else if (data>2995){
 800144a:	8c3b      	ldrh	r3, [r7, #32]
 800144c:	f640 32b3 	movw	r2, #2995	@ 0xbb3
 8001450:	4293      	cmp	r3, r2
 8001452:	d907      	bls.n	8001464 <sensorTask+0x140>
	    	DATA_01.data[4] |= (1<<4);
 8001454:	4b1f      	ldr	r3, [pc, #124]	@ (80014d4 <sensorTask+0x1b0>)
 8001456:	7adb      	ldrb	r3, [r3, #11]
 8001458:	f043 0310 	orr.w	r3, r3, #16
 800145c:	b2da      	uxtb	r2, r3
 800145e:	4b1d      	ldr	r3, [pc, #116]	@ (80014d4 <sensorTask+0x1b0>)
 8001460:	72da      	strb	r2, [r3, #11]
 8001462:	e046      	b.n	80014f2 <sensorTask+0x1ce>
	    }
	    else if (data>2432){
 8001464:	8c3b      	ldrh	r3, [r7, #32]
 8001466:	f5b3 6f18 	cmp.w	r3, #2432	@ 0x980
 800146a:	d907      	bls.n	800147c <sensorTask+0x158>
	    	DATA_01.data[4] |= (2<<4);
 800146c:	4b19      	ldr	r3, [pc, #100]	@ (80014d4 <sensorTask+0x1b0>)
 800146e:	7adb      	ldrb	r3, [r3, #11]
 8001470:	f043 0320 	orr.w	r3, r3, #32
 8001474:	b2da      	uxtb	r2, r3
 8001476:	4b17      	ldr	r3, [pc, #92]	@ (80014d4 <sensorTask+0x1b0>)
 8001478:	72da      	strb	r2, [r3, #11]
 800147a:	e03a      	b.n	80014f2 <sensorTask+0x1ce>
	    }
	    else if (data>1852){
 800147c:	8c3b      	ldrh	r3, [r7, #32]
 800147e:	f240 723c 	movw	r2, #1852	@ 0x73c
 8001482:	4293      	cmp	r3, r2
 8001484:	d907      	bls.n	8001496 <sensorTask+0x172>
	    	DATA_01.data[4] |= (3<<4);
 8001486:	4b13      	ldr	r3, [pc, #76]	@ (80014d4 <sensorTask+0x1b0>)
 8001488:	7adb      	ldrb	r3, [r3, #11]
 800148a:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 800148e:	b2da      	uxtb	r2, r3
 8001490:	4b10      	ldr	r3, [pc, #64]	@ (80014d4 <sensorTask+0x1b0>)
 8001492:	72da      	strb	r2, [r3, #11]
 8001494:	e02d      	b.n	80014f2 <sensorTask+0x1ce>
	    }
	    else if (data>1249){
 8001496:	8c3b      	ldrh	r3, [r7, #32]
 8001498:	f240 42e1 	movw	r2, #1249	@ 0x4e1
 800149c:	4293      	cmp	r3, r2
 800149e:	d907      	bls.n	80014b0 <sensorTask+0x18c>
	    	DATA_01.data[4] |= (4<<4);
 80014a0:	4b0c      	ldr	r3, [pc, #48]	@ (80014d4 <sensorTask+0x1b0>)
 80014a2:	7adb      	ldrb	r3, [r3, #11]
 80014a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014a8:	b2da      	uxtb	r2, r3
 80014aa:	4b0a      	ldr	r3, [pc, #40]	@ (80014d4 <sensorTask+0x1b0>)
 80014ac:	72da      	strb	r2, [r3, #11]
 80014ae:	e020      	b.n	80014f2 <sensorTask+0x1ce>
	    }
	    else if (data>672){
 80014b0:	8c3b      	ldrh	r3, [r7, #32]
 80014b2:	f5b3 7f28 	cmp.w	r3, #672	@ 0x2a0
 80014b6:	d915      	bls.n	80014e4 <sensorTask+0x1c0>
	    	DATA_01.data[4] |= (5<<4);
 80014b8:	4b06      	ldr	r3, [pc, #24]	@ (80014d4 <sensorTask+0x1b0>)
 80014ba:	7adb      	ldrb	r3, [r3, #11]
 80014bc:	f043 0350 	orr.w	r3, r3, #80	@ 0x50
 80014c0:	b2da      	uxtb	r2, r3
 80014c2:	4b04      	ldr	r3, [pc, #16]	@ (80014d4 <sensorTask+0x1b0>)
 80014c4:	72da      	strb	r2, [r3, #11]
 80014c6:	e014      	b.n	80014f2 <sensorTask+0x1ce>
 80014c8:	0800737f 	.word	0x0800737f
 80014cc:	200002a0 	.word	0x200002a0
 80014d0:	08007372 	.word	0x08007372
 80014d4:	200002a4 	.word	0x200002a4
 80014d8:	08007380 	.word	0x08007380
 80014dc:	08007381 	.word	0x08007381
 80014e0:	08007382 	.word	0x08007382
	    }
	    else {
	    	DATA_01.data[4] |= (6<<4);
 80014e4:	4b9d      	ldr	r3, [pc, #628]	@ (800175c <sensorTask+0x438>)
 80014e6:	7adb      	ldrb	r3, [r3, #11]
 80014e8:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80014ec:	b2da      	uxtb	r2, r3
 80014ee:	4b9b      	ldr	r3, [pc, #620]	@ (800175c <sensorTask+0x438>)
 80014f0:	72da      	strb	r2, [r3, #11]
	    }
	    hal_message = sendCANData(DATA_01.data,DATA_01.id,DATA_01.dlc);
 80014f2:	4b9a      	ldr	r3, [pc, #616]	@ (800175c <sensorTask+0x438>)
 80014f4:	795b      	ldrb	r3, [r3, #5]
 80014f6:	4a99      	ldr	r2, [pc, #612]	@ (800175c <sensorTask+0x438>)
 80014f8:	7992      	ldrb	r2, [r2, #6]
 80014fa:	4619      	mov	r1, r3
 80014fc:	4898      	ldr	r0, [pc, #608]	@ (8001760 <sensorTask+0x43c>)
 80014fe:	f7ff fe75 	bl	80011ec <sendCANData>
 8001502:	4603      	mov	r3, r0
 8001504:	461a      	mov	r2, r3
 8001506:	4b97      	ldr	r3, [pc, #604]	@ (8001764 <sensorTask+0x440>)
 8001508:	701a      	strb	r2, [r3, #0]
	}

	if (RTOS_Time - DATA_02.time >= DATA_02.refresh_rate) {
 800150a:	4b97      	ldr	r3, [pc, #604]	@ (8001768 <sensorTask+0x444>)
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001510:	1ad3      	subs	r3, r2, r3
 8001512:	4a95      	ldr	r2, [pc, #596]	@ (8001768 <sensorTask+0x444>)
 8001514:	7912      	ldrb	r2, [r2, #4]
 8001516:	4293      	cmp	r3, r2
 8001518:	f0c0 808c 	bcc.w	8001634 <sensorTask+0x310>
	    DATA_02.time = RTOS_Time;
 800151c:	4a92      	ldr	r2, [pc, #584]	@ (8001768 <sensorTask+0x444>)
 800151e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001520:	6013      	str	r3, [r2, #0]

	    data = readSensor(FR_Susp_Angle,FR_Susp_Angle_index);
 8001522:	4b92      	ldr	r3, [pc, #584]	@ (800176c <sensorTask+0x448>)
 8001524:	781b      	ldrb	r3, [r3, #0]
 8001526:	4a92      	ldr	r2, [pc, #584]	@ (8001770 <sensorTask+0x44c>)
 8001528:	7812      	ldrb	r2, [r2, #0]
 800152a:	4611      	mov	r1, r2
 800152c:	4618      	mov	r0, r3
 800152e:	f7ff fb95 	bl	8000c5c <readSensor>
 8001532:	4603      	mov	r3, r0
 8001534:	843b      	strh	r3, [r7, #32]
	    DATA_02.data[0] = data&0xFF;;
 8001536:	8c3b      	ldrh	r3, [r7, #32]
 8001538:	b2da      	uxtb	r2, r3
 800153a:	4b8b      	ldr	r3, [pc, #556]	@ (8001768 <sensorTask+0x444>)
 800153c:	71da      	strb	r2, [r3, #7]
	    DATA_02.data[1] = (data>>8)&0xF;
 800153e:	8c3b      	ldrh	r3, [r7, #32]
 8001540:	0a1b      	lsrs	r3, r3, #8
 8001542:	b29b      	uxth	r3, r3
 8001544:	b2db      	uxtb	r3, r3
 8001546:	f003 030f 	and.w	r3, r3, #15
 800154a:	b2da      	uxtb	r2, r3
 800154c:	4b86      	ldr	r3, [pc, #536]	@ (8001768 <sensorTask+0x444>)
 800154e:	721a      	strb	r2, [r3, #8]

	    data = readSensor(FL_Susp_Angle,FL_Susp_Angle_index);
 8001550:	4b88      	ldr	r3, [pc, #544]	@ (8001774 <sensorTask+0x450>)
 8001552:	781b      	ldrb	r3, [r3, #0]
 8001554:	4a88      	ldr	r2, [pc, #544]	@ (8001778 <sensorTask+0x454>)
 8001556:	7812      	ldrb	r2, [r2, #0]
 8001558:	4611      	mov	r1, r2
 800155a:	4618      	mov	r0, r3
 800155c:	f7ff fb7e 	bl	8000c5c <readSensor>
 8001560:	4603      	mov	r3, r0
 8001562:	843b      	strh	r3, [r7, #32]
	    DATA_02.data[1] |= (data&0xF)<<4;
 8001564:	4b80      	ldr	r3, [pc, #512]	@ (8001768 <sensorTask+0x444>)
 8001566:	7a1b      	ldrb	r3, [r3, #8]
 8001568:	b25a      	sxtb	r2, r3
 800156a:	8c3b      	ldrh	r3, [r7, #32]
 800156c:	b25b      	sxtb	r3, r3
 800156e:	011b      	lsls	r3, r3, #4
 8001570:	b25b      	sxtb	r3, r3
 8001572:	4313      	orrs	r3, r2
 8001574:	b25b      	sxtb	r3, r3
 8001576:	b2da      	uxtb	r2, r3
 8001578:	4b7b      	ldr	r3, [pc, #492]	@ (8001768 <sensorTask+0x444>)
 800157a:	721a      	strb	r2, [r3, #8]
	    DATA_02.data[2] = (data>>4)&0xFF;
 800157c:	8c3b      	ldrh	r3, [r7, #32]
 800157e:	091b      	lsrs	r3, r3, #4
 8001580:	b29b      	uxth	r3, r3
 8001582:	b2da      	uxtb	r2, r3
 8001584:	4b78      	ldr	r3, [pc, #480]	@ (8001768 <sensorTask+0x444>)
 8001586:	725a      	strb	r2, [r3, #9]

	    data = readSensor(RR_Susp_Angle,RR_Susp_Angle_index);
 8001588:	4b7c      	ldr	r3, [pc, #496]	@ (800177c <sensorTask+0x458>)
 800158a:	781b      	ldrb	r3, [r3, #0]
 800158c:	4a7c      	ldr	r2, [pc, #496]	@ (8001780 <sensorTask+0x45c>)
 800158e:	7812      	ldrb	r2, [r2, #0]
 8001590:	4611      	mov	r1, r2
 8001592:	4618      	mov	r0, r3
 8001594:	f7ff fb62 	bl	8000c5c <readSensor>
 8001598:	4603      	mov	r3, r0
 800159a:	843b      	strh	r3, [r7, #32]
	    DATA_02.data[3] = data&0xFF;;
 800159c:	8c3b      	ldrh	r3, [r7, #32]
 800159e:	b2da      	uxtb	r2, r3
 80015a0:	4b71      	ldr	r3, [pc, #452]	@ (8001768 <sensorTask+0x444>)
 80015a2:	729a      	strb	r2, [r3, #10]
	    DATA_02.data[4] = (data>>8)&0xF;
 80015a4:	8c3b      	ldrh	r3, [r7, #32]
 80015a6:	0a1b      	lsrs	r3, r3, #8
 80015a8:	b29b      	uxth	r3, r3
 80015aa:	b2db      	uxtb	r3, r3
 80015ac:	f003 030f 	and.w	r3, r3, #15
 80015b0:	b2da      	uxtb	r2, r3
 80015b2:	4b6d      	ldr	r3, [pc, #436]	@ (8001768 <sensorTask+0x444>)
 80015b4:	72da      	strb	r2, [r3, #11]

	    data = readSensor(RL_Susp_Angle,RL_Susp_Angle_index);
 80015b6:	4b73      	ldr	r3, [pc, #460]	@ (8001784 <sensorTask+0x460>)
 80015b8:	781b      	ldrb	r3, [r3, #0]
 80015ba:	4a73      	ldr	r2, [pc, #460]	@ (8001788 <sensorTask+0x464>)
 80015bc:	7812      	ldrb	r2, [r2, #0]
 80015be:	4611      	mov	r1, r2
 80015c0:	4618      	mov	r0, r3
 80015c2:	f7ff fb4b 	bl	8000c5c <readSensor>
 80015c6:	4603      	mov	r3, r0
 80015c8:	843b      	strh	r3, [r7, #32]
	    DATA_02.data[4] |= (data&0xF)<<4;
 80015ca:	4b67      	ldr	r3, [pc, #412]	@ (8001768 <sensorTask+0x444>)
 80015cc:	7adb      	ldrb	r3, [r3, #11]
 80015ce:	b25a      	sxtb	r2, r3
 80015d0:	8c3b      	ldrh	r3, [r7, #32]
 80015d2:	b25b      	sxtb	r3, r3
 80015d4:	011b      	lsls	r3, r3, #4
 80015d6:	b25b      	sxtb	r3, r3
 80015d8:	4313      	orrs	r3, r2
 80015da:	b25b      	sxtb	r3, r3
 80015dc:	b2da      	uxtb	r2, r3
 80015de:	4b62      	ldr	r3, [pc, #392]	@ (8001768 <sensorTask+0x444>)
 80015e0:	72da      	strb	r2, [r3, #11]
	    DATA_02.data[5] = (data>>4)&0xFF;
 80015e2:	8c3b      	ldrh	r3, [r7, #32]
 80015e4:	091b      	lsrs	r3, r3, #4
 80015e6:	b29b      	uxth	r3, r3
 80015e8:	b2da      	uxtb	r2, r3
 80015ea:	4b5f      	ldr	r3, [pc, #380]	@ (8001768 <sensorTask+0x444>)
 80015ec:	731a      	strb	r2, [r3, #12]

	    data = readSensor(Wheel_Angle,Wheel_Angle_index);
 80015ee:	4b67      	ldr	r3, [pc, #412]	@ (800178c <sensorTask+0x468>)
 80015f0:	781b      	ldrb	r3, [r3, #0]
 80015f2:	4a67      	ldr	r2, [pc, #412]	@ (8001790 <sensorTask+0x46c>)
 80015f4:	7812      	ldrb	r2, [r2, #0]
 80015f6:	4611      	mov	r1, r2
 80015f8:	4618      	mov	r0, r3
 80015fa:	f7ff fb2f 	bl	8000c5c <readSensor>
 80015fe:	4603      	mov	r3, r0
 8001600:	843b      	strh	r3, [r7, #32]
	    DATA_02.data[6] = data&0xFF;;
 8001602:	8c3b      	ldrh	r3, [r7, #32]
 8001604:	b2da      	uxtb	r2, r3
 8001606:	4b58      	ldr	r3, [pc, #352]	@ (8001768 <sensorTask+0x444>)
 8001608:	735a      	strb	r2, [r3, #13]
	    DATA_02.data[7] = (data>>8)&0xF;
 800160a:	8c3b      	ldrh	r3, [r7, #32]
 800160c:	0a1b      	lsrs	r3, r3, #8
 800160e:	b29b      	uxth	r3, r3
 8001610:	b2db      	uxtb	r3, r3
 8001612:	f003 030f 	and.w	r3, r3, #15
 8001616:	b2da      	uxtb	r2, r3
 8001618:	4b53      	ldr	r3, [pc, #332]	@ (8001768 <sensorTask+0x444>)
 800161a:	739a      	strb	r2, [r3, #14]

	    hal_message = sendCANData(DATA_02.data,DATA_02.id,DATA_02.dlc);
 800161c:	4b52      	ldr	r3, [pc, #328]	@ (8001768 <sensorTask+0x444>)
 800161e:	795b      	ldrb	r3, [r3, #5]
 8001620:	4a51      	ldr	r2, [pc, #324]	@ (8001768 <sensorTask+0x444>)
 8001622:	7992      	ldrb	r2, [r2, #6]
 8001624:	4619      	mov	r1, r3
 8001626:	485b      	ldr	r0, [pc, #364]	@ (8001794 <sensorTask+0x470>)
 8001628:	f7ff fde0 	bl	80011ec <sendCANData>
 800162c:	4603      	mov	r3, r0
 800162e:	461a      	mov	r2, r3
 8001630:	4b4c      	ldr	r3, [pc, #304]	@ (8001764 <sensorTask+0x440>)
 8001632:	701a      	strb	r2, [r3, #0]
	}

	if (RTOS_Time - DATA_03.time >= DATA_03.refresh_rate) {
 8001634:	4b58      	ldr	r3, [pc, #352]	@ (8001798 <sensorTask+0x474>)
 8001636:	681b      	ldr	r3, [r3, #0]
 8001638:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800163a:	1ad3      	subs	r3, r2, r3
 800163c:	4a56      	ldr	r2, [pc, #344]	@ (8001798 <sensorTask+0x474>)
 800163e:	7912      	ldrb	r2, [r2, #4]
 8001640:	4293      	cmp	r3, r2
 8001642:	d374      	bcc.n	800172e <sensorTask+0x40a>
	    DATA_03.time = RTOS_Time;
 8001644:	4a54      	ldr	r2, [pc, #336]	@ (8001798 <sensorTask+0x474>)
 8001646:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001648:	6013      	str	r3, [r2, #0]

	    data = readSensor(FR_Hall,FR_Hall_index);
 800164a:	4b54      	ldr	r3, [pc, #336]	@ (800179c <sensorTask+0x478>)
 800164c:	781b      	ldrb	r3, [r3, #0]
 800164e:	4a54      	ldr	r2, [pc, #336]	@ (80017a0 <sensorTask+0x47c>)
 8001650:	7812      	ldrb	r2, [r2, #0]
 8001652:	4611      	mov	r1, r2
 8001654:	4618      	mov	r0, r3
 8001656:	f7ff fb01 	bl	8000c5c <readSensor>
 800165a:	4603      	mov	r3, r0
 800165c:	843b      	strh	r3, [r7, #32]
	    DATA_03.data[0] = data&0xFF;;
 800165e:	8c3b      	ldrh	r3, [r7, #32]
 8001660:	b2da      	uxtb	r2, r3
 8001662:	4b4d      	ldr	r3, [pc, #308]	@ (8001798 <sensorTask+0x474>)
 8001664:	71da      	strb	r2, [r3, #7]
	    DATA_03.data[1] = (data>>8)&0xF;
 8001666:	8c3b      	ldrh	r3, [r7, #32]
 8001668:	0a1b      	lsrs	r3, r3, #8
 800166a:	b29b      	uxth	r3, r3
 800166c:	b2db      	uxtb	r3, r3
 800166e:	f003 030f 	and.w	r3, r3, #15
 8001672:	b2da      	uxtb	r2, r3
 8001674:	4b48      	ldr	r3, [pc, #288]	@ (8001798 <sensorTask+0x474>)
 8001676:	721a      	strb	r2, [r3, #8]

	    data = readSensor(FL_Hall,FL_Hall_index);
 8001678:	4b4a      	ldr	r3, [pc, #296]	@ (80017a4 <sensorTask+0x480>)
 800167a:	781b      	ldrb	r3, [r3, #0]
 800167c:	4a4a      	ldr	r2, [pc, #296]	@ (80017a8 <sensorTask+0x484>)
 800167e:	7812      	ldrb	r2, [r2, #0]
 8001680:	4611      	mov	r1, r2
 8001682:	4618      	mov	r0, r3
 8001684:	f7ff faea 	bl	8000c5c <readSensor>
 8001688:	4603      	mov	r3, r0
 800168a:	843b      	strh	r3, [r7, #32]
	    DATA_03.data[1] |= (data&0xF)<<4;
 800168c:	4b42      	ldr	r3, [pc, #264]	@ (8001798 <sensorTask+0x474>)
 800168e:	7a1b      	ldrb	r3, [r3, #8]
 8001690:	b25a      	sxtb	r2, r3
 8001692:	8c3b      	ldrh	r3, [r7, #32]
 8001694:	b25b      	sxtb	r3, r3
 8001696:	011b      	lsls	r3, r3, #4
 8001698:	b25b      	sxtb	r3, r3
 800169a:	4313      	orrs	r3, r2
 800169c:	b25b      	sxtb	r3, r3
 800169e:	b2da      	uxtb	r2, r3
 80016a0:	4b3d      	ldr	r3, [pc, #244]	@ (8001798 <sensorTask+0x474>)
 80016a2:	721a      	strb	r2, [r3, #8]
	    DATA_03.data[2] = (data>>4)&0xFF;
 80016a4:	8c3b      	ldrh	r3, [r7, #32]
 80016a6:	091b      	lsrs	r3, r3, #4
 80016a8:	b29b      	uxth	r3, r3
 80016aa:	b2da      	uxtb	r2, r3
 80016ac:	4b3a      	ldr	r3, [pc, #232]	@ (8001798 <sensorTask+0x474>)
 80016ae:	725a      	strb	r2, [r3, #9]

	    data = readSensor(RR_Hall,FL_Hall_index);
 80016b0:	4b3e      	ldr	r3, [pc, #248]	@ (80017ac <sensorTask+0x488>)
 80016b2:	781b      	ldrb	r3, [r3, #0]
 80016b4:	4a3c      	ldr	r2, [pc, #240]	@ (80017a8 <sensorTask+0x484>)
 80016b6:	7812      	ldrb	r2, [r2, #0]
 80016b8:	4611      	mov	r1, r2
 80016ba:	4618      	mov	r0, r3
 80016bc:	f7ff face 	bl	8000c5c <readSensor>
 80016c0:	4603      	mov	r3, r0
 80016c2:	843b      	strh	r3, [r7, #32]
	    DATA_03.data[3] = data&0xFF;;
 80016c4:	8c3b      	ldrh	r3, [r7, #32]
 80016c6:	b2da      	uxtb	r2, r3
 80016c8:	4b33      	ldr	r3, [pc, #204]	@ (8001798 <sensorTask+0x474>)
 80016ca:	729a      	strb	r2, [r3, #10]
	    DATA_03.data[4] = (data>>8)&0xF;
 80016cc:	8c3b      	ldrh	r3, [r7, #32]
 80016ce:	0a1b      	lsrs	r3, r3, #8
 80016d0:	b29b      	uxth	r3, r3
 80016d2:	b2db      	uxtb	r3, r3
 80016d4:	f003 030f 	and.w	r3, r3, #15
 80016d8:	b2da      	uxtb	r2, r3
 80016da:	4b2f      	ldr	r3, [pc, #188]	@ (8001798 <sensorTask+0x474>)
 80016dc:	72da      	strb	r2, [r3, #11]

	    data = readSensor(RL_Hall,RL_Hall_index);
 80016de:	4b34      	ldr	r3, [pc, #208]	@ (80017b0 <sensorTask+0x48c>)
 80016e0:	781b      	ldrb	r3, [r3, #0]
 80016e2:	4a34      	ldr	r2, [pc, #208]	@ (80017b4 <sensorTask+0x490>)
 80016e4:	7812      	ldrb	r2, [r2, #0]
 80016e6:	4611      	mov	r1, r2
 80016e8:	4618      	mov	r0, r3
 80016ea:	f7ff fab7 	bl	8000c5c <readSensor>
 80016ee:	4603      	mov	r3, r0
 80016f0:	843b      	strh	r3, [r7, #32]
	    DATA_03.data[4] |= (data&0xF)<<4;
 80016f2:	4b29      	ldr	r3, [pc, #164]	@ (8001798 <sensorTask+0x474>)
 80016f4:	7adb      	ldrb	r3, [r3, #11]
 80016f6:	b25a      	sxtb	r2, r3
 80016f8:	8c3b      	ldrh	r3, [r7, #32]
 80016fa:	b25b      	sxtb	r3, r3
 80016fc:	011b      	lsls	r3, r3, #4
 80016fe:	b25b      	sxtb	r3, r3
 8001700:	4313      	orrs	r3, r2
 8001702:	b25b      	sxtb	r3, r3
 8001704:	b2da      	uxtb	r2, r3
 8001706:	4b24      	ldr	r3, [pc, #144]	@ (8001798 <sensorTask+0x474>)
 8001708:	72da      	strb	r2, [r3, #11]
	    DATA_03.data[5] = (data>>4)&0xFF;
 800170a:	8c3b      	ldrh	r3, [r7, #32]
 800170c:	091b      	lsrs	r3, r3, #4
 800170e:	b29b      	uxth	r3, r3
 8001710:	b2da      	uxtb	r2, r3
 8001712:	4b21      	ldr	r3, [pc, #132]	@ (8001798 <sensorTask+0x474>)
 8001714:	731a      	strb	r2, [r3, #12]

	    hal_message = sendCANData(DATA_03.data,DATA_03.id,DATA_03.dlc);
 8001716:	4b20      	ldr	r3, [pc, #128]	@ (8001798 <sensorTask+0x474>)
 8001718:	795b      	ldrb	r3, [r3, #5]
 800171a:	4a1f      	ldr	r2, [pc, #124]	@ (8001798 <sensorTask+0x474>)
 800171c:	7992      	ldrb	r2, [r2, #6]
 800171e:	4619      	mov	r1, r3
 8001720:	4825      	ldr	r0, [pc, #148]	@ (80017b8 <sensorTask+0x494>)
 8001722:	f7ff fd63 	bl	80011ec <sendCANData>
 8001726:	4603      	mov	r3, r0
 8001728:	461a      	mov	r2, r3
 800172a:	4b0e      	ldr	r3, [pc, #56]	@ (8001764 <sensorTask+0x440>)
 800172c:	701a      	strb	r2, [r3, #0]
	    DATA_05.data[5] = (data>>4)&0xFF;

	    hal_message = sendCANData(DATA_05.data,DATA_05.id,DATA_05.dlc);
	}*/

	if (RTOS_Time - DATA_06.time >= DATA_06.refresh_rate) {
 800172e:	4b23      	ldr	r3, [pc, #140]	@ (80017bc <sensorTask+0x498>)
 8001730:	681b      	ldr	r3, [r3, #0]
 8001732:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001734:	1ad3      	subs	r3, r2, r3
 8001736:	4a21      	ldr	r2, [pc, #132]	@ (80017bc <sensorTask+0x498>)
 8001738:	7912      	ldrb	r2, [r2, #4]
 800173a:	4293      	cmp	r3, r2
 800173c:	d37f      	bcc.n	800183e <sensorTask+0x51a>
	    DATA_06.time = RTOS_Time;
 800173e:	4a1f      	ldr	r2, [pc, #124]	@ (80017bc <sensorTask+0x498>)
 8001740:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001742:	6013      	str	r3, [r2, #0]

	    data = readSensor(Brake_Pedal_Angle,Brake_Pedal_Angle_index);
	    DATA_06.data[1] |= (data&0xF)<<4;
	    DATA_06.data[2] = (data>>4)&0xFF;*/

	    DATA_06.data[0] = 0;
 8001744:	4b1d      	ldr	r3, [pc, #116]	@ (80017bc <sensorTask+0x498>)
 8001746:	2200      	movs	r2, #0
 8001748:	71da      	strb	r2, [r3, #7]
	    DATA_06.data[1] = 0;
 800174a:	4b1c      	ldr	r3, [pc, #112]	@ (80017bc <sensorTask+0x498>)
 800174c:	2200      	movs	r2, #0
 800174e:	721a      	strb	r2, [r3, #8]
	    DATA_06.data[2] = 0;
 8001750:	4b1a      	ldr	r3, [pc, #104]	@ (80017bc <sensorTask+0x498>)
 8001752:	2200      	movs	r2, #0
 8001754:	725a      	strb	r2, [r3, #9]

	    data = readSensor(F_Brakeline_Pressure,F_Brakeline_Pressure_index);
 8001756:	4b1a      	ldr	r3, [pc, #104]	@ (80017c0 <sensorTask+0x49c>)
 8001758:	781b      	ldrb	r3, [r3, #0]
 800175a:	e033      	b.n	80017c4 <sensorTask+0x4a0>
 800175c:	200002a4 	.word	0x200002a4
 8001760:	200002ab 	.word	0x200002ab
 8001764:	20000294 	.word	0x20000294
 8001768:	200002b4 	.word	0x200002b4
 800176c:	0800737b 	.word	0x0800737b
 8001770:	08007389 	.word	0x08007389
 8001774:	0800737c 	.word	0x0800737c
 8001778:	0800738a 	.word	0x0800738a
 800177c:	0800737d 	.word	0x0800737d
 8001780:	0800738b 	.word	0x0800738b
 8001784:	0800737e 	.word	0x0800737e
 8001788:	0800738c 	.word	0x0800738c
 800178c:	08007374 	.word	0x08007374
 8001790:	08007383 	.word	0x08007383
 8001794:	200002bb 	.word	0x200002bb
 8001798:	200002c4 	.word	0x200002c4
 800179c:	08007375 	.word	0x08007375
 80017a0:	08007384 	.word	0x08007384
 80017a4:	08007376 	.word	0x08007376
 80017a8:	08007385 	.word	0x08007385
 80017ac:	08007377 	.word	0x08007377
 80017b0:	08007378 	.word	0x08007378
 80017b4:	08007386 	.word	0x08007386
 80017b8:	200002cb 	.word	0x200002cb
 80017bc:	200002f4 	.word	0x200002f4
 80017c0:	08007379 	.word	0x08007379
 80017c4:	4a34      	ldr	r2, [pc, #208]	@ (8001898 <sensorTask+0x574>)
 80017c6:	7812      	ldrb	r2, [r2, #0]
 80017c8:	4611      	mov	r1, r2
 80017ca:	4618      	mov	r0, r3
 80017cc:	f7ff fa46 	bl	8000c5c <readSensor>
 80017d0:	4603      	mov	r3, r0
 80017d2:	843b      	strh	r3, [r7, #32]
	    DATA_06.data[3] = data&0xFF;;
 80017d4:	8c3b      	ldrh	r3, [r7, #32]
 80017d6:	b2da      	uxtb	r2, r3
 80017d8:	4b30      	ldr	r3, [pc, #192]	@ (800189c <sensorTask+0x578>)
 80017da:	729a      	strb	r2, [r3, #10]
	    DATA_06.data[4] = (data>>8)&0xF;
 80017dc:	8c3b      	ldrh	r3, [r7, #32]
 80017de:	0a1b      	lsrs	r3, r3, #8
 80017e0:	b29b      	uxth	r3, r3
 80017e2:	b2db      	uxtb	r3, r3
 80017e4:	f003 030f 	and.w	r3, r3, #15
 80017e8:	b2da      	uxtb	r2, r3
 80017ea:	4b2c      	ldr	r3, [pc, #176]	@ (800189c <sensorTask+0x578>)
 80017ec:	72da      	strb	r2, [r3, #11]

	    data = readSensor(R_Brakeline_Pressure,R_Brakeline_Pressure_index);
 80017ee:	4b2c      	ldr	r3, [pc, #176]	@ (80018a0 <sensorTask+0x57c>)
 80017f0:	781b      	ldrb	r3, [r3, #0]
 80017f2:	4a2c      	ldr	r2, [pc, #176]	@ (80018a4 <sensorTask+0x580>)
 80017f4:	7812      	ldrb	r2, [r2, #0]
 80017f6:	4611      	mov	r1, r2
 80017f8:	4618      	mov	r0, r3
 80017fa:	f7ff fa2f 	bl	8000c5c <readSensor>
 80017fe:	4603      	mov	r3, r0
 8001800:	843b      	strh	r3, [r7, #32]
	    DATA_06.data[4] |= (data&0xF)<<4;
 8001802:	4b26      	ldr	r3, [pc, #152]	@ (800189c <sensorTask+0x578>)
 8001804:	7adb      	ldrb	r3, [r3, #11]
 8001806:	b25a      	sxtb	r2, r3
 8001808:	8c3b      	ldrh	r3, [r7, #32]
 800180a:	b25b      	sxtb	r3, r3
 800180c:	011b      	lsls	r3, r3, #4
 800180e:	b25b      	sxtb	r3, r3
 8001810:	4313      	orrs	r3, r2
 8001812:	b25b      	sxtb	r3, r3
 8001814:	b2da      	uxtb	r2, r3
 8001816:	4b21      	ldr	r3, [pc, #132]	@ (800189c <sensorTask+0x578>)
 8001818:	72da      	strb	r2, [r3, #11]
	    DATA_06.data[5] = (data>>4)&0xFF;
 800181a:	8c3b      	ldrh	r3, [r7, #32]
 800181c:	091b      	lsrs	r3, r3, #4
 800181e:	b29b      	uxth	r3, r3
 8001820:	b2da      	uxtb	r2, r3
 8001822:	4b1e      	ldr	r3, [pc, #120]	@ (800189c <sensorTask+0x578>)
 8001824:	731a      	strb	r2, [r3, #12]

	    hal_message = sendCANData(DATA_06.data,DATA_06.id,DATA_06.dlc);
 8001826:	4b1d      	ldr	r3, [pc, #116]	@ (800189c <sensorTask+0x578>)
 8001828:	795b      	ldrb	r3, [r3, #5]
 800182a:	4a1c      	ldr	r2, [pc, #112]	@ (800189c <sensorTask+0x578>)
 800182c:	7992      	ldrb	r2, [r2, #6]
 800182e:	4619      	mov	r1, r3
 8001830:	481d      	ldr	r0, [pc, #116]	@ (80018a8 <sensorTask+0x584>)
 8001832:	f7ff fcdb 	bl	80011ec <sendCANData>
 8001836:	4603      	mov	r3, r0
 8001838:	461a      	mov	r2, r3
 800183a:	4b1c      	ldr	r3, [pc, #112]	@ (80018ac <sensorTask+0x588>)
 800183c:	701a      	strb	r2, [r3, #0]
	if (RTOS_Time - DATA_09.time >= DATA_09.refresh_rate) {
	    DATA_09.time = RTOS_Time;
	}*/


	if (RTOS_Time - BUFFER_ACK.time >= BUFFER_ACK.refresh_rate) {
 800183e:	4b1c      	ldr	r3, [pc, #112]	@ (80018b0 <sensorTask+0x58c>)
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001844:	1ad3      	subs	r3, r2, r3
 8001846:	4a1a      	ldr	r2, [pc, #104]	@ (80018b0 <sensorTask+0x58c>)
 8001848:	7912      	ldrb	r2, [r2, #4]
 800184a:	4293      	cmp	r3, r2
 800184c:	d311      	bcc.n	8001872 <sensorTask+0x54e>
		BUFFER_ACK.time = RTOS_Time;
 800184e:	4a18      	ldr	r2, [pc, #96]	@ (80018b0 <sensorTask+0x58c>)
 8001850:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001852:	6013      	str	r3, [r2, #0]
		BUFFER_ACK.data[0]='1';
 8001854:	4b16      	ldr	r3, [pc, #88]	@ (80018b0 <sensorTask+0x58c>)
 8001856:	2231      	movs	r2, #49	@ 0x31
 8001858:	71da      	strb	r2, [r3, #7]
		hal_message = sendCANData(BUFFER_ACK.data,BUFFER_ACK.id,BUFFER_ACK.dlc);
 800185a:	4b15      	ldr	r3, [pc, #84]	@ (80018b0 <sensorTask+0x58c>)
 800185c:	795b      	ldrb	r3, [r3, #5]
 800185e:	4a14      	ldr	r2, [pc, #80]	@ (80018b0 <sensorTask+0x58c>)
 8001860:	7992      	ldrb	r2, [r2, #6]
 8001862:	4619      	mov	r1, r3
 8001864:	4813      	ldr	r0, [pc, #76]	@ (80018b4 <sensorTask+0x590>)
 8001866:	f7ff fcc1 	bl	80011ec <sendCANData>
 800186a:	4603      	mov	r3, r0
 800186c:	461a      	mov	r2, r3
 800186e:	4b0f      	ldr	r3, [pc, #60]	@ (80018ac <sensorTask+0x588>)
 8001870:	701a      	strb	r2, [r3, #0]
	}
	vTaskDelayUntil(&xLastWakeTime, pdMS_TO_TICKS(Time_Mult));
 8001872:	4b11      	ldr	r3, [pc, #68]	@ (80018b8 <sensorTask+0x594>)
 8001874:	781b      	ldrb	r3, [r3, #0]
 8001876:	461a      	mov	r2, r3
 8001878:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800187c:	fb02 f303 	mul.w	r3, r2, r3
 8001880:	4a0e      	ldr	r2, [pc, #56]	@ (80018bc <sensorTask+0x598>)
 8001882:	fba2 2303 	umull	r2, r3, r2, r3
 8001886:	099a      	lsrs	r2, r3, #6
 8001888:	f107 031c 	add.w	r3, r7, #28
 800188c:	4611      	mov	r1, r2
 800188e:	4618      	mov	r0, r3
 8001890:	f003 ff54 	bl	800573c <vTaskDelayUntil>
  {
 8001894:	e54e      	b.n	8001334 <sensorTask+0x10>
 8001896:	bf00      	nop
 8001898:	08007387 	.word	0x08007387
 800189c:	200002f4 	.word	0x200002f4
 80018a0:	0800737a 	.word	0x0800737a
 80018a4:	08007388 	.word	0x08007388
 80018a8:	200002fb 	.word	0x200002fb
 80018ac:	20000294 	.word	0x20000294
 80018b0:	20000334 	.word	0x20000334
 80018b4:	2000033b 	.word	0x2000033b
 80018b8:	08007370 	.word	0x08007370
 80018bc:	10624dd3 	.word	0x10624dd3

080018c0 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80018c0:	b580      	push	{r7, lr}
 80018c2:	b088      	sub	sp, #32
 80018c4:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018c6:	f107 0310 	add.w	r3, r7, #16
 80018ca:	2200      	movs	r2, #0
 80018cc:	601a      	str	r2, [r3, #0]
 80018ce:	605a      	str	r2, [r3, #4]
 80018d0:	609a      	str	r2, [r3, #8]
 80018d2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018d4:	4b28      	ldr	r3, [pc, #160]	@ (8001978 <MX_GPIO_Init+0xb8>)
 80018d6:	699b      	ldr	r3, [r3, #24]
 80018d8:	4a27      	ldr	r2, [pc, #156]	@ (8001978 <MX_GPIO_Init+0xb8>)
 80018da:	f043 0320 	orr.w	r3, r3, #32
 80018de:	6193      	str	r3, [r2, #24]
 80018e0:	4b25      	ldr	r3, [pc, #148]	@ (8001978 <MX_GPIO_Init+0xb8>)
 80018e2:	699b      	ldr	r3, [r3, #24]
 80018e4:	f003 0320 	and.w	r3, r3, #32
 80018e8:	60fb      	str	r3, [r7, #12]
 80018ea:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80018ec:	4b22      	ldr	r3, [pc, #136]	@ (8001978 <MX_GPIO_Init+0xb8>)
 80018ee:	699b      	ldr	r3, [r3, #24]
 80018f0:	4a21      	ldr	r2, [pc, #132]	@ (8001978 <MX_GPIO_Init+0xb8>)
 80018f2:	f043 0304 	orr.w	r3, r3, #4
 80018f6:	6193      	str	r3, [r2, #24]
 80018f8:	4b1f      	ldr	r3, [pc, #124]	@ (8001978 <MX_GPIO_Init+0xb8>)
 80018fa:	699b      	ldr	r3, [r3, #24]
 80018fc:	f003 0304 	and.w	r3, r3, #4
 8001900:	60bb      	str	r3, [r7, #8]
 8001902:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001904:	4b1c      	ldr	r3, [pc, #112]	@ (8001978 <MX_GPIO_Init+0xb8>)
 8001906:	699b      	ldr	r3, [r3, #24]
 8001908:	4a1b      	ldr	r2, [pc, #108]	@ (8001978 <MX_GPIO_Init+0xb8>)
 800190a:	f043 0308 	orr.w	r3, r3, #8
 800190e:	6193      	str	r3, [r2, #24]
 8001910:	4b19      	ldr	r3, [pc, #100]	@ (8001978 <MX_GPIO_Init+0xb8>)
 8001912:	699b      	ldr	r3, [r3, #24]
 8001914:	f003 0308 	and.w	r3, r3, #8
 8001918:	607b      	str	r3, [r7, #4]
 800191a:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10|GPIO_PIN_15, GPIO_PIN_RESET);
 800191c:	2200      	movs	r2, #0
 800191e:	f44f 4104 	mov.w	r1, #33792	@ 0x8400
 8001922:	4816      	ldr	r0, [pc, #88]	@ (800197c <MX_GPIO_Init+0xbc>)
 8001924:	f001 fc2e 	bl	8003184 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 8001928:	2200      	movs	r2, #0
 800192a:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
 800192e:	4814      	ldr	r0, [pc, #80]	@ (8001980 <MX_GPIO_Init+0xc0>)
 8001930:	f001 fc28 	bl	8003184 <HAL_GPIO_WritePin>
                          |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);

  /*Configure GPIO pins : PA10 PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_15;
 8001934:	f44f 4304 	mov.w	r3, #33792	@ 0x8400
 8001938:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800193a:	2301      	movs	r3, #1
 800193c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800193e:	2300      	movs	r3, #0
 8001940:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001942:	2302      	movs	r3, #2
 8001944:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001946:	f107 0310 	add.w	r3, r7, #16
 800194a:	4619      	mov	r1, r3
 800194c:	480b      	ldr	r0, [pc, #44]	@ (800197c <MX_GPIO_Init+0xbc>)
 800194e:	f001 fa95 	bl	8002e7c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 PB5 PB6
                           PB7 PB8 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 8001952:	f44f 73fc 	mov.w	r3, #504	@ 0x1f8
 8001956:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_7|GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001958:	2301      	movs	r3, #1
 800195a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800195c:	2300      	movs	r3, #0
 800195e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001960:	2302      	movs	r3, #2
 8001962:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001964:	f107 0310 	add.w	r3, r7, #16
 8001968:	4619      	mov	r1, r3
 800196a:	4805      	ldr	r0, [pc, #20]	@ (8001980 <MX_GPIO_Init+0xc0>)
 800196c:	f001 fa86 	bl	8002e7c <HAL_GPIO_Init>

}
 8001970:	bf00      	nop
 8001972:	3720      	adds	r7, #32
 8001974:	46bd      	mov	sp, r7
 8001976:	bd80      	pop	{r7, pc}
 8001978:	40021000 	.word	0x40021000
 800197c:	40010800 	.word	0x40010800
 8001980:	40010c00 	.word	0x40010c00

08001984 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001984:	b580      	push	{r7, lr}
 8001986:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001988:	f000 fade 	bl	8001f48 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800198c:	f000 f822 	bl	80019d4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001990:	f7ff ff96 	bl	80018c0 <MX_GPIO_Init>
  MX_ADC1_Init();
 8001994:	f7fe fed0 	bl	8000738 <MX_ADC1_Init>
  MX_CAN_Init();
 8001998:	f7ff fb10 	bl	8000fbc <MX_CAN_Init>
  MX_ADC2_Init();
 800199c:	f7fe ff0a 	bl	80007b4 <MX_ADC2_Init>
  MX_TIM1_Init();
 80019a0:	f000 fa3e 	bl	8001e20 <MX_TIM1_Init>
  /* USER CODE BEGIN 2 */
  HAL_CAN_Start(&hcan);
 80019a4:	4808      	ldr	r0, [pc, #32]	@ (80019c8 <main+0x44>)
 80019a6:	f001 f853 	bl	8002a50 <HAL_CAN_Start>
  can_msg = sendCANString("CAN Started");
 80019aa:	4808      	ldr	r0, [pc, #32]	@ (80019cc <main+0x48>)
 80019ac:	f7ff fb88 	bl	80010c0 <sendCANString>
 80019b0:	4603      	mov	r3, r0
 80019b2:	461a      	mov	r2, r3
 80019b4:	4b06      	ldr	r3, [pc, #24]	@ (80019d0 <main+0x4c>)
 80019b6:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 80019b8:	f002 fe4e 	bl	8004658 <osKernelInitialize>

  /* Call init function for freertos objects (in cmsis_os2.c) */
  MX_FREERTOS_Init();
 80019bc:	f7ff fc50 	bl	8001260 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 80019c0:	f002 fe6c 	bl	800469c <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80019c4:	bf00      	nop
 80019c6:	e7fd      	b.n	80019c4 <main+0x40>
 80019c8:	2000026c 	.word	0x2000026c
 80019cc:	08007328 	.word	0x08007328
 80019d0:	2000029c 	.word	0x2000029c

080019d4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80019d4:	b580      	push	{r7, lr}
 80019d6:	b094      	sub	sp, #80	@ 0x50
 80019d8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80019da:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80019de:	2228      	movs	r2, #40	@ 0x28
 80019e0:	2100      	movs	r1, #0
 80019e2:	4618      	mov	r0, r3
 80019e4:	f005 fba0 	bl	8007128 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80019e8:	f107 0314 	add.w	r3, r7, #20
 80019ec:	2200      	movs	r2, #0
 80019ee:	601a      	str	r2, [r3, #0]
 80019f0:	605a      	str	r2, [r3, #4]
 80019f2:	609a      	str	r2, [r3, #8]
 80019f4:	60da      	str	r2, [r3, #12]
 80019f6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80019f8:	1d3b      	adds	r3, r7, #4
 80019fa:	2200      	movs	r2, #0
 80019fc:	601a      	str	r2, [r3, #0]
 80019fe:	605a      	str	r2, [r3, #4]
 8001a00:	609a      	str	r2, [r3, #8]
 8001a02:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001a04:	2301      	movs	r3, #1
 8001a06:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a08:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001a0c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8001a0e:	2300      	movs	r3, #0
 8001a10:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001a12:	2301      	movs	r3, #1
 8001a14:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001a16:	2302      	movs	r3, #2
 8001a18:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001a1a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001a1e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001a20:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8001a24:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a26:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001a2a:	4618      	mov	r0, r3
 8001a2c:	f001 fbc2 	bl	80031b4 <HAL_RCC_OscConfig>
 8001a30:	4603      	mov	r3, r0
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d001      	beq.n	8001a3a <SystemClock_Config+0x66>
  {
    Error_Handler();
 8001a36:	f000 f83b 	bl	8001ab0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a3a:	230f      	movs	r3, #15
 8001a3c:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001a3e:	2302      	movs	r3, #2
 8001a40:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001a42:	2300      	movs	r3, #0
 8001a44:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001a46:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a4a:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001a4c:	2300      	movs	r3, #0
 8001a4e:	627b      	str	r3, [r7, #36]	@ 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001a50:	f107 0314 	add.w	r3, r7, #20
 8001a54:	2102      	movs	r1, #2
 8001a56:	4618      	mov	r0, r3
 8001a58:	f001 fe2e 	bl	80036b8 <HAL_RCC_ClockConfig>
 8001a5c:	4603      	mov	r3, r0
 8001a5e:	2b00      	cmp	r3, #0
 8001a60:	d001      	beq.n	8001a66 <SystemClock_Config+0x92>
  {
    Error_Handler();
 8001a62:	f000 f825 	bl	8001ab0 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8001a66:	2302      	movs	r3, #2
 8001a68:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 8001a6a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001a6e:	60fb      	str	r3, [r7, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001a70:	1d3b      	adds	r3, r7, #4
 8001a72:	4618      	mov	r0, r3
 8001a74:	f001 ffde 	bl	8003a34 <HAL_RCCEx_PeriphCLKConfig>
 8001a78:	4603      	mov	r3, r0
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	d001      	beq.n	8001a82 <SystemClock_Config+0xae>
  {
    Error_Handler();
 8001a7e:	f000 f817 	bl	8001ab0 <Error_Handler>
  }
}
 8001a82:	bf00      	nop
 8001a84:	3750      	adds	r7, #80	@ 0x50
 8001a86:	46bd      	mov	sp, r7
 8001a88:	bd80      	pop	{r7, pc}
	...

08001a8c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001a8c:	b580      	push	{r7, lr}
 8001a8e:	b082      	sub	sp, #8
 8001a90:	af00      	add	r7, sp, #0
 8001a92:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM4)
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	4a04      	ldr	r2, [pc, #16]	@ (8001aac <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001a9a:	4293      	cmp	r3, r2
 8001a9c:	d101      	bne.n	8001aa2 <HAL_TIM_PeriodElapsedCallback+0x16>
  {
    HAL_IncTick();
 8001a9e:	f000 fa69 	bl	8001f74 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001aa2:	bf00      	nop
 8001aa4:	3708      	adds	r7, #8
 8001aa6:	46bd      	mov	sp, r7
 8001aa8:	bd80      	pop	{r7, pc}
 8001aaa:	bf00      	nop
 8001aac:	40000800 	.word	0x40000800

08001ab0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001ab0:	b480      	push	{r7}
 8001ab2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001ab4:	b672      	cpsid	i
}
 8001ab6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001ab8:	bf00      	nop
 8001aba:	e7fd      	b.n	8001ab8 <Error_Handler+0x8>

08001abc <setupSensors>:
Sensor DATA_08;
Sensor DATA_09;
Sensor BUFFER_ACK;


HAL_StatusTypeDef setupSensors(){
 8001abc:	b480      	push	{r7}
 8001abe:	af00      	add	r7, sp, #0
	DATA_01.refresh_rate = Time_Mult;
 8001ac0:	2202      	movs	r2, #2
 8001ac2:	4b45      	ldr	r3, [pc, #276]	@ (8001bd8 <setupSensors+0x11c>)
 8001ac4:	711a      	strb	r2, [r3, #4]
	DATA_01.id = 0x02;
 8001ac6:	4b44      	ldr	r3, [pc, #272]	@ (8001bd8 <setupSensors+0x11c>)
 8001ac8:	2202      	movs	r2, #2
 8001aca:	715a      	strb	r2, [r3, #5]
	DATA_01.dlc = 5;
 8001acc:	4b42      	ldr	r3, [pc, #264]	@ (8001bd8 <setupSensors+0x11c>)
 8001ace:	2205      	movs	r2, #5
 8001ad0:	719a      	strb	r2, [r3, #6]

	DATA_02.refresh_rate = Time_Mult;
 8001ad2:	2202      	movs	r2, #2
 8001ad4:	4b41      	ldr	r3, [pc, #260]	@ (8001bdc <setupSensors+0x120>)
 8001ad6:	711a      	strb	r2, [r3, #4]
	DATA_02.id = 0x03;
 8001ad8:	4b40      	ldr	r3, [pc, #256]	@ (8001bdc <setupSensors+0x120>)
 8001ada:	2203      	movs	r2, #3
 8001adc:	715a      	strb	r2, [r3, #5]
	DATA_02.dlc = 8;
 8001ade:	4b3f      	ldr	r3, [pc, #252]	@ (8001bdc <setupSensors+0x120>)
 8001ae0:	2208      	movs	r2, #8
 8001ae2:	719a      	strb	r2, [r3, #6]

	DATA_03.refresh_rate = Time_Mult;
 8001ae4:	2202      	movs	r2, #2
 8001ae6:	4b3e      	ldr	r3, [pc, #248]	@ (8001be0 <setupSensors+0x124>)
 8001ae8:	711a      	strb	r2, [r3, #4]
	DATA_03.id = 0x04;
 8001aea:	4b3d      	ldr	r3, [pc, #244]	@ (8001be0 <setupSensors+0x124>)
 8001aec:	2204      	movs	r2, #4
 8001aee:	715a      	strb	r2, [r3, #5]
	DATA_03.dlc = 8;
 8001af0:	4b3b      	ldr	r3, [pc, #236]	@ (8001be0 <setupSensors+0x124>)
 8001af2:	2208      	movs	r2, #8
 8001af4:	719a      	strb	r2, [r3, #6]

	DATA_04.refresh_rate = 25*Time_Mult;
 8001af6:	2302      	movs	r3, #2
 8001af8:	461a      	mov	r2, r3
 8001afa:	0092      	lsls	r2, r2, #2
 8001afc:	4413      	add	r3, r2
 8001afe:	461a      	mov	r2, r3
 8001b00:	0091      	lsls	r1, r2, #2
 8001b02:	461a      	mov	r2, r3
 8001b04:	460b      	mov	r3, r1
 8001b06:	4413      	add	r3, r2
 8001b08:	b2da      	uxtb	r2, r3
 8001b0a:	4b36      	ldr	r3, [pc, #216]	@ (8001be4 <setupSensors+0x128>)
 8001b0c:	711a      	strb	r2, [r3, #4]
	DATA_04.id = 0x05;
 8001b0e:	4b35      	ldr	r3, [pc, #212]	@ (8001be4 <setupSensors+0x128>)
 8001b10:	2205      	movs	r2, #5
 8001b12:	715a      	strb	r2, [r3, #5]
	DATA_04.dlc = 8;
 8001b14:	4b33      	ldr	r3, [pc, #204]	@ (8001be4 <setupSensors+0x128>)
 8001b16:	2208      	movs	r2, #8
 8001b18:	719a      	strb	r2, [r3, #6]

	DATA_05.refresh_rate = 25*Time_Mult;
 8001b1a:	2302      	movs	r3, #2
 8001b1c:	461a      	mov	r2, r3
 8001b1e:	0092      	lsls	r2, r2, #2
 8001b20:	4413      	add	r3, r2
 8001b22:	461a      	mov	r2, r3
 8001b24:	0091      	lsls	r1, r2, #2
 8001b26:	461a      	mov	r2, r3
 8001b28:	460b      	mov	r3, r1
 8001b2a:	4413      	add	r3, r2
 8001b2c:	b2da      	uxtb	r2, r3
 8001b2e:	4b2e      	ldr	r3, [pc, #184]	@ (8001be8 <setupSensors+0x12c>)
 8001b30:	711a      	strb	r2, [r3, #4]
	DATA_05.id = 0x06;
 8001b32:	4b2d      	ldr	r3, [pc, #180]	@ (8001be8 <setupSensors+0x12c>)
 8001b34:	2206      	movs	r2, #6
 8001b36:	715a      	strb	r2, [r3, #5]
	DATA_05.dlc = 6;
 8001b38:	4b2b      	ldr	r3, [pc, #172]	@ (8001be8 <setupSensors+0x12c>)
 8001b3a:	2206      	movs	r2, #6
 8001b3c:	719a      	strb	r2, [r3, #6]

	DATA_06.refresh_rate = Time_Mult;
 8001b3e:	2202      	movs	r2, #2
 8001b40:	4b2a      	ldr	r3, [pc, #168]	@ (8001bec <setupSensors+0x130>)
 8001b42:	711a      	strb	r2, [r3, #4]
	DATA_06.id = 0x07;
 8001b44:	4b29      	ldr	r3, [pc, #164]	@ (8001bec <setupSensors+0x130>)
 8001b46:	2207      	movs	r2, #7
 8001b48:	715a      	strb	r2, [r3, #5]
	DATA_06.dlc = 6;
 8001b4a:	4b28      	ldr	r3, [pc, #160]	@ (8001bec <setupSensors+0x130>)
 8001b4c:	2206      	movs	r2, #6
 8001b4e:	719a      	strb	r2, [r3, #6]

	DATA_07.refresh_rate = 25*Time_Mult;
 8001b50:	2302      	movs	r3, #2
 8001b52:	461a      	mov	r2, r3
 8001b54:	0092      	lsls	r2, r2, #2
 8001b56:	4413      	add	r3, r2
 8001b58:	461a      	mov	r2, r3
 8001b5a:	0091      	lsls	r1, r2, #2
 8001b5c:	461a      	mov	r2, r3
 8001b5e:	460b      	mov	r3, r1
 8001b60:	4413      	add	r3, r2
 8001b62:	b2da      	uxtb	r2, r3
 8001b64:	4b22      	ldr	r3, [pc, #136]	@ (8001bf0 <setupSensors+0x134>)
 8001b66:	711a      	strb	r2, [r3, #4]
	DATA_07.id = 0x08;
 8001b68:	4b21      	ldr	r3, [pc, #132]	@ (8001bf0 <setupSensors+0x134>)
 8001b6a:	2208      	movs	r2, #8
 8001b6c:	715a      	strb	r2, [r3, #5]
	DATA_07.dlc = 8;
 8001b6e:	4b20      	ldr	r3, [pc, #128]	@ (8001bf0 <setupSensors+0x134>)
 8001b70:	2208      	movs	r2, #8
 8001b72:	719a      	strb	r2, [r3, #6]

	DATA_08.refresh_rate = 25*Time_Mult;
 8001b74:	2302      	movs	r3, #2
 8001b76:	461a      	mov	r2, r3
 8001b78:	0092      	lsls	r2, r2, #2
 8001b7a:	4413      	add	r3, r2
 8001b7c:	461a      	mov	r2, r3
 8001b7e:	0091      	lsls	r1, r2, #2
 8001b80:	461a      	mov	r2, r3
 8001b82:	460b      	mov	r3, r1
 8001b84:	4413      	add	r3, r2
 8001b86:	b2da      	uxtb	r2, r3
 8001b88:	4b1a      	ldr	r3, [pc, #104]	@ (8001bf4 <setupSensors+0x138>)
 8001b8a:	711a      	strb	r2, [r3, #4]
	DATA_08.id = 0x09;
 8001b8c:	4b19      	ldr	r3, [pc, #100]	@ (8001bf4 <setupSensors+0x138>)
 8001b8e:	2209      	movs	r2, #9
 8001b90:	715a      	strb	r2, [r3, #5]
	DATA_08.dlc = 8;
 8001b92:	4b18      	ldr	r3, [pc, #96]	@ (8001bf4 <setupSensors+0x138>)
 8001b94:	2208      	movs	r2, #8
 8001b96:	719a      	strb	r2, [r3, #6]

	DATA_09.refresh_rate = 25*Time_Mult;
 8001b98:	2302      	movs	r3, #2
 8001b9a:	461a      	mov	r2, r3
 8001b9c:	0092      	lsls	r2, r2, #2
 8001b9e:	4413      	add	r3, r2
 8001ba0:	461a      	mov	r2, r3
 8001ba2:	0091      	lsls	r1, r2, #2
 8001ba4:	461a      	mov	r2, r3
 8001ba6:	460b      	mov	r3, r1
 8001ba8:	4413      	add	r3, r2
 8001baa:	b2da      	uxtb	r2, r3
 8001bac:	4b12      	ldr	r3, [pc, #72]	@ (8001bf8 <setupSensors+0x13c>)
 8001bae:	711a      	strb	r2, [r3, #4]
	DATA_09.id = 0x0A;
 8001bb0:	4b11      	ldr	r3, [pc, #68]	@ (8001bf8 <setupSensors+0x13c>)
 8001bb2:	220a      	movs	r2, #10
 8001bb4:	715a      	strb	r2, [r3, #5]
	DATA_09.dlc = 6;
 8001bb6:	4b10      	ldr	r3, [pc, #64]	@ (8001bf8 <setupSensors+0x13c>)
 8001bb8:	2206      	movs	r2, #6
 8001bba:	719a      	strb	r2, [r3, #6]

	BUFFER_ACK.refresh_rate = Time_Mult;
 8001bbc:	2202      	movs	r2, #2
 8001bbe:	4b0f      	ldr	r3, [pc, #60]	@ (8001bfc <setupSensors+0x140>)
 8001bc0:	711a      	strb	r2, [r3, #4]
	BUFFER_ACK.id = 0x0B;
 8001bc2:	4b0e      	ldr	r3, [pc, #56]	@ (8001bfc <setupSensors+0x140>)
 8001bc4:	220b      	movs	r2, #11
 8001bc6:	715a      	strb	r2, [r3, #5]
	BUFFER_ACK.dlc = 1;
 8001bc8:	4b0c      	ldr	r3, [pc, #48]	@ (8001bfc <setupSensors+0x140>)
 8001bca:	2201      	movs	r2, #1
 8001bcc:	719a      	strb	r2, [r3, #6]

	return HAL_OK;
 8001bce:	2300      	movs	r3, #0
}
 8001bd0:	4618      	mov	r0, r3
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bc80      	pop	{r7}
 8001bd6:	4770      	bx	lr
 8001bd8:	200002a4 	.word	0x200002a4
 8001bdc:	200002b4 	.word	0x200002b4
 8001be0:	200002c4 	.word	0x200002c4
 8001be4:	200002d4 	.word	0x200002d4
 8001be8:	200002e4 	.word	0x200002e4
 8001bec:	200002f4 	.word	0x200002f4
 8001bf0:	20000304 	.word	0x20000304
 8001bf4:	20000314 	.word	0x20000314
 8001bf8:	20000324 	.word	0x20000324
 8001bfc:	20000334 	.word	0x20000334

08001c00 <vBatValue>:

unsigned short vBatValue(unsigned short ADC_Value){
 8001c00:	b580      	push	{r7, lr}
 8001c02:	b084      	sub	sp, #16
 8001c04:	af00      	add	r7, sp, #0
 8001c06:	4603      	mov	r3, r0
 8001c08:	80fb      	strh	r3, [r7, #6]
	float vBat = ADC_Value*(VBAT_R1 + VBAT_R2)/VBAT_R2;
 8001c0a:	88fb      	ldrh	r3, [r7, #6]
 8001c0c:	f645 525c 	movw	r2, #23900	@ 0x5d5c
 8001c10:	fb02 f303 	mul.w	r3, r2, r3
 8001c14:	4a0f      	ldr	r2, [pc, #60]	@ (8001c54 <vBatValue+0x54>)
 8001c16:	fb82 1203 	smull	r1, r2, r2, r3
 8001c1a:	1252      	asrs	r2, r2, #9
 8001c1c:	17db      	asrs	r3, r3, #31
 8001c1e:	1ad3      	subs	r3, r2, r3
 8001c20:	4618      	mov	r0, r3
 8001c22:	f7fe fb4f 	bl	80002c4 <__aeabi_i2f>
 8001c26:	4603      	mov	r3, r0
 8001c28:	60fb      	str	r3, [r7, #12]
	unsigned short vBat0 = vBat/A_20V * 4095;
 8001c2a:	490b      	ldr	r1, [pc, #44]	@ (8001c58 <vBatValue+0x58>)
 8001c2c:	68f8      	ldr	r0, [r7, #12]
 8001c2e:	f7fe fc51 	bl	80004d4 <__aeabi_fdiv>
 8001c32:	4603      	mov	r3, r0
 8001c34:	4909      	ldr	r1, [pc, #36]	@ (8001c5c <vBatValue+0x5c>)
 8001c36:	4618      	mov	r0, r3
 8001c38:	f7fe fb98 	bl	800036c <__aeabi_fmul>
 8001c3c:	4603      	mov	r3, r0
 8001c3e:	4618      	mov	r0, r3
 8001c40:	f7fe fd5a 	bl	80006f8 <__aeabi_f2uiz>
 8001c44:	4603      	mov	r3, r0
 8001c46:	817b      	strh	r3, [r7, #10]
	return vBat0;
 8001c48:	897b      	ldrh	r3, [r7, #10]
}
 8001c4a:	4618      	mov	r0, r3
 8001c4c:	3710      	adds	r7, #16
 8001c4e:	46bd      	mov	sp, r7
 8001c50:	bd80      	pop	{r7, pc}
 8001c52:	bf00      	nop
 8001c54:	219bb355 	.word	0x219bb355
 8001c58:	46c1e400 	.word	0x46c1e400
 8001c5c:	457ff000 	.word	0x457ff000

08001c60 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b084      	sub	sp, #16
 8001c64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001c66:	4b18      	ldr	r3, [pc, #96]	@ (8001cc8 <HAL_MspInit+0x68>)
 8001c68:	699b      	ldr	r3, [r3, #24]
 8001c6a:	4a17      	ldr	r2, [pc, #92]	@ (8001cc8 <HAL_MspInit+0x68>)
 8001c6c:	f043 0301 	orr.w	r3, r3, #1
 8001c70:	6193      	str	r3, [r2, #24]
 8001c72:	4b15      	ldr	r3, [pc, #84]	@ (8001cc8 <HAL_MspInit+0x68>)
 8001c74:	699b      	ldr	r3, [r3, #24]
 8001c76:	f003 0301 	and.w	r3, r3, #1
 8001c7a:	60bb      	str	r3, [r7, #8]
 8001c7c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c7e:	4b12      	ldr	r3, [pc, #72]	@ (8001cc8 <HAL_MspInit+0x68>)
 8001c80:	69db      	ldr	r3, [r3, #28]
 8001c82:	4a11      	ldr	r2, [pc, #68]	@ (8001cc8 <HAL_MspInit+0x68>)
 8001c84:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001c88:	61d3      	str	r3, [r2, #28]
 8001c8a:	4b0f      	ldr	r3, [pc, #60]	@ (8001cc8 <HAL_MspInit+0x68>)
 8001c8c:	69db      	ldr	r3, [r3, #28]
 8001c8e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001c92:	607b      	str	r3, [r7, #4]
 8001c94:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c96:	2200      	movs	r2, #0
 8001c98:	210f      	movs	r1, #15
 8001c9a:	f06f 0001 	mvn.w	r0, #1
 8001c9e:	f001 f8c2 	bl	8002e26 <HAL_NVIC_SetPriority>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8001ca2:	4b0a      	ldr	r3, [pc, #40]	@ (8001ccc <HAL_MspInit+0x6c>)
 8001ca4:	685b      	ldr	r3, [r3, #4]
 8001ca6:	60fb      	str	r3, [r7, #12]
 8001ca8:	68fb      	ldr	r3, [r7, #12]
 8001caa:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8001cae:	60fb      	str	r3, [r7, #12]
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001cb6:	60fb      	str	r3, [r7, #12]
 8001cb8:	4a04      	ldr	r2, [pc, #16]	@ (8001ccc <HAL_MspInit+0x6c>)
 8001cba:	68fb      	ldr	r3, [r7, #12]
 8001cbc:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001cbe:	bf00      	nop
 8001cc0:	3710      	adds	r7, #16
 8001cc2:	46bd      	mov	sp, r7
 8001cc4:	bd80      	pop	{r7, pc}
 8001cc6:	bf00      	nop
 8001cc8:	40021000 	.word	0x40021000
 8001ccc:	40010000 	.word	0x40010000

08001cd0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	b08e      	sub	sp, #56	@ 0x38
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 8001cd8:	2300      	movs	r3, #0
 8001cda:	62fb      	str	r3, [r7, #44]	@ 0x2c

  uint32_t              uwPrescalerValue = 0U;
 8001cdc:	2300      	movs	r3, #0
 8001cde:	62bb      	str	r3, [r7, #40]	@ 0x28
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status = HAL_OK;
 8001ce0:	2300      	movs	r3, #0
 8001ce2:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33

  /* Enable TIM4 clock */
  __HAL_RCC_TIM4_CLK_ENABLE();
 8001ce6:	4b34      	ldr	r3, [pc, #208]	@ (8001db8 <HAL_InitTick+0xe8>)
 8001ce8:	69db      	ldr	r3, [r3, #28]
 8001cea:	4a33      	ldr	r2, [pc, #204]	@ (8001db8 <HAL_InitTick+0xe8>)
 8001cec:	f043 0304 	orr.w	r3, r3, #4
 8001cf0:	61d3      	str	r3, [r2, #28]
 8001cf2:	4b31      	ldr	r3, [pc, #196]	@ (8001db8 <HAL_InitTick+0xe8>)
 8001cf4:	69db      	ldr	r3, [r3, #28]
 8001cf6:	f003 0304 	and.w	r3, r3, #4
 8001cfa:	60fb      	str	r3, [r7, #12]
 8001cfc:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001cfe:	f107 0210 	add.w	r2, r7, #16
 8001d02:	f107 0314 	add.w	r3, r7, #20
 8001d06:	4611      	mov	r1, r2
 8001d08:	4618      	mov	r0, r3
 8001d0a:	f001 fe45 	bl	8003998 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8001d0e:	6a3b      	ldr	r3, [r7, #32]
 8001d10:	62fb      	str	r3, [r7, #44]	@ 0x2c
  /* Compute TIM4 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001d12:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001d14:	2b00      	cmp	r3, #0
 8001d16:	d103      	bne.n	8001d20 <HAL_InitTick+0x50>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001d18:	f001 fe16 	bl	8003948 <HAL_RCC_GetPCLK1Freq>
 8001d1c:	6378      	str	r0, [r7, #52]	@ 0x34
 8001d1e:	e004      	b.n	8001d2a <HAL_InitTick+0x5a>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001d20:	f001 fe12 	bl	8003948 <HAL_RCC_GetPCLK1Freq>
 8001d24:	4603      	mov	r3, r0
 8001d26:	005b      	lsls	r3, r3, #1
 8001d28:	637b      	str	r3, [r7, #52]	@ 0x34
  }

  /* Compute the prescaler value to have TIM4 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001d2a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001d2c:	4a23      	ldr	r2, [pc, #140]	@ (8001dbc <HAL_InitTick+0xec>)
 8001d2e:	fba2 2303 	umull	r2, r3, r2, r3
 8001d32:	0c9b      	lsrs	r3, r3, #18
 8001d34:	3b01      	subs	r3, #1
 8001d36:	62bb      	str	r3, [r7, #40]	@ 0x28

  /* Initialize TIM4 */
  htim4.Instance = TIM4;
 8001d38:	4b21      	ldr	r3, [pc, #132]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d3a:	4a22      	ldr	r2, [pc, #136]	@ (8001dc4 <HAL_InitTick+0xf4>)
 8001d3c:	601a      	str	r2, [r3, #0]
   * Period = [(TIM4CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim4.Init.Period = (1000000U / 1000U) - 1U;
 8001d3e:	4b20      	ldr	r3, [pc, #128]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d40:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001d44:	60da      	str	r2, [r3, #12]
  htim4.Init.Prescaler = uwPrescalerValue;
 8001d46:	4a1e      	ldr	r2, [pc, #120]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d48:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001d4a:	6053      	str	r3, [r2, #4]
  htim4.Init.ClockDivision = 0;
 8001d4c:	4b1c      	ldr	r3, [pc, #112]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d4e:	2200      	movs	r2, #0
 8001d50:	611a      	str	r2, [r3, #16]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d52:	4b1b      	ldr	r3, [pc, #108]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d54:	2200      	movs	r2, #0
 8001d56:	609a      	str	r2, [r3, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001d58:	4b19      	ldr	r3, [pc, #100]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d5a:	2200      	movs	r2, #0
 8001d5c:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim4);
 8001d5e:	4818      	ldr	r0, [pc, #96]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d60:	f001 ffd4 	bl	8003d0c <HAL_TIM_Base_Init>
 8001d64:	4603      	mov	r3, r0
 8001d66:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
  if (status == HAL_OK)
 8001d6a:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	d11b      	bne.n	8001daa <HAL_InitTick+0xda>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim4);
 8001d72:	4813      	ldr	r0, [pc, #76]	@ (8001dc0 <HAL_InitTick+0xf0>)
 8001d74:	f002 f88a 	bl	8003e8c <HAL_TIM_Base_Start_IT>
 8001d78:	4603      	mov	r3, r0
 8001d7a:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
    if (status == HAL_OK)
 8001d7e:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d111      	bne.n	8001daa <HAL_InitTick+0xda>
    {
    /* Enable the TIM4 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001d86:	201e      	movs	r0, #30
 8001d88:	f001 f869 	bl	8002e5e <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	2b0f      	cmp	r3, #15
 8001d90:	d808      	bhi.n	8001da4 <HAL_InitTick+0xd4>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM4_IRQn, TickPriority, 0U);
 8001d92:	2200      	movs	r2, #0
 8001d94:	6879      	ldr	r1, [r7, #4]
 8001d96:	201e      	movs	r0, #30
 8001d98:	f001 f845 	bl	8002e26 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001d9c:	4a0a      	ldr	r2, [pc, #40]	@ (8001dc8 <HAL_InitTick+0xf8>)
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	6013      	str	r3, [r2, #0]
 8001da2:	e002      	b.n	8001daa <HAL_InitTick+0xda>
      }
      else
      {
        status = HAL_ERROR;
 8001da4:	2301      	movs	r3, #1
 8001da6:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
      }
    }
  }

 /* Return function status */
  return status;
 8001daa:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
}
 8001dae:	4618      	mov	r0, r3
 8001db0:	3738      	adds	r7, #56	@ 0x38
 8001db2:	46bd      	mov	sp, r7
 8001db4:	bd80      	pop	{r7, pc}
 8001db6:	bf00      	nop
 8001db8:	40021000 	.word	0x40021000
 8001dbc:	431bde83 	.word	0x431bde83
 8001dc0:	20000344 	.word	0x20000344
 8001dc4:	40000800 	.word	0x40000800
 8001dc8:	20000008 	.word	0x20000008

08001dcc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001dcc:	b480      	push	{r7}
 8001dce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001dd0:	bf00      	nop
 8001dd2:	e7fd      	b.n	8001dd0 <NMI_Handler+0x4>

08001dd4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001dd4:	b480      	push	{r7}
 8001dd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001dd8:	bf00      	nop
 8001dda:	e7fd      	b.n	8001dd8 <HardFault_Handler+0x4>

08001ddc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001ddc:	b480      	push	{r7}
 8001dde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001de0:	bf00      	nop
 8001de2:	e7fd      	b.n	8001de0 <MemManage_Handler+0x4>

08001de4 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001de4:	b480      	push	{r7}
 8001de6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001de8:	bf00      	nop
 8001dea:	e7fd      	b.n	8001de8 <BusFault_Handler+0x4>

08001dec <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001dec:	b480      	push	{r7}
 8001dee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001df0:	bf00      	nop
 8001df2:	e7fd      	b.n	8001df0 <UsageFault_Handler+0x4>

08001df4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001df4:	b480      	push	{r7}
 8001df6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001df8:	bf00      	nop
 8001dfa:	46bd      	mov	sp, r7
 8001dfc:	bc80      	pop	{r7}
 8001dfe:	4770      	bx	lr

08001e00 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001e00:	b580      	push	{r7, lr}
 8001e02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001e04:	4802      	ldr	r0, [pc, #8]	@ (8001e10 <TIM4_IRQHandler+0x10>)
 8001e06:	f002 f893 	bl	8003f30 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001e0a:	bf00      	nop
 8001e0c:	bd80      	pop	{r7, pc}
 8001e0e:	bf00      	nop
 8001e10:	20000344 	.word	0x20000344

08001e14 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001e14:	b480      	push	{r7}
 8001e16:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001e18:	bf00      	nop
 8001e1a:	46bd      	mov	sp, r7
 8001e1c:	bc80      	pop	{r7}
 8001e1e:	4770      	bx	lr

08001e20 <MX_TIM1_Init>:

TIM_HandleTypeDef htim1;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8001e20:	b580      	push	{r7, lr}
 8001e22:	b086      	sub	sp, #24
 8001e24:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e26:	f107 0308 	add.w	r3, r7, #8
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	601a      	str	r2, [r3, #0]
 8001e2e:	605a      	str	r2, [r3, #4]
 8001e30:	609a      	str	r2, [r3, #8]
 8001e32:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001e34:	463b      	mov	r3, r7
 8001e36:	2200      	movs	r2, #0
 8001e38:	601a      	str	r2, [r3, #0]
 8001e3a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001e3c:	4b1e      	ldr	r3, [pc, #120]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e3e:	4a1f      	ldr	r2, [pc, #124]	@ (8001ebc <MX_TIM1_Init+0x9c>)
 8001e40:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 71;
 8001e42:	4b1d      	ldr	r3, [pc, #116]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e44:	2247      	movs	r2, #71	@ 0x47
 8001e46:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e48:	4b1b      	ldr	r3, [pc, #108]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e4a:	2200      	movs	r2, #0
 8001e4c:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8001e4e:	4b1a      	ldr	r3, [pc, #104]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e50:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001e54:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e56:	4b18      	ldr	r3, [pc, #96]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e58:	2200      	movs	r2, #0
 8001e5a:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001e5c:	4b16      	ldr	r3, [pc, #88]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e5e:	2200      	movs	r2, #0
 8001e60:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e62:	4b15      	ldr	r3, [pc, #84]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e64:	2200      	movs	r2, #0
 8001e66:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001e68:	4813      	ldr	r0, [pc, #76]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e6a:	f001 ff4f 	bl	8003d0c <HAL_TIM_Base_Init>
 8001e6e:	4603      	mov	r3, r0
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	d001      	beq.n	8001e78 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 8001e74:	f7ff fe1c 	bl	8001ab0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e78:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001e7c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001e7e:	f107 0308 	add.w	r3, r7, #8
 8001e82:	4619      	mov	r1, r3
 8001e84:	480c      	ldr	r0, [pc, #48]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001e86:	f002 f943 	bl	8004110 <HAL_TIM_ConfigClockSource>
 8001e8a:	4603      	mov	r3, r0
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d001      	beq.n	8001e94 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8001e90:	f7ff fe0e 	bl	8001ab0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001e94:	2300      	movs	r3, #0
 8001e96:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e98:	2300      	movs	r3, #0
 8001e9a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001e9c:	463b      	mov	r3, r7
 8001e9e:	4619      	mov	r1, r3
 8001ea0:	4805      	ldr	r0, [pc, #20]	@ (8001eb8 <MX_TIM1_Init+0x98>)
 8001ea2:	f002 fb25 	bl	80044f0 <HAL_TIMEx_MasterConfigSynchronization>
 8001ea6:	4603      	mov	r3, r0
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d001      	beq.n	8001eb0 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 8001eac:	f7ff fe00 	bl	8001ab0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001eb0:	bf00      	nop
 8001eb2:	3718      	adds	r7, #24
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	bd80      	pop	{r7, pc}
 8001eb8:	2000038c 	.word	0x2000038c
 8001ebc:	40012c00 	.word	0x40012c00

08001ec0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001ec0:	b480      	push	{r7}
 8001ec2:	b085      	sub	sp, #20
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	4a09      	ldr	r2, [pc, #36]	@ (8001ef4 <HAL_TIM_Base_MspInit+0x34>)
 8001ece:	4293      	cmp	r3, r2
 8001ed0:	d10b      	bne.n	8001eea <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001ed2:	4b09      	ldr	r3, [pc, #36]	@ (8001ef8 <HAL_TIM_Base_MspInit+0x38>)
 8001ed4:	699b      	ldr	r3, [r3, #24]
 8001ed6:	4a08      	ldr	r2, [pc, #32]	@ (8001ef8 <HAL_TIM_Base_MspInit+0x38>)
 8001ed8:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001edc:	6193      	str	r3, [r2, #24]
 8001ede:	4b06      	ldr	r3, [pc, #24]	@ (8001ef8 <HAL_TIM_Base_MspInit+0x38>)
 8001ee0:	699b      	ldr	r3, [r3, #24]
 8001ee2:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001ee6:	60fb      	str	r3, [r7, #12]
 8001ee8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8001eea:	bf00      	nop
 8001eec:	3714      	adds	r7, #20
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bc80      	pop	{r7}
 8001ef2:	4770      	bx	lr
 8001ef4:	40012c00 	.word	0x40012c00
 8001ef8:	40021000 	.word	0x40021000

08001efc <Reset_Handler>:
 8001efc:	f7ff ff8a 	bl	8001e14 <SystemInit>
 8001f00:	480b      	ldr	r0, [pc, #44]	@ (8001f30 <LoopFillZerobss+0xe>)
 8001f02:	490c      	ldr	r1, [pc, #48]	@ (8001f34 <LoopFillZerobss+0x12>)
 8001f04:	4a0c      	ldr	r2, [pc, #48]	@ (8001f38 <LoopFillZerobss+0x16>)
 8001f06:	2300      	movs	r3, #0
 8001f08:	e002      	b.n	8001f10 <LoopCopyDataInit>

08001f0a <CopyDataInit>:
 8001f0a:	58d4      	ldr	r4, [r2, r3]
 8001f0c:	50c4      	str	r4, [r0, r3]
 8001f0e:	3304      	adds	r3, #4

08001f10 <LoopCopyDataInit>:
 8001f10:	18c4      	adds	r4, r0, r3
 8001f12:	428c      	cmp	r4, r1
 8001f14:	d3f9      	bcc.n	8001f0a <CopyDataInit>
 8001f16:	4a09      	ldr	r2, [pc, #36]	@ (8001f3c <LoopFillZerobss+0x1a>)
 8001f18:	4c09      	ldr	r4, [pc, #36]	@ (8001f40 <LoopFillZerobss+0x1e>)
 8001f1a:	2300      	movs	r3, #0
 8001f1c:	e001      	b.n	8001f22 <LoopFillZerobss>

08001f1e <FillZerobss>:
 8001f1e:	6013      	str	r3, [r2, #0]
 8001f20:	3204      	adds	r2, #4

08001f22 <LoopFillZerobss>:
 8001f22:	42a2      	cmp	r2, r4
 8001f24:	d3fb      	bcc.n	8001f1e <FillZerobss>
 8001f26:	f005 f965 	bl	80071f4 <__libc_init_array>
 8001f2a:	f7ff fd2b 	bl	8001984 <main>
 8001f2e:	4770      	bx	lr
 8001f30:	20000000 	.word	0x20000000
 8001f34:	20000064 	.word	0x20000064
 8001f38:	080073d8 	.word	0x080073d8
 8001f3c:	20000064 	.word	0x20000064
 8001f40:	20001f00 	.word	0x20001f00

08001f44 <ADC1_2_IRQHandler>:
 8001f44:	e7fe      	b.n	8001f44 <ADC1_2_IRQHandler>
	...

08001f48 <HAL_Init>:
 8001f48:	b580      	push	{r7, lr}
 8001f4a:	af00      	add	r7, sp, #0
 8001f4c:	4b08      	ldr	r3, [pc, #32]	@ (8001f70 <HAL_Init+0x28>)
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	4a07      	ldr	r2, [pc, #28]	@ (8001f70 <HAL_Init+0x28>)
 8001f52:	f043 0310 	orr.w	r3, r3, #16
 8001f56:	6013      	str	r3, [r2, #0]
 8001f58:	2003      	movs	r0, #3
 8001f5a:	f000 ff59 	bl	8002e10 <HAL_NVIC_SetPriorityGrouping>
 8001f5e:	200f      	movs	r0, #15
 8001f60:	f7ff feb6 	bl	8001cd0 <HAL_InitTick>
 8001f64:	f7ff fe7c 	bl	8001c60 <HAL_MspInit>
 8001f68:	2300      	movs	r3, #0
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	bd80      	pop	{r7, pc}
 8001f6e:	bf00      	nop
 8001f70:	40022000 	.word	0x40022000

08001f74 <HAL_IncTick>:
 8001f74:	b480      	push	{r7}
 8001f76:	af00      	add	r7, sp, #0
 8001f78:	4b05      	ldr	r3, [pc, #20]	@ (8001f90 <HAL_IncTick+0x1c>)
 8001f7a:	781b      	ldrb	r3, [r3, #0]
 8001f7c:	461a      	mov	r2, r3
 8001f7e:	4b05      	ldr	r3, [pc, #20]	@ (8001f94 <HAL_IncTick+0x20>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	4413      	add	r3, r2
 8001f84:	4a03      	ldr	r2, [pc, #12]	@ (8001f94 <HAL_IncTick+0x20>)
 8001f86:	6013      	str	r3, [r2, #0]
 8001f88:	bf00      	nop
 8001f8a:	46bd      	mov	sp, r7
 8001f8c:	bc80      	pop	{r7}
 8001f8e:	4770      	bx	lr
 8001f90:	2000000c 	.word	0x2000000c
 8001f94:	200003d4 	.word	0x200003d4

08001f98 <HAL_GetTick>:
 8001f98:	b480      	push	{r7}
 8001f9a:	af00      	add	r7, sp, #0
 8001f9c:	4b02      	ldr	r3, [pc, #8]	@ (8001fa8 <HAL_GetTick+0x10>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	4618      	mov	r0, r3
 8001fa2:	46bd      	mov	sp, r7
 8001fa4:	bc80      	pop	{r7}
 8001fa6:	4770      	bx	lr
 8001fa8:	200003d4 	.word	0x200003d4

08001fac <HAL_ADC_Init>:
 8001fac:	b580      	push	{r7, lr}
 8001fae:	b086      	sub	sp, #24
 8001fb0:	af00      	add	r7, sp, #0
 8001fb2:	6078      	str	r0, [r7, #4]
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	75fb      	strb	r3, [r7, #23]
 8001fb8:	2300      	movs	r3, #0
 8001fba:	613b      	str	r3, [r7, #16]
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	60bb      	str	r3, [r7, #8]
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	60fb      	str	r3, [r7, #12]
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d101      	bne.n	8001fce <HAL_ADC_Init+0x22>
 8001fca:	2301      	movs	r3, #1
 8001fcc:	e0be      	b.n	800214c <HAL_ADC_Init+0x1a0>
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	689b      	ldr	r3, [r3, #8]
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	d109      	bne.n	8001ff0 <HAL_ADC_Init+0x44>
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	2200      	movs	r2, #0
 8001fe0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001fea:	6878      	ldr	r0, [r7, #4]
 8001fec:	f7fe fc20 	bl	8000830 <HAL_ADC_MspInit>
 8001ff0:	6878      	ldr	r0, [r7, #4]
 8001ff2:	f000 fbf1 	bl	80027d8 <ADC_ConversionStop_Disable>
 8001ff6:	4603      	mov	r3, r0
 8001ff8:	75fb      	strb	r3, [r7, #23]
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001ffe:	f003 0310 	and.w	r3, r3, #16
 8002002:	2b00      	cmp	r3, #0
 8002004:	f040 8099 	bne.w	800213a <HAL_ADC_Init+0x18e>
 8002008:	7dfb      	ldrb	r3, [r7, #23]
 800200a:	2b00      	cmp	r3, #0
 800200c:	f040 8095 	bne.w	800213a <HAL_ADC_Init+0x18e>
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002014:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002018:	f023 0302 	bic.w	r3, r3, #2
 800201c:	f043 0202 	orr.w	r2, r3, #2
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	629a      	str	r2, [r3, #40]	@ 0x28
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	685a      	ldr	r2, [r3, #4]
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	69db      	ldr	r3, [r3, #28]
 800202c:	431a      	orrs	r2, r3
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	7b1b      	ldrb	r3, [r3, #12]
 8002032:	005b      	lsls	r3, r3, #1
 8002034:	4313      	orrs	r3, r2
 8002036:	68ba      	ldr	r2, [r7, #8]
 8002038:	4313      	orrs	r3, r2
 800203a:	60bb      	str	r3, [r7, #8]
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	689b      	ldr	r3, [r3, #8]
 8002040:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002044:	d003      	beq.n	800204e <HAL_ADC_Init+0xa2>
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	689b      	ldr	r3, [r3, #8]
 800204a:	2b01      	cmp	r3, #1
 800204c:	d102      	bne.n	8002054 <HAL_ADC_Init+0xa8>
 800204e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002052:	e000      	b.n	8002056 <HAL_ADC_Init+0xaa>
 8002054:	2300      	movs	r3, #0
 8002056:	693a      	ldr	r2, [r7, #16]
 8002058:	4313      	orrs	r3, r2
 800205a:	613b      	str	r3, [r7, #16]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	7d1b      	ldrb	r3, [r3, #20]
 8002060:	2b01      	cmp	r3, #1
 8002062:	d119      	bne.n	8002098 <HAL_ADC_Init+0xec>
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	7b1b      	ldrb	r3, [r3, #12]
 8002068:	2b00      	cmp	r3, #0
 800206a:	d109      	bne.n	8002080 <HAL_ADC_Init+0xd4>
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	699b      	ldr	r3, [r3, #24]
 8002070:	3b01      	subs	r3, #1
 8002072:	035a      	lsls	r2, r3, #13
 8002074:	693b      	ldr	r3, [r7, #16]
 8002076:	4313      	orrs	r3, r2
 8002078:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800207c:	613b      	str	r3, [r7, #16]
 800207e:	e00b      	b.n	8002098 <HAL_ADC_Init+0xec>
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002084:	f043 0220 	orr.w	r2, r3, #32
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	629a      	str	r2, [r3, #40]	@ 0x28
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002090:	f043 0201 	orr.w	r2, r3, #1
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	685b      	ldr	r3, [r3, #4]
 800209e:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	693a      	ldr	r2, [r7, #16]
 80020a8:	430a      	orrs	r2, r1
 80020aa:	605a      	str	r2, [r3, #4]
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	689a      	ldr	r2, [r3, #8]
 80020b2:	4b28      	ldr	r3, [pc, #160]	@ (8002154 <HAL_ADC_Init+0x1a8>)
 80020b4:	4013      	ands	r3, r2
 80020b6:	687a      	ldr	r2, [r7, #4]
 80020b8:	6812      	ldr	r2, [r2, #0]
 80020ba:	68b9      	ldr	r1, [r7, #8]
 80020bc:	430b      	orrs	r3, r1
 80020be:	6093      	str	r3, [r2, #8]
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	689b      	ldr	r3, [r3, #8]
 80020c4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80020c8:	d003      	beq.n	80020d2 <HAL_ADC_Init+0x126>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	689b      	ldr	r3, [r3, #8]
 80020ce:	2b01      	cmp	r3, #1
 80020d0:	d104      	bne.n	80020dc <HAL_ADC_Init+0x130>
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	691b      	ldr	r3, [r3, #16]
 80020d6:	3b01      	subs	r3, #1
 80020d8:	051b      	lsls	r3, r3, #20
 80020da:	60fb      	str	r3, [r7, #12]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020e2:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	68fa      	ldr	r2, [r7, #12]
 80020ec:	430a      	orrs	r2, r1
 80020ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	689a      	ldr	r2, [r3, #8]
 80020f6:	4b18      	ldr	r3, [pc, #96]	@ (8002158 <HAL_ADC_Init+0x1ac>)
 80020f8:	4013      	ands	r3, r2
 80020fa:	68ba      	ldr	r2, [r7, #8]
 80020fc:	429a      	cmp	r2, r3
 80020fe:	d10b      	bne.n	8002118 <HAL_ADC_Init+0x16c>
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	2200      	movs	r2, #0
 8002104:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800210a:	f023 0303 	bic.w	r3, r3, #3
 800210e:	f043 0201 	orr.w	r2, r3, #1
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	629a      	str	r2, [r3, #40]	@ 0x28
 8002116:	e018      	b.n	800214a <HAL_ADC_Init+0x19e>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800211c:	f023 0312 	bic.w	r3, r3, #18
 8002120:	f043 0210 	orr.w	r2, r3, #16
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	629a      	str	r2, [r3, #40]	@ 0x28
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800212c:	f043 0201 	orr.w	r2, r3, #1
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002134:	2301      	movs	r3, #1
 8002136:	75fb      	strb	r3, [r7, #23]
 8002138:	e007      	b.n	800214a <HAL_ADC_Init+0x19e>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800213e:	f043 0210 	orr.w	r2, r3, #16
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	629a      	str	r2, [r3, #40]	@ 0x28
 8002146:	2301      	movs	r3, #1
 8002148:	75fb      	strb	r3, [r7, #23]
 800214a:	7dfb      	ldrb	r3, [r7, #23]
 800214c:	4618      	mov	r0, r3
 800214e:	3718      	adds	r7, #24
 8002150:	46bd      	mov	sp, r7
 8002152:	bd80      	pop	{r7, pc}
 8002154:	ffe1f7fd 	.word	0xffe1f7fd
 8002158:	ff1f0efe 	.word	0xff1f0efe

0800215c <HAL_ADC_Start>:
 800215c:	b580      	push	{r7, lr}
 800215e:	b084      	sub	sp, #16
 8002160:	af00      	add	r7, sp, #0
 8002162:	6078      	str	r0, [r7, #4]
 8002164:	2300      	movs	r3, #0
 8002166:	73fb      	strb	r3, [r7, #15]
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800216e:	2b01      	cmp	r3, #1
 8002170:	d101      	bne.n	8002176 <HAL_ADC_Start+0x1a>
 8002172:	2302      	movs	r3, #2
 8002174:	e098      	b.n	80022a8 <HAL_ADC_Start+0x14c>
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	2201      	movs	r2, #1
 800217a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800217e:	6878      	ldr	r0, [r7, #4]
 8002180:	f000 fad0 	bl	8002724 <ADC_Enable>
 8002184:	4603      	mov	r3, r0
 8002186:	73fb      	strb	r3, [r7, #15]
 8002188:	7bfb      	ldrb	r3, [r7, #15]
 800218a:	2b00      	cmp	r3, #0
 800218c:	f040 8087 	bne.w	800229e <HAL_ADC_Start+0x142>
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002194:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002198:	f023 0301 	bic.w	r3, r3, #1
 800219c:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	629a      	str	r2, [r3, #40]	@ 0x28
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	4a41      	ldr	r2, [pc, #260]	@ (80022b0 <HAL_ADC_Start+0x154>)
 80021aa:	4293      	cmp	r3, r2
 80021ac:	d105      	bne.n	80021ba <HAL_ADC_Start+0x5e>
 80021ae:	4b41      	ldr	r3, [pc, #260]	@ (80022b4 <HAL_ADC_Start+0x158>)
 80021b0:	685b      	ldr	r3, [r3, #4]
 80021b2:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d115      	bne.n	80021e6 <HAL_ADC_Start+0x8a>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021be:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	629a      	str	r2, [r3, #40]	@ 0x28
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	685b      	ldr	r3, [r3, #4]
 80021cc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d026      	beq.n	8002222 <HAL_ADC_Start+0xc6>
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021d8:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80021dc:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	629a      	str	r2, [r3, #40]	@ 0x28
 80021e4:	e01d      	b.n	8002222 <HAL_ADC_Start+0xc6>
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021ea:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	629a      	str	r2, [r3, #40]	@ 0x28
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	4a2f      	ldr	r2, [pc, #188]	@ (80022b4 <HAL_ADC_Start+0x158>)
 80021f8:	4293      	cmp	r3, r2
 80021fa:	d004      	beq.n	8002206 <HAL_ADC_Start+0xaa>
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	4a2b      	ldr	r2, [pc, #172]	@ (80022b0 <HAL_ADC_Start+0x154>)
 8002202:	4293      	cmp	r3, r2
 8002204:	d10d      	bne.n	8002222 <HAL_ADC_Start+0xc6>
 8002206:	4b2b      	ldr	r3, [pc, #172]	@ (80022b4 <HAL_ADC_Start+0x158>)
 8002208:	685b      	ldr	r3, [r3, #4]
 800220a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800220e:	2b00      	cmp	r3, #0
 8002210:	d007      	beq.n	8002222 <HAL_ADC_Start+0xc6>
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002216:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800221a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	629a      	str	r2, [r3, #40]	@ 0x28
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002226:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800222a:	2b00      	cmp	r3, #0
 800222c:	d006      	beq.n	800223c <HAL_ADC_Start+0xe0>
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002232:	f023 0206 	bic.w	r2, r3, #6
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	62da      	str	r2, [r3, #44]	@ 0x2c
 800223a:	e002      	b.n	8002242 <HAL_ADC_Start+0xe6>
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	2200      	movs	r2, #0
 8002240:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	2200      	movs	r2, #0
 8002246:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	681b      	ldr	r3, [r3, #0]
 800224e:	f06f 0202 	mvn.w	r2, #2
 8002252:	601a      	str	r2, [r3, #0]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	689b      	ldr	r3, [r3, #8]
 800225a:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 800225e:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8002262:	d113      	bne.n	800228c <HAL_ADC_Start+0x130>
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	4a11      	ldr	r2, [pc, #68]	@ (80022b0 <HAL_ADC_Start+0x154>)
 800226a:	4293      	cmp	r3, r2
 800226c:	d105      	bne.n	800227a <HAL_ADC_Start+0x11e>
 800226e:	4b11      	ldr	r3, [pc, #68]	@ (80022b4 <HAL_ADC_Start+0x158>)
 8002270:	685b      	ldr	r3, [r3, #4]
 8002272:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002276:	2b00      	cmp	r3, #0
 8002278:	d108      	bne.n	800228c <HAL_ADC_Start+0x130>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	689a      	ldr	r2, [r3, #8]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8002288:	609a      	str	r2, [r3, #8]
 800228a:	e00c      	b.n	80022a6 <HAL_ADC_Start+0x14a>
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	681b      	ldr	r3, [r3, #0]
 8002290:	689a      	ldr	r2, [r3, #8]
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800229a:	609a      	str	r2, [r3, #8]
 800229c:	e003      	b.n	80022a6 <HAL_ADC_Start+0x14a>
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	2200      	movs	r2, #0
 80022a2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80022a6:	7bfb      	ldrb	r3, [r7, #15]
 80022a8:	4618      	mov	r0, r3
 80022aa:	3710      	adds	r7, #16
 80022ac:	46bd      	mov	sp, r7
 80022ae:	bd80      	pop	{r7, pc}
 80022b0:	40012800 	.word	0x40012800
 80022b4:	40012400 	.word	0x40012400

080022b8 <HAL_ADC_Stop>:
 80022b8:	b580      	push	{r7, lr}
 80022ba:	b084      	sub	sp, #16
 80022bc:	af00      	add	r7, sp, #0
 80022be:	6078      	str	r0, [r7, #4]
 80022c0:	2300      	movs	r3, #0
 80022c2:	73fb      	strb	r3, [r7, #15]
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80022ca:	2b01      	cmp	r3, #1
 80022cc:	d101      	bne.n	80022d2 <HAL_ADC_Stop+0x1a>
 80022ce:	2302      	movs	r3, #2
 80022d0:	e01a      	b.n	8002308 <HAL_ADC_Stop+0x50>
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	2201      	movs	r2, #1
 80022d6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80022da:	6878      	ldr	r0, [r7, #4]
 80022dc:	f000 fa7c 	bl	80027d8 <ADC_ConversionStop_Disable>
 80022e0:	4603      	mov	r3, r0
 80022e2:	73fb      	strb	r3, [r7, #15]
 80022e4:	7bfb      	ldrb	r3, [r7, #15]
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d109      	bne.n	80022fe <HAL_ADC_Stop+0x46>
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80022ee:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80022f2:	f023 0301 	bic.w	r3, r3, #1
 80022f6:	f043 0201 	orr.w	r2, r3, #1
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	629a      	str	r2, [r3, #40]	@ 0x28
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	2200      	movs	r2, #0
 8002302:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002306:	7bfb      	ldrb	r3, [r7, #15]
 8002308:	4618      	mov	r0, r3
 800230a:	3710      	adds	r7, #16
 800230c:	46bd      	mov	sp, r7
 800230e:	bd80      	pop	{r7, pc}

08002310 <HAL_ADC_PollForConversion>:
 8002310:	b590      	push	{r4, r7, lr}
 8002312:	b087      	sub	sp, #28
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
 8002318:	6039      	str	r1, [r7, #0]
 800231a:	2300      	movs	r3, #0
 800231c:	617b      	str	r3, [r7, #20]
 800231e:	2300      	movs	r3, #0
 8002320:	60fb      	str	r3, [r7, #12]
 8002322:	2300      	movs	r3, #0
 8002324:	613b      	str	r3, [r7, #16]
 8002326:	f7ff fe37 	bl	8001f98 <HAL_GetTick>
 800232a:	6178      	str	r0, [r7, #20]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	689b      	ldr	r3, [r3, #8]
 8002332:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002336:	2b00      	cmp	r3, #0
 8002338:	d00b      	beq.n	8002352 <HAL_ADC_PollForConversion+0x42>
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800233e:	f043 0220 	orr.w	r2, r3, #32
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	629a      	str	r2, [r3, #40]	@ 0x28
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	2200      	movs	r2, #0
 800234a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800234e:	2301      	movs	r3, #1
 8002350:	e0d3      	b.n	80024fa <HAL_ADC_PollForConversion+0x1ea>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	685b      	ldr	r3, [r3, #4]
 8002358:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800235c:	2b00      	cmp	r3, #0
 800235e:	d131      	bne.n	80023c4 <HAL_ADC_PollForConversion+0xb4>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002366:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 800236a:	2b00      	cmp	r3, #0
 800236c:	d12a      	bne.n	80023c4 <HAL_ADC_PollForConversion+0xb4>
 800236e:	e021      	b.n	80023b4 <HAL_ADC_PollForConversion+0xa4>
 8002370:	683b      	ldr	r3, [r7, #0]
 8002372:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002376:	d01d      	beq.n	80023b4 <HAL_ADC_PollForConversion+0xa4>
 8002378:	683b      	ldr	r3, [r7, #0]
 800237a:	2b00      	cmp	r3, #0
 800237c:	d007      	beq.n	800238e <HAL_ADC_PollForConversion+0x7e>
 800237e:	f7ff fe0b 	bl	8001f98 <HAL_GetTick>
 8002382:	4602      	mov	r2, r0
 8002384:	697b      	ldr	r3, [r7, #20]
 8002386:	1ad3      	subs	r3, r2, r3
 8002388:	683a      	ldr	r2, [r7, #0]
 800238a:	429a      	cmp	r2, r3
 800238c:	d212      	bcs.n	80023b4 <HAL_ADC_PollForConversion+0xa4>
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	f003 0302 	and.w	r3, r3, #2
 8002398:	2b00      	cmp	r3, #0
 800239a:	d10b      	bne.n	80023b4 <HAL_ADC_PollForConversion+0xa4>
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80023a0:	f043 0204 	orr.w	r2, r3, #4
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	2200      	movs	r2, #0
 80023ac:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80023b0:	2303      	movs	r3, #3
 80023b2:	e0a2      	b.n	80024fa <HAL_ADC_PollForConversion+0x1ea>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	f003 0302 	and.w	r3, r3, #2
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d0d6      	beq.n	8002370 <HAL_ADC_PollForConversion+0x60>
 80023c2:	e070      	b.n	80024a6 <HAL_ADC_PollForConversion+0x196>
 80023c4:	4b4f      	ldr	r3, [pc, #316]	@ (8002504 <HAL_ADC_PollForConversion+0x1f4>)
 80023c6:	681c      	ldr	r4, [r3, #0]
 80023c8:	2002      	movs	r0, #2
 80023ca:	f001 fbe9 	bl	8003ba0 <HAL_RCCEx_GetPeriphCLKFreq>
 80023ce:	4603      	mov	r3, r0
 80023d0:	fbb4 f2f3 	udiv	r2, r4, r3
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	6919      	ldr	r1, [r3, #16]
 80023da:	4b4b      	ldr	r3, [pc, #300]	@ (8002508 <HAL_ADC_PollForConversion+0x1f8>)
 80023dc:	400b      	ands	r3, r1
 80023de:	2b00      	cmp	r3, #0
 80023e0:	d118      	bne.n	8002414 <HAL_ADC_PollForConversion+0x104>
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	68d9      	ldr	r1, [r3, #12]
 80023e8:	4b48      	ldr	r3, [pc, #288]	@ (800250c <HAL_ADC_PollForConversion+0x1fc>)
 80023ea:	400b      	ands	r3, r1
 80023ec:	2b00      	cmp	r3, #0
 80023ee:	d111      	bne.n	8002414 <HAL_ADC_PollForConversion+0x104>
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	6919      	ldr	r1, [r3, #16]
 80023f6:	4b46      	ldr	r3, [pc, #280]	@ (8002510 <HAL_ADC_PollForConversion+0x200>)
 80023f8:	400b      	ands	r3, r1
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d108      	bne.n	8002410 <HAL_ADC_PollForConversion+0x100>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	68d9      	ldr	r1, [r3, #12]
 8002404:	4b43      	ldr	r3, [pc, #268]	@ (8002514 <HAL_ADC_PollForConversion+0x204>)
 8002406:	400b      	ands	r3, r1
 8002408:	2b00      	cmp	r3, #0
 800240a:	d101      	bne.n	8002410 <HAL_ADC_PollForConversion+0x100>
 800240c:	2314      	movs	r3, #20
 800240e:	e020      	b.n	8002452 <HAL_ADC_PollForConversion+0x142>
 8002410:	2329      	movs	r3, #41	@ 0x29
 8002412:	e01e      	b.n	8002452 <HAL_ADC_PollForConversion+0x142>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	6919      	ldr	r1, [r3, #16]
 800241a:	4b3d      	ldr	r3, [pc, #244]	@ (8002510 <HAL_ADC_PollForConversion+0x200>)
 800241c:	400b      	ands	r3, r1
 800241e:	2b00      	cmp	r3, #0
 8002420:	d106      	bne.n	8002430 <HAL_ADC_PollForConversion+0x120>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	68d9      	ldr	r1, [r3, #12]
 8002428:	4b3a      	ldr	r3, [pc, #232]	@ (8002514 <HAL_ADC_PollForConversion+0x204>)
 800242a:	400b      	ands	r3, r1
 800242c:	2b00      	cmp	r3, #0
 800242e:	d00d      	beq.n	800244c <HAL_ADC_PollForConversion+0x13c>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	6919      	ldr	r1, [r3, #16]
 8002436:	4b38      	ldr	r3, [pc, #224]	@ (8002518 <HAL_ADC_PollForConversion+0x208>)
 8002438:	400b      	ands	r3, r1
 800243a:	2b00      	cmp	r3, #0
 800243c:	d108      	bne.n	8002450 <HAL_ADC_PollForConversion+0x140>
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	68d9      	ldr	r1, [r3, #12]
 8002444:	4b34      	ldr	r3, [pc, #208]	@ (8002518 <HAL_ADC_PollForConversion+0x208>)
 8002446:	400b      	ands	r3, r1
 8002448:	2b00      	cmp	r3, #0
 800244a:	d101      	bne.n	8002450 <HAL_ADC_PollForConversion+0x140>
 800244c:	2354      	movs	r3, #84	@ 0x54
 800244e:	e000      	b.n	8002452 <HAL_ADC_PollForConversion+0x142>
 8002450:	23fc      	movs	r3, #252	@ 0xfc
 8002452:	fb02 f303 	mul.w	r3, r2, r3
 8002456:	613b      	str	r3, [r7, #16]
 8002458:	e021      	b.n	800249e <HAL_ADC_PollForConversion+0x18e>
 800245a:	683b      	ldr	r3, [r7, #0]
 800245c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002460:	d01a      	beq.n	8002498 <HAL_ADC_PollForConversion+0x188>
 8002462:	683b      	ldr	r3, [r7, #0]
 8002464:	2b00      	cmp	r3, #0
 8002466:	d007      	beq.n	8002478 <HAL_ADC_PollForConversion+0x168>
 8002468:	f7ff fd96 	bl	8001f98 <HAL_GetTick>
 800246c:	4602      	mov	r2, r0
 800246e:	697b      	ldr	r3, [r7, #20]
 8002470:	1ad3      	subs	r3, r2, r3
 8002472:	683a      	ldr	r2, [r7, #0]
 8002474:	429a      	cmp	r2, r3
 8002476:	d20f      	bcs.n	8002498 <HAL_ADC_PollForConversion+0x188>
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	693a      	ldr	r2, [r7, #16]
 800247c:	429a      	cmp	r2, r3
 800247e:	d90b      	bls.n	8002498 <HAL_ADC_PollForConversion+0x188>
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002484:	f043 0204 	orr.w	r2, r3, #4
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	629a      	str	r2, [r3, #40]	@ 0x28
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	2200      	movs	r2, #0
 8002490:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002494:	2303      	movs	r3, #3
 8002496:	e030      	b.n	80024fa <HAL_ADC_PollForConversion+0x1ea>
 8002498:	68fb      	ldr	r3, [r7, #12]
 800249a:	3301      	adds	r3, #1
 800249c:	60fb      	str	r3, [r7, #12]
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	693a      	ldr	r2, [r7, #16]
 80024a2:	429a      	cmp	r2, r3
 80024a4:	d8d9      	bhi.n	800245a <HAL_ADC_PollForConversion+0x14a>
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f06f 0212 	mvn.w	r2, #18
 80024ae:	601a      	str	r2, [r3, #0]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024b4:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	629a      	str	r2, [r3, #40]	@ 0x28
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	689b      	ldr	r3, [r3, #8]
 80024c2:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 80024c6:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 80024ca:	d115      	bne.n	80024f8 <HAL_ADC_PollForConversion+0x1e8>
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	7b1b      	ldrb	r3, [r3, #12]
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d111      	bne.n	80024f8 <HAL_ADC_PollForConversion+0x1e8>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024d8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	629a      	str	r2, [r3, #40]	@ 0x28
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024e4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d105      	bne.n	80024f8 <HAL_ADC_PollForConversion+0x1e8>
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024f0:	f043 0201 	orr.w	r2, r3, #1
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	629a      	str	r2, [r3, #40]	@ 0x28
 80024f8:	2300      	movs	r3, #0
 80024fa:	4618      	mov	r0, r3
 80024fc:	371c      	adds	r7, #28
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd90      	pop	{r4, r7, pc}
 8002502:	bf00      	nop
 8002504:	20000004 	.word	0x20000004
 8002508:	24924924 	.word	0x24924924
 800250c:	00924924 	.word	0x00924924
 8002510:	12492492 	.word	0x12492492
 8002514:	00492492 	.word	0x00492492
 8002518:	00249249 	.word	0x00249249

0800251c <HAL_ADC_GetValue>:
 800251c:	b480      	push	{r7}
 800251e:	b083      	sub	sp, #12
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800252a:	4618      	mov	r0, r3
 800252c:	370c      	adds	r7, #12
 800252e:	46bd      	mov	sp, r7
 8002530:	bc80      	pop	{r7}
 8002532:	4770      	bx	lr

08002534 <HAL_ADC_ConfigChannel>:
 8002534:	b480      	push	{r7}
 8002536:	b085      	sub	sp, #20
 8002538:	af00      	add	r7, sp, #0
 800253a:	6078      	str	r0, [r7, #4]
 800253c:	6039      	str	r1, [r7, #0]
 800253e:	2300      	movs	r3, #0
 8002540:	73fb      	strb	r3, [r7, #15]
 8002542:	2300      	movs	r3, #0
 8002544:	60bb      	str	r3, [r7, #8]
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800254c:	2b01      	cmp	r3, #1
 800254e:	d101      	bne.n	8002554 <HAL_ADC_ConfigChannel+0x20>
 8002550:	2302      	movs	r3, #2
 8002552:	e0dc      	b.n	800270e <HAL_ADC_ConfigChannel+0x1da>
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	2201      	movs	r2, #1
 8002558:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800255c:	683b      	ldr	r3, [r7, #0]
 800255e:	685b      	ldr	r3, [r3, #4]
 8002560:	2b06      	cmp	r3, #6
 8002562:	d81c      	bhi.n	800259e <HAL_ADC_ConfigChannel+0x6a>
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800256a:	683b      	ldr	r3, [r7, #0]
 800256c:	685a      	ldr	r2, [r3, #4]
 800256e:	4613      	mov	r3, r2
 8002570:	009b      	lsls	r3, r3, #2
 8002572:	4413      	add	r3, r2
 8002574:	3b05      	subs	r3, #5
 8002576:	221f      	movs	r2, #31
 8002578:	fa02 f303 	lsl.w	r3, r2, r3
 800257c:	43db      	mvns	r3, r3
 800257e:	4019      	ands	r1, r3
 8002580:	683b      	ldr	r3, [r7, #0]
 8002582:	6818      	ldr	r0, [r3, #0]
 8002584:	683b      	ldr	r3, [r7, #0]
 8002586:	685a      	ldr	r2, [r3, #4]
 8002588:	4613      	mov	r3, r2
 800258a:	009b      	lsls	r3, r3, #2
 800258c:	4413      	add	r3, r2
 800258e:	3b05      	subs	r3, #5
 8002590:	fa00 f203 	lsl.w	r2, r0, r3
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	430a      	orrs	r2, r1
 800259a:	635a      	str	r2, [r3, #52]	@ 0x34
 800259c:	e03c      	b.n	8002618 <HAL_ADC_ConfigChannel+0xe4>
 800259e:	683b      	ldr	r3, [r7, #0]
 80025a0:	685b      	ldr	r3, [r3, #4]
 80025a2:	2b0c      	cmp	r3, #12
 80025a4:	d81c      	bhi.n	80025e0 <HAL_ADC_ConfigChannel+0xac>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80025ac:	683b      	ldr	r3, [r7, #0]
 80025ae:	685a      	ldr	r2, [r3, #4]
 80025b0:	4613      	mov	r3, r2
 80025b2:	009b      	lsls	r3, r3, #2
 80025b4:	4413      	add	r3, r2
 80025b6:	3b23      	subs	r3, #35	@ 0x23
 80025b8:	221f      	movs	r2, #31
 80025ba:	fa02 f303 	lsl.w	r3, r2, r3
 80025be:	43db      	mvns	r3, r3
 80025c0:	4019      	ands	r1, r3
 80025c2:	683b      	ldr	r3, [r7, #0]
 80025c4:	6818      	ldr	r0, [r3, #0]
 80025c6:	683b      	ldr	r3, [r7, #0]
 80025c8:	685a      	ldr	r2, [r3, #4]
 80025ca:	4613      	mov	r3, r2
 80025cc:	009b      	lsls	r3, r3, #2
 80025ce:	4413      	add	r3, r2
 80025d0:	3b23      	subs	r3, #35	@ 0x23
 80025d2:	fa00 f203 	lsl.w	r2, r0, r3
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	681b      	ldr	r3, [r3, #0]
 80025da:	430a      	orrs	r2, r1
 80025dc:	631a      	str	r2, [r3, #48]	@ 0x30
 80025de:	e01b      	b.n	8002618 <HAL_ADC_ConfigChannel+0xe4>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80025e6:	683b      	ldr	r3, [r7, #0]
 80025e8:	685a      	ldr	r2, [r3, #4]
 80025ea:	4613      	mov	r3, r2
 80025ec:	009b      	lsls	r3, r3, #2
 80025ee:	4413      	add	r3, r2
 80025f0:	3b41      	subs	r3, #65	@ 0x41
 80025f2:	221f      	movs	r2, #31
 80025f4:	fa02 f303 	lsl.w	r3, r2, r3
 80025f8:	43db      	mvns	r3, r3
 80025fa:	4019      	ands	r1, r3
 80025fc:	683b      	ldr	r3, [r7, #0]
 80025fe:	6818      	ldr	r0, [r3, #0]
 8002600:	683b      	ldr	r3, [r7, #0]
 8002602:	685a      	ldr	r2, [r3, #4]
 8002604:	4613      	mov	r3, r2
 8002606:	009b      	lsls	r3, r3, #2
 8002608:	4413      	add	r3, r2
 800260a:	3b41      	subs	r3, #65	@ 0x41
 800260c:	fa00 f203 	lsl.w	r2, r0, r3
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	681b      	ldr	r3, [r3, #0]
 8002614:	430a      	orrs	r2, r1
 8002616:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002618:	683b      	ldr	r3, [r7, #0]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	2b09      	cmp	r3, #9
 800261e:	d91c      	bls.n	800265a <HAL_ADC_ConfigChannel+0x126>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	68d9      	ldr	r1, [r3, #12]
 8002626:	683b      	ldr	r3, [r7, #0]
 8002628:	681a      	ldr	r2, [r3, #0]
 800262a:	4613      	mov	r3, r2
 800262c:	005b      	lsls	r3, r3, #1
 800262e:	4413      	add	r3, r2
 8002630:	3b1e      	subs	r3, #30
 8002632:	2207      	movs	r2, #7
 8002634:	fa02 f303 	lsl.w	r3, r2, r3
 8002638:	43db      	mvns	r3, r3
 800263a:	4019      	ands	r1, r3
 800263c:	683b      	ldr	r3, [r7, #0]
 800263e:	6898      	ldr	r0, [r3, #8]
 8002640:	683b      	ldr	r3, [r7, #0]
 8002642:	681a      	ldr	r2, [r3, #0]
 8002644:	4613      	mov	r3, r2
 8002646:	005b      	lsls	r3, r3, #1
 8002648:	4413      	add	r3, r2
 800264a:	3b1e      	subs	r3, #30
 800264c:	fa00 f203 	lsl.w	r2, r0, r3
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	430a      	orrs	r2, r1
 8002656:	60da      	str	r2, [r3, #12]
 8002658:	e019      	b.n	800268e <HAL_ADC_ConfigChannel+0x15a>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	6919      	ldr	r1, [r3, #16]
 8002660:	683b      	ldr	r3, [r7, #0]
 8002662:	681a      	ldr	r2, [r3, #0]
 8002664:	4613      	mov	r3, r2
 8002666:	005b      	lsls	r3, r3, #1
 8002668:	4413      	add	r3, r2
 800266a:	2207      	movs	r2, #7
 800266c:	fa02 f303 	lsl.w	r3, r2, r3
 8002670:	43db      	mvns	r3, r3
 8002672:	4019      	ands	r1, r3
 8002674:	683b      	ldr	r3, [r7, #0]
 8002676:	6898      	ldr	r0, [r3, #8]
 8002678:	683b      	ldr	r3, [r7, #0]
 800267a:	681a      	ldr	r2, [r3, #0]
 800267c:	4613      	mov	r3, r2
 800267e:	005b      	lsls	r3, r3, #1
 8002680:	4413      	add	r3, r2
 8002682:	fa00 f203 	lsl.w	r2, r0, r3
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	430a      	orrs	r2, r1
 800268c:	611a      	str	r2, [r3, #16]
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	2b10      	cmp	r3, #16
 8002694:	d003      	beq.n	800269e <HAL_ADC_ConfigChannel+0x16a>
 8002696:	683b      	ldr	r3, [r7, #0]
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	2b11      	cmp	r3, #17
 800269c:	d132      	bne.n	8002704 <HAL_ADC_ConfigChannel+0x1d0>
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	4a1d      	ldr	r2, [pc, #116]	@ (8002718 <HAL_ADC_ConfigChannel+0x1e4>)
 80026a4:	4293      	cmp	r3, r2
 80026a6:	d125      	bne.n	80026f4 <HAL_ADC_ConfigChannel+0x1c0>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	681b      	ldr	r3, [r3, #0]
 80026ac:	689b      	ldr	r3, [r3, #8]
 80026ae:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d126      	bne.n	8002704 <HAL_ADC_ConfigChannel+0x1d0>
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	689a      	ldr	r2, [r3, #8]
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80026c4:	609a      	str	r2, [r3, #8]
 80026c6:	683b      	ldr	r3, [r7, #0]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	2b10      	cmp	r3, #16
 80026cc:	d11a      	bne.n	8002704 <HAL_ADC_ConfigChannel+0x1d0>
 80026ce:	4b13      	ldr	r3, [pc, #76]	@ (800271c <HAL_ADC_ConfigChannel+0x1e8>)
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	4a13      	ldr	r2, [pc, #76]	@ (8002720 <HAL_ADC_ConfigChannel+0x1ec>)
 80026d4:	fba2 2303 	umull	r2, r3, r2, r3
 80026d8:	0c9a      	lsrs	r2, r3, #18
 80026da:	4613      	mov	r3, r2
 80026dc:	009b      	lsls	r3, r3, #2
 80026de:	4413      	add	r3, r2
 80026e0:	005b      	lsls	r3, r3, #1
 80026e2:	60bb      	str	r3, [r7, #8]
 80026e4:	e002      	b.n	80026ec <HAL_ADC_ConfigChannel+0x1b8>
 80026e6:	68bb      	ldr	r3, [r7, #8]
 80026e8:	3b01      	subs	r3, #1
 80026ea:	60bb      	str	r3, [r7, #8]
 80026ec:	68bb      	ldr	r3, [r7, #8]
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d1f9      	bne.n	80026e6 <HAL_ADC_ConfigChannel+0x1b2>
 80026f2:	e007      	b.n	8002704 <HAL_ADC_ConfigChannel+0x1d0>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80026f8:	f043 0220 	orr.w	r2, r3, #32
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	629a      	str	r2, [r3, #40]	@ 0x28
 8002700:	2301      	movs	r3, #1
 8002702:	73fb      	strb	r3, [r7, #15]
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	2200      	movs	r2, #0
 8002708:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800270c:	7bfb      	ldrb	r3, [r7, #15]
 800270e:	4618      	mov	r0, r3
 8002710:	3714      	adds	r7, #20
 8002712:	46bd      	mov	sp, r7
 8002714:	bc80      	pop	{r7}
 8002716:	4770      	bx	lr
 8002718:	40012400 	.word	0x40012400
 800271c:	20000004 	.word	0x20000004
 8002720:	431bde83 	.word	0x431bde83

08002724 <ADC_Enable>:
 8002724:	b580      	push	{r7, lr}
 8002726:	b084      	sub	sp, #16
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
 800272c:	2300      	movs	r3, #0
 800272e:	60fb      	str	r3, [r7, #12]
 8002730:	2300      	movs	r3, #0
 8002732:	60bb      	str	r3, [r7, #8]
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	689b      	ldr	r3, [r3, #8]
 800273a:	f003 0301 	and.w	r3, r3, #1
 800273e:	2b01      	cmp	r3, #1
 8002740:	d040      	beq.n	80027c4 <ADC_Enable+0xa0>
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	689a      	ldr	r2, [r3, #8]
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	f042 0201 	orr.w	r2, r2, #1
 8002750:	609a      	str	r2, [r3, #8]
 8002752:	4b1f      	ldr	r3, [pc, #124]	@ (80027d0 <ADC_Enable+0xac>)
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	4a1f      	ldr	r2, [pc, #124]	@ (80027d4 <ADC_Enable+0xb0>)
 8002758:	fba2 2303 	umull	r2, r3, r2, r3
 800275c:	0c9b      	lsrs	r3, r3, #18
 800275e:	60bb      	str	r3, [r7, #8]
 8002760:	e002      	b.n	8002768 <ADC_Enable+0x44>
 8002762:	68bb      	ldr	r3, [r7, #8]
 8002764:	3b01      	subs	r3, #1
 8002766:	60bb      	str	r3, [r7, #8]
 8002768:	68bb      	ldr	r3, [r7, #8]
 800276a:	2b00      	cmp	r3, #0
 800276c:	d1f9      	bne.n	8002762 <ADC_Enable+0x3e>
 800276e:	f7ff fc13 	bl	8001f98 <HAL_GetTick>
 8002772:	60f8      	str	r0, [r7, #12]
 8002774:	e01f      	b.n	80027b6 <ADC_Enable+0x92>
 8002776:	f7ff fc0f 	bl	8001f98 <HAL_GetTick>
 800277a:	4602      	mov	r2, r0
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	1ad3      	subs	r3, r2, r3
 8002780:	2b02      	cmp	r3, #2
 8002782:	d918      	bls.n	80027b6 <ADC_Enable+0x92>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	689b      	ldr	r3, [r3, #8]
 800278a:	f003 0301 	and.w	r3, r3, #1
 800278e:	2b01      	cmp	r3, #1
 8002790:	d011      	beq.n	80027b6 <ADC_Enable+0x92>
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002796:	f043 0210 	orr.w	r2, r3, #16
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	629a      	str	r2, [r3, #40]	@ 0x28
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80027a2:	f043 0201 	orr.w	r2, r3, #1
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	2200      	movs	r2, #0
 80027ae:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80027b2:	2301      	movs	r3, #1
 80027b4:	e007      	b.n	80027c6 <ADC_Enable+0xa2>
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	689b      	ldr	r3, [r3, #8]
 80027bc:	f003 0301 	and.w	r3, r3, #1
 80027c0:	2b01      	cmp	r3, #1
 80027c2:	d1d8      	bne.n	8002776 <ADC_Enable+0x52>
 80027c4:	2300      	movs	r3, #0
 80027c6:	4618      	mov	r0, r3
 80027c8:	3710      	adds	r7, #16
 80027ca:	46bd      	mov	sp, r7
 80027cc:	bd80      	pop	{r7, pc}
 80027ce:	bf00      	nop
 80027d0:	20000004 	.word	0x20000004
 80027d4:	431bde83 	.word	0x431bde83

080027d8 <ADC_ConversionStop_Disable>:
 80027d8:	b580      	push	{r7, lr}
 80027da:	b084      	sub	sp, #16
 80027dc:	af00      	add	r7, sp, #0
 80027de:	6078      	str	r0, [r7, #4]
 80027e0:	2300      	movs	r3, #0
 80027e2:	60fb      	str	r3, [r7, #12]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	689b      	ldr	r3, [r3, #8]
 80027ea:	f003 0301 	and.w	r3, r3, #1
 80027ee:	2b01      	cmp	r3, #1
 80027f0:	d12e      	bne.n	8002850 <ADC_ConversionStop_Disable+0x78>
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	689a      	ldr	r2, [r3, #8]
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	f022 0201 	bic.w	r2, r2, #1
 8002800:	609a      	str	r2, [r3, #8]
 8002802:	f7ff fbc9 	bl	8001f98 <HAL_GetTick>
 8002806:	60f8      	str	r0, [r7, #12]
 8002808:	e01b      	b.n	8002842 <ADC_ConversionStop_Disable+0x6a>
 800280a:	f7ff fbc5 	bl	8001f98 <HAL_GetTick>
 800280e:	4602      	mov	r2, r0
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	1ad3      	subs	r3, r2, r3
 8002814:	2b02      	cmp	r3, #2
 8002816:	d914      	bls.n	8002842 <ADC_ConversionStop_Disable+0x6a>
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	689b      	ldr	r3, [r3, #8]
 800281e:	f003 0301 	and.w	r3, r3, #1
 8002822:	2b01      	cmp	r3, #1
 8002824:	d10d      	bne.n	8002842 <ADC_ConversionStop_Disable+0x6a>
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800282a:	f043 0210 	orr.w	r2, r3, #16
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	629a      	str	r2, [r3, #40]	@ 0x28
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002836:	f043 0201 	orr.w	r2, r3, #1
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800283e:	2301      	movs	r3, #1
 8002840:	e007      	b.n	8002852 <ADC_ConversionStop_Disable+0x7a>
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	689b      	ldr	r3, [r3, #8]
 8002848:	f003 0301 	and.w	r3, r3, #1
 800284c:	2b01      	cmp	r3, #1
 800284e:	d0dc      	beq.n	800280a <ADC_ConversionStop_Disable+0x32>
 8002850:	2300      	movs	r3, #0
 8002852:	4618      	mov	r0, r3
 8002854:	3710      	adds	r7, #16
 8002856:	46bd      	mov	sp, r7
 8002858:	bd80      	pop	{r7, pc}

0800285a <HAL_CAN_Init>:
 800285a:	b580      	push	{r7, lr}
 800285c:	b084      	sub	sp, #16
 800285e:	af00      	add	r7, sp, #0
 8002860:	6078      	str	r0, [r7, #4]
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	2b00      	cmp	r3, #0
 8002866:	d101      	bne.n	800286c <HAL_CAN_Init+0x12>
 8002868:	2301      	movs	r3, #1
 800286a:	e0ed      	b.n	8002a48 <HAL_CAN_Init+0x1ee>
 800286c:	687b      	ldr	r3, [r7, #4]
 800286e:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002872:	b2db      	uxtb	r3, r3
 8002874:	2b00      	cmp	r3, #0
 8002876:	d102      	bne.n	800287e <HAL_CAN_Init+0x24>
 8002878:	6878      	ldr	r0, [r7, #4]
 800287a:	f7fe fbd5 	bl	8001028 <HAL_CAN_MspInit>
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	681a      	ldr	r2, [r3, #0]
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	f042 0201 	orr.w	r2, r2, #1
 800288c:	601a      	str	r2, [r3, #0]
 800288e:	f7ff fb83 	bl	8001f98 <HAL_GetTick>
 8002892:	60f8      	str	r0, [r7, #12]
 8002894:	e012      	b.n	80028bc <HAL_CAN_Init+0x62>
 8002896:	f7ff fb7f 	bl	8001f98 <HAL_GetTick>
 800289a:	4602      	mov	r2, r0
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	1ad3      	subs	r3, r2, r3
 80028a0:	2b0a      	cmp	r3, #10
 80028a2:	d90b      	bls.n	80028bc <HAL_CAN_Init+0x62>
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028a8:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	625a      	str	r2, [r3, #36]	@ 0x24
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	2205      	movs	r2, #5
 80028b4:	f883 2020 	strb.w	r2, [r3, #32]
 80028b8:	2301      	movs	r3, #1
 80028ba:	e0c5      	b.n	8002a48 <HAL_CAN_Init+0x1ee>
 80028bc:	687b      	ldr	r3, [r7, #4]
 80028be:	681b      	ldr	r3, [r3, #0]
 80028c0:	685b      	ldr	r3, [r3, #4]
 80028c2:	f003 0301 	and.w	r3, r3, #1
 80028c6:	2b00      	cmp	r3, #0
 80028c8:	d0e5      	beq.n	8002896 <HAL_CAN_Init+0x3c>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	681a      	ldr	r2, [r3, #0]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	f022 0202 	bic.w	r2, r2, #2
 80028d8:	601a      	str	r2, [r3, #0]
 80028da:	f7ff fb5d 	bl	8001f98 <HAL_GetTick>
 80028de:	60f8      	str	r0, [r7, #12]
 80028e0:	e012      	b.n	8002908 <HAL_CAN_Init+0xae>
 80028e2:	f7ff fb59 	bl	8001f98 <HAL_GetTick>
 80028e6:	4602      	mov	r2, r0
 80028e8:	68fb      	ldr	r3, [r7, #12]
 80028ea:	1ad3      	subs	r3, r2, r3
 80028ec:	2b0a      	cmp	r3, #10
 80028ee:	d90b      	bls.n	8002908 <HAL_CAN_Init+0xae>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028f4:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	625a      	str	r2, [r3, #36]	@ 0x24
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	2205      	movs	r2, #5
 8002900:	f883 2020 	strb.w	r2, [r3, #32]
 8002904:	2301      	movs	r3, #1
 8002906:	e09f      	b.n	8002a48 <HAL_CAN_Init+0x1ee>
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	685b      	ldr	r3, [r3, #4]
 800290e:	f003 0302 	and.w	r3, r3, #2
 8002912:	2b00      	cmp	r3, #0
 8002914:	d1e5      	bne.n	80028e2 <HAL_CAN_Init+0x88>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	7e1b      	ldrb	r3, [r3, #24]
 800291a:	2b01      	cmp	r3, #1
 800291c:	d108      	bne.n	8002930 <HAL_CAN_Init+0xd6>
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	681a      	ldr	r2, [r3, #0]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800292c:	601a      	str	r2, [r3, #0]
 800292e:	e007      	b.n	8002940 <HAL_CAN_Init+0xe6>
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	681a      	ldr	r2, [r3, #0]
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800293e:	601a      	str	r2, [r3, #0]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	7e5b      	ldrb	r3, [r3, #25]
 8002944:	2b01      	cmp	r3, #1
 8002946:	d108      	bne.n	800295a <HAL_CAN_Init+0x100>
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	681a      	ldr	r2, [r3, #0]
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002956:	601a      	str	r2, [r3, #0]
 8002958:	e007      	b.n	800296a <HAL_CAN_Init+0x110>
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	681a      	ldr	r2, [r3, #0]
 8002960:	687b      	ldr	r3, [r7, #4]
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002968:	601a      	str	r2, [r3, #0]
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	7e9b      	ldrb	r3, [r3, #26]
 800296e:	2b01      	cmp	r3, #1
 8002970:	d108      	bne.n	8002984 <HAL_CAN_Init+0x12a>
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	681a      	ldr	r2, [r3, #0]
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	f042 0220 	orr.w	r2, r2, #32
 8002980:	601a      	str	r2, [r3, #0]
 8002982:	e007      	b.n	8002994 <HAL_CAN_Init+0x13a>
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	681a      	ldr	r2, [r3, #0]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	f022 0220 	bic.w	r2, r2, #32
 8002992:	601a      	str	r2, [r3, #0]
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	7edb      	ldrb	r3, [r3, #27]
 8002998:	2b01      	cmp	r3, #1
 800299a:	d108      	bne.n	80029ae <HAL_CAN_Init+0x154>
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	681a      	ldr	r2, [r3, #0]
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	681b      	ldr	r3, [r3, #0]
 80029a6:	f022 0210 	bic.w	r2, r2, #16
 80029aa:	601a      	str	r2, [r3, #0]
 80029ac:	e007      	b.n	80029be <HAL_CAN_Init+0x164>
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	681a      	ldr	r2, [r3, #0]
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	681b      	ldr	r3, [r3, #0]
 80029b8:	f042 0210 	orr.w	r2, r2, #16
 80029bc:	601a      	str	r2, [r3, #0]
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	7f1b      	ldrb	r3, [r3, #28]
 80029c2:	2b01      	cmp	r3, #1
 80029c4:	d108      	bne.n	80029d8 <HAL_CAN_Init+0x17e>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	681a      	ldr	r2, [r3, #0]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	f042 0208 	orr.w	r2, r2, #8
 80029d4:	601a      	str	r2, [r3, #0]
 80029d6:	e007      	b.n	80029e8 <HAL_CAN_Init+0x18e>
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	681b      	ldr	r3, [r3, #0]
 80029dc:	681a      	ldr	r2, [r3, #0]
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	f022 0208 	bic.w	r2, r2, #8
 80029e6:	601a      	str	r2, [r3, #0]
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	7f5b      	ldrb	r3, [r3, #29]
 80029ec:	2b01      	cmp	r3, #1
 80029ee:	d108      	bne.n	8002a02 <HAL_CAN_Init+0x1a8>
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	681a      	ldr	r2, [r3, #0]
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	f042 0204 	orr.w	r2, r2, #4
 80029fe:	601a      	str	r2, [r3, #0]
 8002a00:	e007      	b.n	8002a12 <HAL_CAN_Init+0x1b8>
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	681a      	ldr	r2, [r3, #0]
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	f022 0204 	bic.w	r2, r2, #4
 8002a10:	601a      	str	r2, [r3, #0]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	689a      	ldr	r2, [r3, #8]
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	68db      	ldr	r3, [r3, #12]
 8002a1a:	431a      	orrs	r2, r3
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	691b      	ldr	r3, [r3, #16]
 8002a20:	431a      	orrs	r2, r3
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	695b      	ldr	r3, [r3, #20]
 8002a26:	ea42 0103 	orr.w	r1, r2, r3
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	685b      	ldr	r3, [r3, #4]
 8002a2e:	1e5a      	subs	r2, r3, #1
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	430a      	orrs	r2, r1
 8002a36:	61da      	str	r2, [r3, #28]
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	625a      	str	r2, [r3, #36]	@ 0x24
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	2201      	movs	r2, #1
 8002a42:	f883 2020 	strb.w	r2, [r3, #32]
 8002a46:	2300      	movs	r3, #0
 8002a48:	4618      	mov	r0, r3
 8002a4a:	3710      	adds	r7, #16
 8002a4c:	46bd      	mov	sp, r7
 8002a4e:	bd80      	pop	{r7, pc}

08002a50 <HAL_CAN_Start>:
 8002a50:	b580      	push	{r7, lr}
 8002a52:	b084      	sub	sp, #16
 8002a54:	af00      	add	r7, sp, #0
 8002a56:	6078      	str	r0, [r7, #4]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002a5e:	b2db      	uxtb	r3, r3
 8002a60:	2b01      	cmp	r3, #1
 8002a62:	d12e      	bne.n	8002ac2 <HAL_CAN_Start+0x72>
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	2202      	movs	r2, #2
 8002a68:	f883 2020 	strb.w	r2, [r3, #32]
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	681a      	ldr	r2, [r3, #0]
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f022 0201 	bic.w	r2, r2, #1
 8002a7a:	601a      	str	r2, [r3, #0]
 8002a7c:	f7ff fa8c 	bl	8001f98 <HAL_GetTick>
 8002a80:	60f8      	str	r0, [r7, #12]
 8002a82:	e012      	b.n	8002aaa <HAL_CAN_Start+0x5a>
 8002a84:	f7ff fa88 	bl	8001f98 <HAL_GetTick>
 8002a88:	4602      	mov	r2, r0
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	1ad3      	subs	r3, r2, r3
 8002a8e:	2b0a      	cmp	r3, #10
 8002a90:	d90b      	bls.n	8002aaa <HAL_CAN_Start+0x5a>
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a96:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	625a      	str	r2, [r3, #36]	@ 0x24
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	2205      	movs	r2, #5
 8002aa2:	f883 2020 	strb.w	r2, [r3, #32]
 8002aa6:	2301      	movs	r3, #1
 8002aa8:	e012      	b.n	8002ad0 <HAL_CAN_Start+0x80>
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	685b      	ldr	r3, [r3, #4]
 8002ab0:	f003 0301 	and.w	r3, r3, #1
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d1e5      	bne.n	8002a84 <HAL_CAN_Start+0x34>
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	2200      	movs	r2, #0
 8002abc:	625a      	str	r2, [r3, #36]	@ 0x24
 8002abe:	2300      	movs	r3, #0
 8002ac0:	e006      	b.n	8002ad0 <HAL_CAN_Start+0x80>
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ac6:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	625a      	str	r2, [r3, #36]	@ 0x24
 8002ace:	2301      	movs	r3, #1
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	3710      	adds	r7, #16
 8002ad4:	46bd      	mov	sp, r7
 8002ad6:	bd80      	pop	{r7, pc}

08002ad8 <HAL_CAN_AddTxMessage>:
 8002ad8:	b480      	push	{r7}
 8002ada:	b089      	sub	sp, #36	@ 0x24
 8002adc:	af00      	add	r7, sp, #0
 8002ade:	60f8      	str	r0, [r7, #12]
 8002ae0:	60b9      	str	r1, [r7, #8]
 8002ae2:	607a      	str	r2, [r7, #4]
 8002ae4:	603b      	str	r3, [r7, #0]
 8002ae6:	68fb      	ldr	r3, [r7, #12]
 8002ae8:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002aec:	77fb      	strb	r3, [r7, #31]
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	689b      	ldr	r3, [r3, #8]
 8002af4:	61bb      	str	r3, [r7, #24]
 8002af6:	7ffb      	ldrb	r3, [r7, #31]
 8002af8:	2b01      	cmp	r3, #1
 8002afa:	d003      	beq.n	8002b04 <HAL_CAN_AddTxMessage+0x2c>
 8002afc:	7ffb      	ldrb	r3, [r7, #31]
 8002afe:	2b02      	cmp	r3, #2
 8002b00:	f040 80ad 	bne.w	8002c5e <HAL_CAN_AddTxMessage+0x186>
 8002b04:	69bb      	ldr	r3, [r7, #24]
 8002b06:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d10a      	bne.n	8002b24 <HAL_CAN_AddTxMessage+0x4c>
 8002b0e:	69bb      	ldr	r3, [r7, #24]
 8002b10:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d105      	bne.n	8002b24 <HAL_CAN_AddTxMessage+0x4c>
 8002b18:	69bb      	ldr	r3, [r7, #24]
 8002b1a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	f000 8095 	beq.w	8002c4e <HAL_CAN_AddTxMessage+0x176>
 8002b24:	69bb      	ldr	r3, [r7, #24]
 8002b26:	0e1b      	lsrs	r3, r3, #24
 8002b28:	f003 0303 	and.w	r3, r3, #3
 8002b2c:	617b      	str	r3, [r7, #20]
 8002b2e:	2201      	movs	r2, #1
 8002b30:	697b      	ldr	r3, [r7, #20]
 8002b32:	409a      	lsls	r2, r3
 8002b34:	683b      	ldr	r3, [r7, #0]
 8002b36:	601a      	str	r2, [r3, #0]
 8002b38:	68bb      	ldr	r3, [r7, #8]
 8002b3a:	689b      	ldr	r3, [r3, #8]
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	d10d      	bne.n	8002b5c <HAL_CAN_AddTxMessage+0x84>
 8002b40:	68bb      	ldr	r3, [r7, #8]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	055a      	lsls	r2, r3, #21
 8002b46:	68bb      	ldr	r3, [r7, #8]
 8002b48:	68db      	ldr	r3, [r3, #12]
 8002b4a:	68f9      	ldr	r1, [r7, #12]
 8002b4c:	6809      	ldr	r1, [r1, #0]
 8002b4e:	431a      	orrs	r2, r3
 8002b50:	697b      	ldr	r3, [r7, #20]
 8002b52:	3318      	adds	r3, #24
 8002b54:	011b      	lsls	r3, r3, #4
 8002b56:	440b      	add	r3, r1
 8002b58:	601a      	str	r2, [r3, #0]
 8002b5a:	e00f      	b.n	8002b7c <HAL_CAN_AddTxMessage+0xa4>
 8002b5c:	68bb      	ldr	r3, [r7, #8]
 8002b5e:	685b      	ldr	r3, [r3, #4]
 8002b60:	00da      	lsls	r2, r3, #3
 8002b62:	68bb      	ldr	r3, [r7, #8]
 8002b64:	689b      	ldr	r3, [r3, #8]
 8002b66:	431a      	orrs	r2, r3
 8002b68:	68bb      	ldr	r3, [r7, #8]
 8002b6a:	68db      	ldr	r3, [r3, #12]
 8002b6c:	68f9      	ldr	r1, [r7, #12]
 8002b6e:	6809      	ldr	r1, [r1, #0]
 8002b70:	431a      	orrs	r2, r3
 8002b72:	697b      	ldr	r3, [r7, #20]
 8002b74:	3318      	adds	r3, #24
 8002b76:	011b      	lsls	r3, r3, #4
 8002b78:	440b      	add	r3, r1
 8002b7a:	601a      	str	r2, [r3, #0]
 8002b7c:	68fb      	ldr	r3, [r7, #12]
 8002b7e:	6819      	ldr	r1, [r3, #0]
 8002b80:	68bb      	ldr	r3, [r7, #8]
 8002b82:	691a      	ldr	r2, [r3, #16]
 8002b84:	697b      	ldr	r3, [r7, #20]
 8002b86:	3318      	adds	r3, #24
 8002b88:	011b      	lsls	r3, r3, #4
 8002b8a:	440b      	add	r3, r1
 8002b8c:	3304      	adds	r3, #4
 8002b8e:	601a      	str	r2, [r3, #0]
 8002b90:	68bb      	ldr	r3, [r7, #8]
 8002b92:	7d1b      	ldrb	r3, [r3, #20]
 8002b94:	2b01      	cmp	r3, #1
 8002b96:	d111      	bne.n	8002bbc <HAL_CAN_AddTxMessage+0xe4>
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	681a      	ldr	r2, [r3, #0]
 8002b9c:	697b      	ldr	r3, [r7, #20]
 8002b9e:	3318      	adds	r3, #24
 8002ba0:	011b      	lsls	r3, r3, #4
 8002ba2:	4413      	add	r3, r2
 8002ba4:	3304      	adds	r3, #4
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	68fa      	ldr	r2, [r7, #12]
 8002baa:	6811      	ldr	r1, [r2, #0]
 8002bac:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002bb0:	697b      	ldr	r3, [r7, #20]
 8002bb2:	3318      	adds	r3, #24
 8002bb4:	011b      	lsls	r3, r3, #4
 8002bb6:	440b      	add	r3, r1
 8002bb8:	3304      	adds	r3, #4
 8002bba:	601a      	str	r2, [r3, #0]
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	3307      	adds	r3, #7
 8002bc0:	781b      	ldrb	r3, [r3, #0]
 8002bc2:	061a      	lsls	r2, r3, #24
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	3306      	adds	r3, #6
 8002bc8:	781b      	ldrb	r3, [r3, #0]
 8002bca:	041b      	lsls	r3, r3, #16
 8002bcc:	431a      	orrs	r2, r3
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	3305      	adds	r3, #5
 8002bd2:	781b      	ldrb	r3, [r3, #0]
 8002bd4:	021b      	lsls	r3, r3, #8
 8002bd6:	4313      	orrs	r3, r2
 8002bd8:	687a      	ldr	r2, [r7, #4]
 8002bda:	3204      	adds	r2, #4
 8002bdc:	7812      	ldrb	r2, [r2, #0]
 8002bde:	4610      	mov	r0, r2
 8002be0:	68fa      	ldr	r2, [r7, #12]
 8002be2:	6811      	ldr	r1, [r2, #0]
 8002be4:	ea43 0200 	orr.w	r2, r3, r0
 8002be8:	697b      	ldr	r3, [r7, #20]
 8002bea:	011b      	lsls	r3, r3, #4
 8002bec:	440b      	add	r3, r1
 8002bee:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8002bf2:	601a      	str	r2, [r3, #0]
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	3303      	adds	r3, #3
 8002bf8:	781b      	ldrb	r3, [r3, #0]
 8002bfa:	061a      	lsls	r2, r3, #24
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	3302      	adds	r3, #2
 8002c00:	781b      	ldrb	r3, [r3, #0]
 8002c02:	041b      	lsls	r3, r3, #16
 8002c04:	431a      	orrs	r2, r3
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	3301      	adds	r3, #1
 8002c0a:	781b      	ldrb	r3, [r3, #0]
 8002c0c:	021b      	lsls	r3, r3, #8
 8002c0e:	4313      	orrs	r3, r2
 8002c10:	687a      	ldr	r2, [r7, #4]
 8002c12:	7812      	ldrb	r2, [r2, #0]
 8002c14:	4610      	mov	r0, r2
 8002c16:	68fa      	ldr	r2, [r7, #12]
 8002c18:	6811      	ldr	r1, [r2, #0]
 8002c1a:	ea43 0200 	orr.w	r2, r3, r0
 8002c1e:	697b      	ldr	r3, [r7, #20]
 8002c20:	011b      	lsls	r3, r3, #4
 8002c22:	440b      	add	r3, r1
 8002c24:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8002c28:	601a      	str	r2, [r3, #0]
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	681a      	ldr	r2, [r3, #0]
 8002c2e:	697b      	ldr	r3, [r7, #20]
 8002c30:	3318      	adds	r3, #24
 8002c32:	011b      	lsls	r3, r3, #4
 8002c34:	4413      	add	r3, r2
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	68fa      	ldr	r2, [r7, #12]
 8002c3a:	6811      	ldr	r1, [r2, #0]
 8002c3c:	f043 0201 	orr.w	r2, r3, #1
 8002c40:	697b      	ldr	r3, [r7, #20]
 8002c42:	3318      	adds	r3, #24
 8002c44:	011b      	lsls	r3, r3, #4
 8002c46:	440b      	add	r3, r1
 8002c48:	601a      	str	r2, [r3, #0]
 8002c4a:	2300      	movs	r3, #0
 8002c4c:	e00e      	b.n	8002c6c <HAL_CAN_AddTxMessage+0x194>
 8002c4e:	68fb      	ldr	r3, [r7, #12]
 8002c50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c52:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	625a      	str	r2, [r3, #36]	@ 0x24
 8002c5a:	2301      	movs	r3, #1
 8002c5c:	e006      	b.n	8002c6c <HAL_CAN_AddTxMessage+0x194>
 8002c5e:	68fb      	ldr	r3, [r7, #12]
 8002c60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c62:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002c66:	68fb      	ldr	r3, [r7, #12]
 8002c68:	625a      	str	r2, [r3, #36]	@ 0x24
 8002c6a:	2301      	movs	r3, #1
 8002c6c:	4618      	mov	r0, r3
 8002c6e:	3724      	adds	r7, #36	@ 0x24
 8002c70:	46bd      	mov	sp, r7
 8002c72:	bc80      	pop	{r7}
 8002c74:	4770      	bx	lr

08002c76 <HAL_CAN_IsTxMessagePending>:
 8002c76:	b480      	push	{r7}
 8002c78:	b085      	sub	sp, #20
 8002c7a:	af00      	add	r7, sp, #0
 8002c7c:	6078      	str	r0, [r7, #4]
 8002c7e:	6039      	str	r1, [r7, #0]
 8002c80:	2300      	movs	r3, #0
 8002c82:	60fb      	str	r3, [r7, #12]
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002c8a:	72fb      	strb	r3, [r7, #11]
 8002c8c:	7afb      	ldrb	r3, [r7, #11]
 8002c8e:	2b01      	cmp	r3, #1
 8002c90:	d002      	beq.n	8002c98 <HAL_CAN_IsTxMessagePending+0x22>
 8002c92:	7afb      	ldrb	r3, [r7, #11]
 8002c94:	2b02      	cmp	r3, #2
 8002c96:	d10b      	bne.n	8002cb0 <HAL_CAN_IsTxMessagePending+0x3a>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	689a      	ldr	r2, [r3, #8]
 8002c9e:	683b      	ldr	r3, [r7, #0]
 8002ca0:	069b      	lsls	r3, r3, #26
 8002ca2:	401a      	ands	r2, r3
 8002ca4:	683b      	ldr	r3, [r7, #0]
 8002ca6:	069b      	lsls	r3, r3, #26
 8002ca8:	429a      	cmp	r2, r3
 8002caa:	d001      	beq.n	8002cb0 <HAL_CAN_IsTxMessagePending+0x3a>
 8002cac:	2301      	movs	r3, #1
 8002cae:	60fb      	str	r3, [r7, #12]
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	4618      	mov	r0, r3
 8002cb4:	3714      	adds	r7, #20
 8002cb6:	46bd      	mov	sp, r7
 8002cb8:	bc80      	pop	{r7}
 8002cba:	4770      	bx	lr

08002cbc <__NVIC_SetPriorityGrouping>:
 8002cbc:	b480      	push	{r7}
 8002cbe:	b085      	sub	sp, #20
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	6078      	str	r0, [r7, #4]
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	f003 0307 	and.w	r3, r3, #7
 8002cca:	60fb      	str	r3, [r7, #12]
 8002ccc:	4b0c      	ldr	r3, [pc, #48]	@ (8002d00 <__NVIC_SetPriorityGrouping+0x44>)
 8002cce:	68db      	ldr	r3, [r3, #12]
 8002cd0:	60bb      	str	r3, [r7, #8]
 8002cd2:	68ba      	ldr	r2, [r7, #8]
 8002cd4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002cd8:	4013      	ands	r3, r2
 8002cda:	60bb      	str	r3, [r7, #8]
 8002cdc:	68fb      	ldr	r3, [r7, #12]
 8002cde:	021a      	lsls	r2, r3, #8
 8002ce0:	68bb      	ldr	r3, [r7, #8]
 8002ce2:	4313      	orrs	r3, r2
 8002ce4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002ce8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002cec:	60bb      	str	r3, [r7, #8]
 8002cee:	4a04      	ldr	r2, [pc, #16]	@ (8002d00 <__NVIC_SetPriorityGrouping+0x44>)
 8002cf0:	68bb      	ldr	r3, [r7, #8]
 8002cf2:	60d3      	str	r3, [r2, #12]
 8002cf4:	bf00      	nop
 8002cf6:	3714      	adds	r7, #20
 8002cf8:	46bd      	mov	sp, r7
 8002cfa:	bc80      	pop	{r7}
 8002cfc:	4770      	bx	lr
 8002cfe:	bf00      	nop
 8002d00:	e000ed00 	.word	0xe000ed00

08002d04 <__NVIC_GetPriorityGrouping>:
 8002d04:	b480      	push	{r7}
 8002d06:	af00      	add	r7, sp, #0
 8002d08:	4b04      	ldr	r3, [pc, #16]	@ (8002d1c <__NVIC_GetPriorityGrouping+0x18>)
 8002d0a:	68db      	ldr	r3, [r3, #12]
 8002d0c:	0a1b      	lsrs	r3, r3, #8
 8002d0e:	f003 0307 	and.w	r3, r3, #7
 8002d12:	4618      	mov	r0, r3
 8002d14:	46bd      	mov	sp, r7
 8002d16:	bc80      	pop	{r7}
 8002d18:	4770      	bx	lr
 8002d1a:	bf00      	nop
 8002d1c:	e000ed00 	.word	0xe000ed00

08002d20 <__NVIC_EnableIRQ>:
 8002d20:	b480      	push	{r7}
 8002d22:	b083      	sub	sp, #12
 8002d24:	af00      	add	r7, sp, #0
 8002d26:	4603      	mov	r3, r0
 8002d28:	71fb      	strb	r3, [r7, #7]
 8002d2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	db0b      	blt.n	8002d4a <__NVIC_EnableIRQ+0x2a>
 8002d32:	79fb      	ldrb	r3, [r7, #7]
 8002d34:	f003 021f 	and.w	r2, r3, #31
 8002d38:	4906      	ldr	r1, [pc, #24]	@ (8002d54 <__NVIC_EnableIRQ+0x34>)
 8002d3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d3e:	095b      	lsrs	r3, r3, #5
 8002d40:	2001      	movs	r0, #1
 8002d42:	fa00 f202 	lsl.w	r2, r0, r2
 8002d46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002d4a:	bf00      	nop
 8002d4c:	370c      	adds	r7, #12
 8002d4e:	46bd      	mov	sp, r7
 8002d50:	bc80      	pop	{r7}
 8002d52:	4770      	bx	lr
 8002d54:	e000e100 	.word	0xe000e100

08002d58 <__NVIC_SetPriority>:
 8002d58:	b480      	push	{r7}
 8002d5a:	b083      	sub	sp, #12
 8002d5c:	af00      	add	r7, sp, #0
 8002d5e:	4603      	mov	r3, r0
 8002d60:	6039      	str	r1, [r7, #0]
 8002d62:	71fb      	strb	r3, [r7, #7]
 8002d64:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	db0a      	blt.n	8002d82 <__NVIC_SetPriority+0x2a>
 8002d6c:	683b      	ldr	r3, [r7, #0]
 8002d6e:	b2da      	uxtb	r2, r3
 8002d70:	490c      	ldr	r1, [pc, #48]	@ (8002da4 <__NVIC_SetPriority+0x4c>)
 8002d72:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d76:	0112      	lsls	r2, r2, #4
 8002d78:	b2d2      	uxtb	r2, r2
 8002d7a:	440b      	add	r3, r1
 8002d7c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002d80:	e00a      	b.n	8002d98 <__NVIC_SetPriority+0x40>
 8002d82:	683b      	ldr	r3, [r7, #0]
 8002d84:	b2da      	uxtb	r2, r3
 8002d86:	4908      	ldr	r1, [pc, #32]	@ (8002da8 <__NVIC_SetPriority+0x50>)
 8002d88:	79fb      	ldrb	r3, [r7, #7]
 8002d8a:	f003 030f 	and.w	r3, r3, #15
 8002d8e:	3b04      	subs	r3, #4
 8002d90:	0112      	lsls	r2, r2, #4
 8002d92:	b2d2      	uxtb	r2, r2
 8002d94:	440b      	add	r3, r1
 8002d96:	761a      	strb	r2, [r3, #24]
 8002d98:	bf00      	nop
 8002d9a:	370c      	adds	r7, #12
 8002d9c:	46bd      	mov	sp, r7
 8002d9e:	bc80      	pop	{r7}
 8002da0:	4770      	bx	lr
 8002da2:	bf00      	nop
 8002da4:	e000e100 	.word	0xe000e100
 8002da8:	e000ed00 	.word	0xe000ed00

08002dac <NVIC_EncodePriority>:
 8002dac:	b480      	push	{r7}
 8002dae:	b089      	sub	sp, #36	@ 0x24
 8002db0:	af00      	add	r7, sp, #0
 8002db2:	60f8      	str	r0, [r7, #12]
 8002db4:	60b9      	str	r1, [r7, #8]
 8002db6:	607a      	str	r2, [r7, #4]
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	f003 0307 	and.w	r3, r3, #7
 8002dbe:	61fb      	str	r3, [r7, #28]
 8002dc0:	69fb      	ldr	r3, [r7, #28]
 8002dc2:	f1c3 0307 	rsb	r3, r3, #7
 8002dc6:	2b04      	cmp	r3, #4
 8002dc8:	bf28      	it	cs
 8002dca:	2304      	movcs	r3, #4
 8002dcc:	61bb      	str	r3, [r7, #24]
 8002dce:	69fb      	ldr	r3, [r7, #28]
 8002dd0:	3304      	adds	r3, #4
 8002dd2:	2b06      	cmp	r3, #6
 8002dd4:	d902      	bls.n	8002ddc <NVIC_EncodePriority+0x30>
 8002dd6:	69fb      	ldr	r3, [r7, #28]
 8002dd8:	3b03      	subs	r3, #3
 8002dda:	e000      	b.n	8002dde <NVIC_EncodePriority+0x32>
 8002ddc:	2300      	movs	r3, #0
 8002dde:	617b      	str	r3, [r7, #20]
 8002de0:	f04f 32ff 	mov.w	r2, #4294967295
 8002de4:	69bb      	ldr	r3, [r7, #24]
 8002de6:	fa02 f303 	lsl.w	r3, r2, r3
 8002dea:	43da      	mvns	r2, r3
 8002dec:	68bb      	ldr	r3, [r7, #8]
 8002dee:	401a      	ands	r2, r3
 8002df0:	697b      	ldr	r3, [r7, #20]
 8002df2:	409a      	lsls	r2, r3
 8002df4:	f04f 31ff 	mov.w	r1, #4294967295
 8002df8:	697b      	ldr	r3, [r7, #20]
 8002dfa:	fa01 f303 	lsl.w	r3, r1, r3
 8002dfe:	43d9      	mvns	r1, r3
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	400b      	ands	r3, r1
 8002e04:	4313      	orrs	r3, r2
 8002e06:	4618      	mov	r0, r3
 8002e08:	3724      	adds	r7, #36	@ 0x24
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bc80      	pop	{r7}
 8002e0e:	4770      	bx	lr

08002e10 <HAL_NVIC_SetPriorityGrouping>:
 8002e10:	b580      	push	{r7, lr}
 8002e12:	b082      	sub	sp, #8
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	6078      	str	r0, [r7, #4]
 8002e18:	6878      	ldr	r0, [r7, #4]
 8002e1a:	f7ff ff4f 	bl	8002cbc <__NVIC_SetPriorityGrouping>
 8002e1e:	bf00      	nop
 8002e20:	3708      	adds	r7, #8
 8002e22:	46bd      	mov	sp, r7
 8002e24:	bd80      	pop	{r7, pc}

08002e26 <HAL_NVIC_SetPriority>:
 8002e26:	b580      	push	{r7, lr}
 8002e28:	b086      	sub	sp, #24
 8002e2a:	af00      	add	r7, sp, #0
 8002e2c:	4603      	mov	r3, r0
 8002e2e:	60b9      	str	r1, [r7, #8]
 8002e30:	607a      	str	r2, [r7, #4]
 8002e32:	73fb      	strb	r3, [r7, #15]
 8002e34:	2300      	movs	r3, #0
 8002e36:	617b      	str	r3, [r7, #20]
 8002e38:	f7ff ff64 	bl	8002d04 <__NVIC_GetPriorityGrouping>
 8002e3c:	6178      	str	r0, [r7, #20]
 8002e3e:	687a      	ldr	r2, [r7, #4]
 8002e40:	68b9      	ldr	r1, [r7, #8]
 8002e42:	6978      	ldr	r0, [r7, #20]
 8002e44:	f7ff ffb2 	bl	8002dac <NVIC_EncodePriority>
 8002e48:	4602      	mov	r2, r0
 8002e4a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002e4e:	4611      	mov	r1, r2
 8002e50:	4618      	mov	r0, r3
 8002e52:	f7ff ff81 	bl	8002d58 <__NVIC_SetPriority>
 8002e56:	bf00      	nop
 8002e58:	3718      	adds	r7, #24
 8002e5a:	46bd      	mov	sp, r7
 8002e5c:	bd80      	pop	{r7, pc}

08002e5e <HAL_NVIC_EnableIRQ>:
 8002e5e:	b580      	push	{r7, lr}
 8002e60:	b082      	sub	sp, #8
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	4603      	mov	r3, r0
 8002e66:	71fb      	strb	r3, [r7, #7]
 8002e68:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002e6c:	4618      	mov	r0, r3
 8002e6e:	f7ff ff57 	bl	8002d20 <__NVIC_EnableIRQ>
 8002e72:	bf00      	nop
 8002e74:	3708      	adds	r7, #8
 8002e76:	46bd      	mov	sp, r7
 8002e78:	bd80      	pop	{r7, pc}
	...

08002e7c <HAL_GPIO_Init>:
 8002e7c:	b480      	push	{r7}
 8002e7e:	b08b      	sub	sp, #44	@ 0x2c
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	6078      	str	r0, [r7, #4]
 8002e84:	6039      	str	r1, [r7, #0]
 8002e86:	2300      	movs	r3, #0
 8002e88:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e8a:	2300      	movs	r3, #0
 8002e8c:	623b      	str	r3, [r7, #32]
 8002e8e:	e169      	b.n	8003164 <HAL_GPIO_Init+0x2e8>
 8002e90:	2201      	movs	r2, #1
 8002e92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e94:	fa02 f303 	lsl.w	r3, r2, r3
 8002e98:	61fb      	str	r3, [r7, #28]
 8002e9a:	683b      	ldr	r3, [r7, #0]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	69fa      	ldr	r2, [r7, #28]
 8002ea0:	4013      	ands	r3, r2
 8002ea2:	61bb      	str	r3, [r7, #24]
 8002ea4:	69ba      	ldr	r2, [r7, #24]
 8002ea6:	69fb      	ldr	r3, [r7, #28]
 8002ea8:	429a      	cmp	r2, r3
 8002eaa:	f040 8158 	bne.w	800315e <HAL_GPIO_Init+0x2e2>
 8002eae:	683b      	ldr	r3, [r7, #0]
 8002eb0:	685b      	ldr	r3, [r3, #4]
 8002eb2:	4a9a      	ldr	r2, [pc, #616]	@ (800311c <HAL_GPIO_Init+0x2a0>)
 8002eb4:	4293      	cmp	r3, r2
 8002eb6:	d05e      	beq.n	8002f76 <HAL_GPIO_Init+0xfa>
 8002eb8:	4a98      	ldr	r2, [pc, #608]	@ (800311c <HAL_GPIO_Init+0x2a0>)
 8002eba:	4293      	cmp	r3, r2
 8002ebc:	d875      	bhi.n	8002faa <HAL_GPIO_Init+0x12e>
 8002ebe:	4a98      	ldr	r2, [pc, #608]	@ (8003120 <HAL_GPIO_Init+0x2a4>)
 8002ec0:	4293      	cmp	r3, r2
 8002ec2:	d058      	beq.n	8002f76 <HAL_GPIO_Init+0xfa>
 8002ec4:	4a96      	ldr	r2, [pc, #600]	@ (8003120 <HAL_GPIO_Init+0x2a4>)
 8002ec6:	4293      	cmp	r3, r2
 8002ec8:	d86f      	bhi.n	8002faa <HAL_GPIO_Init+0x12e>
 8002eca:	4a96      	ldr	r2, [pc, #600]	@ (8003124 <HAL_GPIO_Init+0x2a8>)
 8002ecc:	4293      	cmp	r3, r2
 8002ece:	d052      	beq.n	8002f76 <HAL_GPIO_Init+0xfa>
 8002ed0:	4a94      	ldr	r2, [pc, #592]	@ (8003124 <HAL_GPIO_Init+0x2a8>)
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d869      	bhi.n	8002faa <HAL_GPIO_Init+0x12e>
 8002ed6:	4a94      	ldr	r2, [pc, #592]	@ (8003128 <HAL_GPIO_Init+0x2ac>)
 8002ed8:	4293      	cmp	r3, r2
 8002eda:	d04c      	beq.n	8002f76 <HAL_GPIO_Init+0xfa>
 8002edc:	4a92      	ldr	r2, [pc, #584]	@ (8003128 <HAL_GPIO_Init+0x2ac>)
 8002ede:	4293      	cmp	r3, r2
 8002ee0:	d863      	bhi.n	8002faa <HAL_GPIO_Init+0x12e>
 8002ee2:	4a92      	ldr	r2, [pc, #584]	@ (800312c <HAL_GPIO_Init+0x2b0>)
 8002ee4:	4293      	cmp	r3, r2
 8002ee6:	d046      	beq.n	8002f76 <HAL_GPIO_Init+0xfa>
 8002ee8:	4a90      	ldr	r2, [pc, #576]	@ (800312c <HAL_GPIO_Init+0x2b0>)
 8002eea:	4293      	cmp	r3, r2
 8002eec:	d85d      	bhi.n	8002faa <HAL_GPIO_Init+0x12e>
 8002eee:	2b12      	cmp	r3, #18
 8002ef0:	d82a      	bhi.n	8002f48 <HAL_GPIO_Init+0xcc>
 8002ef2:	2b12      	cmp	r3, #18
 8002ef4:	d859      	bhi.n	8002faa <HAL_GPIO_Init+0x12e>
 8002ef6:	a201      	add	r2, pc, #4	@ (adr r2, 8002efc <HAL_GPIO_Init+0x80>)
 8002ef8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002efc:	08002f77 	.word	0x08002f77
 8002f00:	08002f51 	.word	0x08002f51
 8002f04:	08002f63 	.word	0x08002f63
 8002f08:	08002fa5 	.word	0x08002fa5
 8002f0c:	08002fab 	.word	0x08002fab
 8002f10:	08002fab 	.word	0x08002fab
 8002f14:	08002fab 	.word	0x08002fab
 8002f18:	08002fab 	.word	0x08002fab
 8002f1c:	08002fab 	.word	0x08002fab
 8002f20:	08002fab 	.word	0x08002fab
 8002f24:	08002fab 	.word	0x08002fab
 8002f28:	08002fab 	.word	0x08002fab
 8002f2c:	08002fab 	.word	0x08002fab
 8002f30:	08002fab 	.word	0x08002fab
 8002f34:	08002fab 	.word	0x08002fab
 8002f38:	08002fab 	.word	0x08002fab
 8002f3c:	08002fab 	.word	0x08002fab
 8002f40:	08002f59 	.word	0x08002f59
 8002f44:	08002f6d 	.word	0x08002f6d
 8002f48:	4a79      	ldr	r2, [pc, #484]	@ (8003130 <HAL_GPIO_Init+0x2b4>)
 8002f4a:	4293      	cmp	r3, r2
 8002f4c:	d013      	beq.n	8002f76 <HAL_GPIO_Init+0xfa>
 8002f4e:	e02c      	b.n	8002faa <HAL_GPIO_Init+0x12e>
 8002f50:	683b      	ldr	r3, [r7, #0]
 8002f52:	68db      	ldr	r3, [r3, #12]
 8002f54:	623b      	str	r3, [r7, #32]
 8002f56:	e029      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	68db      	ldr	r3, [r3, #12]
 8002f5c:	3304      	adds	r3, #4
 8002f5e:	623b      	str	r3, [r7, #32]
 8002f60:	e024      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002f62:	683b      	ldr	r3, [r7, #0]
 8002f64:	68db      	ldr	r3, [r3, #12]
 8002f66:	3308      	adds	r3, #8
 8002f68:	623b      	str	r3, [r7, #32]
 8002f6a:	e01f      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002f6c:	683b      	ldr	r3, [r7, #0]
 8002f6e:	68db      	ldr	r3, [r3, #12]
 8002f70:	330c      	adds	r3, #12
 8002f72:	623b      	str	r3, [r7, #32]
 8002f74:	e01a      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002f76:	683b      	ldr	r3, [r7, #0]
 8002f78:	689b      	ldr	r3, [r3, #8]
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d102      	bne.n	8002f84 <HAL_GPIO_Init+0x108>
 8002f7e:	2304      	movs	r3, #4
 8002f80:	623b      	str	r3, [r7, #32]
 8002f82:	e013      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002f84:	683b      	ldr	r3, [r7, #0]
 8002f86:	689b      	ldr	r3, [r3, #8]
 8002f88:	2b01      	cmp	r3, #1
 8002f8a:	d105      	bne.n	8002f98 <HAL_GPIO_Init+0x11c>
 8002f8c:	2308      	movs	r3, #8
 8002f8e:	623b      	str	r3, [r7, #32]
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	69fa      	ldr	r2, [r7, #28]
 8002f94:	611a      	str	r2, [r3, #16]
 8002f96:	e009      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002f98:	2308      	movs	r3, #8
 8002f9a:	623b      	str	r3, [r7, #32]
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	69fa      	ldr	r2, [r7, #28]
 8002fa0:	615a      	str	r2, [r3, #20]
 8002fa2:	e003      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	623b      	str	r3, [r7, #32]
 8002fa8:	e000      	b.n	8002fac <HAL_GPIO_Init+0x130>
 8002faa:	bf00      	nop
 8002fac:	69bb      	ldr	r3, [r7, #24]
 8002fae:	2bff      	cmp	r3, #255	@ 0xff
 8002fb0:	d801      	bhi.n	8002fb6 <HAL_GPIO_Init+0x13a>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	e001      	b.n	8002fba <HAL_GPIO_Init+0x13e>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	3304      	adds	r3, #4
 8002fba:	617b      	str	r3, [r7, #20]
 8002fbc:	69bb      	ldr	r3, [r7, #24]
 8002fbe:	2bff      	cmp	r3, #255	@ 0xff
 8002fc0:	d802      	bhi.n	8002fc8 <HAL_GPIO_Init+0x14c>
 8002fc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002fc4:	009b      	lsls	r3, r3, #2
 8002fc6:	e002      	b.n	8002fce <HAL_GPIO_Init+0x152>
 8002fc8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002fca:	3b08      	subs	r3, #8
 8002fcc:	009b      	lsls	r3, r3, #2
 8002fce:	613b      	str	r3, [r7, #16]
 8002fd0:	697b      	ldr	r3, [r7, #20]
 8002fd2:	681a      	ldr	r2, [r3, #0]
 8002fd4:	210f      	movs	r1, #15
 8002fd6:	693b      	ldr	r3, [r7, #16]
 8002fd8:	fa01 f303 	lsl.w	r3, r1, r3
 8002fdc:	43db      	mvns	r3, r3
 8002fde:	401a      	ands	r2, r3
 8002fe0:	6a39      	ldr	r1, [r7, #32]
 8002fe2:	693b      	ldr	r3, [r7, #16]
 8002fe4:	fa01 f303 	lsl.w	r3, r1, r3
 8002fe8:	431a      	orrs	r2, r3
 8002fea:	697b      	ldr	r3, [r7, #20]
 8002fec:	601a      	str	r2, [r3, #0]
 8002fee:	683b      	ldr	r3, [r7, #0]
 8002ff0:	685b      	ldr	r3, [r3, #4]
 8002ff2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	f000 80b1 	beq.w	800315e <HAL_GPIO_Init+0x2e2>
 8002ffc:	4b4d      	ldr	r3, [pc, #308]	@ (8003134 <HAL_GPIO_Init+0x2b8>)
 8002ffe:	699b      	ldr	r3, [r3, #24]
 8003000:	4a4c      	ldr	r2, [pc, #304]	@ (8003134 <HAL_GPIO_Init+0x2b8>)
 8003002:	f043 0301 	orr.w	r3, r3, #1
 8003006:	6193      	str	r3, [r2, #24]
 8003008:	4b4a      	ldr	r3, [pc, #296]	@ (8003134 <HAL_GPIO_Init+0x2b8>)
 800300a:	699b      	ldr	r3, [r3, #24]
 800300c:	f003 0301 	and.w	r3, r3, #1
 8003010:	60bb      	str	r3, [r7, #8]
 8003012:	68bb      	ldr	r3, [r7, #8]
 8003014:	4a48      	ldr	r2, [pc, #288]	@ (8003138 <HAL_GPIO_Init+0x2bc>)
 8003016:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003018:	089b      	lsrs	r3, r3, #2
 800301a:	3302      	adds	r3, #2
 800301c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003020:	60fb      	str	r3, [r7, #12]
 8003022:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003024:	f003 0303 	and.w	r3, r3, #3
 8003028:	009b      	lsls	r3, r3, #2
 800302a:	220f      	movs	r2, #15
 800302c:	fa02 f303 	lsl.w	r3, r2, r3
 8003030:	43db      	mvns	r3, r3
 8003032:	68fa      	ldr	r2, [r7, #12]
 8003034:	4013      	ands	r3, r2
 8003036:	60fb      	str	r3, [r7, #12]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	4a40      	ldr	r2, [pc, #256]	@ (800313c <HAL_GPIO_Init+0x2c0>)
 800303c:	4293      	cmp	r3, r2
 800303e:	d013      	beq.n	8003068 <HAL_GPIO_Init+0x1ec>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	4a3f      	ldr	r2, [pc, #252]	@ (8003140 <HAL_GPIO_Init+0x2c4>)
 8003044:	4293      	cmp	r3, r2
 8003046:	d00d      	beq.n	8003064 <HAL_GPIO_Init+0x1e8>
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	4a3e      	ldr	r2, [pc, #248]	@ (8003144 <HAL_GPIO_Init+0x2c8>)
 800304c:	4293      	cmp	r3, r2
 800304e:	d007      	beq.n	8003060 <HAL_GPIO_Init+0x1e4>
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	4a3d      	ldr	r2, [pc, #244]	@ (8003148 <HAL_GPIO_Init+0x2cc>)
 8003054:	4293      	cmp	r3, r2
 8003056:	d101      	bne.n	800305c <HAL_GPIO_Init+0x1e0>
 8003058:	2303      	movs	r3, #3
 800305a:	e006      	b.n	800306a <HAL_GPIO_Init+0x1ee>
 800305c:	2304      	movs	r3, #4
 800305e:	e004      	b.n	800306a <HAL_GPIO_Init+0x1ee>
 8003060:	2302      	movs	r3, #2
 8003062:	e002      	b.n	800306a <HAL_GPIO_Init+0x1ee>
 8003064:	2301      	movs	r3, #1
 8003066:	e000      	b.n	800306a <HAL_GPIO_Init+0x1ee>
 8003068:	2300      	movs	r3, #0
 800306a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800306c:	f002 0203 	and.w	r2, r2, #3
 8003070:	0092      	lsls	r2, r2, #2
 8003072:	4093      	lsls	r3, r2
 8003074:	68fa      	ldr	r2, [r7, #12]
 8003076:	4313      	orrs	r3, r2
 8003078:	60fb      	str	r3, [r7, #12]
 800307a:	492f      	ldr	r1, [pc, #188]	@ (8003138 <HAL_GPIO_Init+0x2bc>)
 800307c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800307e:	089b      	lsrs	r3, r3, #2
 8003080:	3302      	adds	r3, #2
 8003082:	68fa      	ldr	r2, [r7, #12]
 8003084:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003088:	683b      	ldr	r3, [r7, #0]
 800308a:	685b      	ldr	r3, [r3, #4]
 800308c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003090:	2b00      	cmp	r3, #0
 8003092:	d006      	beq.n	80030a2 <HAL_GPIO_Init+0x226>
 8003094:	4b2d      	ldr	r3, [pc, #180]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 8003096:	689a      	ldr	r2, [r3, #8]
 8003098:	492c      	ldr	r1, [pc, #176]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 800309a:	69bb      	ldr	r3, [r7, #24]
 800309c:	4313      	orrs	r3, r2
 800309e:	608b      	str	r3, [r1, #8]
 80030a0:	e006      	b.n	80030b0 <HAL_GPIO_Init+0x234>
 80030a2:	4b2a      	ldr	r3, [pc, #168]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030a4:	689a      	ldr	r2, [r3, #8]
 80030a6:	69bb      	ldr	r3, [r7, #24]
 80030a8:	43db      	mvns	r3, r3
 80030aa:	4928      	ldr	r1, [pc, #160]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030ac:	4013      	ands	r3, r2
 80030ae:	608b      	str	r3, [r1, #8]
 80030b0:	683b      	ldr	r3, [r7, #0]
 80030b2:	685b      	ldr	r3, [r3, #4]
 80030b4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d006      	beq.n	80030ca <HAL_GPIO_Init+0x24e>
 80030bc:	4b23      	ldr	r3, [pc, #140]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030be:	68da      	ldr	r2, [r3, #12]
 80030c0:	4922      	ldr	r1, [pc, #136]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030c2:	69bb      	ldr	r3, [r7, #24]
 80030c4:	4313      	orrs	r3, r2
 80030c6:	60cb      	str	r3, [r1, #12]
 80030c8:	e006      	b.n	80030d8 <HAL_GPIO_Init+0x25c>
 80030ca:	4b20      	ldr	r3, [pc, #128]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030cc:	68da      	ldr	r2, [r3, #12]
 80030ce:	69bb      	ldr	r3, [r7, #24]
 80030d0:	43db      	mvns	r3, r3
 80030d2:	491e      	ldr	r1, [pc, #120]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030d4:	4013      	ands	r3, r2
 80030d6:	60cb      	str	r3, [r1, #12]
 80030d8:	683b      	ldr	r3, [r7, #0]
 80030da:	685b      	ldr	r3, [r3, #4]
 80030dc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d006      	beq.n	80030f2 <HAL_GPIO_Init+0x276>
 80030e4:	4b19      	ldr	r3, [pc, #100]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030e6:	685a      	ldr	r2, [r3, #4]
 80030e8:	4918      	ldr	r1, [pc, #96]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030ea:	69bb      	ldr	r3, [r7, #24]
 80030ec:	4313      	orrs	r3, r2
 80030ee:	604b      	str	r3, [r1, #4]
 80030f0:	e006      	b.n	8003100 <HAL_GPIO_Init+0x284>
 80030f2:	4b16      	ldr	r3, [pc, #88]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030f4:	685a      	ldr	r2, [r3, #4]
 80030f6:	69bb      	ldr	r3, [r7, #24]
 80030f8:	43db      	mvns	r3, r3
 80030fa:	4914      	ldr	r1, [pc, #80]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 80030fc:	4013      	ands	r3, r2
 80030fe:	604b      	str	r3, [r1, #4]
 8003100:	683b      	ldr	r3, [r7, #0]
 8003102:	685b      	ldr	r3, [r3, #4]
 8003104:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003108:	2b00      	cmp	r3, #0
 800310a:	d021      	beq.n	8003150 <HAL_GPIO_Init+0x2d4>
 800310c:	4b0f      	ldr	r3, [pc, #60]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 800310e:	681a      	ldr	r2, [r3, #0]
 8003110:	490e      	ldr	r1, [pc, #56]	@ (800314c <HAL_GPIO_Init+0x2d0>)
 8003112:	69bb      	ldr	r3, [r7, #24]
 8003114:	4313      	orrs	r3, r2
 8003116:	600b      	str	r3, [r1, #0]
 8003118:	e021      	b.n	800315e <HAL_GPIO_Init+0x2e2>
 800311a:	bf00      	nop
 800311c:	10320000 	.word	0x10320000
 8003120:	10310000 	.word	0x10310000
 8003124:	10220000 	.word	0x10220000
 8003128:	10210000 	.word	0x10210000
 800312c:	10120000 	.word	0x10120000
 8003130:	10110000 	.word	0x10110000
 8003134:	40021000 	.word	0x40021000
 8003138:	40010000 	.word	0x40010000
 800313c:	40010800 	.word	0x40010800
 8003140:	40010c00 	.word	0x40010c00
 8003144:	40011000 	.word	0x40011000
 8003148:	40011400 	.word	0x40011400
 800314c:	40010400 	.word	0x40010400
 8003150:	4b0b      	ldr	r3, [pc, #44]	@ (8003180 <HAL_GPIO_Init+0x304>)
 8003152:	681a      	ldr	r2, [r3, #0]
 8003154:	69bb      	ldr	r3, [r7, #24]
 8003156:	43db      	mvns	r3, r3
 8003158:	4909      	ldr	r1, [pc, #36]	@ (8003180 <HAL_GPIO_Init+0x304>)
 800315a:	4013      	ands	r3, r2
 800315c:	600b      	str	r3, [r1, #0]
 800315e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003160:	3301      	adds	r3, #1
 8003162:	627b      	str	r3, [r7, #36]	@ 0x24
 8003164:	683b      	ldr	r3, [r7, #0]
 8003166:	681a      	ldr	r2, [r3, #0]
 8003168:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800316a:	fa22 f303 	lsr.w	r3, r2, r3
 800316e:	2b00      	cmp	r3, #0
 8003170:	f47f ae8e 	bne.w	8002e90 <HAL_GPIO_Init+0x14>
 8003174:	bf00      	nop
 8003176:	bf00      	nop
 8003178:	372c      	adds	r7, #44	@ 0x2c
 800317a:	46bd      	mov	sp, r7
 800317c:	bc80      	pop	{r7}
 800317e:	4770      	bx	lr
 8003180:	40010400 	.word	0x40010400

08003184 <HAL_GPIO_WritePin>:
 8003184:	b480      	push	{r7}
 8003186:	b083      	sub	sp, #12
 8003188:	af00      	add	r7, sp, #0
 800318a:	6078      	str	r0, [r7, #4]
 800318c:	460b      	mov	r3, r1
 800318e:	807b      	strh	r3, [r7, #2]
 8003190:	4613      	mov	r3, r2
 8003192:	707b      	strb	r3, [r7, #1]
 8003194:	787b      	ldrb	r3, [r7, #1]
 8003196:	2b00      	cmp	r3, #0
 8003198:	d003      	beq.n	80031a2 <HAL_GPIO_WritePin+0x1e>
 800319a:	887a      	ldrh	r2, [r7, #2]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	611a      	str	r2, [r3, #16]
 80031a0:	e003      	b.n	80031aa <HAL_GPIO_WritePin+0x26>
 80031a2:	887b      	ldrh	r3, [r7, #2]
 80031a4:	041a      	lsls	r2, r3, #16
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	611a      	str	r2, [r3, #16]
 80031aa:	bf00      	nop
 80031ac:	370c      	adds	r7, #12
 80031ae:	46bd      	mov	sp, r7
 80031b0:	bc80      	pop	{r7}
 80031b2:	4770      	bx	lr

080031b4 <HAL_RCC_OscConfig>:
 80031b4:	b580      	push	{r7, lr}
 80031b6:	b086      	sub	sp, #24
 80031b8:	af00      	add	r7, sp, #0
 80031ba:	6078      	str	r0, [r7, #4]
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d101      	bne.n	80031c6 <HAL_RCC_OscConfig+0x12>
 80031c2:	2301      	movs	r3, #1
 80031c4:	e272      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	f003 0301 	and.w	r3, r3, #1
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	f000 8087 	beq.w	80032e2 <HAL_RCC_OscConfig+0x12e>
 80031d4:	4b92      	ldr	r3, [pc, #584]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80031d6:	685b      	ldr	r3, [r3, #4]
 80031d8:	f003 030c 	and.w	r3, r3, #12
 80031dc:	2b04      	cmp	r3, #4
 80031de:	d00c      	beq.n	80031fa <HAL_RCC_OscConfig+0x46>
 80031e0:	4b8f      	ldr	r3, [pc, #572]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80031e2:	685b      	ldr	r3, [r3, #4]
 80031e4:	f003 030c 	and.w	r3, r3, #12
 80031e8:	2b08      	cmp	r3, #8
 80031ea:	d112      	bne.n	8003212 <HAL_RCC_OscConfig+0x5e>
 80031ec:	4b8c      	ldr	r3, [pc, #560]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80031ee:	685b      	ldr	r3, [r3, #4]
 80031f0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80031f4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80031f8:	d10b      	bne.n	8003212 <HAL_RCC_OscConfig+0x5e>
 80031fa:	4b89      	ldr	r3, [pc, #548]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003202:	2b00      	cmp	r3, #0
 8003204:	d06c      	beq.n	80032e0 <HAL_RCC_OscConfig+0x12c>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	685b      	ldr	r3, [r3, #4]
 800320a:	2b00      	cmp	r3, #0
 800320c:	d168      	bne.n	80032e0 <HAL_RCC_OscConfig+0x12c>
 800320e:	2301      	movs	r3, #1
 8003210:	e24c      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	685b      	ldr	r3, [r3, #4]
 8003216:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800321a:	d106      	bne.n	800322a <HAL_RCC_OscConfig+0x76>
 800321c:	4b80      	ldr	r3, [pc, #512]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	4a7f      	ldr	r2, [pc, #508]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003222:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003226:	6013      	str	r3, [r2, #0]
 8003228:	e02e      	b.n	8003288 <HAL_RCC_OscConfig+0xd4>
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	685b      	ldr	r3, [r3, #4]
 800322e:	2b00      	cmp	r3, #0
 8003230:	d10c      	bne.n	800324c <HAL_RCC_OscConfig+0x98>
 8003232:	4b7b      	ldr	r3, [pc, #492]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	4a7a      	ldr	r2, [pc, #488]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003238:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800323c:	6013      	str	r3, [r2, #0]
 800323e:	4b78      	ldr	r3, [pc, #480]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	4a77      	ldr	r2, [pc, #476]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003244:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003248:	6013      	str	r3, [r2, #0]
 800324a:	e01d      	b.n	8003288 <HAL_RCC_OscConfig+0xd4>
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	685b      	ldr	r3, [r3, #4]
 8003250:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003254:	d10c      	bne.n	8003270 <HAL_RCC_OscConfig+0xbc>
 8003256:	4b72      	ldr	r3, [pc, #456]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003258:	681b      	ldr	r3, [r3, #0]
 800325a:	4a71      	ldr	r2, [pc, #452]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 800325c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003260:	6013      	str	r3, [r2, #0]
 8003262:	4b6f      	ldr	r3, [pc, #444]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	4a6e      	ldr	r2, [pc, #440]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003268:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800326c:	6013      	str	r3, [r2, #0]
 800326e:	e00b      	b.n	8003288 <HAL_RCC_OscConfig+0xd4>
 8003270:	4b6b      	ldr	r3, [pc, #428]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	4a6a      	ldr	r2, [pc, #424]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003276:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800327a:	6013      	str	r3, [r2, #0]
 800327c:	4b68      	ldr	r3, [pc, #416]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	4a67      	ldr	r2, [pc, #412]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003282:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003286:	6013      	str	r3, [r2, #0]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	685b      	ldr	r3, [r3, #4]
 800328c:	2b00      	cmp	r3, #0
 800328e:	d013      	beq.n	80032b8 <HAL_RCC_OscConfig+0x104>
 8003290:	f7fe fe82 	bl	8001f98 <HAL_GetTick>
 8003294:	6138      	str	r0, [r7, #16]
 8003296:	e008      	b.n	80032aa <HAL_RCC_OscConfig+0xf6>
 8003298:	f7fe fe7e 	bl	8001f98 <HAL_GetTick>
 800329c:	4602      	mov	r2, r0
 800329e:	693b      	ldr	r3, [r7, #16]
 80032a0:	1ad3      	subs	r3, r2, r3
 80032a2:	2b64      	cmp	r3, #100	@ 0x64
 80032a4:	d901      	bls.n	80032aa <HAL_RCC_OscConfig+0xf6>
 80032a6:	2303      	movs	r3, #3
 80032a8:	e200      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80032aa:	4b5d      	ldr	r3, [pc, #372]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d0f0      	beq.n	8003298 <HAL_RCC_OscConfig+0xe4>
 80032b6:	e014      	b.n	80032e2 <HAL_RCC_OscConfig+0x12e>
 80032b8:	f7fe fe6e 	bl	8001f98 <HAL_GetTick>
 80032bc:	6138      	str	r0, [r7, #16]
 80032be:	e008      	b.n	80032d2 <HAL_RCC_OscConfig+0x11e>
 80032c0:	f7fe fe6a 	bl	8001f98 <HAL_GetTick>
 80032c4:	4602      	mov	r2, r0
 80032c6:	693b      	ldr	r3, [r7, #16]
 80032c8:	1ad3      	subs	r3, r2, r3
 80032ca:	2b64      	cmp	r3, #100	@ 0x64
 80032cc:	d901      	bls.n	80032d2 <HAL_RCC_OscConfig+0x11e>
 80032ce:	2303      	movs	r3, #3
 80032d0:	e1ec      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80032d2:	4b53      	ldr	r3, [pc, #332]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80032da:	2b00      	cmp	r3, #0
 80032dc:	d1f0      	bne.n	80032c0 <HAL_RCC_OscConfig+0x10c>
 80032de:	e000      	b.n	80032e2 <HAL_RCC_OscConfig+0x12e>
 80032e0:	bf00      	nop
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	f003 0302 	and.w	r3, r3, #2
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d063      	beq.n	80033b6 <HAL_RCC_OscConfig+0x202>
 80032ee:	4b4c      	ldr	r3, [pc, #304]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80032f0:	685b      	ldr	r3, [r3, #4]
 80032f2:	f003 030c 	and.w	r3, r3, #12
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d00b      	beq.n	8003312 <HAL_RCC_OscConfig+0x15e>
 80032fa:	4b49      	ldr	r3, [pc, #292]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80032fc:	685b      	ldr	r3, [r3, #4]
 80032fe:	f003 030c 	and.w	r3, r3, #12
 8003302:	2b08      	cmp	r3, #8
 8003304:	d11c      	bne.n	8003340 <HAL_RCC_OscConfig+0x18c>
 8003306:	4b46      	ldr	r3, [pc, #280]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003308:	685b      	ldr	r3, [r3, #4]
 800330a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800330e:	2b00      	cmp	r3, #0
 8003310:	d116      	bne.n	8003340 <HAL_RCC_OscConfig+0x18c>
 8003312:	4b43      	ldr	r3, [pc, #268]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	f003 0302 	and.w	r3, r3, #2
 800331a:	2b00      	cmp	r3, #0
 800331c:	d005      	beq.n	800332a <HAL_RCC_OscConfig+0x176>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	691b      	ldr	r3, [r3, #16]
 8003322:	2b01      	cmp	r3, #1
 8003324:	d001      	beq.n	800332a <HAL_RCC_OscConfig+0x176>
 8003326:	2301      	movs	r3, #1
 8003328:	e1c0      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 800332a:	4b3d      	ldr	r3, [pc, #244]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	695b      	ldr	r3, [r3, #20]
 8003336:	00db      	lsls	r3, r3, #3
 8003338:	4939      	ldr	r1, [pc, #228]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 800333a:	4313      	orrs	r3, r2
 800333c:	600b      	str	r3, [r1, #0]
 800333e:	e03a      	b.n	80033b6 <HAL_RCC_OscConfig+0x202>
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	691b      	ldr	r3, [r3, #16]
 8003344:	2b00      	cmp	r3, #0
 8003346:	d020      	beq.n	800338a <HAL_RCC_OscConfig+0x1d6>
 8003348:	4b36      	ldr	r3, [pc, #216]	@ (8003424 <HAL_RCC_OscConfig+0x270>)
 800334a:	2201      	movs	r2, #1
 800334c:	601a      	str	r2, [r3, #0]
 800334e:	f7fe fe23 	bl	8001f98 <HAL_GetTick>
 8003352:	6138      	str	r0, [r7, #16]
 8003354:	e008      	b.n	8003368 <HAL_RCC_OscConfig+0x1b4>
 8003356:	f7fe fe1f 	bl	8001f98 <HAL_GetTick>
 800335a:	4602      	mov	r2, r0
 800335c:	693b      	ldr	r3, [r7, #16]
 800335e:	1ad3      	subs	r3, r2, r3
 8003360:	2b02      	cmp	r3, #2
 8003362:	d901      	bls.n	8003368 <HAL_RCC_OscConfig+0x1b4>
 8003364:	2303      	movs	r3, #3
 8003366:	e1a1      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 8003368:	4b2d      	ldr	r3, [pc, #180]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	f003 0302 	and.w	r3, r3, #2
 8003370:	2b00      	cmp	r3, #0
 8003372:	d0f0      	beq.n	8003356 <HAL_RCC_OscConfig+0x1a2>
 8003374:	4b2a      	ldr	r3, [pc, #168]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	695b      	ldr	r3, [r3, #20]
 8003380:	00db      	lsls	r3, r3, #3
 8003382:	4927      	ldr	r1, [pc, #156]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 8003384:	4313      	orrs	r3, r2
 8003386:	600b      	str	r3, [r1, #0]
 8003388:	e015      	b.n	80033b6 <HAL_RCC_OscConfig+0x202>
 800338a:	4b26      	ldr	r3, [pc, #152]	@ (8003424 <HAL_RCC_OscConfig+0x270>)
 800338c:	2200      	movs	r2, #0
 800338e:	601a      	str	r2, [r3, #0]
 8003390:	f7fe fe02 	bl	8001f98 <HAL_GetTick>
 8003394:	6138      	str	r0, [r7, #16]
 8003396:	e008      	b.n	80033aa <HAL_RCC_OscConfig+0x1f6>
 8003398:	f7fe fdfe 	bl	8001f98 <HAL_GetTick>
 800339c:	4602      	mov	r2, r0
 800339e:	693b      	ldr	r3, [r7, #16]
 80033a0:	1ad3      	subs	r3, r2, r3
 80033a2:	2b02      	cmp	r3, #2
 80033a4:	d901      	bls.n	80033aa <HAL_RCC_OscConfig+0x1f6>
 80033a6:	2303      	movs	r3, #3
 80033a8:	e180      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80033aa:	4b1d      	ldr	r3, [pc, #116]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	f003 0302 	and.w	r3, r3, #2
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d1f0      	bne.n	8003398 <HAL_RCC_OscConfig+0x1e4>
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	f003 0308 	and.w	r3, r3, #8
 80033be:	2b00      	cmp	r3, #0
 80033c0:	d03a      	beq.n	8003438 <HAL_RCC_OscConfig+0x284>
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	699b      	ldr	r3, [r3, #24]
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	d019      	beq.n	80033fe <HAL_RCC_OscConfig+0x24a>
 80033ca:	4b17      	ldr	r3, [pc, #92]	@ (8003428 <HAL_RCC_OscConfig+0x274>)
 80033cc:	2201      	movs	r2, #1
 80033ce:	601a      	str	r2, [r3, #0]
 80033d0:	f7fe fde2 	bl	8001f98 <HAL_GetTick>
 80033d4:	6138      	str	r0, [r7, #16]
 80033d6:	e008      	b.n	80033ea <HAL_RCC_OscConfig+0x236>
 80033d8:	f7fe fdde 	bl	8001f98 <HAL_GetTick>
 80033dc:	4602      	mov	r2, r0
 80033de:	693b      	ldr	r3, [r7, #16]
 80033e0:	1ad3      	subs	r3, r2, r3
 80033e2:	2b02      	cmp	r3, #2
 80033e4:	d901      	bls.n	80033ea <HAL_RCC_OscConfig+0x236>
 80033e6:	2303      	movs	r3, #3
 80033e8:	e160      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80033ea:	4b0d      	ldr	r3, [pc, #52]	@ (8003420 <HAL_RCC_OscConfig+0x26c>)
 80033ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033ee:	f003 0302 	and.w	r3, r3, #2
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d0f0      	beq.n	80033d8 <HAL_RCC_OscConfig+0x224>
 80033f6:	2001      	movs	r0, #1
 80033f8:	f000 fafe 	bl	80039f8 <RCC_Delay>
 80033fc:	e01c      	b.n	8003438 <HAL_RCC_OscConfig+0x284>
 80033fe:	4b0a      	ldr	r3, [pc, #40]	@ (8003428 <HAL_RCC_OscConfig+0x274>)
 8003400:	2200      	movs	r2, #0
 8003402:	601a      	str	r2, [r3, #0]
 8003404:	f7fe fdc8 	bl	8001f98 <HAL_GetTick>
 8003408:	6138      	str	r0, [r7, #16]
 800340a:	e00f      	b.n	800342c <HAL_RCC_OscConfig+0x278>
 800340c:	f7fe fdc4 	bl	8001f98 <HAL_GetTick>
 8003410:	4602      	mov	r2, r0
 8003412:	693b      	ldr	r3, [r7, #16]
 8003414:	1ad3      	subs	r3, r2, r3
 8003416:	2b02      	cmp	r3, #2
 8003418:	d908      	bls.n	800342c <HAL_RCC_OscConfig+0x278>
 800341a:	2303      	movs	r3, #3
 800341c:	e146      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 800341e:	bf00      	nop
 8003420:	40021000 	.word	0x40021000
 8003424:	42420000 	.word	0x42420000
 8003428:	42420480 	.word	0x42420480
 800342c:	4b92      	ldr	r3, [pc, #584]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800342e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003430:	f003 0302 	and.w	r3, r3, #2
 8003434:	2b00      	cmp	r3, #0
 8003436:	d1e9      	bne.n	800340c <HAL_RCC_OscConfig+0x258>
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	f003 0304 	and.w	r3, r3, #4
 8003440:	2b00      	cmp	r3, #0
 8003442:	f000 80a6 	beq.w	8003592 <HAL_RCC_OscConfig+0x3de>
 8003446:	2300      	movs	r3, #0
 8003448:	75fb      	strb	r3, [r7, #23]
 800344a:	4b8b      	ldr	r3, [pc, #556]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800344c:	69db      	ldr	r3, [r3, #28]
 800344e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003452:	2b00      	cmp	r3, #0
 8003454:	d10d      	bne.n	8003472 <HAL_RCC_OscConfig+0x2be>
 8003456:	4b88      	ldr	r3, [pc, #544]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003458:	69db      	ldr	r3, [r3, #28]
 800345a:	4a87      	ldr	r2, [pc, #540]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800345c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003460:	61d3      	str	r3, [r2, #28]
 8003462:	4b85      	ldr	r3, [pc, #532]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003464:	69db      	ldr	r3, [r3, #28]
 8003466:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800346a:	60bb      	str	r3, [r7, #8]
 800346c:	68bb      	ldr	r3, [r7, #8]
 800346e:	2301      	movs	r3, #1
 8003470:	75fb      	strb	r3, [r7, #23]
 8003472:	4b82      	ldr	r3, [pc, #520]	@ (800367c <HAL_RCC_OscConfig+0x4c8>)
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800347a:	2b00      	cmp	r3, #0
 800347c:	d118      	bne.n	80034b0 <HAL_RCC_OscConfig+0x2fc>
 800347e:	4b7f      	ldr	r3, [pc, #508]	@ (800367c <HAL_RCC_OscConfig+0x4c8>)
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	4a7e      	ldr	r2, [pc, #504]	@ (800367c <HAL_RCC_OscConfig+0x4c8>)
 8003484:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003488:	6013      	str	r3, [r2, #0]
 800348a:	f7fe fd85 	bl	8001f98 <HAL_GetTick>
 800348e:	6138      	str	r0, [r7, #16]
 8003490:	e008      	b.n	80034a4 <HAL_RCC_OscConfig+0x2f0>
 8003492:	f7fe fd81 	bl	8001f98 <HAL_GetTick>
 8003496:	4602      	mov	r2, r0
 8003498:	693b      	ldr	r3, [r7, #16]
 800349a:	1ad3      	subs	r3, r2, r3
 800349c:	2b64      	cmp	r3, #100	@ 0x64
 800349e:	d901      	bls.n	80034a4 <HAL_RCC_OscConfig+0x2f0>
 80034a0:	2303      	movs	r3, #3
 80034a2:	e103      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80034a4:	4b75      	ldr	r3, [pc, #468]	@ (800367c <HAL_RCC_OscConfig+0x4c8>)
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80034ac:	2b00      	cmp	r3, #0
 80034ae:	d0f0      	beq.n	8003492 <HAL_RCC_OscConfig+0x2de>
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	68db      	ldr	r3, [r3, #12]
 80034b4:	2b01      	cmp	r3, #1
 80034b6:	d106      	bne.n	80034c6 <HAL_RCC_OscConfig+0x312>
 80034b8:	4b6f      	ldr	r3, [pc, #444]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034ba:	6a1b      	ldr	r3, [r3, #32]
 80034bc:	4a6e      	ldr	r2, [pc, #440]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034be:	f043 0301 	orr.w	r3, r3, #1
 80034c2:	6213      	str	r3, [r2, #32]
 80034c4:	e02d      	b.n	8003522 <HAL_RCC_OscConfig+0x36e>
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	68db      	ldr	r3, [r3, #12]
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	d10c      	bne.n	80034e8 <HAL_RCC_OscConfig+0x334>
 80034ce:	4b6a      	ldr	r3, [pc, #424]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034d0:	6a1b      	ldr	r3, [r3, #32]
 80034d2:	4a69      	ldr	r2, [pc, #420]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034d4:	f023 0301 	bic.w	r3, r3, #1
 80034d8:	6213      	str	r3, [r2, #32]
 80034da:	4b67      	ldr	r3, [pc, #412]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034dc:	6a1b      	ldr	r3, [r3, #32]
 80034de:	4a66      	ldr	r2, [pc, #408]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034e0:	f023 0304 	bic.w	r3, r3, #4
 80034e4:	6213      	str	r3, [r2, #32]
 80034e6:	e01c      	b.n	8003522 <HAL_RCC_OscConfig+0x36e>
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	68db      	ldr	r3, [r3, #12]
 80034ec:	2b05      	cmp	r3, #5
 80034ee:	d10c      	bne.n	800350a <HAL_RCC_OscConfig+0x356>
 80034f0:	4b61      	ldr	r3, [pc, #388]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034f2:	6a1b      	ldr	r3, [r3, #32]
 80034f4:	4a60      	ldr	r2, [pc, #384]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034f6:	f043 0304 	orr.w	r3, r3, #4
 80034fa:	6213      	str	r3, [r2, #32]
 80034fc:	4b5e      	ldr	r3, [pc, #376]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80034fe:	6a1b      	ldr	r3, [r3, #32]
 8003500:	4a5d      	ldr	r2, [pc, #372]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003502:	f043 0301 	orr.w	r3, r3, #1
 8003506:	6213      	str	r3, [r2, #32]
 8003508:	e00b      	b.n	8003522 <HAL_RCC_OscConfig+0x36e>
 800350a:	4b5b      	ldr	r3, [pc, #364]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800350c:	6a1b      	ldr	r3, [r3, #32]
 800350e:	4a5a      	ldr	r2, [pc, #360]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003510:	f023 0301 	bic.w	r3, r3, #1
 8003514:	6213      	str	r3, [r2, #32]
 8003516:	4b58      	ldr	r3, [pc, #352]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003518:	6a1b      	ldr	r3, [r3, #32]
 800351a:	4a57      	ldr	r2, [pc, #348]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800351c:	f023 0304 	bic.w	r3, r3, #4
 8003520:	6213      	str	r3, [r2, #32]
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	68db      	ldr	r3, [r3, #12]
 8003526:	2b00      	cmp	r3, #0
 8003528:	d015      	beq.n	8003556 <HAL_RCC_OscConfig+0x3a2>
 800352a:	f7fe fd35 	bl	8001f98 <HAL_GetTick>
 800352e:	6138      	str	r0, [r7, #16]
 8003530:	e00a      	b.n	8003548 <HAL_RCC_OscConfig+0x394>
 8003532:	f7fe fd31 	bl	8001f98 <HAL_GetTick>
 8003536:	4602      	mov	r2, r0
 8003538:	693b      	ldr	r3, [r7, #16]
 800353a:	1ad3      	subs	r3, r2, r3
 800353c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003540:	4293      	cmp	r3, r2
 8003542:	d901      	bls.n	8003548 <HAL_RCC_OscConfig+0x394>
 8003544:	2303      	movs	r3, #3
 8003546:	e0b1      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 8003548:	4b4b      	ldr	r3, [pc, #300]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800354a:	6a1b      	ldr	r3, [r3, #32]
 800354c:	f003 0302 	and.w	r3, r3, #2
 8003550:	2b00      	cmp	r3, #0
 8003552:	d0ee      	beq.n	8003532 <HAL_RCC_OscConfig+0x37e>
 8003554:	e014      	b.n	8003580 <HAL_RCC_OscConfig+0x3cc>
 8003556:	f7fe fd1f 	bl	8001f98 <HAL_GetTick>
 800355a:	6138      	str	r0, [r7, #16]
 800355c:	e00a      	b.n	8003574 <HAL_RCC_OscConfig+0x3c0>
 800355e:	f7fe fd1b 	bl	8001f98 <HAL_GetTick>
 8003562:	4602      	mov	r2, r0
 8003564:	693b      	ldr	r3, [r7, #16]
 8003566:	1ad3      	subs	r3, r2, r3
 8003568:	f241 3288 	movw	r2, #5000	@ 0x1388
 800356c:	4293      	cmp	r3, r2
 800356e:	d901      	bls.n	8003574 <HAL_RCC_OscConfig+0x3c0>
 8003570:	2303      	movs	r3, #3
 8003572:	e09b      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 8003574:	4b40      	ldr	r3, [pc, #256]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003576:	6a1b      	ldr	r3, [r3, #32]
 8003578:	f003 0302 	and.w	r3, r3, #2
 800357c:	2b00      	cmp	r3, #0
 800357e:	d1ee      	bne.n	800355e <HAL_RCC_OscConfig+0x3aa>
 8003580:	7dfb      	ldrb	r3, [r7, #23]
 8003582:	2b01      	cmp	r3, #1
 8003584:	d105      	bne.n	8003592 <HAL_RCC_OscConfig+0x3de>
 8003586:	4b3c      	ldr	r3, [pc, #240]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003588:	69db      	ldr	r3, [r3, #28]
 800358a:	4a3b      	ldr	r2, [pc, #236]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800358c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003590:	61d3      	str	r3, [r2, #28]
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	69db      	ldr	r3, [r3, #28]
 8003596:	2b00      	cmp	r3, #0
 8003598:	f000 8087 	beq.w	80036aa <HAL_RCC_OscConfig+0x4f6>
 800359c:	4b36      	ldr	r3, [pc, #216]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800359e:	685b      	ldr	r3, [r3, #4]
 80035a0:	f003 030c 	and.w	r3, r3, #12
 80035a4:	2b08      	cmp	r3, #8
 80035a6:	d061      	beq.n	800366c <HAL_RCC_OscConfig+0x4b8>
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	69db      	ldr	r3, [r3, #28]
 80035ac:	2b02      	cmp	r3, #2
 80035ae:	d146      	bne.n	800363e <HAL_RCC_OscConfig+0x48a>
 80035b0:	4b33      	ldr	r3, [pc, #204]	@ (8003680 <HAL_RCC_OscConfig+0x4cc>)
 80035b2:	2200      	movs	r2, #0
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	f7fe fcef 	bl	8001f98 <HAL_GetTick>
 80035ba:	6138      	str	r0, [r7, #16]
 80035bc:	e008      	b.n	80035d0 <HAL_RCC_OscConfig+0x41c>
 80035be:	f7fe fceb 	bl	8001f98 <HAL_GetTick>
 80035c2:	4602      	mov	r2, r0
 80035c4:	693b      	ldr	r3, [r7, #16]
 80035c6:	1ad3      	subs	r3, r2, r3
 80035c8:	2b02      	cmp	r3, #2
 80035ca:	d901      	bls.n	80035d0 <HAL_RCC_OscConfig+0x41c>
 80035cc:	2303      	movs	r3, #3
 80035ce:	e06d      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80035d0:	4b29      	ldr	r3, [pc, #164]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d1f0      	bne.n	80035be <HAL_RCC_OscConfig+0x40a>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	6a1b      	ldr	r3, [r3, #32]
 80035e0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80035e4:	d108      	bne.n	80035f8 <HAL_RCC_OscConfig+0x444>
 80035e6:	4b24      	ldr	r3, [pc, #144]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80035e8:	685b      	ldr	r3, [r3, #4]
 80035ea:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	689b      	ldr	r3, [r3, #8]
 80035f2:	4921      	ldr	r1, [pc, #132]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80035f4:	4313      	orrs	r3, r2
 80035f6:	604b      	str	r3, [r1, #4]
 80035f8:	4b1f      	ldr	r3, [pc, #124]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 80035fa:	685b      	ldr	r3, [r3, #4]
 80035fc:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	6a19      	ldr	r1, [r3, #32]
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003608:	430b      	orrs	r3, r1
 800360a:	491b      	ldr	r1, [pc, #108]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 800360c:	4313      	orrs	r3, r2
 800360e:	604b      	str	r3, [r1, #4]
 8003610:	4b1b      	ldr	r3, [pc, #108]	@ (8003680 <HAL_RCC_OscConfig+0x4cc>)
 8003612:	2201      	movs	r2, #1
 8003614:	601a      	str	r2, [r3, #0]
 8003616:	f7fe fcbf 	bl	8001f98 <HAL_GetTick>
 800361a:	6138      	str	r0, [r7, #16]
 800361c:	e008      	b.n	8003630 <HAL_RCC_OscConfig+0x47c>
 800361e:	f7fe fcbb 	bl	8001f98 <HAL_GetTick>
 8003622:	4602      	mov	r2, r0
 8003624:	693b      	ldr	r3, [r7, #16]
 8003626:	1ad3      	subs	r3, r2, r3
 8003628:	2b02      	cmp	r3, #2
 800362a:	d901      	bls.n	8003630 <HAL_RCC_OscConfig+0x47c>
 800362c:	2303      	movs	r3, #3
 800362e:	e03d      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 8003630:	4b11      	ldr	r3, [pc, #68]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003638:	2b00      	cmp	r3, #0
 800363a:	d0f0      	beq.n	800361e <HAL_RCC_OscConfig+0x46a>
 800363c:	e035      	b.n	80036aa <HAL_RCC_OscConfig+0x4f6>
 800363e:	4b10      	ldr	r3, [pc, #64]	@ (8003680 <HAL_RCC_OscConfig+0x4cc>)
 8003640:	2200      	movs	r2, #0
 8003642:	601a      	str	r2, [r3, #0]
 8003644:	f7fe fca8 	bl	8001f98 <HAL_GetTick>
 8003648:	6138      	str	r0, [r7, #16]
 800364a:	e008      	b.n	800365e <HAL_RCC_OscConfig+0x4aa>
 800364c:	f7fe fca4 	bl	8001f98 <HAL_GetTick>
 8003650:	4602      	mov	r2, r0
 8003652:	693b      	ldr	r3, [r7, #16]
 8003654:	1ad3      	subs	r3, r2, r3
 8003656:	2b02      	cmp	r3, #2
 8003658:	d901      	bls.n	800365e <HAL_RCC_OscConfig+0x4aa>
 800365a:	2303      	movs	r3, #3
 800365c:	e026      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 800365e:	4b06      	ldr	r3, [pc, #24]	@ (8003678 <HAL_RCC_OscConfig+0x4c4>)
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003666:	2b00      	cmp	r3, #0
 8003668:	d1f0      	bne.n	800364c <HAL_RCC_OscConfig+0x498>
 800366a:	e01e      	b.n	80036aa <HAL_RCC_OscConfig+0x4f6>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	69db      	ldr	r3, [r3, #28]
 8003670:	2b01      	cmp	r3, #1
 8003672:	d107      	bne.n	8003684 <HAL_RCC_OscConfig+0x4d0>
 8003674:	2301      	movs	r3, #1
 8003676:	e019      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 8003678:	40021000 	.word	0x40021000
 800367c:	40007000 	.word	0x40007000
 8003680:	42420060 	.word	0x42420060
 8003684:	4b0b      	ldr	r3, [pc, #44]	@ (80036b4 <HAL_RCC_OscConfig+0x500>)
 8003686:	685b      	ldr	r3, [r3, #4]
 8003688:	60fb      	str	r3, [r7, #12]
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	6a1b      	ldr	r3, [r3, #32]
 8003694:	429a      	cmp	r2, r3
 8003696:	d106      	bne.n	80036a6 <HAL_RCC_OscConfig+0x4f2>
 8003698:	68fb      	ldr	r3, [r7, #12]
 800369a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036a2:	429a      	cmp	r2, r3
 80036a4:	d001      	beq.n	80036aa <HAL_RCC_OscConfig+0x4f6>
 80036a6:	2301      	movs	r3, #1
 80036a8:	e000      	b.n	80036ac <HAL_RCC_OscConfig+0x4f8>
 80036aa:	2300      	movs	r3, #0
 80036ac:	4618      	mov	r0, r3
 80036ae:	3718      	adds	r7, #24
 80036b0:	46bd      	mov	sp, r7
 80036b2:	bd80      	pop	{r7, pc}
 80036b4:	40021000 	.word	0x40021000

080036b8 <HAL_RCC_ClockConfig>:
 80036b8:	b580      	push	{r7, lr}
 80036ba:	b084      	sub	sp, #16
 80036bc:	af00      	add	r7, sp, #0
 80036be:	6078      	str	r0, [r7, #4]
 80036c0:	6039      	str	r1, [r7, #0]
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	2b00      	cmp	r3, #0
 80036c6:	d101      	bne.n	80036cc <HAL_RCC_ClockConfig+0x14>
 80036c8:	2301      	movs	r3, #1
 80036ca:	e0d0      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 80036cc:	4b6a      	ldr	r3, [pc, #424]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	f003 0307 	and.w	r3, r3, #7
 80036d4:	683a      	ldr	r2, [r7, #0]
 80036d6:	429a      	cmp	r2, r3
 80036d8:	d910      	bls.n	80036fc <HAL_RCC_ClockConfig+0x44>
 80036da:	4b67      	ldr	r3, [pc, #412]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	f023 0207 	bic.w	r2, r3, #7
 80036e2:	4965      	ldr	r1, [pc, #404]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80036e4:	683b      	ldr	r3, [r7, #0]
 80036e6:	4313      	orrs	r3, r2
 80036e8:	600b      	str	r3, [r1, #0]
 80036ea:	4b63      	ldr	r3, [pc, #396]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	f003 0307 	and.w	r3, r3, #7
 80036f2:	683a      	ldr	r2, [r7, #0]
 80036f4:	429a      	cmp	r2, r3
 80036f6:	d001      	beq.n	80036fc <HAL_RCC_ClockConfig+0x44>
 80036f8:	2301      	movs	r3, #1
 80036fa:	e0b8      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	f003 0302 	and.w	r3, r3, #2
 8003704:	2b00      	cmp	r3, #0
 8003706:	d020      	beq.n	800374a <HAL_RCC_ClockConfig+0x92>
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	f003 0304 	and.w	r3, r3, #4
 8003710:	2b00      	cmp	r3, #0
 8003712:	d005      	beq.n	8003720 <HAL_RCC_ClockConfig+0x68>
 8003714:	4b59      	ldr	r3, [pc, #356]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003716:	685b      	ldr	r3, [r3, #4]
 8003718:	4a58      	ldr	r2, [pc, #352]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 800371a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800371e:	6053      	str	r3, [r2, #4]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	f003 0308 	and.w	r3, r3, #8
 8003728:	2b00      	cmp	r3, #0
 800372a:	d005      	beq.n	8003738 <HAL_RCC_ClockConfig+0x80>
 800372c:	4b53      	ldr	r3, [pc, #332]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 800372e:	685b      	ldr	r3, [r3, #4]
 8003730:	4a52      	ldr	r2, [pc, #328]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003732:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8003736:	6053      	str	r3, [r2, #4]
 8003738:	4b50      	ldr	r3, [pc, #320]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 800373a:	685b      	ldr	r3, [r3, #4]
 800373c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	689b      	ldr	r3, [r3, #8]
 8003744:	494d      	ldr	r1, [pc, #308]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003746:	4313      	orrs	r3, r2
 8003748:	604b      	str	r3, [r1, #4]
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	f003 0301 	and.w	r3, r3, #1
 8003752:	2b00      	cmp	r3, #0
 8003754:	d040      	beq.n	80037d8 <HAL_RCC_ClockConfig+0x120>
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	685b      	ldr	r3, [r3, #4]
 800375a:	2b01      	cmp	r3, #1
 800375c:	d107      	bne.n	800376e <HAL_RCC_ClockConfig+0xb6>
 800375e:	4b47      	ldr	r3, [pc, #284]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003766:	2b00      	cmp	r3, #0
 8003768:	d115      	bne.n	8003796 <HAL_RCC_ClockConfig+0xde>
 800376a:	2301      	movs	r3, #1
 800376c:	e07f      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	685b      	ldr	r3, [r3, #4]
 8003772:	2b02      	cmp	r3, #2
 8003774:	d107      	bne.n	8003786 <HAL_RCC_ClockConfig+0xce>
 8003776:	4b41      	ldr	r3, [pc, #260]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800377e:	2b00      	cmp	r3, #0
 8003780:	d109      	bne.n	8003796 <HAL_RCC_ClockConfig+0xde>
 8003782:	2301      	movs	r3, #1
 8003784:	e073      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 8003786:	4b3d      	ldr	r3, [pc, #244]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	f003 0302 	and.w	r3, r3, #2
 800378e:	2b00      	cmp	r3, #0
 8003790:	d101      	bne.n	8003796 <HAL_RCC_ClockConfig+0xde>
 8003792:	2301      	movs	r3, #1
 8003794:	e06b      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 8003796:	4b39      	ldr	r3, [pc, #228]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003798:	685b      	ldr	r3, [r3, #4]
 800379a:	f023 0203 	bic.w	r2, r3, #3
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	685b      	ldr	r3, [r3, #4]
 80037a2:	4936      	ldr	r1, [pc, #216]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 80037a4:	4313      	orrs	r3, r2
 80037a6:	604b      	str	r3, [r1, #4]
 80037a8:	f7fe fbf6 	bl	8001f98 <HAL_GetTick>
 80037ac:	60f8      	str	r0, [r7, #12]
 80037ae:	e00a      	b.n	80037c6 <HAL_RCC_ClockConfig+0x10e>
 80037b0:	f7fe fbf2 	bl	8001f98 <HAL_GetTick>
 80037b4:	4602      	mov	r2, r0
 80037b6:	68fb      	ldr	r3, [r7, #12]
 80037b8:	1ad3      	subs	r3, r2, r3
 80037ba:	f241 3288 	movw	r2, #5000	@ 0x1388
 80037be:	4293      	cmp	r3, r2
 80037c0:	d901      	bls.n	80037c6 <HAL_RCC_ClockConfig+0x10e>
 80037c2:	2303      	movs	r3, #3
 80037c4:	e053      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 80037c6:	4b2d      	ldr	r3, [pc, #180]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 80037c8:	685b      	ldr	r3, [r3, #4]
 80037ca:	f003 020c 	and.w	r2, r3, #12
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	685b      	ldr	r3, [r3, #4]
 80037d2:	009b      	lsls	r3, r3, #2
 80037d4:	429a      	cmp	r2, r3
 80037d6:	d1eb      	bne.n	80037b0 <HAL_RCC_ClockConfig+0xf8>
 80037d8:	4b27      	ldr	r3, [pc, #156]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	f003 0307 	and.w	r3, r3, #7
 80037e0:	683a      	ldr	r2, [r7, #0]
 80037e2:	429a      	cmp	r2, r3
 80037e4:	d210      	bcs.n	8003808 <HAL_RCC_ClockConfig+0x150>
 80037e6:	4b24      	ldr	r3, [pc, #144]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80037e8:	681b      	ldr	r3, [r3, #0]
 80037ea:	f023 0207 	bic.w	r2, r3, #7
 80037ee:	4922      	ldr	r1, [pc, #136]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80037f0:	683b      	ldr	r3, [r7, #0]
 80037f2:	4313      	orrs	r3, r2
 80037f4:	600b      	str	r3, [r1, #0]
 80037f6:	4b20      	ldr	r3, [pc, #128]	@ (8003878 <HAL_RCC_ClockConfig+0x1c0>)
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	f003 0307 	and.w	r3, r3, #7
 80037fe:	683a      	ldr	r2, [r7, #0]
 8003800:	429a      	cmp	r2, r3
 8003802:	d001      	beq.n	8003808 <HAL_RCC_ClockConfig+0x150>
 8003804:	2301      	movs	r3, #1
 8003806:	e032      	b.n	800386e <HAL_RCC_ClockConfig+0x1b6>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	f003 0304 	and.w	r3, r3, #4
 8003810:	2b00      	cmp	r3, #0
 8003812:	d008      	beq.n	8003826 <HAL_RCC_ClockConfig+0x16e>
 8003814:	4b19      	ldr	r3, [pc, #100]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003816:	685b      	ldr	r3, [r3, #4]
 8003818:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	68db      	ldr	r3, [r3, #12]
 8003820:	4916      	ldr	r1, [pc, #88]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003822:	4313      	orrs	r3, r2
 8003824:	604b      	str	r3, [r1, #4]
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	f003 0308 	and.w	r3, r3, #8
 800382e:	2b00      	cmp	r3, #0
 8003830:	d009      	beq.n	8003846 <HAL_RCC_ClockConfig+0x18e>
 8003832:	4b12      	ldr	r3, [pc, #72]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003834:	685b      	ldr	r3, [r3, #4]
 8003836:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	691b      	ldr	r3, [r3, #16]
 800383e:	00db      	lsls	r3, r3, #3
 8003840:	490e      	ldr	r1, [pc, #56]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 8003842:	4313      	orrs	r3, r2
 8003844:	604b      	str	r3, [r1, #4]
 8003846:	f000 f821 	bl	800388c <HAL_RCC_GetSysClockFreq>
 800384a:	4602      	mov	r2, r0
 800384c:	4b0b      	ldr	r3, [pc, #44]	@ (800387c <HAL_RCC_ClockConfig+0x1c4>)
 800384e:	685b      	ldr	r3, [r3, #4]
 8003850:	091b      	lsrs	r3, r3, #4
 8003852:	f003 030f 	and.w	r3, r3, #15
 8003856:	490a      	ldr	r1, [pc, #40]	@ (8003880 <HAL_RCC_ClockConfig+0x1c8>)
 8003858:	5ccb      	ldrb	r3, [r1, r3]
 800385a:	fa22 f303 	lsr.w	r3, r2, r3
 800385e:	4a09      	ldr	r2, [pc, #36]	@ (8003884 <HAL_RCC_ClockConfig+0x1cc>)
 8003860:	6013      	str	r3, [r2, #0]
 8003862:	4b09      	ldr	r3, [pc, #36]	@ (8003888 <HAL_RCC_ClockConfig+0x1d0>)
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	4618      	mov	r0, r3
 8003868:	f7fe fa32 	bl	8001cd0 <HAL_InitTick>
 800386c:	2300      	movs	r3, #0
 800386e:	4618      	mov	r0, r3
 8003870:	3710      	adds	r7, #16
 8003872:	46bd      	mov	sp, r7
 8003874:	bd80      	pop	{r7, pc}
 8003876:	bf00      	nop
 8003878:	40022000 	.word	0x40022000
 800387c:	40021000 	.word	0x40021000
 8003880:	08007390 	.word	0x08007390
 8003884:	20000004 	.word	0x20000004
 8003888:	20000008 	.word	0x20000008

0800388c <HAL_RCC_GetSysClockFreq>:
 800388c:	b480      	push	{r7}
 800388e:	b087      	sub	sp, #28
 8003890:	af00      	add	r7, sp, #0
 8003892:	2300      	movs	r3, #0
 8003894:	60fb      	str	r3, [r7, #12]
 8003896:	2300      	movs	r3, #0
 8003898:	60bb      	str	r3, [r7, #8]
 800389a:	2300      	movs	r3, #0
 800389c:	617b      	str	r3, [r7, #20]
 800389e:	2300      	movs	r3, #0
 80038a0:	607b      	str	r3, [r7, #4]
 80038a2:	2300      	movs	r3, #0
 80038a4:	613b      	str	r3, [r7, #16]
 80038a6:	4b1e      	ldr	r3, [pc, #120]	@ (8003920 <HAL_RCC_GetSysClockFreq+0x94>)
 80038a8:	685b      	ldr	r3, [r3, #4]
 80038aa:	60fb      	str	r3, [r7, #12]
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	f003 030c 	and.w	r3, r3, #12
 80038b2:	2b04      	cmp	r3, #4
 80038b4:	d002      	beq.n	80038bc <HAL_RCC_GetSysClockFreq+0x30>
 80038b6:	2b08      	cmp	r3, #8
 80038b8:	d003      	beq.n	80038c2 <HAL_RCC_GetSysClockFreq+0x36>
 80038ba:	e027      	b.n	800390c <HAL_RCC_GetSysClockFreq+0x80>
 80038bc:	4b19      	ldr	r3, [pc, #100]	@ (8003924 <HAL_RCC_GetSysClockFreq+0x98>)
 80038be:	613b      	str	r3, [r7, #16]
 80038c0:	e027      	b.n	8003912 <HAL_RCC_GetSysClockFreq+0x86>
 80038c2:	68fb      	ldr	r3, [r7, #12]
 80038c4:	0c9b      	lsrs	r3, r3, #18
 80038c6:	f003 030f 	and.w	r3, r3, #15
 80038ca:	4a17      	ldr	r2, [pc, #92]	@ (8003928 <HAL_RCC_GetSysClockFreq+0x9c>)
 80038cc:	5cd3      	ldrb	r3, [r2, r3]
 80038ce:	607b      	str	r3, [r7, #4]
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d010      	beq.n	80038fc <HAL_RCC_GetSysClockFreq+0x70>
 80038da:	4b11      	ldr	r3, [pc, #68]	@ (8003920 <HAL_RCC_GetSysClockFreq+0x94>)
 80038dc:	685b      	ldr	r3, [r3, #4]
 80038de:	0c5b      	lsrs	r3, r3, #17
 80038e0:	f003 0301 	and.w	r3, r3, #1
 80038e4:	4a11      	ldr	r2, [pc, #68]	@ (800392c <HAL_RCC_GetSysClockFreq+0xa0>)
 80038e6:	5cd3      	ldrb	r3, [r2, r3]
 80038e8:	60bb      	str	r3, [r7, #8]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	4a0d      	ldr	r2, [pc, #52]	@ (8003924 <HAL_RCC_GetSysClockFreq+0x98>)
 80038ee:	fb03 f202 	mul.w	r2, r3, r2
 80038f2:	68bb      	ldr	r3, [r7, #8]
 80038f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80038f8:	617b      	str	r3, [r7, #20]
 80038fa:	e004      	b.n	8003906 <HAL_RCC_GetSysClockFreq+0x7a>
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	4a0c      	ldr	r2, [pc, #48]	@ (8003930 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003900:	fb02 f303 	mul.w	r3, r2, r3
 8003904:	617b      	str	r3, [r7, #20]
 8003906:	697b      	ldr	r3, [r7, #20]
 8003908:	613b      	str	r3, [r7, #16]
 800390a:	e002      	b.n	8003912 <HAL_RCC_GetSysClockFreq+0x86>
 800390c:	4b05      	ldr	r3, [pc, #20]	@ (8003924 <HAL_RCC_GetSysClockFreq+0x98>)
 800390e:	613b      	str	r3, [r7, #16]
 8003910:	bf00      	nop
 8003912:	693b      	ldr	r3, [r7, #16]
 8003914:	4618      	mov	r0, r3
 8003916:	371c      	adds	r7, #28
 8003918:	46bd      	mov	sp, r7
 800391a:	bc80      	pop	{r7}
 800391c:	4770      	bx	lr
 800391e:	bf00      	nop
 8003920:	40021000 	.word	0x40021000
 8003924:	007a1200 	.word	0x007a1200
 8003928:	080073a8 	.word	0x080073a8
 800392c:	080073b8 	.word	0x080073b8
 8003930:	003d0900 	.word	0x003d0900

08003934 <HAL_RCC_GetHCLKFreq>:
 8003934:	b480      	push	{r7}
 8003936:	af00      	add	r7, sp, #0
 8003938:	4b02      	ldr	r3, [pc, #8]	@ (8003944 <HAL_RCC_GetHCLKFreq+0x10>)
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	4618      	mov	r0, r3
 800393e:	46bd      	mov	sp, r7
 8003940:	bc80      	pop	{r7}
 8003942:	4770      	bx	lr
 8003944:	20000004 	.word	0x20000004

08003948 <HAL_RCC_GetPCLK1Freq>:
 8003948:	b580      	push	{r7, lr}
 800394a:	af00      	add	r7, sp, #0
 800394c:	f7ff fff2 	bl	8003934 <HAL_RCC_GetHCLKFreq>
 8003950:	4602      	mov	r2, r0
 8003952:	4b05      	ldr	r3, [pc, #20]	@ (8003968 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003954:	685b      	ldr	r3, [r3, #4]
 8003956:	0a1b      	lsrs	r3, r3, #8
 8003958:	f003 0307 	and.w	r3, r3, #7
 800395c:	4903      	ldr	r1, [pc, #12]	@ (800396c <HAL_RCC_GetPCLK1Freq+0x24>)
 800395e:	5ccb      	ldrb	r3, [r1, r3]
 8003960:	fa22 f303 	lsr.w	r3, r2, r3
 8003964:	4618      	mov	r0, r3
 8003966:	bd80      	pop	{r7, pc}
 8003968:	40021000 	.word	0x40021000
 800396c:	080073a0 	.word	0x080073a0

08003970 <HAL_RCC_GetPCLK2Freq>:
 8003970:	b580      	push	{r7, lr}
 8003972:	af00      	add	r7, sp, #0
 8003974:	f7ff ffde 	bl	8003934 <HAL_RCC_GetHCLKFreq>
 8003978:	4602      	mov	r2, r0
 800397a:	4b05      	ldr	r3, [pc, #20]	@ (8003990 <HAL_RCC_GetPCLK2Freq+0x20>)
 800397c:	685b      	ldr	r3, [r3, #4]
 800397e:	0adb      	lsrs	r3, r3, #11
 8003980:	f003 0307 	and.w	r3, r3, #7
 8003984:	4903      	ldr	r1, [pc, #12]	@ (8003994 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003986:	5ccb      	ldrb	r3, [r1, r3]
 8003988:	fa22 f303 	lsr.w	r3, r2, r3
 800398c:	4618      	mov	r0, r3
 800398e:	bd80      	pop	{r7, pc}
 8003990:	40021000 	.word	0x40021000
 8003994:	080073a0 	.word	0x080073a0

08003998 <HAL_RCC_GetClockConfig>:
 8003998:	b480      	push	{r7}
 800399a:	b083      	sub	sp, #12
 800399c:	af00      	add	r7, sp, #0
 800399e:	6078      	str	r0, [r7, #4]
 80039a0:	6039      	str	r1, [r7, #0]
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	220f      	movs	r2, #15
 80039a6:	601a      	str	r2, [r3, #0]
 80039a8:	4b11      	ldr	r3, [pc, #68]	@ (80039f0 <HAL_RCC_GetClockConfig+0x58>)
 80039aa:	685b      	ldr	r3, [r3, #4]
 80039ac:	f003 0203 	and.w	r2, r3, #3
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	605a      	str	r2, [r3, #4]
 80039b4:	4b0e      	ldr	r3, [pc, #56]	@ (80039f0 <HAL_RCC_GetClockConfig+0x58>)
 80039b6:	685b      	ldr	r3, [r3, #4]
 80039b8:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	609a      	str	r2, [r3, #8]
 80039c0:	4b0b      	ldr	r3, [pc, #44]	@ (80039f0 <HAL_RCC_GetClockConfig+0x58>)
 80039c2:	685b      	ldr	r3, [r3, #4]
 80039c4:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	60da      	str	r2, [r3, #12]
 80039cc:	4b08      	ldr	r3, [pc, #32]	@ (80039f0 <HAL_RCC_GetClockConfig+0x58>)
 80039ce:	685b      	ldr	r3, [r3, #4]
 80039d0:	08db      	lsrs	r3, r3, #3
 80039d2:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	611a      	str	r2, [r3, #16]
 80039da:	4b06      	ldr	r3, [pc, #24]	@ (80039f4 <HAL_RCC_GetClockConfig+0x5c>)
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	f003 0207 	and.w	r2, r3, #7
 80039e2:	683b      	ldr	r3, [r7, #0]
 80039e4:	601a      	str	r2, [r3, #0]
 80039e6:	bf00      	nop
 80039e8:	370c      	adds	r7, #12
 80039ea:	46bd      	mov	sp, r7
 80039ec:	bc80      	pop	{r7}
 80039ee:	4770      	bx	lr
 80039f0:	40021000 	.word	0x40021000
 80039f4:	40022000 	.word	0x40022000

080039f8 <RCC_Delay>:
 80039f8:	b480      	push	{r7}
 80039fa:	b085      	sub	sp, #20
 80039fc:	af00      	add	r7, sp, #0
 80039fe:	6078      	str	r0, [r7, #4]
 8003a00:	4b0a      	ldr	r3, [pc, #40]	@ (8003a2c <RCC_Delay+0x34>)
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	4a0a      	ldr	r2, [pc, #40]	@ (8003a30 <RCC_Delay+0x38>)
 8003a06:	fba2 2303 	umull	r2, r3, r2, r3
 8003a0a:	0a5b      	lsrs	r3, r3, #9
 8003a0c:	687a      	ldr	r2, [r7, #4]
 8003a0e:	fb02 f303 	mul.w	r3, r2, r3
 8003a12:	60fb      	str	r3, [r7, #12]
 8003a14:	bf00      	nop
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	1e5a      	subs	r2, r3, #1
 8003a1a:	60fa      	str	r2, [r7, #12]
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d1f9      	bne.n	8003a14 <RCC_Delay+0x1c>
 8003a20:	bf00      	nop
 8003a22:	bf00      	nop
 8003a24:	3714      	adds	r7, #20
 8003a26:	46bd      	mov	sp, r7
 8003a28:	bc80      	pop	{r7}
 8003a2a:	4770      	bx	lr
 8003a2c:	20000004 	.word	0x20000004
 8003a30:	10624dd3 	.word	0x10624dd3

08003a34 <HAL_RCCEx_PeriphCLKConfig>:
 8003a34:	b580      	push	{r7, lr}
 8003a36:	b086      	sub	sp, #24
 8003a38:	af00      	add	r7, sp, #0
 8003a3a:	6078      	str	r0, [r7, #4]
 8003a3c:	2300      	movs	r3, #0
 8003a3e:	613b      	str	r3, [r7, #16]
 8003a40:	2300      	movs	r3, #0
 8003a42:	60fb      	str	r3, [r7, #12]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	f003 0301 	and.w	r3, r3, #1
 8003a4c:	2b00      	cmp	r3, #0
 8003a4e:	d07d      	beq.n	8003b4c <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003a50:	2300      	movs	r3, #0
 8003a52:	75fb      	strb	r3, [r7, #23]
 8003a54:	4b4f      	ldr	r3, [pc, #316]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a56:	69db      	ldr	r3, [r3, #28]
 8003a58:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d10d      	bne.n	8003a7c <HAL_RCCEx_PeriphCLKConfig+0x48>
 8003a60:	4b4c      	ldr	r3, [pc, #304]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a62:	69db      	ldr	r3, [r3, #28]
 8003a64:	4a4b      	ldr	r2, [pc, #300]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a66:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003a6a:	61d3      	str	r3, [r2, #28]
 8003a6c:	4b49      	ldr	r3, [pc, #292]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a6e:	69db      	ldr	r3, [r3, #28]
 8003a70:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003a74:	60bb      	str	r3, [r7, #8]
 8003a76:	68bb      	ldr	r3, [r7, #8]
 8003a78:	2301      	movs	r3, #1
 8003a7a:	75fb      	strb	r3, [r7, #23]
 8003a7c:	4b46      	ldr	r3, [pc, #280]	@ (8003b98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a84:	2b00      	cmp	r3, #0
 8003a86:	d118      	bne.n	8003aba <HAL_RCCEx_PeriphCLKConfig+0x86>
 8003a88:	4b43      	ldr	r3, [pc, #268]	@ (8003b98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	4a42      	ldr	r2, [pc, #264]	@ (8003b98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003a8e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003a92:	6013      	str	r3, [r2, #0]
 8003a94:	f7fe fa80 	bl	8001f98 <HAL_GetTick>
 8003a98:	6138      	str	r0, [r7, #16]
 8003a9a:	e008      	b.n	8003aae <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003a9c:	f7fe fa7c 	bl	8001f98 <HAL_GetTick>
 8003aa0:	4602      	mov	r2, r0
 8003aa2:	693b      	ldr	r3, [r7, #16]
 8003aa4:	1ad3      	subs	r3, r2, r3
 8003aa6:	2b64      	cmp	r3, #100	@ 0x64
 8003aa8:	d901      	bls.n	8003aae <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003aaa:	2303      	movs	r3, #3
 8003aac:	e06d      	b.n	8003b8a <HAL_RCCEx_PeriphCLKConfig+0x156>
 8003aae:	4b3a      	ldr	r3, [pc, #232]	@ (8003b98 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d0f0      	beq.n	8003a9c <HAL_RCCEx_PeriphCLKConfig+0x68>
 8003aba:	4b36      	ldr	r3, [pc, #216]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003abc:	6a1b      	ldr	r3, [r3, #32]
 8003abe:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003ac2:	60fb      	str	r3, [r7, #12]
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d02e      	beq.n	8003b28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	685b      	ldr	r3, [r3, #4]
 8003ace:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003ad2:	68fa      	ldr	r2, [r7, #12]
 8003ad4:	429a      	cmp	r2, r3
 8003ad6:	d027      	beq.n	8003b28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003ad8:	4b2e      	ldr	r3, [pc, #184]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003ada:	6a1b      	ldr	r3, [r3, #32]
 8003adc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003ae0:	60fb      	str	r3, [r7, #12]
 8003ae2:	4b2e      	ldr	r3, [pc, #184]	@ (8003b9c <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003ae4:	2201      	movs	r2, #1
 8003ae6:	601a      	str	r2, [r3, #0]
 8003ae8:	4b2c      	ldr	r3, [pc, #176]	@ (8003b9c <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003aea:	2200      	movs	r2, #0
 8003aec:	601a      	str	r2, [r3, #0]
 8003aee:	4a29      	ldr	r2, [pc, #164]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	6213      	str	r3, [r2, #32]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	f003 0301 	and.w	r3, r3, #1
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d014      	beq.n	8003b28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003afe:	f7fe fa4b 	bl	8001f98 <HAL_GetTick>
 8003b02:	6138      	str	r0, [r7, #16]
 8003b04:	e00a      	b.n	8003b1c <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8003b06:	f7fe fa47 	bl	8001f98 <HAL_GetTick>
 8003b0a:	4602      	mov	r2, r0
 8003b0c:	693b      	ldr	r3, [r7, #16]
 8003b0e:	1ad3      	subs	r3, r2, r3
 8003b10:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b14:	4293      	cmp	r3, r2
 8003b16:	d901      	bls.n	8003b1c <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8003b18:	2303      	movs	r3, #3
 8003b1a:	e036      	b.n	8003b8a <HAL_RCCEx_PeriphCLKConfig+0x156>
 8003b1c:	4b1d      	ldr	r3, [pc, #116]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b1e:	6a1b      	ldr	r3, [r3, #32]
 8003b20:	f003 0302 	and.w	r3, r3, #2
 8003b24:	2b00      	cmp	r3, #0
 8003b26:	d0ee      	beq.n	8003b06 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8003b28:	4b1a      	ldr	r3, [pc, #104]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b2a:	6a1b      	ldr	r3, [r3, #32]
 8003b2c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	685b      	ldr	r3, [r3, #4]
 8003b34:	4917      	ldr	r1, [pc, #92]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b36:	4313      	orrs	r3, r2
 8003b38:	620b      	str	r3, [r1, #32]
 8003b3a:	7dfb      	ldrb	r3, [r7, #23]
 8003b3c:	2b01      	cmp	r3, #1
 8003b3e:	d105      	bne.n	8003b4c <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003b40:	4b14      	ldr	r3, [pc, #80]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b42:	69db      	ldr	r3, [r3, #28]
 8003b44:	4a13      	ldr	r2, [pc, #76]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b46:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003b4a:	61d3      	str	r3, [r2, #28]
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	f003 0302 	and.w	r3, r3, #2
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d008      	beq.n	8003b6a <HAL_RCCEx_PeriphCLKConfig+0x136>
 8003b58:	4b0e      	ldr	r3, [pc, #56]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b5a:	685b      	ldr	r3, [r3, #4]
 8003b5c:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	689b      	ldr	r3, [r3, #8]
 8003b64:	490b      	ldr	r1, [pc, #44]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b66:	4313      	orrs	r3, r2
 8003b68:	604b      	str	r3, [r1, #4]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	f003 0310 	and.w	r3, r3, #16
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d008      	beq.n	8003b88 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8003b76:	4b07      	ldr	r3, [pc, #28]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b78:	685b      	ldr	r3, [r3, #4]
 8003b7a:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	68db      	ldr	r3, [r3, #12]
 8003b82:	4904      	ldr	r1, [pc, #16]	@ (8003b94 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003b84:	4313      	orrs	r3, r2
 8003b86:	604b      	str	r3, [r1, #4]
 8003b88:	2300      	movs	r3, #0
 8003b8a:	4618      	mov	r0, r3
 8003b8c:	3718      	adds	r7, #24
 8003b8e:	46bd      	mov	sp, r7
 8003b90:	bd80      	pop	{r7, pc}
 8003b92:	bf00      	nop
 8003b94:	40021000 	.word	0x40021000
 8003b98:	40007000 	.word	0x40007000
 8003b9c:	42420440 	.word	0x42420440

08003ba0 <HAL_RCCEx_GetPeriphCLKFreq>:
 8003ba0:	b580      	push	{r7, lr}
 8003ba2:	b088      	sub	sp, #32
 8003ba4:	af00      	add	r7, sp, #0
 8003ba6:	6078      	str	r0, [r7, #4]
 8003ba8:	2300      	movs	r3, #0
 8003baa:	617b      	str	r3, [r7, #20]
 8003bac:	2300      	movs	r3, #0
 8003bae:	61fb      	str	r3, [r7, #28]
 8003bb0:	2300      	movs	r3, #0
 8003bb2:	613b      	str	r3, [r7, #16]
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	60fb      	str	r3, [r7, #12]
 8003bb8:	2300      	movs	r3, #0
 8003bba:	61bb      	str	r3, [r7, #24]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	2b10      	cmp	r3, #16
 8003bc0:	d00a      	beq.n	8003bd8 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	2b10      	cmp	r3, #16
 8003bc6:	f200 808a 	bhi.w	8003cde <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	2b01      	cmp	r3, #1
 8003bce:	d045      	beq.n	8003c5c <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	2b02      	cmp	r3, #2
 8003bd4:	d075      	beq.n	8003cc2 <HAL_RCCEx_GetPeriphCLKFreq+0x122>
 8003bd6:	e082      	b.n	8003cde <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8003bd8:	4b46      	ldr	r3, [pc, #280]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003bda:	685b      	ldr	r3, [r3, #4]
 8003bdc:	60fb      	str	r3, [r7, #12]
 8003bde:	4b45      	ldr	r3, [pc, #276]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d07b      	beq.n	8003ce2 <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003bea:	68fb      	ldr	r3, [r7, #12]
 8003bec:	0c9b      	lsrs	r3, r3, #18
 8003bee:	f003 030f 	and.w	r3, r3, #15
 8003bf2:	4a41      	ldr	r2, [pc, #260]	@ (8003cf8 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 8003bf4:	5cd3      	ldrb	r3, [r2, r3]
 8003bf6:	613b      	str	r3, [r7, #16]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d015      	beq.n	8003c2e <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 8003c02:	4b3c      	ldr	r3, [pc, #240]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003c04:	685b      	ldr	r3, [r3, #4]
 8003c06:	0c5b      	lsrs	r3, r3, #17
 8003c08:	f003 0301 	and.w	r3, r3, #1
 8003c0c:	4a3b      	ldr	r2, [pc, #236]	@ (8003cfc <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8003c0e:	5cd3      	ldrb	r3, [r2, r3]
 8003c10:	617b      	str	r3, [r7, #20]
 8003c12:	68fb      	ldr	r3, [r7, #12]
 8003c14:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d00d      	beq.n	8003c38 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003c1c:	4a38      	ldr	r2, [pc, #224]	@ (8003d00 <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 8003c1e:	697b      	ldr	r3, [r7, #20]
 8003c20:	fbb2 f2f3 	udiv	r2, r2, r3
 8003c24:	693b      	ldr	r3, [r7, #16]
 8003c26:	fb02 f303 	mul.w	r3, r2, r3
 8003c2a:	61fb      	str	r3, [r7, #28]
 8003c2c:	e004      	b.n	8003c38 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003c2e:	693b      	ldr	r3, [r7, #16]
 8003c30:	4a34      	ldr	r2, [pc, #208]	@ (8003d04 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 8003c32:	fb02 f303 	mul.w	r3, r2, r3
 8003c36:	61fb      	str	r3, [r7, #28]
 8003c38:	4b2e      	ldr	r3, [pc, #184]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003c3a:	685b      	ldr	r3, [r3, #4]
 8003c3c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003c40:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003c44:	d102      	bne.n	8003c4c <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 8003c46:	69fb      	ldr	r3, [r7, #28]
 8003c48:	61bb      	str	r3, [r7, #24]
 8003c4a:	e04a      	b.n	8003ce2 <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003c4c:	69fb      	ldr	r3, [r7, #28]
 8003c4e:	005b      	lsls	r3, r3, #1
 8003c50:	4a2d      	ldr	r2, [pc, #180]	@ (8003d08 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 8003c52:	fba2 2303 	umull	r2, r3, r2, r3
 8003c56:	085b      	lsrs	r3, r3, #1
 8003c58:	61bb      	str	r3, [r7, #24]
 8003c5a:	e042      	b.n	8003ce2 <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003c5c:	4b25      	ldr	r3, [pc, #148]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003c5e:	6a1b      	ldr	r3, [r3, #32]
 8003c60:	60fb      	str	r3, [r7, #12]
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003c68:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003c6c:	d108      	bne.n	8003c80 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	f003 0302 	and.w	r3, r3, #2
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d003      	beq.n	8003c80 <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003c78:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8003c7c:	61bb      	str	r3, [r7, #24]
 8003c7e:	e01f      	b.n	8003cc0 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003c86:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003c8a:	d109      	bne.n	8003ca0 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8003c8c:	4b19      	ldr	r3, [pc, #100]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003c8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c90:	f003 0302 	and.w	r3, r3, #2
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d003      	beq.n	8003ca0 <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8003c98:	f649 4340 	movw	r3, #40000	@ 0x9c40
 8003c9c:	61bb      	str	r3, [r7, #24]
 8003c9e:	e00f      	b.n	8003cc0 <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003ca6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8003caa:	d11c      	bne.n	8003ce6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003cac:	4b11      	ldr	r3, [pc, #68]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003cb4:	2b00      	cmp	r3, #0
 8003cb6:	d016      	beq.n	8003ce6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003cb8:	f24f 4324 	movw	r3, #62500	@ 0xf424
 8003cbc:	61bb      	str	r3, [r7, #24]
 8003cbe:	e012      	b.n	8003ce6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003cc0:	e011      	b.n	8003ce6 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003cc2:	f7ff fe55 	bl	8003970 <HAL_RCC_GetPCLK2Freq>
 8003cc6:	4602      	mov	r2, r0
 8003cc8:	4b0a      	ldr	r3, [pc, #40]	@ (8003cf4 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003cca:	685b      	ldr	r3, [r3, #4]
 8003ccc:	0b9b      	lsrs	r3, r3, #14
 8003cce:	f003 0303 	and.w	r3, r3, #3
 8003cd2:	3301      	adds	r3, #1
 8003cd4:	005b      	lsls	r3, r3, #1
 8003cd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8003cda:	61bb      	str	r3, [r7, #24]
 8003cdc:	e004      	b.n	8003ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8003cde:	bf00      	nop
 8003ce0:	e002      	b.n	8003ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8003ce2:	bf00      	nop
 8003ce4:	e000      	b.n	8003ce8 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8003ce6:	bf00      	nop
 8003ce8:	69bb      	ldr	r3, [r7, #24]
 8003cea:	4618      	mov	r0, r3
 8003cec:	3720      	adds	r7, #32
 8003cee:	46bd      	mov	sp, r7
 8003cf0:	bd80      	pop	{r7, pc}
 8003cf2:	bf00      	nop
 8003cf4:	40021000 	.word	0x40021000
 8003cf8:	080073bc 	.word	0x080073bc
 8003cfc:	080073cc 	.word	0x080073cc
 8003d00:	007a1200 	.word	0x007a1200
 8003d04:	003d0900 	.word	0x003d0900
 8003d08:	aaaaaaab 	.word	0xaaaaaaab

08003d0c <HAL_TIM_Base_Init>:
 8003d0c:	b580      	push	{r7, lr}
 8003d0e:	b082      	sub	sp, #8
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d101      	bne.n	8003d1e <HAL_TIM_Base_Init+0x12>
 8003d1a:	2301      	movs	r3, #1
 8003d1c:	e041      	b.n	8003da2 <HAL_TIM_Base_Init+0x96>
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003d24:	b2db      	uxtb	r3, r3
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d106      	bne.n	8003d38 <HAL_TIM_Base_Init+0x2c>
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	2200      	movs	r2, #0
 8003d2e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d32:	6878      	ldr	r0, [r7, #4]
 8003d34:	f7fe f8c4 	bl	8001ec0 <HAL_TIM_Base_MspInit>
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	2202      	movs	r2, #2
 8003d3c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681a      	ldr	r2, [r3, #0]
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	3304      	adds	r3, #4
 8003d48:	4619      	mov	r1, r3
 8003d4a:	4610      	mov	r0, r2
 8003d4c:	f000 facc 	bl	80042e8 <TIM_Base_SetConfig>
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	2201      	movs	r2, #1
 8003d54:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	2201      	movs	r2, #1
 8003d5c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	2201      	movs	r2, #1
 8003d64:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	2201      	movs	r2, #1
 8003d6c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	2201      	movs	r2, #1
 8003d74:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	2201      	movs	r2, #1
 8003d7c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	2201      	movs	r2, #1
 8003d84:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	2201      	movs	r2, #1
 8003d8c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	2201      	movs	r2, #1
 8003d94:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	2201      	movs	r2, #1
 8003d9c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003da0:	2300      	movs	r3, #0
 8003da2:	4618      	mov	r0, r3
 8003da4:	3708      	adds	r7, #8
 8003da6:	46bd      	mov	sp, r7
 8003da8:	bd80      	pop	{r7, pc}
	...

08003dac <HAL_TIM_Base_Start>:
 8003dac:	b480      	push	{r7}
 8003dae:	b085      	sub	sp, #20
 8003db0:	af00      	add	r7, sp, #0
 8003db2:	6078      	str	r0, [r7, #4]
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003dba:	b2db      	uxtb	r3, r3
 8003dbc:	2b01      	cmp	r3, #1
 8003dbe:	d001      	beq.n	8003dc4 <HAL_TIM_Base_Start+0x18>
 8003dc0:	2301      	movs	r3, #1
 8003dc2:	e032      	b.n	8003e2a <HAL_TIM_Base_Start+0x7e>
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	2202      	movs	r2, #2
 8003dc8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	4a18      	ldr	r2, [pc, #96]	@ (8003e34 <HAL_TIM_Base_Start+0x88>)
 8003dd2:	4293      	cmp	r3, r2
 8003dd4:	d00e      	beq.n	8003df4 <HAL_TIM_Base_Start+0x48>
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003dde:	d009      	beq.n	8003df4 <HAL_TIM_Base_Start+0x48>
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	4a14      	ldr	r2, [pc, #80]	@ (8003e38 <HAL_TIM_Base_Start+0x8c>)
 8003de6:	4293      	cmp	r3, r2
 8003de8:	d004      	beq.n	8003df4 <HAL_TIM_Base_Start+0x48>
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	4a13      	ldr	r2, [pc, #76]	@ (8003e3c <HAL_TIM_Base_Start+0x90>)
 8003df0:	4293      	cmp	r3, r2
 8003df2:	d111      	bne.n	8003e18 <HAL_TIM_Base_Start+0x6c>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	689b      	ldr	r3, [r3, #8]
 8003dfa:	f003 0307 	and.w	r3, r3, #7
 8003dfe:	60fb      	str	r3, [r7, #12]
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	2b06      	cmp	r3, #6
 8003e04:	d010      	beq.n	8003e28 <HAL_TIM_Base_Start+0x7c>
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	681a      	ldr	r2, [r3, #0]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	f042 0201 	orr.w	r2, r2, #1
 8003e14:	601a      	str	r2, [r3, #0]
 8003e16:	e007      	b.n	8003e28 <HAL_TIM_Base_Start+0x7c>
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	681a      	ldr	r2, [r3, #0]
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	f042 0201 	orr.w	r2, r2, #1
 8003e26:	601a      	str	r2, [r3, #0]
 8003e28:	2300      	movs	r3, #0
 8003e2a:	4618      	mov	r0, r3
 8003e2c:	3714      	adds	r7, #20
 8003e2e:	46bd      	mov	sp, r7
 8003e30:	bc80      	pop	{r7}
 8003e32:	4770      	bx	lr
 8003e34:	40012c00 	.word	0x40012c00
 8003e38:	40000400 	.word	0x40000400
 8003e3c:	40000800 	.word	0x40000800

08003e40 <HAL_TIM_Base_Stop>:
 8003e40:	b480      	push	{r7}
 8003e42:	b083      	sub	sp, #12
 8003e44:	af00      	add	r7, sp, #0
 8003e46:	6078      	str	r0, [r7, #4]
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	6a1a      	ldr	r2, [r3, #32]
 8003e4e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8003e52:	4013      	ands	r3, r2
 8003e54:	2b00      	cmp	r3, #0
 8003e56:	d10f      	bne.n	8003e78 <HAL_TIM_Base_Stop+0x38>
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	6a1a      	ldr	r2, [r3, #32]
 8003e5e:	f240 4344 	movw	r3, #1092	@ 0x444
 8003e62:	4013      	ands	r3, r2
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d107      	bne.n	8003e78 <HAL_TIM_Base_Stop+0x38>
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	681a      	ldr	r2, [r3, #0]
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f022 0201 	bic.w	r2, r2, #1
 8003e76:	601a      	str	r2, [r3, #0]
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	2201      	movs	r2, #1
 8003e7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e80:	2300      	movs	r3, #0
 8003e82:	4618      	mov	r0, r3
 8003e84:	370c      	adds	r7, #12
 8003e86:	46bd      	mov	sp, r7
 8003e88:	bc80      	pop	{r7}
 8003e8a:	4770      	bx	lr

08003e8c <HAL_TIM_Base_Start_IT>:
 8003e8c:	b480      	push	{r7}
 8003e8e:	b085      	sub	sp, #20
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003e9a:	b2db      	uxtb	r3, r3
 8003e9c:	2b01      	cmp	r3, #1
 8003e9e:	d001      	beq.n	8003ea4 <HAL_TIM_Base_Start_IT+0x18>
 8003ea0:	2301      	movs	r3, #1
 8003ea2:	e03a      	b.n	8003f1a <HAL_TIM_Base_Start_IT+0x8e>
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	2202      	movs	r2, #2
 8003ea8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	68da      	ldr	r2, [r3, #12]
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	f042 0201 	orr.w	r2, r2, #1
 8003eba:	60da      	str	r2, [r3, #12]
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	4a18      	ldr	r2, [pc, #96]	@ (8003f24 <HAL_TIM_Base_Start_IT+0x98>)
 8003ec2:	4293      	cmp	r3, r2
 8003ec4:	d00e      	beq.n	8003ee4 <HAL_TIM_Base_Start_IT+0x58>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003ece:	d009      	beq.n	8003ee4 <HAL_TIM_Base_Start_IT+0x58>
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	4a14      	ldr	r2, [pc, #80]	@ (8003f28 <HAL_TIM_Base_Start_IT+0x9c>)
 8003ed6:	4293      	cmp	r3, r2
 8003ed8:	d004      	beq.n	8003ee4 <HAL_TIM_Base_Start_IT+0x58>
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	4a13      	ldr	r2, [pc, #76]	@ (8003f2c <HAL_TIM_Base_Start_IT+0xa0>)
 8003ee0:	4293      	cmp	r3, r2
 8003ee2:	d111      	bne.n	8003f08 <HAL_TIM_Base_Start_IT+0x7c>
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	681b      	ldr	r3, [r3, #0]
 8003ee8:	689b      	ldr	r3, [r3, #8]
 8003eea:	f003 0307 	and.w	r3, r3, #7
 8003eee:	60fb      	str	r3, [r7, #12]
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	2b06      	cmp	r3, #6
 8003ef4:	d010      	beq.n	8003f18 <HAL_TIM_Base_Start_IT+0x8c>
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	681a      	ldr	r2, [r3, #0]
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	f042 0201 	orr.w	r2, r2, #1
 8003f04:	601a      	str	r2, [r3, #0]
 8003f06:	e007      	b.n	8003f18 <HAL_TIM_Base_Start_IT+0x8c>
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	681a      	ldr	r2, [r3, #0]
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	f042 0201 	orr.w	r2, r2, #1
 8003f16:	601a      	str	r2, [r3, #0]
 8003f18:	2300      	movs	r3, #0
 8003f1a:	4618      	mov	r0, r3
 8003f1c:	3714      	adds	r7, #20
 8003f1e:	46bd      	mov	sp, r7
 8003f20:	bc80      	pop	{r7}
 8003f22:	4770      	bx	lr
 8003f24:	40012c00 	.word	0x40012c00
 8003f28:	40000400 	.word	0x40000400
 8003f2c:	40000800 	.word	0x40000800

08003f30 <HAL_TIM_IRQHandler>:
 8003f30:	b580      	push	{r7, lr}
 8003f32:	b084      	sub	sp, #16
 8003f34:	af00      	add	r7, sp, #0
 8003f36:	6078      	str	r0, [r7, #4]
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	68db      	ldr	r3, [r3, #12]
 8003f3e:	60fb      	str	r3, [r7, #12]
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	691b      	ldr	r3, [r3, #16]
 8003f46:	60bb      	str	r3, [r7, #8]
 8003f48:	68bb      	ldr	r3, [r7, #8]
 8003f4a:	f003 0302 	and.w	r3, r3, #2
 8003f4e:	2b00      	cmp	r3, #0
 8003f50:	d020      	beq.n	8003f94 <HAL_TIM_IRQHandler+0x64>
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	f003 0302 	and.w	r3, r3, #2
 8003f58:	2b00      	cmp	r3, #0
 8003f5a:	d01b      	beq.n	8003f94 <HAL_TIM_IRQHandler+0x64>
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	681b      	ldr	r3, [r3, #0]
 8003f60:	f06f 0202 	mvn.w	r2, #2
 8003f64:	611a      	str	r2, [r3, #16]
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	2201      	movs	r2, #1
 8003f6a:	771a      	strb	r2, [r3, #28]
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	699b      	ldr	r3, [r3, #24]
 8003f72:	f003 0303 	and.w	r3, r3, #3
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d003      	beq.n	8003f82 <HAL_TIM_IRQHandler+0x52>
 8003f7a:	6878      	ldr	r0, [r7, #4]
 8003f7c:	f000 f998 	bl	80042b0 <HAL_TIM_IC_CaptureCallback>
 8003f80:	e005      	b.n	8003f8e <HAL_TIM_IRQHandler+0x5e>
 8003f82:	6878      	ldr	r0, [r7, #4]
 8003f84:	f000 f98b 	bl	800429e <HAL_TIM_OC_DelayElapsedCallback>
 8003f88:	6878      	ldr	r0, [r7, #4]
 8003f8a:	f000 f99a 	bl	80042c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	2200      	movs	r2, #0
 8003f92:	771a      	strb	r2, [r3, #28]
 8003f94:	68bb      	ldr	r3, [r7, #8]
 8003f96:	f003 0304 	and.w	r3, r3, #4
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d020      	beq.n	8003fe0 <HAL_TIM_IRQHandler+0xb0>
 8003f9e:	68fb      	ldr	r3, [r7, #12]
 8003fa0:	f003 0304 	and.w	r3, r3, #4
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	d01b      	beq.n	8003fe0 <HAL_TIM_IRQHandler+0xb0>
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	f06f 0204 	mvn.w	r2, #4
 8003fb0:	611a      	str	r2, [r3, #16]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	2202      	movs	r2, #2
 8003fb6:	771a      	strb	r2, [r3, #28]
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	699b      	ldr	r3, [r3, #24]
 8003fbe:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d003      	beq.n	8003fce <HAL_TIM_IRQHandler+0x9e>
 8003fc6:	6878      	ldr	r0, [r7, #4]
 8003fc8:	f000 f972 	bl	80042b0 <HAL_TIM_IC_CaptureCallback>
 8003fcc:	e005      	b.n	8003fda <HAL_TIM_IRQHandler+0xaa>
 8003fce:	6878      	ldr	r0, [r7, #4]
 8003fd0:	f000 f965 	bl	800429e <HAL_TIM_OC_DelayElapsedCallback>
 8003fd4:	6878      	ldr	r0, [r7, #4]
 8003fd6:	f000 f974 	bl	80042c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	2200      	movs	r2, #0
 8003fde:	771a      	strb	r2, [r3, #28]
 8003fe0:	68bb      	ldr	r3, [r7, #8]
 8003fe2:	f003 0308 	and.w	r3, r3, #8
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d020      	beq.n	800402c <HAL_TIM_IRQHandler+0xfc>
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	f003 0308 	and.w	r3, r3, #8
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d01b      	beq.n	800402c <HAL_TIM_IRQHandler+0xfc>
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	f06f 0208 	mvn.w	r2, #8
 8003ffc:	611a      	str	r2, [r3, #16]
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	2204      	movs	r2, #4
 8004002:	771a      	strb	r2, [r3, #28]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	69db      	ldr	r3, [r3, #28]
 800400a:	f003 0303 	and.w	r3, r3, #3
 800400e:	2b00      	cmp	r3, #0
 8004010:	d003      	beq.n	800401a <HAL_TIM_IRQHandler+0xea>
 8004012:	6878      	ldr	r0, [r7, #4]
 8004014:	f000 f94c 	bl	80042b0 <HAL_TIM_IC_CaptureCallback>
 8004018:	e005      	b.n	8004026 <HAL_TIM_IRQHandler+0xf6>
 800401a:	6878      	ldr	r0, [r7, #4]
 800401c:	f000 f93f 	bl	800429e <HAL_TIM_OC_DelayElapsedCallback>
 8004020:	6878      	ldr	r0, [r7, #4]
 8004022:	f000 f94e 	bl	80042c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	2200      	movs	r2, #0
 800402a:	771a      	strb	r2, [r3, #28]
 800402c:	68bb      	ldr	r3, [r7, #8]
 800402e:	f003 0310 	and.w	r3, r3, #16
 8004032:	2b00      	cmp	r3, #0
 8004034:	d020      	beq.n	8004078 <HAL_TIM_IRQHandler+0x148>
 8004036:	68fb      	ldr	r3, [r7, #12]
 8004038:	f003 0310 	and.w	r3, r3, #16
 800403c:	2b00      	cmp	r3, #0
 800403e:	d01b      	beq.n	8004078 <HAL_TIM_IRQHandler+0x148>
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	f06f 0210 	mvn.w	r2, #16
 8004048:	611a      	str	r2, [r3, #16]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	2208      	movs	r2, #8
 800404e:	771a      	strb	r2, [r3, #28]
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	69db      	ldr	r3, [r3, #28]
 8004056:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800405a:	2b00      	cmp	r3, #0
 800405c:	d003      	beq.n	8004066 <HAL_TIM_IRQHandler+0x136>
 800405e:	6878      	ldr	r0, [r7, #4]
 8004060:	f000 f926 	bl	80042b0 <HAL_TIM_IC_CaptureCallback>
 8004064:	e005      	b.n	8004072 <HAL_TIM_IRQHandler+0x142>
 8004066:	6878      	ldr	r0, [r7, #4]
 8004068:	f000 f919 	bl	800429e <HAL_TIM_OC_DelayElapsedCallback>
 800406c:	6878      	ldr	r0, [r7, #4]
 800406e:	f000 f928 	bl	80042c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	2200      	movs	r2, #0
 8004076:	771a      	strb	r2, [r3, #28]
 8004078:	68bb      	ldr	r3, [r7, #8]
 800407a:	f003 0301 	and.w	r3, r3, #1
 800407e:	2b00      	cmp	r3, #0
 8004080:	d00c      	beq.n	800409c <HAL_TIM_IRQHandler+0x16c>
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	f003 0301 	and.w	r3, r3, #1
 8004088:	2b00      	cmp	r3, #0
 800408a:	d007      	beq.n	800409c <HAL_TIM_IRQHandler+0x16c>
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	f06f 0201 	mvn.w	r2, #1
 8004094:	611a      	str	r2, [r3, #16]
 8004096:	6878      	ldr	r0, [r7, #4]
 8004098:	f7fd fcf8 	bl	8001a8c <HAL_TIM_PeriodElapsedCallback>
 800409c:	68bb      	ldr	r3, [r7, #8]
 800409e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d00c      	beq.n	80040c0 <HAL_TIM_IRQHandler+0x190>
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	d007      	beq.n	80040c0 <HAL_TIM_IRQHandler+0x190>
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80040b8:	611a      	str	r2, [r3, #16]
 80040ba:	6878      	ldr	r0, [r7, #4]
 80040bc:	f000 fa7f 	bl	80045be <HAL_TIMEx_BreakCallback>
 80040c0:	68bb      	ldr	r3, [r7, #8]
 80040c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d00c      	beq.n	80040e4 <HAL_TIM_IRQHandler+0x1b4>
 80040ca:	68fb      	ldr	r3, [r7, #12]
 80040cc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	d007      	beq.n	80040e4 <HAL_TIM_IRQHandler+0x1b4>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80040dc:	611a      	str	r2, [r3, #16]
 80040de:	6878      	ldr	r0, [r7, #4]
 80040e0:	f000 f8f8 	bl	80042d4 <HAL_TIM_TriggerCallback>
 80040e4:	68bb      	ldr	r3, [r7, #8]
 80040e6:	f003 0320 	and.w	r3, r3, #32
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d00c      	beq.n	8004108 <HAL_TIM_IRQHandler+0x1d8>
 80040ee:	68fb      	ldr	r3, [r7, #12]
 80040f0:	f003 0320 	and.w	r3, r3, #32
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d007      	beq.n	8004108 <HAL_TIM_IRQHandler+0x1d8>
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	f06f 0220 	mvn.w	r2, #32
 8004100:	611a      	str	r2, [r3, #16]
 8004102:	6878      	ldr	r0, [r7, #4]
 8004104:	f000 fa52 	bl	80045ac <HAL_TIMEx_CommutCallback>
 8004108:	bf00      	nop
 800410a:	3710      	adds	r7, #16
 800410c:	46bd      	mov	sp, r7
 800410e:	bd80      	pop	{r7, pc}

08004110 <HAL_TIM_ConfigClockSource>:
 8004110:	b580      	push	{r7, lr}
 8004112:	b084      	sub	sp, #16
 8004114:	af00      	add	r7, sp, #0
 8004116:	6078      	str	r0, [r7, #4]
 8004118:	6039      	str	r1, [r7, #0]
 800411a:	2300      	movs	r3, #0
 800411c:	73fb      	strb	r3, [r7, #15]
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004124:	2b01      	cmp	r3, #1
 8004126:	d101      	bne.n	800412c <HAL_TIM_ConfigClockSource+0x1c>
 8004128:	2302      	movs	r3, #2
 800412a:	e0b4      	b.n	8004296 <HAL_TIM_ConfigClockSource+0x186>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	2201      	movs	r2, #1
 8004130:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	2202      	movs	r2, #2
 8004138:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	681b      	ldr	r3, [r3, #0]
 8004140:	689b      	ldr	r3, [r3, #8]
 8004142:	60bb      	str	r3, [r7, #8]
 8004144:	68bb      	ldr	r3, [r7, #8]
 8004146:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800414a:	60bb      	str	r3, [r7, #8]
 800414c:	68bb      	ldr	r3, [r7, #8]
 800414e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004152:	60bb      	str	r3, [r7, #8]
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	68ba      	ldr	r2, [r7, #8]
 800415a:	609a      	str	r2, [r3, #8]
 800415c:	683b      	ldr	r3, [r7, #0]
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004164:	d03e      	beq.n	80041e4 <HAL_TIM_ConfigClockSource+0xd4>
 8004166:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800416a:	f200 8087 	bhi.w	800427c <HAL_TIM_ConfigClockSource+0x16c>
 800416e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004172:	f000 8086 	beq.w	8004282 <HAL_TIM_ConfigClockSource+0x172>
 8004176:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800417a:	d87f      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 800417c:	2b70      	cmp	r3, #112	@ 0x70
 800417e:	d01a      	beq.n	80041b6 <HAL_TIM_ConfigClockSource+0xa6>
 8004180:	2b70      	cmp	r3, #112	@ 0x70
 8004182:	d87b      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 8004184:	2b60      	cmp	r3, #96	@ 0x60
 8004186:	d050      	beq.n	800422a <HAL_TIM_ConfigClockSource+0x11a>
 8004188:	2b60      	cmp	r3, #96	@ 0x60
 800418a:	d877      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 800418c:	2b50      	cmp	r3, #80	@ 0x50
 800418e:	d03c      	beq.n	800420a <HAL_TIM_ConfigClockSource+0xfa>
 8004190:	2b50      	cmp	r3, #80	@ 0x50
 8004192:	d873      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 8004194:	2b40      	cmp	r3, #64	@ 0x40
 8004196:	d058      	beq.n	800424a <HAL_TIM_ConfigClockSource+0x13a>
 8004198:	2b40      	cmp	r3, #64	@ 0x40
 800419a:	d86f      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 800419c:	2b30      	cmp	r3, #48	@ 0x30
 800419e:	d064      	beq.n	800426a <HAL_TIM_ConfigClockSource+0x15a>
 80041a0:	2b30      	cmp	r3, #48	@ 0x30
 80041a2:	d86b      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 80041a4:	2b20      	cmp	r3, #32
 80041a6:	d060      	beq.n	800426a <HAL_TIM_ConfigClockSource+0x15a>
 80041a8:	2b20      	cmp	r3, #32
 80041aa:	d867      	bhi.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 80041ac:	2b00      	cmp	r3, #0
 80041ae:	d05c      	beq.n	800426a <HAL_TIM_ConfigClockSource+0x15a>
 80041b0:	2b10      	cmp	r3, #16
 80041b2:	d05a      	beq.n	800426a <HAL_TIM_ConfigClockSource+0x15a>
 80041b4:	e062      	b.n	800427c <HAL_TIM_ConfigClockSource+0x16c>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	6818      	ldr	r0, [r3, #0]
 80041ba:	683b      	ldr	r3, [r7, #0]
 80041bc:	6899      	ldr	r1, [r3, #8]
 80041be:	683b      	ldr	r3, [r7, #0]
 80041c0:	685a      	ldr	r2, [r3, #4]
 80041c2:	683b      	ldr	r3, [r7, #0]
 80041c4:	68db      	ldr	r3, [r3, #12]
 80041c6:	f000 f974 	bl	80044b2 <TIM_ETR_SetConfig>
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	689b      	ldr	r3, [r3, #8]
 80041d0:	60bb      	str	r3, [r7, #8]
 80041d2:	68bb      	ldr	r3, [r7, #8]
 80041d4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80041d8:	60bb      	str	r3, [r7, #8]
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	68ba      	ldr	r2, [r7, #8]
 80041e0:	609a      	str	r2, [r3, #8]
 80041e2:	e04f      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	6818      	ldr	r0, [r3, #0]
 80041e8:	683b      	ldr	r3, [r7, #0]
 80041ea:	6899      	ldr	r1, [r3, #8]
 80041ec:	683b      	ldr	r3, [r7, #0]
 80041ee:	685a      	ldr	r2, [r3, #4]
 80041f0:	683b      	ldr	r3, [r7, #0]
 80041f2:	68db      	ldr	r3, [r3, #12]
 80041f4:	f000 f95d 	bl	80044b2 <TIM_ETR_SetConfig>
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	689a      	ldr	r2, [r3, #8]
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004206:	609a      	str	r2, [r3, #8]
 8004208:	e03c      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	6818      	ldr	r0, [r3, #0]
 800420e:	683b      	ldr	r3, [r7, #0]
 8004210:	6859      	ldr	r1, [r3, #4]
 8004212:	683b      	ldr	r3, [r7, #0]
 8004214:	68db      	ldr	r3, [r3, #12]
 8004216:	461a      	mov	r2, r3
 8004218:	f000 f8d4 	bl	80043c4 <TIM_TI1_ConfigInputStage>
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	2150      	movs	r1, #80	@ 0x50
 8004222:	4618      	mov	r0, r3
 8004224:	f000 f92b 	bl	800447e <TIM_ITRx_SetConfig>
 8004228:	e02c      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	6818      	ldr	r0, [r3, #0]
 800422e:	683b      	ldr	r3, [r7, #0]
 8004230:	6859      	ldr	r1, [r3, #4]
 8004232:	683b      	ldr	r3, [r7, #0]
 8004234:	68db      	ldr	r3, [r3, #12]
 8004236:	461a      	mov	r2, r3
 8004238:	f000 f8f2 	bl	8004420 <TIM_TI2_ConfigInputStage>
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	2160      	movs	r1, #96	@ 0x60
 8004242:	4618      	mov	r0, r3
 8004244:	f000 f91b 	bl	800447e <TIM_ITRx_SetConfig>
 8004248:	e01c      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	6818      	ldr	r0, [r3, #0]
 800424e:	683b      	ldr	r3, [r7, #0]
 8004250:	6859      	ldr	r1, [r3, #4]
 8004252:	683b      	ldr	r3, [r7, #0]
 8004254:	68db      	ldr	r3, [r3, #12]
 8004256:	461a      	mov	r2, r3
 8004258:	f000 f8b4 	bl	80043c4 <TIM_TI1_ConfigInputStage>
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	2140      	movs	r1, #64	@ 0x40
 8004262:	4618      	mov	r0, r3
 8004264:	f000 f90b 	bl	800447e <TIM_ITRx_SetConfig>
 8004268:	e00c      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	681a      	ldr	r2, [r3, #0]
 800426e:	683b      	ldr	r3, [r7, #0]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	4619      	mov	r1, r3
 8004274:	4610      	mov	r0, r2
 8004276:	f000 f902 	bl	800447e <TIM_ITRx_SetConfig>
 800427a:	e003      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 800427c:	2301      	movs	r3, #1
 800427e:	73fb      	strb	r3, [r7, #15]
 8004280:	e000      	b.n	8004284 <HAL_TIM_ConfigClockSource+0x174>
 8004282:	bf00      	nop
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	2201      	movs	r2, #1
 8004288:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	2200      	movs	r2, #0
 8004290:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004294:	7bfb      	ldrb	r3, [r7, #15]
 8004296:	4618      	mov	r0, r3
 8004298:	3710      	adds	r7, #16
 800429a:	46bd      	mov	sp, r7
 800429c:	bd80      	pop	{r7, pc}

0800429e <HAL_TIM_OC_DelayElapsedCallback>:
 800429e:	b480      	push	{r7}
 80042a0:	b083      	sub	sp, #12
 80042a2:	af00      	add	r7, sp, #0
 80042a4:	6078      	str	r0, [r7, #4]
 80042a6:	bf00      	nop
 80042a8:	370c      	adds	r7, #12
 80042aa:	46bd      	mov	sp, r7
 80042ac:	bc80      	pop	{r7}
 80042ae:	4770      	bx	lr

080042b0 <HAL_TIM_IC_CaptureCallback>:
 80042b0:	b480      	push	{r7}
 80042b2:	b083      	sub	sp, #12
 80042b4:	af00      	add	r7, sp, #0
 80042b6:	6078      	str	r0, [r7, #4]
 80042b8:	bf00      	nop
 80042ba:	370c      	adds	r7, #12
 80042bc:	46bd      	mov	sp, r7
 80042be:	bc80      	pop	{r7}
 80042c0:	4770      	bx	lr

080042c2 <HAL_TIM_PWM_PulseFinishedCallback>:
 80042c2:	b480      	push	{r7}
 80042c4:	b083      	sub	sp, #12
 80042c6:	af00      	add	r7, sp, #0
 80042c8:	6078      	str	r0, [r7, #4]
 80042ca:	bf00      	nop
 80042cc:	370c      	adds	r7, #12
 80042ce:	46bd      	mov	sp, r7
 80042d0:	bc80      	pop	{r7}
 80042d2:	4770      	bx	lr

080042d4 <HAL_TIM_TriggerCallback>:
 80042d4:	b480      	push	{r7}
 80042d6:	b083      	sub	sp, #12
 80042d8:	af00      	add	r7, sp, #0
 80042da:	6078      	str	r0, [r7, #4]
 80042dc:	bf00      	nop
 80042de:	370c      	adds	r7, #12
 80042e0:	46bd      	mov	sp, r7
 80042e2:	bc80      	pop	{r7}
 80042e4:	4770      	bx	lr
	...

080042e8 <TIM_Base_SetConfig>:
 80042e8:	b480      	push	{r7}
 80042ea:	b085      	sub	sp, #20
 80042ec:	af00      	add	r7, sp, #0
 80042ee:	6078      	str	r0, [r7, #4]
 80042f0:	6039      	str	r1, [r7, #0]
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	60fb      	str	r3, [r7, #12]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	4a2f      	ldr	r2, [pc, #188]	@ (80043b8 <TIM_Base_SetConfig+0xd0>)
 80042fc:	4293      	cmp	r3, r2
 80042fe:	d00b      	beq.n	8004318 <TIM_Base_SetConfig+0x30>
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004306:	d007      	beq.n	8004318 <TIM_Base_SetConfig+0x30>
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	4a2c      	ldr	r2, [pc, #176]	@ (80043bc <TIM_Base_SetConfig+0xd4>)
 800430c:	4293      	cmp	r3, r2
 800430e:	d003      	beq.n	8004318 <TIM_Base_SetConfig+0x30>
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	4a2b      	ldr	r2, [pc, #172]	@ (80043c0 <TIM_Base_SetConfig+0xd8>)
 8004314:	4293      	cmp	r3, r2
 8004316:	d108      	bne.n	800432a <TIM_Base_SetConfig+0x42>
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800431e:	60fb      	str	r3, [r7, #12]
 8004320:	683b      	ldr	r3, [r7, #0]
 8004322:	685b      	ldr	r3, [r3, #4]
 8004324:	68fa      	ldr	r2, [r7, #12]
 8004326:	4313      	orrs	r3, r2
 8004328:	60fb      	str	r3, [r7, #12]
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	4a22      	ldr	r2, [pc, #136]	@ (80043b8 <TIM_Base_SetConfig+0xd0>)
 800432e:	4293      	cmp	r3, r2
 8004330:	d00b      	beq.n	800434a <TIM_Base_SetConfig+0x62>
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004338:	d007      	beq.n	800434a <TIM_Base_SetConfig+0x62>
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	4a1f      	ldr	r2, [pc, #124]	@ (80043bc <TIM_Base_SetConfig+0xd4>)
 800433e:	4293      	cmp	r3, r2
 8004340:	d003      	beq.n	800434a <TIM_Base_SetConfig+0x62>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	4a1e      	ldr	r2, [pc, #120]	@ (80043c0 <TIM_Base_SetConfig+0xd8>)
 8004346:	4293      	cmp	r3, r2
 8004348:	d108      	bne.n	800435c <TIM_Base_SetConfig+0x74>
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004350:	60fb      	str	r3, [r7, #12]
 8004352:	683b      	ldr	r3, [r7, #0]
 8004354:	68db      	ldr	r3, [r3, #12]
 8004356:	68fa      	ldr	r2, [r7, #12]
 8004358:	4313      	orrs	r3, r2
 800435a:	60fb      	str	r3, [r7, #12]
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004362:	683b      	ldr	r3, [r7, #0]
 8004364:	695b      	ldr	r3, [r3, #20]
 8004366:	4313      	orrs	r3, r2
 8004368:	60fb      	str	r3, [r7, #12]
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	68fa      	ldr	r2, [r7, #12]
 800436e:	601a      	str	r2, [r3, #0]
 8004370:	683b      	ldr	r3, [r7, #0]
 8004372:	689a      	ldr	r2, [r3, #8]
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004378:	683b      	ldr	r3, [r7, #0]
 800437a:	681a      	ldr	r2, [r3, #0]
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	4a0d      	ldr	r2, [pc, #52]	@ (80043b8 <TIM_Base_SetConfig+0xd0>)
 8004384:	4293      	cmp	r3, r2
 8004386:	d103      	bne.n	8004390 <TIM_Base_SetConfig+0xa8>
 8004388:	683b      	ldr	r3, [r7, #0]
 800438a:	691a      	ldr	r2, [r3, #16]
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	2201      	movs	r2, #1
 8004394:	615a      	str	r2, [r3, #20]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	691b      	ldr	r3, [r3, #16]
 800439a:	f003 0301 	and.w	r3, r3, #1
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d005      	beq.n	80043ae <TIM_Base_SetConfig+0xc6>
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	691b      	ldr	r3, [r3, #16]
 80043a6:	f023 0201 	bic.w	r2, r3, #1
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	611a      	str	r2, [r3, #16]
 80043ae:	bf00      	nop
 80043b0:	3714      	adds	r7, #20
 80043b2:	46bd      	mov	sp, r7
 80043b4:	bc80      	pop	{r7}
 80043b6:	4770      	bx	lr
 80043b8:	40012c00 	.word	0x40012c00
 80043bc:	40000400 	.word	0x40000400
 80043c0:	40000800 	.word	0x40000800

080043c4 <TIM_TI1_ConfigInputStage>:
 80043c4:	b480      	push	{r7}
 80043c6:	b087      	sub	sp, #28
 80043c8:	af00      	add	r7, sp, #0
 80043ca:	60f8      	str	r0, [r7, #12]
 80043cc:	60b9      	str	r1, [r7, #8]
 80043ce:	607a      	str	r2, [r7, #4]
 80043d0:	68fb      	ldr	r3, [r7, #12]
 80043d2:	6a1b      	ldr	r3, [r3, #32]
 80043d4:	617b      	str	r3, [r7, #20]
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	6a1b      	ldr	r3, [r3, #32]
 80043da:	f023 0201 	bic.w	r2, r3, #1
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	621a      	str	r2, [r3, #32]
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	699b      	ldr	r3, [r3, #24]
 80043e6:	613b      	str	r3, [r7, #16]
 80043e8:	693b      	ldr	r3, [r7, #16]
 80043ea:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80043ee:	613b      	str	r3, [r7, #16]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	011b      	lsls	r3, r3, #4
 80043f4:	693a      	ldr	r2, [r7, #16]
 80043f6:	4313      	orrs	r3, r2
 80043f8:	613b      	str	r3, [r7, #16]
 80043fa:	697b      	ldr	r3, [r7, #20]
 80043fc:	f023 030a 	bic.w	r3, r3, #10
 8004400:	617b      	str	r3, [r7, #20]
 8004402:	697a      	ldr	r2, [r7, #20]
 8004404:	68bb      	ldr	r3, [r7, #8]
 8004406:	4313      	orrs	r3, r2
 8004408:	617b      	str	r3, [r7, #20]
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	693a      	ldr	r2, [r7, #16]
 800440e:	619a      	str	r2, [r3, #24]
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	697a      	ldr	r2, [r7, #20]
 8004414:	621a      	str	r2, [r3, #32]
 8004416:	bf00      	nop
 8004418:	371c      	adds	r7, #28
 800441a:	46bd      	mov	sp, r7
 800441c:	bc80      	pop	{r7}
 800441e:	4770      	bx	lr

08004420 <TIM_TI2_ConfigInputStage>:
 8004420:	b480      	push	{r7}
 8004422:	b087      	sub	sp, #28
 8004424:	af00      	add	r7, sp, #0
 8004426:	60f8      	str	r0, [r7, #12]
 8004428:	60b9      	str	r1, [r7, #8]
 800442a:	607a      	str	r2, [r7, #4]
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	6a1b      	ldr	r3, [r3, #32]
 8004430:	617b      	str	r3, [r7, #20]
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	6a1b      	ldr	r3, [r3, #32]
 8004436:	f023 0210 	bic.w	r2, r3, #16
 800443a:	68fb      	ldr	r3, [r7, #12]
 800443c:	621a      	str	r2, [r3, #32]
 800443e:	68fb      	ldr	r3, [r7, #12]
 8004440:	699b      	ldr	r3, [r3, #24]
 8004442:	613b      	str	r3, [r7, #16]
 8004444:	693b      	ldr	r3, [r7, #16]
 8004446:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 800444a:	613b      	str	r3, [r7, #16]
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	031b      	lsls	r3, r3, #12
 8004450:	693a      	ldr	r2, [r7, #16]
 8004452:	4313      	orrs	r3, r2
 8004454:	613b      	str	r3, [r7, #16]
 8004456:	697b      	ldr	r3, [r7, #20]
 8004458:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800445c:	617b      	str	r3, [r7, #20]
 800445e:	68bb      	ldr	r3, [r7, #8]
 8004460:	011b      	lsls	r3, r3, #4
 8004462:	697a      	ldr	r2, [r7, #20]
 8004464:	4313      	orrs	r3, r2
 8004466:	617b      	str	r3, [r7, #20]
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	693a      	ldr	r2, [r7, #16]
 800446c:	619a      	str	r2, [r3, #24]
 800446e:	68fb      	ldr	r3, [r7, #12]
 8004470:	697a      	ldr	r2, [r7, #20]
 8004472:	621a      	str	r2, [r3, #32]
 8004474:	bf00      	nop
 8004476:	371c      	adds	r7, #28
 8004478:	46bd      	mov	sp, r7
 800447a:	bc80      	pop	{r7}
 800447c:	4770      	bx	lr

0800447e <TIM_ITRx_SetConfig>:
 800447e:	b480      	push	{r7}
 8004480:	b085      	sub	sp, #20
 8004482:	af00      	add	r7, sp, #0
 8004484:	6078      	str	r0, [r7, #4]
 8004486:	6039      	str	r1, [r7, #0]
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	689b      	ldr	r3, [r3, #8]
 800448c:	60fb      	str	r3, [r7, #12]
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004494:	60fb      	str	r3, [r7, #12]
 8004496:	683a      	ldr	r2, [r7, #0]
 8004498:	68fb      	ldr	r3, [r7, #12]
 800449a:	4313      	orrs	r3, r2
 800449c:	f043 0307 	orr.w	r3, r3, #7
 80044a0:	60fb      	str	r3, [r7, #12]
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	68fa      	ldr	r2, [r7, #12]
 80044a6:	609a      	str	r2, [r3, #8]
 80044a8:	bf00      	nop
 80044aa:	3714      	adds	r7, #20
 80044ac:	46bd      	mov	sp, r7
 80044ae:	bc80      	pop	{r7}
 80044b0:	4770      	bx	lr

080044b2 <TIM_ETR_SetConfig>:
 80044b2:	b480      	push	{r7}
 80044b4:	b087      	sub	sp, #28
 80044b6:	af00      	add	r7, sp, #0
 80044b8:	60f8      	str	r0, [r7, #12]
 80044ba:	60b9      	str	r1, [r7, #8]
 80044bc:	607a      	str	r2, [r7, #4]
 80044be:	603b      	str	r3, [r7, #0]
 80044c0:	68fb      	ldr	r3, [r7, #12]
 80044c2:	689b      	ldr	r3, [r3, #8]
 80044c4:	617b      	str	r3, [r7, #20]
 80044c6:	697b      	ldr	r3, [r7, #20]
 80044c8:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80044cc:	617b      	str	r3, [r7, #20]
 80044ce:	683b      	ldr	r3, [r7, #0]
 80044d0:	021a      	lsls	r2, r3, #8
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	431a      	orrs	r2, r3
 80044d6:	68bb      	ldr	r3, [r7, #8]
 80044d8:	4313      	orrs	r3, r2
 80044da:	697a      	ldr	r2, [r7, #20]
 80044dc:	4313      	orrs	r3, r2
 80044de:	617b      	str	r3, [r7, #20]
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	697a      	ldr	r2, [r7, #20]
 80044e4:	609a      	str	r2, [r3, #8]
 80044e6:	bf00      	nop
 80044e8:	371c      	adds	r7, #28
 80044ea:	46bd      	mov	sp, r7
 80044ec:	bc80      	pop	{r7}
 80044ee:	4770      	bx	lr

080044f0 <HAL_TIMEx_MasterConfigSynchronization>:
 80044f0:	b480      	push	{r7}
 80044f2:	b085      	sub	sp, #20
 80044f4:	af00      	add	r7, sp, #0
 80044f6:	6078      	str	r0, [r7, #4]
 80044f8:	6039      	str	r1, [r7, #0]
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004500:	2b01      	cmp	r3, #1
 8004502:	d101      	bne.n	8004508 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004504:	2302      	movs	r3, #2
 8004506:	e046      	b.n	8004596 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	2201      	movs	r2, #1
 800450c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	2202      	movs	r2, #2
 8004514:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	681b      	ldr	r3, [r3, #0]
 800451c:	685b      	ldr	r3, [r3, #4]
 800451e:	60fb      	str	r3, [r7, #12]
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	689b      	ldr	r3, [r3, #8]
 8004526:	60bb      	str	r3, [r7, #8]
 8004528:	68fb      	ldr	r3, [r7, #12]
 800452a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800452e:	60fb      	str	r3, [r7, #12]
 8004530:	683b      	ldr	r3, [r7, #0]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	68fa      	ldr	r2, [r7, #12]
 8004536:	4313      	orrs	r3, r2
 8004538:	60fb      	str	r3, [r7, #12]
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	68fa      	ldr	r2, [r7, #12]
 8004540:	605a      	str	r2, [r3, #4]
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	4a16      	ldr	r2, [pc, #88]	@ (80045a0 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004548:	4293      	cmp	r3, r2
 800454a:	d00e      	beq.n	800456a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004554:	d009      	beq.n	800456a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	4a12      	ldr	r2, [pc, #72]	@ (80045a4 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 800455c:	4293      	cmp	r3, r2
 800455e:	d004      	beq.n	800456a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	4a10      	ldr	r2, [pc, #64]	@ (80045a8 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004566:	4293      	cmp	r3, r2
 8004568:	d10c      	bne.n	8004584 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800456a:	68bb      	ldr	r3, [r7, #8]
 800456c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004570:	60bb      	str	r3, [r7, #8]
 8004572:	683b      	ldr	r3, [r7, #0]
 8004574:	685b      	ldr	r3, [r3, #4]
 8004576:	68ba      	ldr	r2, [r7, #8]
 8004578:	4313      	orrs	r3, r2
 800457a:	60bb      	str	r3, [r7, #8]
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	68ba      	ldr	r2, [r7, #8]
 8004582:	609a      	str	r2, [r3, #8]
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	2201      	movs	r2, #1
 8004588:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	2200      	movs	r2, #0
 8004590:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004594:	2300      	movs	r3, #0
 8004596:	4618      	mov	r0, r3
 8004598:	3714      	adds	r7, #20
 800459a:	46bd      	mov	sp, r7
 800459c:	bc80      	pop	{r7}
 800459e:	4770      	bx	lr
 80045a0:	40012c00 	.word	0x40012c00
 80045a4:	40000400 	.word	0x40000400
 80045a8:	40000800 	.word	0x40000800

080045ac <HAL_TIMEx_CommutCallback>:
 80045ac:	b480      	push	{r7}
 80045ae:	b083      	sub	sp, #12
 80045b0:	af00      	add	r7, sp, #0
 80045b2:	6078      	str	r0, [r7, #4]
 80045b4:	bf00      	nop
 80045b6:	370c      	adds	r7, #12
 80045b8:	46bd      	mov	sp, r7
 80045ba:	bc80      	pop	{r7}
 80045bc:	4770      	bx	lr

080045be <HAL_TIMEx_BreakCallback>:
 80045be:	b480      	push	{r7}
 80045c0:	b083      	sub	sp, #12
 80045c2:	af00      	add	r7, sp, #0
 80045c4:	6078      	str	r0, [r7, #4]
 80045c6:	bf00      	nop
 80045c8:	370c      	adds	r7, #12
 80045ca:	46bd      	mov	sp, r7
 80045cc:	bc80      	pop	{r7}
 80045ce:	4770      	bx	lr

080045d0 <__NVIC_SetPriority>:
 80045d0:	b480      	push	{r7}
 80045d2:	b083      	sub	sp, #12
 80045d4:	af00      	add	r7, sp, #0
 80045d6:	4603      	mov	r3, r0
 80045d8:	6039      	str	r1, [r7, #0]
 80045da:	71fb      	strb	r3, [r7, #7]
 80045dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	db0a      	blt.n	80045fa <__NVIC_SetPriority+0x2a>
 80045e4:	683b      	ldr	r3, [r7, #0]
 80045e6:	b2da      	uxtb	r2, r3
 80045e8:	490c      	ldr	r1, [pc, #48]	@ (800461c <__NVIC_SetPriority+0x4c>)
 80045ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80045ee:	0112      	lsls	r2, r2, #4
 80045f0:	b2d2      	uxtb	r2, r2
 80045f2:	440b      	add	r3, r1
 80045f4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80045f8:	e00a      	b.n	8004610 <__NVIC_SetPriority+0x40>
 80045fa:	683b      	ldr	r3, [r7, #0]
 80045fc:	b2da      	uxtb	r2, r3
 80045fe:	4908      	ldr	r1, [pc, #32]	@ (8004620 <__NVIC_SetPriority+0x50>)
 8004600:	79fb      	ldrb	r3, [r7, #7]
 8004602:	f003 030f 	and.w	r3, r3, #15
 8004606:	3b04      	subs	r3, #4
 8004608:	0112      	lsls	r2, r2, #4
 800460a:	b2d2      	uxtb	r2, r2
 800460c:	440b      	add	r3, r1
 800460e:	761a      	strb	r2, [r3, #24]
 8004610:	bf00      	nop
 8004612:	370c      	adds	r7, #12
 8004614:	46bd      	mov	sp, r7
 8004616:	bc80      	pop	{r7}
 8004618:	4770      	bx	lr
 800461a:	bf00      	nop
 800461c:	e000e100 	.word	0xe000e100
 8004620:	e000ed00 	.word	0xe000ed00

08004624 <SysTick_Handler>:
 8004624:	b580      	push	{r7, lr}
 8004626:	af00      	add	r7, sp, #0
 8004628:	4b05      	ldr	r3, [pc, #20]	@ (8004640 <SysTick_Handler+0x1c>)
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	f001 fd66 	bl	80060fc <xTaskGetSchedulerState>
 8004630:	4603      	mov	r3, r0
 8004632:	2b01      	cmp	r3, #1
 8004634:	d001      	beq.n	800463a <SysTick_Handler+0x16>
 8004636:	f002 fb07 	bl	8006c48 <xPortSysTickHandler>
 800463a:	bf00      	nop
 800463c:	bd80      	pop	{r7, pc}
 800463e:	bf00      	nop
 8004640:	e000e010 	.word	0xe000e010

08004644 <SVC_Setup>:
 8004644:	b580      	push	{r7, lr}
 8004646:	af00      	add	r7, sp, #0
 8004648:	2100      	movs	r1, #0
 800464a:	f06f 0004 	mvn.w	r0, #4
 800464e:	f7ff ffbf 	bl	80045d0 <__NVIC_SetPriority>
 8004652:	bf00      	nop
 8004654:	bd80      	pop	{r7, pc}
	...

08004658 <osKernelInitialize>:
 8004658:	b480      	push	{r7}
 800465a:	b083      	sub	sp, #12
 800465c:	af00      	add	r7, sp, #0
 800465e:	f3ef 8305 	mrs	r3, IPSR
 8004662:	603b      	str	r3, [r7, #0]
 8004664:	683b      	ldr	r3, [r7, #0]
 8004666:	2b00      	cmp	r3, #0
 8004668:	d003      	beq.n	8004672 <osKernelInitialize+0x1a>
 800466a:	f06f 0305 	mvn.w	r3, #5
 800466e:	607b      	str	r3, [r7, #4]
 8004670:	e00c      	b.n	800468c <osKernelInitialize+0x34>
 8004672:	4b09      	ldr	r3, [pc, #36]	@ (8004698 <osKernelInitialize+0x40>)
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	2b00      	cmp	r3, #0
 8004678:	d105      	bne.n	8004686 <osKernelInitialize+0x2e>
 800467a:	4b07      	ldr	r3, [pc, #28]	@ (8004698 <osKernelInitialize+0x40>)
 800467c:	2201      	movs	r2, #1
 800467e:	601a      	str	r2, [r3, #0]
 8004680:	2300      	movs	r3, #0
 8004682:	607b      	str	r3, [r7, #4]
 8004684:	e002      	b.n	800468c <osKernelInitialize+0x34>
 8004686:	f04f 33ff 	mov.w	r3, #4294967295
 800468a:	607b      	str	r3, [r7, #4]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	4618      	mov	r0, r3
 8004690:	370c      	adds	r7, #12
 8004692:	46bd      	mov	sp, r7
 8004694:	bc80      	pop	{r7}
 8004696:	4770      	bx	lr
 8004698:	200003d8 	.word	0x200003d8

0800469c <osKernelStart>:
 800469c:	b580      	push	{r7, lr}
 800469e:	b082      	sub	sp, #8
 80046a0:	af00      	add	r7, sp, #0
 80046a2:	f3ef 8305 	mrs	r3, IPSR
 80046a6:	603b      	str	r3, [r7, #0]
 80046a8:	683b      	ldr	r3, [r7, #0]
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d003      	beq.n	80046b6 <osKernelStart+0x1a>
 80046ae:	f06f 0305 	mvn.w	r3, #5
 80046b2:	607b      	str	r3, [r7, #4]
 80046b4:	e010      	b.n	80046d8 <osKernelStart+0x3c>
 80046b6:	4b0b      	ldr	r3, [pc, #44]	@ (80046e4 <osKernelStart+0x48>)
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	2b01      	cmp	r3, #1
 80046bc:	d109      	bne.n	80046d2 <osKernelStart+0x36>
 80046be:	f7ff ffc1 	bl	8004644 <SVC_Setup>
 80046c2:	4b08      	ldr	r3, [pc, #32]	@ (80046e4 <osKernelStart+0x48>)
 80046c4:	2202      	movs	r2, #2
 80046c6:	601a      	str	r2, [r3, #0]
 80046c8:	f001 f8b8 	bl	800583c <vTaskStartScheduler>
 80046cc:	2300      	movs	r3, #0
 80046ce:	607b      	str	r3, [r7, #4]
 80046d0:	e002      	b.n	80046d8 <osKernelStart+0x3c>
 80046d2:	f04f 33ff 	mov.w	r3, #4294967295
 80046d6:	607b      	str	r3, [r7, #4]
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	4618      	mov	r0, r3
 80046dc:	3708      	adds	r7, #8
 80046de:	46bd      	mov	sp, r7
 80046e0:	bd80      	pop	{r7, pc}
 80046e2:	bf00      	nop
 80046e4:	200003d8 	.word	0x200003d8

080046e8 <osThreadNew>:
 80046e8:	b580      	push	{r7, lr}
 80046ea:	b08e      	sub	sp, #56	@ 0x38
 80046ec:	af04      	add	r7, sp, #16
 80046ee:	60f8      	str	r0, [r7, #12]
 80046f0:	60b9      	str	r1, [r7, #8]
 80046f2:	607a      	str	r2, [r7, #4]
 80046f4:	2300      	movs	r3, #0
 80046f6:	613b      	str	r3, [r7, #16]
 80046f8:	f3ef 8305 	mrs	r3, IPSR
 80046fc:	617b      	str	r3, [r7, #20]
 80046fe:	697b      	ldr	r3, [r7, #20]
 8004700:	2b00      	cmp	r3, #0
 8004702:	d17e      	bne.n	8004802 <osThreadNew+0x11a>
 8004704:	68fb      	ldr	r3, [r7, #12]
 8004706:	2b00      	cmp	r3, #0
 8004708:	d07b      	beq.n	8004802 <osThreadNew+0x11a>
 800470a:	2380      	movs	r3, #128	@ 0x80
 800470c:	623b      	str	r3, [r7, #32]
 800470e:	2318      	movs	r3, #24
 8004710:	61fb      	str	r3, [r7, #28]
 8004712:	2300      	movs	r3, #0
 8004714:	627b      	str	r3, [r7, #36]	@ 0x24
 8004716:	f04f 33ff 	mov.w	r3, #4294967295
 800471a:	61bb      	str	r3, [r7, #24]
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	2b00      	cmp	r3, #0
 8004720:	d045      	beq.n	80047ae <osThreadNew+0xc6>
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	2b00      	cmp	r3, #0
 8004728:	d002      	beq.n	8004730 <osThreadNew+0x48>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	699b      	ldr	r3, [r3, #24]
 8004734:	2b00      	cmp	r3, #0
 8004736:	d002      	beq.n	800473e <osThreadNew+0x56>
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	699b      	ldr	r3, [r3, #24]
 800473c:	61fb      	str	r3, [r7, #28]
 800473e:	69fb      	ldr	r3, [r7, #28]
 8004740:	2b00      	cmp	r3, #0
 8004742:	d008      	beq.n	8004756 <osThreadNew+0x6e>
 8004744:	69fb      	ldr	r3, [r7, #28]
 8004746:	2b38      	cmp	r3, #56	@ 0x38
 8004748:	d805      	bhi.n	8004756 <osThreadNew+0x6e>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	685b      	ldr	r3, [r3, #4]
 800474e:	f003 0301 	and.w	r3, r3, #1
 8004752:	2b00      	cmp	r3, #0
 8004754:	d001      	beq.n	800475a <osThreadNew+0x72>
 8004756:	2300      	movs	r3, #0
 8004758:	e054      	b.n	8004804 <osThreadNew+0x11c>
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	695b      	ldr	r3, [r3, #20]
 800475e:	2b00      	cmp	r3, #0
 8004760:	d003      	beq.n	800476a <osThreadNew+0x82>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	695b      	ldr	r3, [r3, #20]
 8004766:	089b      	lsrs	r3, r3, #2
 8004768:	623b      	str	r3, [r7, #32]
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	689b      	ldr	r3, [r3, #8]
 800476e:	2b00      	cmp	r3, #0
 8004770:	d00e      	beq.n	8004790 <osThreadNew+0xa8>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	68db      	ldr	r3, [r3, #12]
 8004776:	2ba7      	cmp	r3, #167	@ 0xa7
 8004778:	d90a      	bls.n	8004790 <osThreadNew+0xa8>
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	691b      	ldr	r3, [r3, #16]
 800477e:	2b00      	cmp	r3, #0
 8004780:	d006      	beq.n	8004790 <osThreadNew+0xa8>
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	695b      	ldr	r3, [r3, #20]
 8004786:	2b00      	cmp	r3, #0
 8004788:	d002      	beq.n	8004790 <osThreadNew+0xa8>
 800478a:	2301      	movs	r3, #1
 800478c:	61bb      	str	r3, [r7, #24]
 800478e:	e010      	b.n	80047b2 <osThreadNew+0xca>
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	689b      	ldr	r3, [r3, #8]
 8004794:	2b00      	cmp	r3, #0
 8004796:	d10c      	bne.n	80047b2 <osThreadNew+0xca>
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	68db      	ldr	r3, [r3, #12]
 800479c:	2b00      	cmp	r3, #0
 800479e:	d108      	bne.n	80047b2 <osThreadNew+0xca>
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	691b      	ldr	r3, [r3, #16]
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d104      	bne.n	80047b2 <osThreadNew+0xca>
 80047a8:	2300      	movs	r3, #0
 80047aa:	61bb      	str	r3, [r7, #24]
 80047ac:	e001      	b.n	80047b2 <osThreadNew+0xca>
 80047ae:	2300      	movs	r3, #0
 80047b0:	61bb      	str	r3, [r7, #24]
 80047b2:	69bb      	ldr	r3, [r7, #24]
 80047b4:	2b01      	cmp	r3, #1
 80047b6:	d110      	bne.n	80047da <osThreadNew+0xf2>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	691b      	ldr	r3, [r3, #16]
 80047bc:	687a      	ldr	r2, [r7, #4]
 80047be:	6892      	ldr	r2, [r2, #8]
 80047c0:	9202      	str	r2, [sp, #8]
 80047c2:	9301      	str	r3, [sp, #4]
 80047c4:	69fb      	ldr	r3, [r7, #28]
 80047c6:	9300      	str	r3, [sp, #0]
 80047c8:	68bb      	ldr	r3, [r7, #8]
 80047ca:	6a3a      	ldr	r2, [r7, #32]
 80047cc:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80047ce:	68f8      	ldr	r0, [r7, #12]
 80047d0:	f000 fdf6 	bl	80053c0 <xTaskCreateStatic>
 80047d4:	4603      	mov	r3, r0
 80047d6:	613b      	str	r3, [r7, #16]
 80047d8:	e013      	b.n	8004802 <osThreadNew+0x11a>
 80047da:	69bb      	ldr	r3, [r7, #24]
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d110      	bne.n	8004802 <osThreadNew+0x11a>
 80047e0:	6a3b      	ldr	r3, [r7, #32]
 80047e2:	b29a      	uxth	r2, r3
 80047e4:	f107 0310 	add.w	r3, r7, #16
 80047e8:	9301      	str	r3, [sp, #4]
 80047ea:	69fb      	ldr	r3, [r7, #28]
 80047ec:	9300      	str	r3, [sp, #0]
 80047ee:	68bb      	ldr	r3, [r7, #8]
 80047f0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80047f2:	68f8      	ldr	r0, [r7, #12]
 80047f4:	f000 fe44 	bl	8005480 <xTaskCreate>
 80047f8:	4603      	mov	r3, r0
 80047fa:	2b01      	cmp	r3, #1
 80047fc:	d001      	beq.n	8004802 <osThreadNew+0x11a>
 80047fe:	2300      	movs	r3, #0
 8004800:	613b      	str	r3, [r7, #16]
 8004802:	693b      	ldr	r3, [r7, #16]
 8004804:	4618      	mov	r0, r3
 8004806:	3728      	adds	r7, #40	@ 0x28
 8004808:	46bd      	mov	sp, r7
 800480a:	bd80      	pop	{r7, pc}

0800480c <vApplicationGetIdleTaskMemory>:
 800480c:	b480      	push	{r7}
 800480e:	b085      	sub	sp, #20
 8004810:	af00      	add	r7, sp, #0
 8004812:	60f8      	str	r0, [r7, #12]
 8004814:	60b9      	str	r1, [r7, #8]
 8004816:	607a      	str	r2, [r7, #4]
 8004818:	68fb      	ldr	r3, [r7, #12]
 800481a:	4a06      	ldr	r2, [pc, #24]	@ (8004834 <vApplicationGetIdleTaskMemory+0x28>)
 800481c:	601a      	str	r2, [r3, #0]
 800481e:	68bb      	ldr	r3, [r7, #8]
 8004820:	4a05      	ldr	r2, [pc, #20]	@ (8004838 <vApplicationGetIdleTaskMemory+0x2c>)
 8004822:	601a      	str	r2, [r3, #0]
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	2280      	movs	r2, #128	@ 0x80
 8004828:	601a      	str	r2, [r3, #0]
 800482a:	bf00      	nop
 800482c:	3714      	adds	r7, #20
 800482e:	46bd      	mov	sp, r7
 8004830:	bc80      	pop	{r7}
 8004832:	4770      	bx	lr
 8004834:	200003dc 	.word	0x200003dc
 8004838:	20000484 	.word	0x20000484

0800483c <vApplicationGetTimerTaskMemory>:
 800483c:	b480      	push	{r7}
 800483e:	b085      	sub	sp, #20
 8004840:	af00      	add	r7, sp, #0
 8004842:	60f8      	str	r0, [r7, #12]
 8004844:	60b9      	str	r1, [r7, #8]
 8004846:	607a      	str	r2, [r7, #4]
 8004848:	68fb      	ldr	r3, [r7, #12]
 800484a:	4a07      	ldr	r2, [pc, #28]	@ (8004868 <vApplicationGetTimerTaskMemory+0x2c>)
 800484c:	601a      	str	r2, [r3, #0]
 800484e:	68bb      	ldr	r3, [r7, #8]
 8004850:	4a06      	ldr	r2, [pc, #24]	@ (800486c <vApplicationGetTimerTaskMemory+0x30>)
 8004852:	601a      	str	r2, [r3, #0]
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800485a:	601a      	str	r2, [r3, #0]
 800485c:	bf00      	nop
 800485e:	3714      	adds	r7, #20
 8004860:	46bd      	mov	sp, r7
 8004862:	bc80      	pop	{r7}
 8004864:	4770      	bx	lr
 8004866:	bf00      	nop
 8004868:	20000684 	.word	0x20000684
 800486c:	2000072c 	.word	0x2000072c

08004870 <vListInitialise>:
 8004870:	b480      	push	{r7}
 8004872:	b083      	sub	sp, #12
 8004874:	af00      	add	r7, sp, #0
 8004876:	6078      	str	r0, [r7, #4]
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	f103 0208 	add.w	r2, r3, #8
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	605a      	str	r2, [r3, #4]
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	f04f 32ff 	mov.w	r2, #4294967295
 8004888:	609a      	str	r2, [r3, #8]
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	f103 0208 	add.w	r2, r3, #8
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	60da      	str	r2, [r3, #12]
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	f103 0208 	add.w	r2, r3, #8
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	611a      	str	r2, [r3, #16]
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	2200      	movs	r2, #0
 80048a2:	601a      	str	r2, [r3, #0]
 80048a4:	bf00      	nop
 80048a6:	370c      	adds	r7, #12
 80048a8:	46bd      	mov	sp, r7
 80048aa:	bc80      	pop	{r7}
 80048ac:	4770      	bx	lr

080048ae <vListInitialiseItem>:
 80048ae:	b480      	push	{r7}
 80048b0:	b083      	sub	sp, #12
 80048b2:	af00      	add	r7, sp, #0
 80048b4:	6078      	str	r0, [r7, #4]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	2200      	movs	r2, #0
 80048ba:	611a      	str	r2, [r3, #16]
 80048bc:	bf00      	nop
 80048be:	370c      	adds	r7, #12
 80048c0:	46bd      	mov	sp, r7
 80048c2:	bc80      	pop	{r7}
 80048c4:	4770      	bx	lr

080048c6 <vListInsertEnd>:
 80048c6:	b480      	push	{r7}
 80048c8:	b085      	sub	sp, #20
 80048ca:	af00      	add	r7, sp, #0
 80048cc:	6078      	str	r0, [r7, #4]
 80048ce:	6039      	str	r1, [r7, #0]
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	685b      	ldr	r3, [r3, #4]
 80048d4:	60fb      	str	r3, [r7, #12]
 80048d6:	683b      	ldr	r3, [r7, #0]
 80048d8:	68fa      	ldr	r2, [r7, #12]
 80048da:	605a      	str	r2, [r3, #4]
 80048dc:	68fb      	ldr	r3, [r7, #12]
 80048de:	689a      	ldr	r2, [r3, #8]
 80048e0:	683b      	ldr	r3, [r7, #0]
 80048e2:	609a      	str	r2, [r3, #8]
 80048e4:	68fb      	ldr	r3, [r7, #12]
 80048e6:	689b      	ldr	r3, [r3, #8]
 80048e8:	683a      	ldr	r2, [r7, #0]
 80048ea:	605a      	str	r2, [r3, #4]
 80048ec:	68fb      	ldr	r3, [r7, #12]
 80048ee:	683a      	ldr	r2, [r7, #0]
 80048f0:	609a      	str	r2, [r3, #8]
 80048f2:	683b      	ldr	r3, [r7, #0]
 80048f4:	687a      	ldr	r2, [r7, #4]
 80048f6:	611a      	str	r2, [r3, #16]
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	1c5a      	adds	r2, r3, #1
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	601a      	str	r2, [r3, #0]
 8004902:	bf00      	nop
 8004904:	3714      	adds	r7, #20
 8004906:	46bd      	mov	sp, r7
 8004908:	bc80      	pop	{r7}
 800490a:	4770      	bx	lr

0800490c <vListInsert>:
 800490c:	b480      	push	{r7}
 800490e:	b085      	sub	sp, #20
 8004910:	af00      	add	r7, sp, #0
 8004912:	6078      	str	r0, [r7, #4]
 8004914:	6039      	str	r1, [r7, #0]
 8004916:	683b      	ldr	r3, [r7, #0]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	60bb      	str	r3, [r7, #8]
 800491c:	68bb      	ldr	r3, [r7, #8]
 800491e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004922:	d103      	bne.n	800492c <vListInsert+0x20>
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	691b      	ldr	r3, [r3, #16]
 8004928:	60fb      	str	r3, [r7, #12]
 800492a:	e00c      	b.n	8004946 <vListInsert+0x3a>
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	3308      	adds	r3, #8
 8004930:	60fb      	str	r3, [r7, #12]
 8004932:	e002      	b.n	800493a <vListInsert+0x2e>
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	685b      	ldr	r3, [r3, #4]
 8004938:	60fb      	str	r3, [r7, #12]
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	685b      	ldr	r3, [r3, #4]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	68ba      	ldr	r2, [r7, #8]
 8004942:	429a      	cmp	r2, r3
 8004944:	d2f6      	bcs.n	8004934 <vListInsert+0x28>
 8004946:	68fb      	ldr	r3, [r7, #12]
 8004948:	685a      	ldr	r2, [r3, #4]
 800494a:	683b      	ldr	r3, [r7, #0]
 800494c:	605a      	str	r2, [r3, #4]
 800494e:	683b      	ldr	r3, [r7, #0]
 8004950:	685b      	ldr	r3, [r3, #4]
 8004952:	683a      	ldr	r2, [r7, #0]
 8004954:	609a      	str	r2, [r3, #8]
 8004956:	683b      	ldr	r3, [r7, #0]
 8004958:	68fa      	ldr	r2, [r7, #12]
 800495a:	609a      	str	r2, [r3, #8]
 800495c:	68fb      	ldr	r3, [r7, #12]
 800495e:	683a      	ldr	r2, [r7, #0]
 8004960:	605a      	str	r2, [r3, #4]
 8004962:	683b      	ldr	r3, [r7, #0]
 8004964:	687a      	ldr	r2, [r7, #4]
 8004966:	611a      	str	r2, [r3, #16]
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	1c5a      	adds	r2, r3, #1
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	601a      	str	r2, [r3, #0]
 8004972:	bf00      	nop
 8004974:	3714      	adds	r7, #20
 8004976:	46bd      	mov	sp, r7
 8004978:	bc80      	pop	{r7}
 800497a:	4770      	bx	lr

0800497c <uxListRemove>:
 800497c:	b480      	push	{r7}
 800497e:	b085      	sub	sp, #20
 8004980:	af00      	add	r7, sp, #0
 8004982:	6078      	str	r0, [r7, #4]
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	691b      	ldr	r3, [r3, #16]
 8004988:	60fb      	str	r3, [r7, #12]
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	685b      	ldr	r3, [r3, #4]
 800498e:	687a      	ldr	r2, [r7, #4]
 8004990:	6892      	ldr	r2, [r2, #8]
 8004992:	609a      	str	r2, [r3, #8]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	689b      	ldr	r3, [r3, #8]
 8004998:	687a      	ldr	r2, [r7, #4]
 800499a:	6852      	ldr	r2, [r2, #4]
 800499c:	605a      	str	r2, [r3, #4]
 800499e:	68fb      	ldr	r3, [r7, #12]
 80049a0:	685b      	ldr	r3, [r3, #4]
 80049a2:	687a      	ldr	r2, [r7, #4]
 80049a4:	429a      	cmp	r2, r3
 80049a6:	d103      	bne.n	80049b0 <uxListRemove+0x34>
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	689a      	ldr	r2, [r3, #8]
 80049ac:	68fb      	ldr	r3, [r7, #12]
 80049ae:	605a      	str	r2, [r3, #4]
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	2200      	movs	r2, #0
 80049b4:	611a      	str	r2, [r3, #16]
 80049b6:	68fb      	ldr	r3, [r7, #12]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	1e5a      	subs	r2, r3, #1
 80049bc:	68fb      	ldr	r3, [r7, #12]
 80049be:	601a      	str	r2, [r3, #0]
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	4618      	mov	r0, r3
 80049c6:	3714      	adds	r7, #20
 80049c8:	46bd      	mov	sp, r7
 80049ca:	bc80      	pop	{r7}
 80049cc:	4770      	bx	lr
	...

080049d0 <xQueueGenericReset>:
 80049d0:	b580      	push	{r7, lr}
 80049d2:	b084      	sub	sp, #16
 80049d4:	af00      	add	r7, sp, #0
 80049d6:	6078      	str	r0, [r7, #4]
 80049d8:	6039      	str	r1, [r7, #0]
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	60fb      	str	r3, [r7, #12]
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	2b00      	cmp	r3, #0
 80049e2:	d10b      	bne.n	80049fc <xQueueGenericReset+0x2c>
 80049e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80049e8:	f383 8811 	msr	BASEPRI, r3
 80049ec:	f3bf 8f6f 	isb	sy
 80049f0:	f3bf 8f4f 	dsb	sy
 80049f4:	60bb      	str	r3, [r7, #8]
 80049f6:	bf00      	nop
 80049f8:	bf00      	nop
 80049fa:	e7fd      	b.n	80049f8 <xQueueGenericReset+0x28>
 80049fc:	f002 f8a6 	bl	8006b4c <vPortEnterCritical>
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	681a      	ldr	r2, [r3, #0]
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a08:	68f9      	ldr	r1, [r7, #12]
 8004a0a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8004a0c:	fb01 f303 	mul.w	r3, r1, r3
 8004a10:	441a      	add	r2, r3
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	609a      	str	r2, [r3, #8]
 8004a16:	68fb      	ldr	r3, [r7, #12]
 8004a18:	2200      	movs	r2, #0
 8004a1a:	639a      	str	r2, [r3, #56]	@ 0x38
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	681a      	ldr	r2, [r3, #0]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	605a      	str	r2, [r3, #4]
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681a      	ldr	r2, [r3, #0]
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a2c:	3b01      	subs	r3, #1
 8004a2e:	68f9      	ldr	r1, [r7, #12]
 8004a30:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8004a32:	fb01 f303 	mul.w	r3, r1, r3
 8004a36:	441a      	add	r2, r3
 8004a38:	68fb      	ldr	r3, [r7, #12]
 8004a3a:	60da      	str	r2, [r3, #12]
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	22ff      	movs	r2, #255	@ 0xff
 8004a40:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	22ff      	movs	r2, #255	@ 0xff
 8004a48:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004a4c:	683b      	ldr	r3, [r7, #0]
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	d114      	bne.n	8004a7c <xQueueGenericReset+0xac>
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	691b      	ldr	r3, [r3, #16]
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d01a      	beq.n	8004a90 <xQueueGenericReset+0xc0>
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	3310      	adds	r3, #16
 8004a5e:	4618      	mov	r0, r3
 8004a60:	f001 f986 	bl	8005d70 <xTaskRemoveFromEventList>
 8004a64:	4603      	mov	r3, r0
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	d012      	beq.n	8004a90 <xQueueGenericReset+0xc0>
 8004a6a:	4b0d      	ldr	r3, [pc, #52]	@ (8004aa0 <xQueueGenericReset+0xd0>)
 8004a6c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004a70:	601a      	str	r2, [r3, #0]
 8004a72:	f3bf 8f4f 	dsb	sy
 8004a76:	f3bf 8f6f 	isb	sy
 8004a7a:	e009      	b.n	8004a90 <xQueueGenericReset+0xc0>
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	3310      	adds	r3, #16
 8004a80:	4618      	mov	r0, r3
 8004a82:	f7ff fef5 	bl	8004870 <vListInitialise>
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	3324      	adds	r3, #36	@ 0x24
 8004a8a:	4618      	mov	r0, r3
 8004a8c:	f7ff fef0 	bl	8004870 <vListInitialise>
 8004a90:	f002 f88c 	bl	8006bac <vPortExitCritical>
 8004a94:	2301      	movs	r3, #1
 8004a96:	4618      	mov	r0, r3
 8004a98:	3710      	adds	r7, #16
 8004a9a:	46bd      	mov	sp, r7
 8004a9c:	bd80      	pop	{r7, pc}
 8004a9e:	bf00      	nop
 8004aa0:	e000ed04 	.word	0xe000ed04

08004aa4 <xQueueGenericCreateStatic>:
 8004aa4:	b580      	push	{r7, lr}
 8004aa6:	b08e      	sub	sp, #56	@ 0x38
 8004aa8:	af02      	add	r7, sp, #8
 8004aaa:	60f8      	str	r0, [r7, #12]
 8004aac:	60b9      	str	r1, [r7, #8]
 8004aae:	607a      	str	r2, [r7, #4]
 8004ab0:	603b      	str	r3, [r7, #0]
 8004ab2:	68fb      	ldr	r3, [r7, #12]
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d10b      	bne.n	8004ad0 <xQueueGenericCreateStatic+0x2c>
 8004ab8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004abc:	f383 8811 	msr	BASEPRI, r3
 8004ac0:	f3bf 8f6f 	isb	sy
 8004ac4:	f3bf 8f4f 	dsb	sy
 8004ac8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004aca:	bf00      	nop
 8004acc:	bf00      	nop
 8004ace:	e7fd      	b.n	8004acc <xQueueGenericCreateStatic+0x28>
 8004ad0:	683b      	ldr	r3, [r7, #0]
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	d10b      	bne.n	8004aee <xQueueGenericCreateStatic+0x4a>
 8004ad6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004ada:	f383 8811 	msr	BASEPRI, r3
 8004ade:	f3bf 8f6f 	isb	sy
 8004ae2:	f3bf 8f4f 	dsb	sy
 8004ae6:	627b      	str	r3, [r7, #36]	@ 0x24
 8004ae8:	bf00      	nop
 8004aea:	bf00      	nop
 8004aec:	e7fd      	b.n	8004aea <xQueueGenericCreateStatic+0x46>
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	2b00      	cmp	r3, #0
 8004af2:	d002      	beq.n	8004afa <xQueueGenericCreateStatic+0x56>
 8004af4:	68bb      	ldr	r3, [r7, #8]
 8004af6:	2b00      	cmp	r3, #0
 8004af8:	d001      	beq.n	8004afe <xQueueGenericCreateStatic+0x5a>
 8004afa:	2301      	movs	r3, #1
 8004afc:	e000      	b.n	8004b00 <xQueueGenericCreateStatic+0x5c>
 8004afe:	2300      	movs	r3, #0
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	d10b      	bne.n	8004b1c <xQueueGenericCreateStatic+0x78>
 8004b04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004b08:	f383 8811 	msr	BASEPRI, r3
 8004b0c:	f3bf 8f6f 	isb	sy
 8004b10:	f3bf 8f4f 	dsb	sy
 8004b14:	623b      	str	r3, [r7, #32]
 8004b16:	bf00      	nop
 8004b18:	bf00      	nop
 8004b1a:	e7fd      	b.n	8004b18 <xQueueGenericCreateStatic+0x74>
 8004b1c:	687b      	ldr	r3, [r7, #4]
 8004b1e:	2b00      	cmp	r3, #0
 8004b20:	d102      	bne.n	8004b28 <xQueueGenericCreateStatic+0x84>
 8004b22:	68bb      	ldr	r3, [r7, #8]
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d101      	bne.n	8004b2c <xQueueGenericCreateStatic+0x88>
 8004b28:	2301      	movs	r3, #1
 8004b2a:	e000      	b.n	8004b2e <xQueueGenericCreateStatic+0x8a>
 8004b2c:	2300      	movs	r3, #0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d10b      	bne.n	8004b4a <xQueueGenericCreateStatic+0xa6>
 8004b32:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004b36:	f383 8811 	msr	BASEPRI, r3
 8004b3a:	f3bf 8f6f 	isb	sy
 8004b3e:	f3bf 8f4f 	dsb	sy
 8004b42:	61fb      	str	r3, [r7, #28]
 8004b44:	bf00      	nop
 8004b46:	bf00      	nop
 8004b48:	e7fd      	b.n	8004b46 <xQueueGenericCreateStatic+0xa2>
 8004b4a:	2350      	movs	r3, #80	@ 0x50
 8004b4c:	617b      	str	r3, [r7, #20]
 8004b4e:	697b      	ldr	r3, [r7, #20]
 8004b50:	2b50      	cmp	r3, #80	@ 0x50
 8004b52:	d00b      	beq.n	8004b6c <xQueueGenericCreateStatic+0xc8>
 8004b54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004b58:	f383 8811 	msr	BASEPRI, r3
 8004b5c:	f3bf 8f6f 	isb	sy
 8004b60:	f3bf 8f4f 	dsb	sy
 8004b64:	61bb      	str	r3, [r7, #24]
 8004b66:	bf00      	nop
 8004b68:	bf00      	nop
 8004b6a:	e7fd      	b.n	8004b68 <xQueueGenericCreateStatic+0xc4>
 8004b6c:	697b      	ldr	r3, [r7, #20]
 8004b6e:	683b      	ldr	r3, [r7, #0]
 8004b70:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004b72:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b74:	2b00      	cmp	r3, #0
 8004b76:	d00d      	beq.n	8004b94 <xQueueGenericCreateStatic+0xf0>
 8004b78:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b7a:	2201      	movs	r2, #1
 8004b7c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004b80:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8004b84:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b86:	9300      	str	r3, [sp, #0]
 8004b88:	4613      	mov	r3, r2
 8004b8a:	687a      	ldr	r2, [r7, #4]
 8004b8c:	68b9      	ldr	r1, [r7, #8]
 8004b8e:	68f8      	ldr	r0, [r7, #12]
 8004b90:	f000 f805 	bl	8004b9e <prvInitialiseNewQueue>
 8004b94:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b96:	4618      	mov	r0, r3
 8004b98:	3730      	adds	r7, #48	@ 0x30
 8004b9a:	46bd      	mov	sp, r7
 8004b9c:	bd80      	pop	{r7, pc}

08004b9e <prvInitialiseNewQueue>:
 8004b9e:	b580      	push	{r7, lr}
 8004ba0:	b084      	sub	sp, #16
 8004ba2:	af00      	add	r7, sp, #0
 8004ba4:	60f8      	str	r0, [r7, #12]
 8004ba6:	60b9      	str	r1, [r7, #8]
 8004ba8:	607a      	str	r2, [r7, #4]
 8004baa:	70fb      	strb	r3, [r7, #3]
 8004bac:	68bb      	ldr	r3, [r7, #8]
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d103      	bne.n	8004bba <prvInitialiseNewQueue+0x1c>
 8004bb2:	69bb      	ldr	r3, [r7, #24]
 8004bb4:	69ba      	ldr	r2, [r7, #24]
 8004bb6:	601a      	str	r2, [r3, #0]
 8004bb8:	e002      	b.n	8004bc0 <prvInitialiseNewQueue+0x22>
 8004bba:	69bb      	ldr	r3, [r7, #24]
 8004bbc:	687a      	ldr	r2, [r7, #4]
 8004bbe:	601a      	str	r2, [r3, #0]
 8004bc0:	69bb      	ldr	r3, [r7, #24]
 8004bc2:	68fa      	ldr	r2, [r7, #12]
 8004bc4:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004bc6:	69bb      	ldr	r3, [r7, #24]
 8004bc8:	68ba      	ldr	r2, [r7, #8]
 8004bca:	641a      	str	r2, [r3, #64]	@ 0x40
 8004bcc:	2101      	movs	r1, #1
 8004bce:	69b8      	ldr	r0, [r7, #24]
 8004bd0:	f7ff fefe 	bl	80049d0 <xQueueGenericReset>
 8004bd4:	69bb      	ldr	r3, [r7, #24]
 8004bd6:	78fa      	ldrb	r2, [r7, #3]
 8004bd8:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8004bdc:	bf00      	nop
 8004bde:	3710      	adds	r7, #16
 8004be0:	46bd      	mov	sp, r7
 8004be2:	bd80      	pop	{r7, pc}

08004be4 <xQueueGenericSend>:
 8004be4:	b580      	push	{r7, lr}
 8004be6:	b08e      	sub	sp, #56	@ 0x38
 8004be8:	af00      	add	r7, sp, #0
 8004bea:	60f8      	str	r0, [r7, #12]
 8004bec:	60b9      	str	r1, [r7, #8]
 8004bee:	607a      	str	r2, [r7, #4]
 8004bf0:	603b      	str	r3, [r7, #0]
 8004bf2:	2300      	movs	r3, #0
 8004bf4:	637b      	str	r3, [r7, #52]	@ 0x34
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	633b      	str	r3, [r7, #48]	@ 0x30
 8004bfa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d10b      	bne.n	8004c18 <xQueueGenericSend+0x34>
 8004c00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004c04:	f383 8811 	msr	BASEPRI, r3
 8004c08:	f3bf 8f6f 	isb	sy
 8004c0c:	f3bf 8f4f 	dsb	sy
 8004c10:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004c12:	bf00      	nop
 8004c14:	bf00      	nop
 8004c16:	e7fd      	b.n	8004c14 <xQueueGenericSend+0x30>
 8004c18:	68bb      	ldr	r3, [r7, #8]
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d103      	bne.n	8004c26 <xQueueGenericSend+0x42>
 8004c1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004c20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d101      	bne.n	8004c2a <xQueueGenericSend+0x46>
 8004c26:	2301      	movs	r3, #1
 8004c28:	e000      	b.n	8004c2c <xQueueGenericSend+0x48>
 8004c2a:	2300      	movs	r3, #0
 8004c2c:	2b00      	cmp	r3, #0
 8004c2e:	d10b      	bne.n	8004c48 <xQueueGenericSend+0x64>
 8004c30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004c34:	f383 8811 	msr	BASEPRI, r3
 8004c38:	f3bf 8f6f 	isb	sy
 8004c3c:	f3bf 8f4f 	dsb	sy
 8004c40:	627b      	str	r3, [r7, #36]	@ 0x24
 8004c42:	bf00      	nop
 8004c44:	bf00      	nop
 8004c46:	e7fd      	b.n	8004c44 <xQueueGenericSend+0x60>
 8004c48:	683b      	ldr	r3, [r7, #0]
 8004c4a:	2b02      	cmp	r3, #2
 8004c4c:	d103      	bne.n	8004c56 <xQueueGenericSend+0x72>
 8004c4e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004c50:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004c52:	2b01      	cmp	r3, #1
 8004c54:	d101      	bne.n	8004c5a <xQueueGenericSend+0x76>
 8004c56:	2301      	movs	r3, #1
 8004c58:	e000      	b.n	8004c5c <xQueueGenericSend+0x78>
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	2b00      	cmp	r3, #0
 8004c5e:	d10b      	bne.n	8004c78 <xQueueGenericSend+0x94>
 8004c60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004c64:	f383 8811 	msr	BASEPRI, r3
 8004c68:	f3bf 8f6f 	isb	sy
 8004c6c:	f3bf 8f4f 	dsb	sy
 8004c70:	623b      	str	r3, [r7, #32]
 8004c72:	bf00      	nop
 8004c74:	bf00      	nop
 8004c76:	e7fd      	b.n	8004c74 <xQueueGenericSend+0x90>
 8004c78:	f001 fa40 	bl	80060fc <xTaskGetSchedulerState>
 8004c7c:	4603      	mov	r3, r0
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	d102      	bne.n	8004c88 <xQueueGenericSend+0xa4>
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d101      	bne.n	8004c8c <xQueueGenericSend+0xa8>
 8004c88:	2301      	movs	r3, #1
 8004c8a:	e000      	b.n	8004c8e <xQueueGenericSend+0xaa>
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	2b00      	cmp	r3, #0
 8004c90:	d10b      	bne.n	8004caa <xQueueGenericSend+0xc6>
 8004c92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004c96:	f383 8811 	msr	BASEPRI, r3
 8004c9a:	f3bf 8f6f 	isb	sy
 8004c9e:	f3bf 8f4f 	dsb	sy
 8004ca2:	61fb      	str	r3, [r7, #28]
 8004ca4:	bf00      	nop
 8004ca6:	bf00      	nop
 8004ca8:	e7fd      	b.n	8004ca6 <xQueueGenericSend+0xc2>
 8004caa:	f001 ff4f 	bl	8006b4c <vPortEnterCritical>
 8004cae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cb0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004cb2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cb4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004cb6:	429a      	cmp	r2, r3
 8004cb8:	d302      	bcc.n	8004cc0 <xQueueGenericSend+0xdc>
 8004cba:	683b      	ldr	r3, [r7, #0]
 8004cbc:	2b02      	cmp	r3, #2
 8004cbe:	d129      	bne.n	8004d14 <xQueueGenericSend+0x130>
 8004cc0:	683a      	ldr	r2, [r7, #0]
 8004cc2:	68b9      	ldr	r1, [r7, #8]
 8004cc4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004cc6:	f000 fa0f 	bl	80050e8 <prvCopyDataToQueue>
 8004cca:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004ccc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d010      	beq.n	8004cf6 <xQueueGenericSend+0x112>
 8004cd4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004cd6:	3324      	adds	r3, #36	@ 0x24
 8004cd8:	4618      	mov	r0, r3
 8004cda:	f001 f849 	bl	8005d70 <xTaskRemoveFromEventList>
 8004cde:	4603      	mov	r3, r0
 8004ce0:	2b00      	cmp	r3, #0
 8004ce2:	d013      	beq.n	8004d0c <xQueueGenericSend+0x128>
 8004ce4:	4b3f      	ldr	r3, [pc, #252]	@ (8004de4 <xQueueGenericSend+0x200>)
 8004ce6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004cea:	601a      	str	r2, [r3, #0]
 8004cec:	f3bf 8f4f 	dsb	sy
 8004cf0:	f3bf 8f6f 	isb	sy
 8004cf4:	e00a      	b.n	8004d0c <xQueueGenericSend+0x128>
 8004cf6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	d007      	beq.n	8004d0c <xQueueGenericSend+0x128>
 8004cfc:	4b39      	ldr	r3, [pc, #228]	@ (8004de4 <xQueueGenericSend+0x200>)
 8004cfe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004d02:	601a      	str	r2, [r3, #0]
 8004d04:	f3bf 8f4f 	dsb	sy
 8004d08:	f3bf 8f6f 	isb	sy
 8004d0c:	f001 ff4e 	bl	8006bac <vPortExitCritical>
 8004d10:	2301      	movs	r3, #1
 8004d12:	e063      	b.n	8004ddc <xQueueGenericSend+0x1f8>
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d103      	bne.n	8004d22 <xQueueGenericSend+0x13e>
 8004d1a:	f001 ff47 	bl	8006bac <vPortExitCritical>
 8004d1e:	2300      	movs	r3, #0
 8004d20:	e05c      	b.n	8004ddc <xQueueGenericSend+0x1f8>
 8004d22:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004d24:	2b00      	cmp	r3, #0
 8004d26:	d106      	bne.n	8004d36 <xQueueGenericSend+0x152>
 8004d28:	f107 0314 	add.w	r3, r7, #20
 8004d2c:	4618      	mov	r0, r3
 8004d2e:	f001 f883 	bl	8005e38 <vTaskInternalSetTimeOutState>
 8004d32:	2301      	movs	r3, #1
 8004d34:	637b      	str	r3, [r7, #52]	@ 0x34
 8004d36:	f001 ff39 	bl	8006bac <vPortExitCritical>
 8004d3a:	f000 fdef 	bl	800591c <vTaskSuspendAll>
 8004d3e:	f001 ff05 	bl	8006b4c <vPortEnterCritical>
 8004d42:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d44:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8004d48:	b25b      	sxtb	r3, r3
 8004d4a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d4e:	d103      	bne.n	8004d58 <xQueueGenericSend+0x174>
 8004d50:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d52:	2200      	movs	r2, #0
 8004d54:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004d58:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d5a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004d5e:	b25b      	sxtb	r3, r3
 8004d60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d64:	d103      	bne.n	8004d6e <xQueueGenericSend+0x18a>
 8004d66:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d68:	2200      	movs	r2, #0
 8004d6a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004d6e:	f001 ff1d 	bl	8006bac <vPortExitCritical>
 8004d72:	1d3a      	adds	r2, r7, #4
 8004d74:	f107 0314 	add.w	r3, r7, #20
 8004d78:	4611      	mov	r1, r2
 8004d7a:	4618      	mov	r0, r3
 8004d7c:	f001 f872 	bl	8005e64 <xTaskCheckForTimeOut>
 8004d80:	4603      	mov	r3, r0
 8004d82:	2b00      	cmp	r3, #0
 8004d84:	d124      	bne.n	8004dd0 <xQueueGenericSend+0x1ec>
 8004d86:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004d88:	f000 faa6 	bl	80052d8 <prvIsQueueFull>
 8004d8c:	4603      	mov	r3, r0
 8004d8e:	2b00      	cmp	r3, #0
 8004d90:	d018      	beq.n	8004dc4 <xQueueGenericSend+0x1e0>
 8004d92:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004d94:	3310      	adds	r3, #16
 8004d96:	687a      	ldr	r2, [r7, #4]
 8004d98:	4611      	mov	r1, r2
 8004d9a:	4618      	mov	r0, r3
 8004d9c:	f000 ff96 	bl	8005ccc <vTaskPlaceOnEventList>
 8004da0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004da2:	f000 fa31 	bl	8005208 <prvUnlockQueue>
 8004da6:	f000 fdc7 	bl	8005938 <xTaskResumeAll>
 8004daa:	4603      	mov	r3, r0
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	f47f af7c 	bne.w	8004caa <xQueueGenericSend+0xc6>
 8004db2:	4b0c      	ldr	r3, [pc, #48]	@ (8004de4 <xQueueGenericSend+0x200>)
 8004db4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004db8:	601a      	str	r2, [r3, #0]
 8004dba:	f3bf 8f4f 	dsb	sy
 8004dbe:	f3bf 8f6f 	isb	sy
 8004dc2:	e772      	b.n	8004caa <xQueueGenericSend+0xc6>
 8004dc4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004dc6:	f000 fa1f 	bl	8005208 <prvUnlockQueue>
 8004dca:	f000 fdb5 	bl	8005938 <xTaskResumeAll>
 8004dce:	e76c      	b.n	8004caa <xQueueGenericSend+0xc6>
 8004dd0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004dd2:	f000 fa19 	bl	8005208 <prvUnlockQueue>
 8004dd6:	f000 fdaf 	bl	8005938 <xTaskResumeAll>
 8004dda:	2300      	movs	r3, #0
 8004ddc:	4618      	mov	r0, r3
 8004dde:	3738      	adds	r7, #56	@ 0x38
 8004de0:	46bd      	mov	sp, r7
 8004de2:	bd80      	pop	{r7, pc}
 8004de4:	e000ed04 	.word	0xe000ed04

08004de8 <xQueueGenericSendFromISR>:
 8004de8:	b580      	push	{r7, lr}
 8004dea:	b090      	sub	sp, #64	@ 0x40
 8004dec:	af00      	add	r7, sp, #0
 8004dee:	60f8      	str	r0, [r7, #12]
 8004df0:	60b9      	str	r1, [r7, #8]
 8004df2:	607a      	str	r2, [r7, #4]
 8004df4:	603b      	str	r3, [r7, #0]
 8004df6:	68fb      	ldr	r3, [r7, #12]
 8004df8:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004dfa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d10b      	bne.n	8004e18 <xQueueGenericSendFromISR+0x30>
 8004e00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004e04:	f383 8811 	msr	BASEPRI, r3
 8004e08:	f3bf 8f6f 	isb	sy
 8004e0c:	f3bf 8f4f 	dsb	sy
 8004e10:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e12:	bf00      	nop
 8004e14:	bf00      	nop
 8004e16:	e7fd      	b.n	8004e14 <xQueueGenericSendFromISR+0x2c>
 8004e18:	68bb      	ldr	r3, [r7, #8]
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	d103      	bne.n	8004e26 <xQueueGenericSendFromISR+0x3e>
 8004e1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d101      	bne.n	8004e2a <xQueueGenericSendFromISR+0x42>
 8004e26:	2301      	movs	r3, #1
 8004e28:	e000      	b.n	8004e2c <xQueueGenericSendFromISR+0x44>
 8004e2a:	2300      	movs	r3, #0
 8004e2c:	2b00      	cmp	r3, #0
 8004e2e:	d10b      	bne.n	8004e48 <xQueueGenericSendFromISR+0x60>
 8004e30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004e34:	f383 8811 	msr	BASEPRI, r3
 8004e38:	f3bf 8f6f 	isb	sy
 8004e3c:	f3bf 8f4f 	dsb	sy
 8004e40:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e42:	bf00      	nop
 8004e44:	bf00      	nop
 8004e46:	e7fd      	b.n	8004e44 <xQueueGenericSendFromISR+0x5c>
 8004e48:	683b      	ldr	r3, [r7, #0]
 8004e4a:	2b02      	cmp	r3, #2
 8004e4c:	d103      	bne.n	8004e56 <xQueueGenericSendFromISR+0x6e>
 8004e4e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e50:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004e52:	2b01      	cmp	r3, #1
 8004e54:	d101      	bne.n	8004e5a <xQueueGenericSendFromISR+0x72>
 8004e56:	2301      	movs	r3, #1
 8004e58:	e000      	b.n	8004e5c <xQueueGenericSendFromISR+0x74>
 8004e5a:	2300      	movs	r3, #0
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d10b      	bne.n	8004e78 <xQueueGenericSendFromISR+0x90>
 8004e60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004e64:	f383 8811 	msr	BASEPRI, r3
 8004e68:	f3bf 8f6f 	isb	sy
 8004e6c:	f3bf 8f4f 	dsb	sy
 8004e70:	623b      	str	r3, [r7, #32]
 8004e72:	bf00      	nop
 8004e74:	bf00      	nop
 8004e76:	e7fd      	b.n	8004e74 <xQueueGenericSendFromISR+0x8c>
 8004e78:	f001 ff2a 	bl	8006cd0 <vPortValidateInterruptPriority>
 8004e7c:	f3ef 8211 	mrs	r2, BASEPRI
 8004e80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004e84:	f383 8811 	msr	BASEPRI, r3
 8004e88:	f3bf 8f6f 	isb	sy
 8004e8c:	f3bf 8f4f 	dsb	sy
 8004e90:	61fa      	str	r2, [r7, #28]
 8004e92:	61bb      	str	r3, [r7, #24]
 8004e94:	69fb      	ldr	r3, [r7, #28]
 8004e96:	637b      	str	r3, [r7, #52]	@ 0x34
 8004e98:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e9a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004e9c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004e9e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004ea0:	429a      	cmp	r2, r3
 8004ea2:	d302      	bcc.n	8004eaa <xQueueGenericSendFromISR+0xc2>
 8004ea4:	683b      	ldr	r3, [r7, #0]
 8004ea6:	2b02      	cmp	r3, #2
 8004ea8:	d12f      	bne.n	8004f0a <xQueueGenericSendFromISR+0x122>
 8004eaa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004eac:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004eb0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8004eb4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004eb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004eb8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004eba:	683a      	ldr	r2, [r7, #0]
 8004ebc:	68b9      	ldr	r1, [r7, #8]
 8004ebe:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8004ec0:	f000 f912 	bl	80050e8 <prvCopyDataToQueue>
 8004ec4:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 8004ec8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ecc:	d112      	bne.n	8004ef4 <xQueueGenericSendFromISR+0x10c>
 8004ece:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ed0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ed2:	2b00      	cmp	r3, #0
 8004ed4:	d016      	beq.n	8004f04 <xQueueGenericSendFromISR+0x11c>
 8004ed6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004ed8:	3324      	adds	r3, #36	@ 0x24
 8004eda:	4618      	mov	r0, r3
 8004edc:	f000 ff48 	bl	8005d70 <xTaskRemoveFromEventList>
 8004ee0:	4603      	mov	r3, r0
 8004ee2:	2b00      	cmp	r3, #0
 8004ee4:	d00e      	beq.n	8004f04 <xQueueGenericSendFromISR+0x11c>
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	2b00      	cmp	r3, #0
 8004eea:	d00b      	beq.n	8004f04 <xQueueGenericSendFromISR+0x11c>
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	2201      	movs	r2, #1
 8004ef0:	601a      	str	r2, [r3, #0]
 8004ef2:	e007      	b.n	8004f04 <xQueueGenericSendFromISR+0x11c>
 8004ef4:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8004ef8:	3301      	adds	r3, #1
 8004efa:	b2db      	uxtb	r3, r3
 8004efc:	b25a      	sxtb	r2, r3
 8004efe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f00:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004f04:	2301      	movs	r3, #1
 8004f06:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004f08:	e001      	b.n	8004f0e <xQueueGenericSendFromISR+0x126>
 8004f0a:	2300      	movs	r3, #0
 8004f0c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004f0e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004f10:	617b      	str	r3, [r7, #20]
 8004f12:	697b      	ldr	r3, [r7, #20]
 8004f14:	f383 8811 	msr	BASEPRI, r3
 8004f18:	bf00      	nop
 8004f1a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004f1c:	4618      	mov	r0, r3
 8004f1e:	3740      	adds	r7, #64	@ 0x40
 8004f20:	46bd      	mov	sp, r7
 8004f22:	bd80      	pop	{r7, pc}

08004f24 <xQueueReceive>:
 8004f24:	b580      	push	{r7, lr}
 8004f26:	b08c      	sub	sp, #48	@ 0x30
 8004f28:	af00      	add	r7, sp, #0
 8004f2a:	60f8      	str	r0, [r7, #12]
 8004f2c:	60b9      	str	r1, [r7, #8]
 8004f2e:	607a      	str	r2, [r7, #4]
 8004f30:	2300      	movs	r3, #0
 8004f32:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004f38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d10b      	bne.n	8004f56 <xQueueReceive+0x32>
 8004f3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004f42:	f383 8811 	msr	BASEPRI, r3
 8004f46:	f3bf 8f6f 	isb	sy
 8004f4a:	f3bf 8f4f 	dsb	sy
 8004f4e:	623b      	str	r3, [r7, #32]
 8004f50:	bf00      	nop
 8004f52:	bf00      	nop
 8004f54:	e7fd      	b.n	8004f52 <xQueueReceive+0x2e>
 8004f56:	68bb      	ldr	r3, [r7, #8]
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	d103      	bne.n	8004f64 <xQueueReceive+0x40>
 8004f5c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f60:	2b00      	cmp	r3, #0
 8004f62:	d101      	bne.n	8004f68 <xQueueReceive+0x44>
 8004f64:	2301      	movs	r3, #1
 8004f66:	e000      	b.n	8004f6a <xQueueReceive+0x46>
 8004f68:	2300      	movs	r3, #0
 8004f6a:	2b00      	cmp	r3, #0
 8004f6c:	d10b      	bne.n	8004f86 <xQueueReceive+0x62>
 8004f6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004f72:	f383 8811 	msr	BASEPRI, r3
 8004f76:	f3bf 8f6f 	isb	sy
 8004f7a:	f3bf 8f4f 	dsb	sy
 8004f7e:	61fb      	str	r3, [r7, #28]
 8004f80:	bf00      	nop
 8004f82:	bf00      	nop
 8004f84:	e7fd      	b.n	8004f82 <xQueueReceive+0x5e>
 8004f86:	f001 f8b9 	bl	80060fc <xTaskGetSchedulerState>
 8004f8a:	4603      	mov	r3, r0
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	d102      	bne.n	8004f96 <xQueueReceive+0x72>
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	2b00      	cmp	r3, #0
 8004f94:	d101      	bne.n	8004f9a <xQueueReceive+0x76>
 8004f96:	2301      	movs	r3, #1
 8004f98:	e000      	b.n	8004f9c <xQueueReceive+0x78>
 8004f9a:	2300      	movs	r3, #0
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d10b      	bne.n	8004fb8 <xQueueReceive+0x94>
 8004fa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004fa4:	f383 8811 	msr	BASEPRI, r3
 8004fa8:	f3bf 8f6f 	isb	sy
 8004fac:	f3bf 8f4f 	dsb	sy
 8004fb0:	61bb      	str	r3, [r7, #24]
 8004fb2:	bf00      	nop
 8004fb4:	bf00      	nop
 8004fb6:	e7fd      	b.n	8004fb4 <xQueueReceive+0x90>
 8004fb8:	f001 fdc8 	bl	8006b4c <vPortEnterCritical>
 8004fbc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fbe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004fc0:	627b      	str	r3, [r7, #36]	@ 0x24
 8004fc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fc4:	2b00      	cmp	r3, #0
 8004fc6:	d01f      	beq.n	8005008 <xQueueReceive+0xe4>
 8004fc8:	68b9      	ldr	r1, [r7, #8]
 8004fca:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004fcc:	f000 f8f6 	bl	80051bc <prvCopyDataFromQueue>
 8004fd0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fd2:	1e5a      	subs	r2, r3, #1
 8004fd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fd6:	639a      	str	r2, [r3, #56]	@ 0x38
 8004fd8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fda:	691b      	ldr	r3, [r3, #16]
 8004fdc:	2b00      	cmp	r3, #0
 8004fde:	d00f      	beq.n	8005000 <xQueueReceive+0xdc>
 8004fe0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004fe2:	3310      	adds	r3, #16
 8004fe4:	4618      	mov	r0, r3
 8004fe6:	f000 fec3 	bl	8005d70 <xTaskRemoveFromEventList>
 8004fea:	4603      	mov	r3, r0
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	d007      	beq.n	8005000 <xQueueReceive+0xdc>
 8004ff0:	4b3c      	ldr	r3, [pc, #240]	@ (80050e4 <xQueueReceive+0x1c0>)
 8004ff2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004ff6:	601a      	str	r2, [r3, #0]
 8004ff8:	f3bf 8f4f 	dsb	sy
 8004ffc:	f3bf 8f6f 	isb	sy
 8005000:	f001 fdd4 	bl	8006bac <vPortExitCritical>
 8005004:	2301      	movs	r3, #1
 8005006:	e069      	b.n	80050dc <xQueueReceive+0x1b8>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	2b00      	cmp	r3, #0
 800500c:	d103      	bne.n	8005016 <xQueueReceive+0xf2>
 800500e:	f001 fdcd 	bl	8006bac <vPortExitCritical>
 8005012:	2300      	movs	r3, #0
 8005014:	e062      	b.n	80050dc <xQueueReceive+0x1b8>
 8005016:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005018:	2b00      	cmp	r3, #0
 800501a:	d106      	bne.n	800502a <xQueueReceive+0x106>
 800501c:	f107 0310 	add.w	r3, r7, #16
 8005020:	4618      	mov	r0, r3
 8005022:	f000 ff09 	bl	8005e38 <vTaskInternalSetTimeOutState>
 8005026:	2301      	movs	r3, #1
 8005028:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800502a:	f001 fdbf 	bl	8006bac <vPortExitCritical>
 800502e:	f000 fc75 	bl	800591c <vTaskSuspendAll>
 8005032:	f001 fd8b 	bl	8006b4c <vPortEnterCritical>
 8005036:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005038:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800503c:	b25b      	sxtb	r3, r3
 800503e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005042:	d103      	bne.n	800504c <xQueueReceive+0x128>
 8005044:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005046:	2200      	movs	r2, #0
 8005048:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800504c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800504e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005052:	b25b      	sxtb	r3, r3
 8005054:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005058:	d103      	bne.n	8005062 <xQueueReceive+0x13e>
 800505a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800505c:	2200      	movs	r2, #0
 800505e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005062:	f001 fda3 	bl	8006bac <vPortExitCritical>
 8005066:	1d3a      	adds	r2, r7, #4
 8005068:	f107 0310 	add.w	r3, r7, #16
 800506c:	4611      	mov	r1, r2
 800506e:	4618      	mov	r0, r3
 8005070:	f000 fef8 	bl	8005e64 <xTaskCheckForTimeOut>
 8005074:	4603      	mov	r3, r0
 8005076:	2b00      	cmp	r3, #0
 8005078:	d123      	bne.n	80050c2 <xQueueReceive+0x19e>
 800507a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800507c:	f000 f916 	bl	80052ac <prvIsQueueEmpty>
 8005080:	4603      	mov	r3, r0
 8005082:	2b00      	cmp	r3, #0
 8005084:	d017      	beq.n	80050b6 <xQueueReceive+0x192>
 8005086:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005088:	3324      	adds	r3, #36	@ 0x24
 800508a:	687a      	ldr	r2, [r7, #4]
 800508c:	4611      	mov	r1, r2
 800508e:	4618      	mov	r0, r3
 8005090:	f000 fe1c 	bl	8005ccc <vTaskPlaceOnEventList>
 8005094:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8005096:	f000 f8b7 	bl	8005208 <prvUnlockQueue>
 800509a:	f000 fc4d 	bl	8005938 <xTaskResumeAll>
 800509e:	4603      	mov	r3, r0
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d189      	bne.n	8004fb8 <xQueueReceive+0x94>
 80050a4:	4b0f      	ldr	r3, [pc, #60]	@ (80050e4 <xQueueReceive+0x1c0>)
 80050a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80050aa:	601a      	str	r2, [r3, #0]
 80050ac:	f3bf 8f4f 	dsb	sy
 80050b0:	f3bf 8f6f 	isb	sy
 80050b4:	e780      	b.n	8004fb8 <xQueueReceive+0x94>
 80050b6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80050b8:	f000 f8a6 	bl	8005208 <prvUnlockQueue>
 80050bc:	f000 fc3c 	bl	8005938 <xTaskResumeAll>
 80050c0:	e77a      	b.n	8004fb8 <xQueueReceive+0x94>
 80050c2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80050c4:	f000 f8a0 	bl	8005208 <prvUnlockQueue>
 80050c8:	f000 fc36 	bl	8005938 <xTaskResumeAll>
 80050cc:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80050ce:	f000 f8ed 	bl	80052ac <prvIsQueueEmpty>
 80050d2:	4603      	mov	r3, r0
 80050d4:	2b00      	cmp	r3, #0
 80050d6:	f43f af6f 	beq.w	8004fb8 <xQueueReceive+0x94>
 80050da:	2300      	movs	r3, #0
 80050dc:	4618      	mov	r0, r3
 80050de:	3730      	adds	r7, #48	@ 0x30
 80050e0:	46bd      	mov	sp, r7
 80050e2:	bd80      	pop	{r7, pc}
 80050e4:	e000ed04 	.word	0xe000ed04

080050e8 <prvCopyDataToQueue>:
 80050e8:	b580      	push	{r7, lr}
 80050ea:	b086      	sub	sp, #24
 80050ec:	af00      	add	r7, sp, #0
 80050ee:	60f8      	str	r0, [r7, #12]
 80050f0:	60b9      	str	r1, [r7, #8]
 80050f2:	607a      	str	r2, [r7, #4]
 80050f4:	2300      	movs	r3, #0
 80050f6:	617b      	str	r3, [r7, #20]
 80050f8:	68fb      	ldr	r3, [r7, #12]
 80050fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80050fc:	613b      	str	r3, [r7, #16]
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005102:	2b00      	cmp	r3, #0
 8005104:	d10d      	bne.n	8005122 <prvCopyDataToQueue+0x3a>
 8005106:	68fb      	ldr	r3, [r7, #12]
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	2b00      	cmp	r3, #0
 800510c:	d14d      	bne.n	80051aa <prvCopyDataToQueue+0xc2>
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	689b      	ldr	r3, [r3, #8]
 8005112:	4618      	mov	r0, r3
 8005114:	f001 f810 	bl	8006138 <xTaskPriorityDisinherit>
 8005118:	6178      	str	r0, [r7, #20]
 800511a:	68fb      	ldr	r3, [r7, #12]
 800511c:	2200      	movs	r2, #0
 800511e:	609a      	str	r2, [r3, #8]
 8005120:	e043      	b.n	80051aa <prvCopyDataToQueue+0xc2>
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	2b00      	cmp	r3, #0
 8005126:	d119      	bne.n	800515c <prvCopyDataToQueue+0x74>
 8005128:	68fb      	ldr	r3, [r7, #12]
 800512a:	6858      	ldr	r0, [r3, #4]
 800512c:	68fb      	ldr	r3, [r7, #12]
 800512e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005130:	461a      	mov	r2, r3
 8005132:	68b9      	ldr	r1, [r7, #8]
 8005134:	f002 f884 	bl	8007240 <memcpy>
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	685a      	ldr	r2, [r3, #4]
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005140:	441a      	add	r2, r3
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	605a      	str	r2, [r3, #4]
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	685a      	ldr	r2, [r3, #4]
 800514a:	68fb      	ldr	r3, [r7, #12]
 800514c:	689b      	ldr	r3, [r3, #8]
 800514e:	429a      	cmp	r2, r3
 8005150:	d32b      	bcc.n	80051aa <prvCopyDataToQueue+0xc2>
 8005152:	68fb      	ldr	r3, [r7, #12]
 8005154:	681a      	ldr	r2, [r3, #0]
 8005156:	68fb      	ldr	r3, [r7, #12]
 8005158:	605a      	str	r2, [r3, #4]
 800515a:	e026      	b.n	80051aa <prvCopyDataToQueue+0xc2>
 800515c:	68fb      	ldr	r3, [r7, #12]
 800515e:	68d8      	ldr	r0, [r3, #12]
 8005160:	68fb      	ldr	r3, [r7, #12]
 8005162:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005164:	461a      	mov	r2, r3
 8005166:	68b9      	ldr	r1, [r7, #8]
 8005168:	f002 f86a 	bl	8007240 <memcpy>
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	68da      	ldr	r2, [r3, #12]
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005174:	425b      	negs	r3, r3
 8005176:	441a      	add	r2, r3
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	60da      	str	r2, [r3, #12]
 800517c:	68fb      	ldr	r3, [r7, #12]
 800517e:	68da      	ldr	r2, [r3, #12]
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	429a      	cmp	r2, r3
 8005186:	d207      	bcs.n	8005198 <prvCopyDataToQueue+0xb0>
 8005188:	68fb      	ldr	r3, [r7, #12]
 800518a:	689a      	ldr	r2, [r3, #8]
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005190:	425b      	negs	r3, r3
 8005192:	441a      	add	r2, r3
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	60da      	str	r2, [r3, #12]
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	2b02      	cmp	r3, #2
 800519c:	d105      	bne.n	80051aa <prvCopyDataToQueue+0xc2>
 800519e:	693b      	ldr	r3, [r7, #16]
 80051a0:	2b00      	cmp	r3, #0
 80051a2:	d002      	beq.n	80051aa <prvCopyDataToQueue+0xc2>
 80051a4:	693b      	ldr	r3, [r7, #16]
 80051a6:	3b01      	subs	r3, #1
 80051a8:	613b      	str	r3, [r7, #16]
 80051aa:	693b      	ldr	r3, [r7, #16]
 80051ac:	1c5a      	adds	r2, r3, #1
 80051ae:	68fb      	ldr	r3, [r7, #12]
 80051b0:	639a      	str	r2, [r3, #56]	@ 0x38
 80051b2:	697b      	ldr	r3, [r7, #20]
 80051b4:	4618      	mov	r0, r3
 80051b6:	3718      	adds	r7, #24
 80051b8:	46bd      	mov	sp, r7
 80051ba:	bd80      	pop	{r7, pc}

080051bc <prvCopyDataFromQueue>:
 80051bc:	b580      	push	{r7, lr}
 80051be:	b082      	sub	sp, #8
 80051c0:	af00      	add	r7, sp, #0
 80051c2:	6078      	str	r0, [r7, #4]
 80051c4:	6039      	str	r1, [r7, #0]
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d018      	beq.n	8005200 <prvCopyDataFromQueue+0x44>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	68da      	ldr	r2, [r3, #12]
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80051d6:	441a      	add	r2, r3
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	60da      	str	r2, [r3, #12]
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	68da      	ldr	r2, [r3, #12]
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	689b      	ldr	r3, [r3, #8]
 80051e4:	429a      	cmp	r2, r3
 80051e6:	d303      	bcc.n	80051f0 <prvCopyDataFromQueue+0x34>
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	681a      	ldr	r2, [r3, #0]
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	60da      	str	r2, [r3, #12]
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	68d9      	ldr	r1, [r3, #12]
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80051f8:	461a      	mov	r2, r3
 80051fa:	6838      	ldr	r0, [r7, #0]
 80051fc:	f002 f820 	bl	8007240 <memcpy>
 8005200:	bf00      	nop
 8005202:	3708      	adds	r7, #8
 8005204:	46bd      	mov	sp, r7
 8005206:	bd80      	pop	{r7, pc}

08005208 <prvUnlockQueue>:
 8005208:	b580      	push	{r7, lr}
 800520a:	b084      	sub	sp, #16
 800520c:	af00      	add	r7, sp, #0
 800520e:	6078      	str	r0, [r7, #4]
 8005210:	f001 fc9c 	bl	8006b4c <vPortEnterCritical>
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800521a:	73fb      	strb	r3, [r7, #15]
 800521c:	e011      	b.n	8005242 <prvUnlockQueue+0x3a>
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005222:	2b00      	cmp	r3, #0
 8005224:	d012      	beq.n	800524c <prvUnlockQueue+0x44>
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	3324      	adds	r3, #36	@ 0x24
 800522a:	4618      	mov	r0, r3
 800522c:	f000 fda0 	bl	8005d70 <xTaskRemoveFromEventList>
 8005230:	4603      	mov	r3, r0
 8005232:	2b00      	cmp	r3, #0
 8005234:	d001      	beq.n	800523a <prvUnlockQueue+0x32>
 8005236:	f000 fe79 	bl	8005f2c <vTaskMissedYield>
 800523a:	7bfb      	ldrb	r3, [r7, #15]
 800523c:	3b01      	subs	r3, #1
 800523e:	b2db      	uxtb	r3, r3
 8005240:	73fb      	strb	r3, [r7, #15]
 8005242:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005246:	2b00      	cmp	r3, #0
 8005248:	dce9      	bgt.n	800521e <prvUnlockQueue+0x16>
 800524a:	e000      	b.n	800524e <prvUnlockQueue+0x46>
 800524c:	bf00      	nop
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	22ff      	movs	r2, #255	@ 0xff
 8005252:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005256:	f001 fca9 	bl	8006bac <vPortExitCritical>
 800525a:	f001 fc77 	bl	8006b4c <vPortEnterCritical>
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005264:	73bb      	strb	r3, [r7, #14]
 8005266:	e011      	b.n	800528c <prvUnlockQueue+0x84>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	691b      	ldr	r3, [r3, #16]
 800526c:	2b00      	cmp	r3, #0
 800526e:	d012      	beq.n	8005296 <prvUnlockQueue+0x8e>
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	3310      	adds	r3, #16
 8005274:	4618      	mov	r0, r3
 8005276:	f000 fd7b 	bl	8005d70 <xTaskRemoveFromEventList>
 800527a:	4603      	mov	r3, r0
 800527c:	2b00      	cmp	r3, #0
 800527e:	d001      	beq.n	8005284 <prvUnlockQueue+0x7c>
 8005280:	f000 fe54 	bl	8005f2c <vTaskMissedYield>
 8005284:	7bbb      	ldrb	r3, [r7, #14]
 8005286:	3b01      	subs	r3, #1
 8005288:	b2db      	uxtb	r3, r3
 800528a:	73bb      	strb	r3, [r7, #14]
 800528c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8005290:	2b00      	cmp	r3, #0
 8005292:	dce9      	bgt.n	8005268 <prvUnlockQueue+0x60>
 8005294:	e000      	b.n	8005298 <prvUnlockQueue+0x90>
 8005296:	bf00      	nop
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	22ff      	movs	r2, #255	@ 0xff
 800529c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80052a0:	f001 fc84 	bl	8006bac <vPortExitCritical>
 80052a4:	bf00      	nop
 80052a6:	3710      	adds	r7, #16
 80052a8:	46bd      	mov	sp, r7
 80052aa:	bd80      	pop	{r7, pc}

080052ac <prvIsQueueEmpty>:
 80052ac:	b580      	push	{r7, lr}
 80052ae:	b084      	sub	sp, #16
 80052b0:	af00      	add	r7, sp, #0
 80052b2:	6078      	str	r0, [r7, #4]
 80052b4:	f001 fc4a 	bl	8006b4c <vPortEnterCritical>
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d102      	bne.n	80052c6 <prvIsQueueEmpty+0x1a>
 80052c0:	2301      	movs	r3, #1
 80052c2:	60fb      	str	r3, [r7, #12]
 80052c4:	e001      	b.n	80052ca <prvIsQueueEmpty+0x1e>
 80052c6:	2300      	movs	r3, #0
 80052c8:	60fb      	str	r3, [r7, #12]
 80052ca:	f001 fc6f 	bl	8006bac <vPortExitCritical>
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	4618      	mov	r0, r3
 80052d2:	3710      	adds	r7, #16
 80052d4:	46bd      	mov	sp, r7
 80052d6:	bd80      	pop	{r7, pc}

080052d8 <prvIsQueueFull>:
 80052d8:	b580      	push	{r7, lr}
 80052da:	b084      	sub	sp, #16
 80052dc:	af00      	add	r7, sp, #0
 80052de:	6078      	str	r0, [r7, #4]
 80052e0:	f001 fc34 	bl	8006b4c <vPortEnterCritical>
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80052ec:	429a      	cmp	r2, r3
 80052ee:	d102      	bne.n	80052f6 <prvIsQueueFull+0x1e>
 80052f0:	2301      	movs	r3, #1
 80052f2:	60fb      	str	r3, [r7, #12]
 80052f4:	e001      	b.n	80052fa <prvIsQueueFull+0x22>
 80052f6:	2300      	movs	r3, #0
 80052f8:	60fb      	str	r3, [r7, #12]
 80052fa:	f001 fc57 	bl	8006bac <vPortExitCritical>
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	4618      	mov	r0, r3
 8005302:	3710      	adds	r7, #16
 8005304:	46bd      	mov	sp, r7
 8005306:	bd80      	pop	{r7, pc}

08005308 <vQueueAddToRegistry>:
 8005308:	b480      	push	{r7}
 800530a:	b085      	sub	sp, #20
 800530c:	af00      	add	r7, sp, #0
 800530e:	6078      	str	r0, [r7, #4]
 8005310:	6039      	str	r1, [r7, #0]
 8005312:	2300      	movs	r3, #0
 8005314:	60fb      	str	r3, [r7, #12]
 8005316:	e014      	b.n	8005342 <vQueueAddToRegistry+0x3a>
 8005318:	4a0e      	ldr	r2, [pc, #56]	@ (8005354 <vQueueAddToRegistry+0x4c>)
 800531a:	68fb      	ldr	r3, [r7, #12]
 800531c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8005320:	2b00      	cmp	r3, #0
 8005322:	d10b      	bne.n	800533c <vQueueAddToRegistry+0x34>
 8005324:	490b      	ldr	r1, [pc, #44]	@ (8005354 <vQueueAddToRegistry+0x4c>)
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	683a      	ldr	r2, [r7, #0]
 800532a:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800532e:	4a09      	ldr	r2, [pc, #36]	@ (8005354 <vQueueAddToRegistry+0x4c>)
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	00db      	lsls	r3, r3, #3
 8005334:	4413      	add	r3, r2
 8005336:	687a      	ldr	r2, [r7, #4]
 8005338:	605a      	str	r2, [r3, #4]
 800533a:	e006      	b.n	800534a <vQueueAddToRegistry+0x42>
 800533c:	68fb      	ldr	r3, [r7, #12]
 800533e:	3301      	adds	r3, #1
 8005340:	60fb      	str	r3, [r7, #12]
 8005342:	68fb      	ldr	r3, [r7, #12]
 8005344:	2b07      	cmp	r3, #7
 8005346:	d9e7      	bls.n	8005318 <vQueueAddToRegistry+0x10>
 8005348:	bf00      	nop
 800534a:	bf00      	nop
 800534c:	3714      	adds	r7, #20
 800534e:	46bd      	mov	sp, r7
 8005350:	bc80      	pop	{r7}
 8005352:	4770      	bx	lr
 8005354:	20000b2c 	.word	0x20000b2c

08005358 <vQueueWaitForMessageRestricted>:
 8005358:	b580      	push	{r7, lr}
 800535a:	b086      	sub	sp, #24
 800535c:	af00      	add	r7, sp, #0
 800535e:	60f8      	str	r0, [r7, #12]
 8005360:	60b9      	str	r1, [r7, #8]
 8005362:	607a      	str	r2, [r7, #4]
 8005364:	68fb      	ldr	r3, [r7, #12]
 8005366:	617b      	str	r3, [r7, #20]
 8005368:	f001 fbf0 	bl	8006b4c <vPortEnterCritical>
 800536c:	697b      	ldr	r3, [r7, #20]
 800536e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005372:	b25b      	sxtb	r3, r3
 8005374:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005378:	d103      	bne.n	8005382 <vQueueWaitForMessageRestricted+0x2a>
 800537a:	697b      	ldr	r3, [r7, #20]
 800537c:	2200      	movs	r2, #0
 800537e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005382:	697b      	ldr	r3, [r7, #20]
 8005384:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005388:	b25b      	sxtb	r3, r3
 800538a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800538e:	d103      	bne.n	8005398 <vQueueWaitForMessageRestricted+0x40>
 8005390:	697b      	ldr	r3, [r7, #20]
 8005392:	2200      	movs	r2, #0
 8005394:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005398:	f001 fc08 	bl	8006bac <vPortExitCritical>
 800539c:	697b      	ldr	r3, [r7, #20]
 800539e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d106      	bne.n	80053b2 <vQueueWaitForMessageRestricted+0x5a>
 80053a4:	697b      	ldr	r3, [r7, #20]
 80053a6:	3324      	adds	r3, #36	@ 0x24
 80053a8:	687a      	ldr	r2, [r7, #4]
 80053aa:	68b9      	ldr	r1, [r7, #8]
 80053ac:	4618      	mov	r0, r3
 80053ae:	f000 fcb3 	bl	8005d18 <vTaskPlaceOnEventListRestricted>
 80053b2:	6978      	ldr	r0, [r7, #20]
 80053b4:	f7ff ff28 	bl	8005208 <prvUnlockQueue>
 80053b8:	bf00      	nop
 80053ba:	3718      	adds	r7, #24
 80053bc:	46bd      	mov	sp, r7
 80053be:	bd80      	pop	{r7, pc}

080053c0 <xTaskCreateStatic>:
 80053c0:	b580      	push	{r7, lr}
 80053c2:	b08e      	sub	sp, #56	@ 0x38
 80053c4:	af04      	add	r7, sp, #16
 80053c6:	60f8      	str	r0, [r7, #12]
 80053c8:	60b9      	str	r1, [r7, #8]
 80053ca:	607a      	str	r2, [r7, #4]
 80053cc:	603b      	str	r3, [r7, #0]
 80053ce:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80053d0:	2b00      	cmp	r3, #0
 80053d2:	d10b      	bne.n	80053ec <xTaskCreateStatic+0x2c>
 80053d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80053d8:	f383 8811 	msr	BASEPRI, r3
 80053dc:	f3bf 8f6f 	isb	sy
 80053e0:	f3bf 8f4f 	dsb	sy
 80053e4:	623b      	str	r3, [r7, #32]
 80053e6:	bf00      	nop
 80053e8:	bf00      	nop
 80053ea:	e7fd      	b.n	80053e8 <xTaskCreateStatic+0x28>
 80053ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80053ee:	2b00      	cmp	r3, #0
 80053f0:	d10b      	bne.n	800540a <xTaskCreateStatic+0x4a>
 80053f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80053f6:	f383 8811 	msr	BASEPRI, r3
 80053fa:	f3bf 8f6f 	isb	sy
 80053fe:	f3bf 8f4f 	dsb	sy
 8005402:	61fb      	str	r3, [r7, #28]
 8005404:	bf00      	nop
 8005406:	bf00      	nop
 8005408:	e7fd      	b.n	8005406 <xTaskCreateStatic+0x46>
 800540a:	23a8      	movs	r3, #168	@ 0xa8
 800540c:	613b      	str	r3, [r7, #16]
 800540e:	693b      	ldr	r3, [r7, #16]
 8005410:	2ba8      	cmp	r3, #168	@ 0xa8
 8005412:	d00b      	beq.n	800542c <xTaskCreateStatic+0x6c>
 8005414:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005418:	f383 8811 	msr	BASEPRI, r3
 800541c:	f3bf 8f6f 	isb	sy
 8005420:	f3bf 8f4f 	dsb	sy
 8005424:	61bb      	str	r3, [r7, #24]
 8005426:	bf00      	nop
 8005428:	bf00      	nop
 800542a:	e7fd      	b.n	8005428 <xTaskCreateStatic+0x68>
 800542c:	693b      	ldr	r3, [r7, #16]
 800542e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005430:	2b00      	cmp	r3, #0
 8005432:	d01e      	beq.n	8005472 <xTaskCreateStatic+0xb2>
 8005434:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005436:	2b00      	cmp	r3, #0
 8005438:	d01b      	beq.n	8005472 <xTaskCreateStatic+0xb2>
 800543a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800543c:	627b      	str	r3, [r7, #36]	@ 0x24
 800543e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005440:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8005442:	631a      	str	r2, [r3, #48]	@ 0x30
 8005444:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005446:	2202      	movs	r2, #2
 8005448:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 800544c:	2300      	movs	r3, #0
 800544e:	9303      	str	r3, [sp, #12]
 8005450:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005452:	9302      	str	r3, [sp, #8]
 8005454:	f107 0314 	add.w	r3, r7, #20
 8005458:	9301      	str	r3, [sp, #4]
 800545a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800545c:	9300      	str	r3, [sp, #0]
 800545e:	683b      	ldr	r3, [r7, #0]
 8005460:	687a      	ldr	r2, [r7, #4]
 8005462:	68b9      	ldr	r1, [r7, #8]
 8005464:	68f8      	ldr	r0, [r7, #12]
 8005466:	f000 f851 	bl	800550c <prvInitialiseNewTask>
 800546a:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800546c:	f000 f8f6 	bl	800565c <prvAddNewTaskToReadyList>
 8005470:	e001      	b.n	8005476 <xTaskCreateStatic+0xb6>
 8005472:	2300      	movs	r3, #0
 8005474:	617b      	str	r3, [r7, #20]
 8005476:	697b      	ldr	r3, [r7, #20]
 8005478:	4618      	mov	r0, r3
 800547a:	3728      	adds	r7, #40	@ 0x28
 800547c:	46bd      	mov	sp, r7
 800547e:	bd80      	pop	{r7, pc}

08005480 <xTaskCreate>:
 8005480:	b580      	push	{r7, lr}
 8005482:	b08c      	sub	sp, #48	@ 0x30
 8005484:	af04      	add	r7, sp, #16
 8005486:	60f8      	str	r0, [r7, #12]
 8005488:	60b9      	str	r1, [r7, #8]
 800548a:	603b      	str	r3, [r7, #0]
 800548c:	4613      	mov	r3, r2
 800548e:	80fb      	strh	r3, [r7, #6]
 8005490:	88fb      	ldrh	r3, [r7, #6]
 8005492:	009b      	lsls	r3, r3, #2
 8005494:	4618      	mov	r0, r3
 8005496:	f001 fc5b 	bl	8006d50 <pvPortMalloc>
 800549a:	6178      	str	r0, [r7, #20]
 800549c:	697b      	ldr	r3, [r7, #20]
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d00e      	beq.n	80054c0 <xTaskCreate+0x40>
 80054a2:	20a8      	movs	r0, #168	@ 0xa8
 80054a4:	f001 fc54 	bl	8006d50 <pvPortMalloc>
 80054a8:	61f8      	str	r0, [r7, #28]
 80054aa:	69fb      	ldr	r3, [r7, #28]
 80054ac:	2b00      	cmp	r3, #0
 80054ae:	d003      	beq.n	80054b8 <xTaskCreate+0x38>
 80054b0:	69fb      	ldr	r3, [r7, #28]
 80054b2:	697a      	ldr	r2, [r7, #20]
 80054b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80054b6:	e005      	b.n	80054c4 <xTaskCreate+0x44>
 80054b8:	6978      	ldr	r0, [r7, #20]
 80054ba:	f001 fd17 	bl	8006eec <vPortFree>
 80054be:	e001      	b.n	80054c4 <xTaskCreate+0x44>
 80054c0:	2300      	movs	r3, #0
 80054c2:	61fb      	str	r3, [r7, #28]
 80054c4:	69fb      	ldr	r3, [r7, #28]
 80054c6:	2b00      	cmp	r3, #0
 80054c8:	d017      	beq.n	80054fa <xTaskCreate+0x7a>
 80054ca:	69fb      	ldr	r3, [r7, #28]
 80054cc:	2200      	movs	r2, #0
 80054ce:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 80054d2:	88fa      	ldrh	r2, [r7, #6]
 80054d4:	2300      	movs	r3, #0
 80054d6:	9303      	str	r3, [sp, #12]
 80054d8:	69fb      	ldr	r3, [r7, #28]
 80054da:	9302      	str	r3, [sp, #8]
 80054dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80054de:	9301      	str	r3, [sp, #4]
 80054e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80054e2:	9300      	str	r3, [sp, #0]
 80054e4:	683b      	ldr	r3, [r7, #0]
 80054e6:	68b9      	ldr	r1, [r7, #8]
 80054e8:	68f8      	ldr	r0, [r7, #12]
 80054ea:	f000 f80f 	bl	800550c <prvInitialiseNewTask>
 80054ee:	69f8      	ldr	r0, [r7, #28]
 80054f0:	f000 f8b4 	bl	800565c <prvAddNewTaskToReadyList>
 80054f4:	2301      	movs	r3, #1
 80054f6:	61bb      	str	r3, [r7, #24]
 80054f8:	e002      	b.n	8005500 <xTaskCreate+0x80>
 80054fa:	f04f 33ff 	mov.w	r3, #4294967295
 80054fe:	61bb      	str	r3, [r7, #24]
 8005500:	69bb      	ldr	r3, [r7, #24]
 8005502:	4618      	mov	r0, r3
 8005504:	3720      	adds	r7, #32
 8005506:	46bd      	mov	sp, r7
 8005508:	bd80      	pop	{r7, pc}
	...

0800550c <prvInitialiseNewTask>:
 800550c:	b580      	push	{r7, lr}
 800550e:	b088      	sub	sp, #32
 8005510:	af00      	add	r7, sp, #0
 8005512:	60f8      	str	r0, [r7, #12]
 8005514:	60b9      	str	r1, [r7, #8]
 8005516:	607a      	str	r2, [r7, #4]
 8005518:	603b      	str	r3, [r7, #0]
 800551a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800551c:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	009b      	lsls	r3, r3, #2
 8005522:	461a      	mov	r2, r3
 8005524:	21a5      	movs	r1, #165	@ 0xa5
 8005526:	f001 fdff 	bl	8007128 <memset>
 800552a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800552c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8005534:	3b01      	subs	r3, #1
 8005536:	009b      	lsls	r3, r3, #2
 8005538:	4413      	add	r3, r2
 800553a:	61bb      	str	r3, [r7, #24]
 800553c:	69bb      	ldr	r3, [r7, #24]
 800553e:	f023 0307 	bic.w	r3, r3, #7
 8005542:	61bb      	str	r3, [r7, #24]
 8005544:	69bb      	ldr	r3, [r7, #24]
 8005546:	f003 0307 	and.w	r3, r3, #7
 800554a:	2b00      	cmp	r3, #0
 800554c:	d00b      	beq.n	8005566 <prvInitialiseNewTask+0x5a>
 800554e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005552:	f383 8811 	msr	BASEPRI, r3
 8005556:	f3bf 8f6f 	isb	sy
 800555a:	f3bf 8f4f 	dsb	sy
 800555e:	617b      	str	r3, [r7, #20]
 8005560:	bf00      	nop
 8005562:	bf00      	nop
 8005564:	e7fd      	b.n	8005562 <prvInitialiseNewTask+0x56>
 8005566:	68bb      	ldr	r3, [r7, #8]
 8005568:	2b00      	cmp	r3, #0
 800556a:	d01f      	beq.n	80055ac <prvInitialiseNewTask+0xa0>
 800556c:	2300      	movs	r3, #0
 800556e:	61fb      	str	r3, [r7, #28]
 8005570:	e012      	b.n	8005598 <prvInitialiseNewTask+0x8c>
 8005572:	68ba      	ldr	r2, [r7, #8]
 8005574:	69fb      	ldr	r3, [r7, #28]
 8005576:	4413      	add	r3, r2
 8005578:	7819      	ldrb	r1, [r3, #0]
 800557a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800557c:	69fb      	ldr	r3, [r7, #28]
 800557e:	4413      	add	r3, r2
 8005580:	3334      	adds	r3, #52	@ 0x34
 8005582:	460a      	mov	r2, r1
 8005584:	701a      	strb	r2, [r3, #0]
 8005586:	68ba      	ldr	r2, [r7, #8]
 8005588:	69fb      	ldr	r3, [r7, #28]
 800558a:	4413      	add	r3, r2
 800558c:	781b      	ldrb	r3, [r3, #0]
 800558e:	2b00      	cmp	r3, #0
 8005590:	d006      	beq.n	80055a0 <prvInitialiseNewTask+0x94>
 8005592:	69fb      	ldr	r3, [r7, #28]
 8005594:	3301      	adds	r3, #1
 8005596:	61fb      	str	r3, [r7, #28]
 8005598:	69fb      	ldr	r3, [r7, #28]
 800559a:	2b0f      	cmp	r3, #15
 800559c:	d9e9      	bls.n	8005572 <prvInitialiseNewTask+0x66>
 800559e:	e000      	b.n	80055a2 <prvInitialiseNewTask+0x96>
 80055a0:	bf00      	nop
 80055a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055a4:	2200      	movs	r2, #0
 80055a6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80055aa:	e003      	b.n	80055b4 <prvInitialiseNewTask+0xa8>
 80055ac:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055ae:	2200      	movs	r2, #0
 80055b0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80055b4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80055b6:	2b37      	cmp	r3, #55	@ 0x37
 80055b8:	d901      	bls.n	80055be <prvInitialiseNewTask+0xb2>
 80055ba:	2337      	movs	r3, #55	@ 0x37
 80055bc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80055be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055c0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80055c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80055c4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055c6:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80055c8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80055ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055cc:	2200      	movs	r2, #0
 80055ce:	651a      	str	r2, [r3, #80]	@ 0x50
 80055d0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055d2:	3304      	adds	r3, #4
 80055d4:	4618      	mov	r0, r3
 80055d6:	f7ff f96a 	bl	80048ae <vListInitialiseItem>
 80055da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055dc:	3318      	adds	r3, #24
 80055de:	4618      	mov	r0, r3
 80055e0:	f7ff f965 	bl	80048ae <vListInitialiseItem>
 80055e4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055e6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80055e8:	611a      	str	r2, [r3, #16]
 80055ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80055ec:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80055f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055f2:	619a      	str	r2, [r3, #24]
 80055f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055f6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80055f8:	625a      	str	r2, [r3, #36]	@ 0x24
 80055fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80055fc:	2200      	movs	r2, #0
 80055fe:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 8005602:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005604:	2200      	movs	r2, #0
 8005606:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 800560a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800560c:	3354      	adds	r3, #84	@ 0x54
 800560e:	224c      	movs	r2, #76	@ 0x4c
 8005610:	2100      	movs	r1, #0
 8005612:	4618      	mov	r0, r3
 8005614:	f001 fd88 	bl	8007128 <memset>
 8005618:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800561a:	4a0d      	ldr	r2, [pc, #52]	@ (8005650 <prvInitialiseNewTask+0x144>)
 800561c:	659a      	str	r2, [r3, #88]	@ 0x58
 800561e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005620:	4a0c      	ldr	r2, [pc, #48]	@ (8005654 <prvInitialiseNewTask+0x148>)
 8005622:	65da      	str	r2, [r3, #92]	@ 0x5c
 8005624:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005626:	4a0c      	ldr	r2, [pc, #48]	@ (8005658 <prvInitialiseNewTask+0x14c>)
 8005628:	661a      	str	r2, [r3, #96]	@ 0x60
 800562a:	683a      	ldr	r2, [r7, #0]
 800562c:	68f9      	ldr	r1, [r7, #12]
 800562e:	69b8      	ldr	r0, [r7, #24]
 8005630:	f001 f99e 	bl	8006970 <pxPortInitialiseStack>
 8005634:	4602      	mov	r2, r0
 8005636:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005638:	601a      	str	r2, [r3, #0]
 800563a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800563c:	2b00      	cmp	r3, #0
 800563e:	d002      	beq.n	8005646 <prvInitialiseNewTask+0x13a>
 8005640:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005642:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005644:	601a      	str	r2, [r3, #0]
 8005646:	bf00      	nop
 8005648:	3720      	adds	r7, #32
 800564a:	46bd      	mov	sp, r7
 800564c:	bd80      	pop	{r7, pc}
 800564e:	bf00      	nop
 8005650:	20001dc0 	.word	0x20001dc0
 8005654:	20001e28 	.word	0x20001e28
 8005658:	20001e90 	.word	0x20001e90

0800565c <prvAddNewTaskToReadyList>:
 800565c:	b580      	push	{r7, lr}
 800565e:	b082      	sub	sp, #8
 8005660:	af00      	add	r7, sp, #0
 8005662:	6078      	str	r0, [r7, #4]
 8005664:	f001 fa72 	bl	8006b4c <vPortEnterCritical>
 8005668:	4b2d      	ldr	r3, [pc, #180]	@ (8005720 <prvAddNewTaskToReadyList+0xc4>)
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	3301      	adds	r3, #1
 800566e:	4a2c      	ldr	r2, [pc, #176]	@ (8005720 <prvAddNewTaskToReadyList+0xc4>)
 8005670:	6013      	str	r3, [r2, #0]
 8005672:	4b2c      	ldr	r3, [pc, #176]	@ (8005724 <prvAddNewTaskToReadyList+0xc8>)
 8005674:	681b      	ldr	r3, [r3, #0]
 8005676:	2b00      	cmp	r3, #0
 8005678:	d109      	bne.n	800568e <prvAddNewTaskToReadyList+0x32>
 800567a:	4a2a      	ldr	r2, [pc, #168]	@ (8005724 <prvAddNewTaskToReadyList+0xc8>)
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	6013      	str	r3, [r2, #0]
 8005680:	4b27      	ldr	r3, [pc, #156]	@ (8005720 <prvAddNewTaskToReadyList+0xc4>)
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	2b01      	cmp	r3, #1
 8005686:	d110      	bne.n	80056aa <prvAddNewTaskToReadyList+0x4e>
 8005688:	f000 fc74 	bl	8005f74 <prvInitialiseTaskLists>
 800568c:	e00d      	b.n	80056aa <prvAddNewTaskToReadyList+0x4e>
 800568e:	4b26      	ldr	r3, [pc, #152]	@ (8005728 <prvAddNewTaskToReadyList+0xcc>)
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	2b00      	cmp	r3, #0
 8005694:	d109      	bne.n	80056aa <prvAddNewTaskToReadyList+0x4e>
 8005696:	4b23      	ldr	r3, [pc, #140]	@ (8005724 <prvAddNewTaskToReadyList+0xc8>)
 8005698:	681b      	ldr	r3, [r3, #0]
 800569a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056a0:	429a      	cmp	r2, r3
 80056a2:	d802      	bhi.n	80056aa <prvAddNewTaskToReadyList+0x4e>
 80056a4:	4a1f      	ldr	r2, [pc, #124]	@ (8005724 <prvAddNewTaskToReadyList+0xc8>)
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	6013      	str	r3, [r2, #0]
 80056aa:	4b20      	ldr	r3, [pc, #128]	@ (800572c <prvAddNewTaskToReadyList+0xd0>)
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	3301      	adds	r3, #1
 80056b0:	4a1e      	ldr	r2, [pc, #120]	@ (800572c <prvAddNewTaskToReadyList+0xd0>)
 80056b2:	6013      	str	r3, [r2, #0]
 80056b4:	4b1d      	ldr	r3, [pc, #116]	@ (800572c <prvAddNewTaskToReadyList+0xd0>)
 80056b6:	681a      	ldr	r2, [r3, #0]
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	645a      	str	r2, [r3, #68]	@ 0x44
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80056c0:	4b1b      	ldr	r3, [pc, #108]	@ (8005730 <prvAddNewTaskToReadyList+0xd4>)
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	429a      	cmp	r2, r3
 80056c6:	d903      	bls.n	80056d0 <prvAddNewTaskToReadyList+0x74>
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056cc:	4a18      	ldr	r2, [pc, #96]	@ (8005730 <prvAddNewTaskToReadyList+0xd4>)
 80056ce:	6013      	str	r3, [r2, #0]
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80056d4:	4613      	mov	r3, r2
 80056d6:	009b      	lsls	r3, r3, #2
 80056d8:	4413      	add	r3, r2
 80056da:	009b      	lsls	r3, r3, #2
 80056dc:	4a15      	ldr	r2, [pc, #84]	@ (8005734 <prvAddNewTaskToReadyList+0xd8>)
 80056de:	441a      	add	r2, r3
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	3304      	adds	r3, #4
 80056e4:	4619      	mov	r1, r3
 80056e6:	4610      	mov	r0, r2
 80056e8:	f7ff f8ed 	bl	80048c6 <vListInsertEnd>
 80056ec:	f001 fa5e 	bl	8006bac <vPortExitCritical>
 80056f0:	4b0d      	ldr	r3, [pc, #52]	@ (8005728 <prvAddNewTaskToReadyList+0xcc>)
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	2b00      	cmp	r3, #0
 80056f6:	d00e      	beq.n	8005716 <prvAddNewTaskToReadyList+0xba>
 80056f8:	4b0a      	ldr	r3, [pc, #40]	@ (8005724 <prvAddNewTaskToReadyList+0xc8>)
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80056fe:	687b      	ldr	r3, [r7, #4]
 8005700:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005702:	429a      	cmp	r2, r3
 8005704:	d207      	bcs.n	8005716 <prvAddNewTaskToReadyList+0xba>
 8005706:	4b0c      	ldr	r3, [pc, #48]	@ (8005738 <prvAddNewTaskToReadyList+0xdc>)
 8005708:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800570c:	601a      	str	r2, [r3, #0]
 800570e:	f3bf 8f4f 	dsb	sy
 8005712:	f3bf 8f6f 	isb	sy
 8005716:	bf00      	nop
 8005718:	3708      	adds	r7, #8
 800571a:	46bd      	mov	sp, r7
 800571c:	bd80      	pop	{r7, pc}
 800571e:	bf00      	nop
 8005720:	20001040 	.word	0x20001040
 8005724:	20000b6c 	.word	0x20000b6c
 8005728:	2000104c 	.word	0x2000104c
 800572c:	2000105c 	.word	0x2000105c
 8005730:	20001048 	.word	0x20001048
 8005734:	20000b70 	.word	0x20000b70
 8005738:	e000ed04 	.word	0xe000ed04

0800573c <vTaskDelayUntil>:
 800573c:	b580      	push	{r7, lr}
 800573e:	b08a      	sub	sp, #40	@ 0x28
 8005740:	af00      	add	r7, sp, #0
 8005742:	6078      	str	r0, [r7, #4]
 8005744:	6039      	str	r1, [r7, #0]
 8005746:	2300      	movs	r3, #0
 8005748:	627b      	str	r3, [r7, #36]	@ 0x24
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	2b00      	cmp	r3, #0
 800574e:	d10b      	bne.n	8005768 <vTaskDelayUntil+0x2c>
 8005750:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005754:	f383 8811 	msr	BASEPRI, r3
 8005758:	f3bf 8f6f 	isb	sy
 800575c:	f3bf 8f4f 	dsb	sy
 8005760:	617b      	str	r3, [r7, #20]
 8005762:	bf00      	nop
 8005764:	bf00      	nop
 8005766:	e7fd      	b.n	8005764 <vTaskDelayUntil+0x28>
 8005768:	683b      	ldr	r3, [r7, #0]
 800576a:	2b00      	cmp	r3, #0
 800576c:	d10b      	bne.n	8005786 <vTaskDelayUntil+0x4a>
 800576e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005772:	f383 8811 	msr	BASEPRI, r3
 8005776:	f3bf 8f6f 	isb	sy
 800577a:	f3bf 8f4f 	dsb	sy
 800577e:	613b      	str	r3, [r7, #16]
 8005780:	bf00      	nop
 8005782:	bf00      	nop
 8005784:	e7fd      	b.n	8005782 <vTaskDelayUntil+0x46>
 8005786:	4b2a      	ldr	r3, [pc, #168]	@ (8005830 <vTaskDelayUntil+0xf4>)
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	2b00      	cmp	r3, #0
 800578c:	d00b      	beq.n	80057a6 <vTaskDelayUntil+0x6a>
 800578e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005792:	f383 8811 	msr	BASEPRI, r3
 8005796:	f3bf 8f6f 	isb	sy
 800579a:	f3bf 8f4f 	dsb	sy
 800579e:	60fb      	str	r3, [r7, #12]
 80057a0:	bf00      	nop
 80057a2:	bf00      	nop
 80057a4:	e7fd      	b.n	80057a2 <vTaskDelayUntil+0x66>
 80057a6:	f000 f8b9 	bl	800591c <vTaskSuspendAll>
 80057aa:	4b22      	ldr	r3, [pc, #136]	@ (8005834 <vTaskDelayUntil+0xf8>)
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	623b      	str	r3, [r7, #32]
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	683a      	ldr	r2, [r7, #0]
 80057b6:	4413      	add	r3, r2
 80057b8:	61fb      	str	r3, [r7, #28]
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	681b      	ldr	r3, [r3, #0]
 80057be:	6a3a      	ldr	r2, [r7, #32]
 80057c0:	429a      	cmp	r2, r3
 80057c2:	d20b      	bcs.n	80057dc <vTaskDelayUntil+0xa0>
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	69fa      	ldr	r2, [r7, #28]
 80057ca:	429a      	cmp	r2, r3
 80057cc:	d211      	bcs.n	80057f2 <vTaskDelayUntil+0xb6>
 80057ce:	69fa      	ldr	r2, [r7, #28]
 80057d0:	6a3b      	ldr	r3, [r7, #32]
 80057d2:	429a      	cmp	r2, r3
 80057d4:	d90d      	bls.n	80057f2 <vTaskDelayUntil+0xb6>
 80057d6:	2301      	movs	r3, #1
 80057d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80057da:	e00a      	b.n	80057f2 <vTaskDelayUntil+0xb6>
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	69fa      	ldr	r2, [r7, #28]
 80057e2:	429a      	cmp	r2, r3
 80057e4:	d303      	bcc.n	80057ee <vTaskDelayUntil+0xb2>
 80057e6:	69fa      	ldr	r2, [r7, #28]
 80057e8:	6a3b      	ldr	r3, [r7, #32]
 80057ea:	429a      	cmp	r2, r3
 80057ec:	d901      	bls.n	80057f2 <vTaskDelayUntil+0xb6>
 80057ee:	2301      	movs	r3, #1
 80057f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	69fa      	ldr	r2, [r7, #28]
 80057f6:	601a      	str	r2, [r3, #0]
 80057f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	d006      	beq.n	800580c <vTaskDelayUntil+0xd0>
 80057fe:	69fa      	ldr	r2, [r7, #28]
 8005800:	6a3b      	ldr	r3, [r7, #32]
 8005802:	1ad3      	subs	r3, r2, r3
 8005804:	2100      	movs	r1, #0
 8005806:	4618      	mov	r0, r3
 8005808:	f000 fd06 	bl	8006218 <prvAddCurrentTaskToDelayedList>
 800580c:	f000 f894 	bl	8005938 <xTaskResumeAll>
 8005810:	61b8      	str	r0, [r7, #24]
 8005812:	69bb      	ldr	r3, [r7, #24]
 8005814:	2b00      	cmp	r3, #0
 8005816:	d107      	bne.n	8005828 <vTaskDelayUntil+0xec>
 8005818:	4b07      	ldr	r3, [pc, #28]	@ (8005838 <vTaskDelayUntil+0xfc>)
 800581a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800581e:	601a      	str	r2, [r3, #0]
 8005820:	f3bf 8f4f 	dsb	sy
 8005824:	f3bf 8f6f 	isb	sy
 8005828:	bf00      	nop
 800582a:	3728      	adds	r7, #40	@ 0x28
 800582c:	46bd      	mov	sp, r7
 800582e:	bd80      	pop	{r7, pc}
 8005830:	20001068 	.word	0x20001068
 8005834:	20001044 	.word	0x20001044
 8005838:	e000ed04 	.word	0xe000ed04

0800583c <vTaskStartScheduler>:
 800583c:	b580      	push	{r7, lr}
 800583e:	b08a      	sub	sp, #40	@ 0x28
 8005840:	af04      	add	r7, sp, #16
 8005842:	2300      	movs	r3, #0
 8005844:	60bb      	str	r3, [r7, #8]
 8005846:	2300      	movs	r3, #0
 8005848:	607b      	str	r3, [r7, #4]
 800584a:	463a      	mov	r2, r7
 800584c:	1d39      	adds	r1, r7, #4
 800584e:	f107 0308 	add.w	r3, r7, #8
 8005852:	4618      	mov	r0, r3
 8005854:	f7fe ffda 	bl	800480c <vApplicationGetIdleTaskMemory>
 8005858:	6839      	ldr	r1, [r7, #0]
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	68ba      	ldr	r2, [r7, #8]
 800585e:	9202      	str	r2, [sp, #8]
 8005860:	9301      	str	r3, [sp, #4]
 8005862:	2300      	movs	r3, #0
 8005864:	9300      	str	r3, [sp, #0]
 8005866:	2300      	movs	r3, #0
 8005868:	460a      	mov	r2, r1
 800586a:	4924      	ldr	r1, [pc, #144]	@ (80058fc <vTaskStartScheduler+0xc0>)
 800586c:	4824      	ldr	r0, [pc, #144]	@ (8005900 <vTaskStartScheduler+0xc4>)
 800586e:	f7ff fda7 	bl	80053c0 <xTaskCreateStatic>
 8005872:	4603      	mov	r3, r0
 8005874:	4a23      	ldr	r2, [pc, #140]	@ (8005904 <vTaskStartScheduler+0xc8>)
 8005876:	6013      	str	r3, [r2, #0]
 8005878:	4b22      	ldr	r3, [pc, #136]	@ (8005904 <vTaskStartScheduler+0xc8>)
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	2b00      	cmp	r3, #0
 800587e:	d002      	beq.n	8005886 <vTaskStartScheduler+0x4a>
 8005880:	2301      	movs	r3, #1
 8005882:	617b      	str	r3, [r7, #20]
 8005884:	e001      	b.n	800588a <vTaskStartScheduler+0x4e>
 8005886:	2300      	movs	r3, #0
 8005888:	617b      	str	r3, [r7, #20]
 800588a:	697b      	ldr	r3, [r7, #20]
 800588c:	2b01      	cmp	r3, #1
 800588e:	d102      	bne.n	8005896 <vTaskStartScheduler+0x5a>
 8005890:	f000 fd16 	bl	80062c0 <xTimerCreateTimerTask>
 8005894:	6178      	str	r0, [r7, #20]
 8005896:	697b      	ldr	r3, [r7, #20]
 8005898:	2b01      	cmp	r3, #1
 800589a:	d11b      	bne.n	80058d4 <vTaskStartScheduler+0x98>
 800589c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80058a0:	f383 8811 	msr	BASEPRI, r3
 80058a4:	f3bf 8f6f 	isb	sy
 80058a8:	f3bf 8f4f 	dsb	sy
 80058ac:	613b      	str	r3, [r7, #16]
 80058ae:	bf00      	nop
 80058b0:	4b15      	ldr	r3, [pc, #84]	@ (8005908 <vTaskStartScheduler+0xcc>)
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	3354      	adds	r3, #84	@ 0x54
 80058b6:	4a15      	ldr	r2, [pc, #84]	@ (800590c <vTaskStartScheduler+0xd0>)
 80058b8:	6013      	str	r3, [r2, #0]
 80058ba:	4b15      	ldr	r3, [pc, #84]	@ (8005910 <vTaskStartScheduler+0xd4>)
 80058bc:	f04f 32ff 	mov.w	r2, #4294967295
 80058c0:	601a      	str	r2, [r3, #0]
 80058c2:	4b14      	ldr	r3, [pc, #80]	@ (8005914 <vTaskStartScheduler+0xd8>)
 80058c4:	2201      	movs	r2, #1
 80058c6:	601a      	str	r2, [r3, #0]
 80058c8:	4b13      	ldr	r3, [pc, #76]	@ (8005918 <vTaskStartScheduler+0xdc>)
 80058ca:	2200      	movs	r2, #0
 80058cc:	601a      	str	r2, [r3, #0]
 80058ce:	f001 f8cb 	bl	8006a68 <xPortStartScheduler>
 80058d2:	e00f      	b.n	80058f4 <vTaskStartScheduler+0xb8>
 80058d4:	697b      	ldr	r3, [r7, #20]
 80058d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80058da:	d10b      	bne.n	80058f4 <vTaskStartScheduler+0xb8>
 80058dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80058e0:	f383 8811 	msr	BASEPRI, r3
 80058e4:	f3bf 8f6f 	isb	sy
 80058e8:	f3bf 8f4f 	dsb	sy
 80058ec:	60fb      	str	r3, [r7, #12]
 80058ee:	bf00      	nop
 80058f0:	bf00      	nop
 80058f2:	e7fd      	b.n	80058f0 <vTaskStartScheduler+0xb4>
 80058f4:	bf00      	nop
 80058f6:	3718      	adds	r7, #24
 80058f8:	46bd      	mov	sp, r7
 80058fa:	bd80      	pop	{r7, pc}
 80058fc:	08007334 	.word	0x08007334
 8005900:	08005f45 	.word	0x08005f45
 8005904:	20001064 	.word	0x20001064
 8005908:	20000b6c 	.word	0x20000b6c
 800590c:	20000014 	.word	0x20000014
 8005910:	20001060 	.word	0x20001060
 8005914:	2000104c 	.word	0x2000104c
 8005918:	20001044 	.word	0x20001044

0800591c <vTaskSuspendAll>:
 800591c:	b480      	push	{r7}
 800591e:	af00      	add	r7, sp, #0
 8005920:	4b04      	ldr	r3, [pc, #16]	@ (8005934 <vTaskSuspendAll+0x18>)
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	3301      	adds	r3, #1
 8005926:	4a03      	ldr	r2, [pc, #12]	@ (8005934 <vTaskSuspendAll+0x18>)
 8005928:	6013      	str	r3, [r2, #0]
 800592a:	bf00      	nop
 800592c:	46bd      	mov	sp, r7
 800592e:	bc80      	pop	{r7}
 8005930:	4770      	bx	lr
 8005932:	bf00      	nop
 8005934:	20001068 	.word	0x20001068

08005938 <xTaskResumeAll>:
 8005938:	b580      	push	{r7, lr}
 800593a:	b084      	sub	sp, #16
 800593c:	af00      	add	r7, sp, #0
 800593e:	2300      	movs	r3, #0
 8005940:	60fb      	str	r3, [r7, #12]
 8005942:	2300      	movs	r3, #0
 8005944:	60bb      	str	r3, [r7, #8]
 8005946:	4b42      	ldr	r3, [pc, #264]	@ (8005a50 <xTaskResumeAll+0x118>)
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	2b00      	cmp	r3, #0
 800594c:	d10b      	bne.n	8005966 <xTaskResumeAll+0x2e>
 800594e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005952:	f383 8811 	msr	BASEPRI, r3
 8005956:	f3bf 8f6f 	isb	sy
 800595a:	f3bf 8f4f 	dsb	sy
 800595e:	603b      	str	r3, [r7, #0]
 8005960:	bf00      	nop
 8005962:	bf00      	nop
 8005964:	e7fd      	b.n	8005962 <xTaskResumeAll+0x2a>
 8005966:	f001 f8f1 	bl	8006b4c <vPortEnterCritical>
 800596a:	4b39      	ldr	r3, [pc, #228]	@ (8005a50 <xTaskResumeAll+0x118>)
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	3b01      	subs	r3, #1
 8005970:	4a37      	ldr	r2, [pc, #220]	@ (8005a50 <xTaskResumeAll+0x118>)
 8005972:	6013      	str	r3, [r2, #0]
 8005974:	4b36      	ldr	r3, [pc, #216]	@ (8005a50 <xTaskResumeAll+0x118>)
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	2b00      	cmp	r3, #0
 800597a:	d162      	bne.n	8005a42 <xTaskResumeAll+0x10a>
 800597c:	4b35      	ldr	r3, [pc, #212]	@ (8005a54 <xTaskResumeAll+0x11c>)
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	2b00      	cmp	r3, #0
 8005982:	d05e      	beq.n	8005a42 <xTaskResumeAll+0x10a>
 8005984:	e02f      	b.n	80059e6 <xTaskResumeAll+0xae>
 8005986:	4b34      	ldr	r3, [pc, #208]	@ (8005a58 <xTaskResumeAll+0x120>)
 8005988:	68db      	ldr	r3, [r3, #12]
 800598a:	68db      	ldr	r3, [r3, #12]
 800598c:	60fb      	str	r3, [r7, #12]
 800598e:	68fb      	ldr	r3, [r7, #12]
 8005990:	3318      	adds	r3, #24
 8005992:	4618      	mov	r0, r3
 8005994:	f7fe fff2 	bl	800497c <uxListRemove>
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	3304      	adds	r3, #4
 800599c:	4618      	mov	r0, r3
 800599e:	f7fe ffed 	bl	800497c <uxListRemove>
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80059a6:	4b2d      	ldr	r3, [pc, #180]	@ (8005a5c <xTaskResumeAll+0x124>)
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	429a      	cmp	r2, r3
 80059ac:	d903      	bls.n	80059b6 <xTaskResumeAll+0x7e>
 80059ae:	68fb      	ldr	r3, [r7, #12]
 80059b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059b2:	4a2a      	ldr	r2, [pc, #168]	@ (8005a5c <xTaskResumeAll+0x124>)
 80059b4:	6013      	str	r3, [r2, #0]
 80059b6:	68fb      	ldr	r3, [r7, #12]
 80059b8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80059ba:	4613      	mov	r3, r2
 80059bc:	009b      	lsls	r3, r3, #2
 80059be:	4413      	add	r3, r2
 80059c0:	009b      	lsls	r3, r3, #2
 80059c2:	4a27      	ldr	r2, [pc, #156]	@ (8005a60 <xTaskResumeAll+0x128>)
 80059c4:	441a      	add	r2, r3
 80059c6:	68fb      	ldr	r3, [r7, #12]
 80059c8:	3304      	adds	r3, #4
 80059ca:	4619      	mov	r1, r3
 80059cc:	4610      	mov	r0, r2
 80059ce:	f7fe ff7a 	bl	80048c6 <vListInsertEnd>
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80059d6:	4b23      	ldr	r3, [pc, #140]	@ (8005a64 <xTaskResumeAll+0x12c>)
 80059d8:	681b      	ldr	r3, [r3, #0]
 80059da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059dc:	429a      	cmp	r2, r3
 80059de:	d302      	bcc.n	80059e6 <xTaskResumeAll+0xae>
 80059e0:	4b21      	ldr	r3, [pc, #132]	@ (8005a68 <xTaskResumeAll+0x130>)
 80059e2:	2201      	movs	r2, #1
 80059e4:	601a      	str	r2, [r3, #0]
 80059e6:	4b1c      	ldr	r3, [pc, #112]	@ (8005a58 <xTaskResumeAll+0x120>)
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	d1cb      	bne.n	8005986 <xTaskResumeAll+0x4e>
 80059ee:	68fb      	ldr	r3, [r7, #12]
 80059f0:	2b00      	cmp	r3, #0
 80059f2:	d001      	beq.n	80059f8 <xTaskResumeAll+0xc0>
 80059f4:	f000 fb62 	bl	80060bc <prvResetNextTaskUnblockTime>
 80059f8:	4b1c      	ldr	r3, [pc, #112]	@ (8005a6c <xTaskResumeAll+0x134>)
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	607b      	str	r3, [r7, #4]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	2b00      	cmp	r3, #0
 8005a02:	d010      	beq.n	8005a26 <xTaskResumeAll+0xee>
 8005a04:	f000 f844 	bl	8005a90 <xTaskIncrementTick>
 8005a08:	4603      	mov	r3, r0
 8005a0a:	2b00      	cmp	r3, #0
 8005a0c:	d002      	beq.n	8005a14 <xTaskResumeAll+0xdc>
 8005a0e:	4b16      	ldr	r3, [pc, #88]	@ (8005a68 <xTaskResumeAll+0x130>)
 8005a10:	2201      	movs	r2, #1
 8005a12:	601a      	str	r2, [r3, #0]
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	3b01      	subs	r3, #1
 8005a18:	607b      	str	r3, [r7, #4]
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	d1f1      	bne.n	8005a04 <xTaskResumeAll+0xcc>
 8005a20:	4b12      	ldr	r3, [pc, #72]	@ (8005a6c <xTaskResumeAll+0x134>)
 8005a22:	2200      	movs	r2, #0
 8005a24:	601a      	str	r2, [r3, #0]
 8005a26:	4b10      	ldr	r3, [pc, #64]	@ (8005a68 <xTaskResumeAll+0x130>)
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	2b00      	cmp	r3, #0
 8005a2c:	d009      	beq.n	8005a42 <xTaskResumeAll+0x10a>
 8005a2e:	2301      	movs	r3, #1
 8005a30:	60bb      	str	r3, [r7, #8]
 8005a32:	4b0f      	ldr	r3, [pc, #60]	@ (8005a70 <xTaskResumeAll+0x138>)
 8005a34:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005a38:	601a      	str	r2, [r3, #0]
 8005a3a:	f3bf 8f4f 	dsb	sy
 8005a3e:	f3bf 8f6f 	isb	sy
 8005a42:	f001 f8b3 	bl	8006bac <vPortExitCritical>
 8005a46:	68bb      	ldr	r3, [r7, #8]
 8005a48:	4618      	mov	r0, r3
 8005a4a:	3710      	adds	r7, #16
 8005a4c:	46bd      	mov	sp, r7
 8005a4e:	bd80      	pop	{r7, pc}
 8005a50:	20001068 	.word	0x20001068
 8005a54:	20001040 	.word	0x20001040
 8005a58:	20001000 	.word	0x20001000
 8005a5c:	20001048 	.word	0x20001048
 8005a60:	20000b70 	.word	0x20000b70
 8005a64:	20000b6c 	.word	0x20000b6c
 8005a68:	20001054 	.word	0x20001054
 8005a6c:	20001050 	.word	0x20001050
 8005a70:	e000ed04 	.word	0xe000ed04

08005a74 <xTaskGetTickCount>:
 8005a74:	b480      	push	{r7}
 8005a76:	b083      	sub	sp, #12
 8005a78:	af00      	add	r7, sp, #0
 8005a7a:	4b04      	ldr	r3, [pc, #16]	@ (8005a8c <xTaskGetTickCount+0x18>)
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	607b      	str	r3, [r7, #4]
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	4618      	mov	r0, r3
 8005a84:	370c      	adds	r7, #12
 8005a86:	46bd      	mov	sp, r7
 8005a88:	bc80      	pop	{r7}
 8005a8a:	4770      	bx	lr
 8005a8c:	20001044 	.word	0x20001044

08005a90 <xTaskIncrementTick>:
 8005a90:	b580      	push	{r7, lr}
 8005a92:	b086      	sub	sp, #24
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	2300      	movs	r3, #0
 8005a98:	617b      	str	r3, [r7, #20]
 8005a9a:	4b4f      	ldr	r3, [pc, #316]	@ (8005bd8 <xTaskIncrementTick+0x148>)
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	f040 8090 	bne.w	8005bc4 <xTaskIncrementTick+0x134>
 8005aa4:	4b4d      	ldr	r3, [pc, #308]	@ (8005bdc <xTaskIncrementTick+0x14c>)
 8005aa6:	681b      	ldr	r3, [r3, #0]
 8005aa8:	3301      	adds	r3, #1
 8005aaa:	613b      	str	r3, [r7, #16]
 8005aac:	4a4b      	ldr	r2, [pc, #300]	@ (8005bdc <xTaskIncrementTick+0x14c>)
 8005aae:	693b      	ldr	r3, [r7, #16]
 8005ab0:	6013      	str	r3, [r2, #0]
 8005ab2:	693b      	ldr	r3, [r7, #16]
 8005ab4:	2b00      	cmp	r3, #0
 8005ab6:	d121      	bne.n	8005afc <xTaskIncrementTick+0x6c>
 8005ab8:	4b49      	ldr	r3, [pc, #292]	@ (8005be0 <xTaskIncrementTick+0x150>)
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	d00b      	beq.n	8005ada <xTaskIncrementTick+0x4a>
 8005ac2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005ac6:	f383 8811 	msr	BASEPRI, r3
 8005aca:	f3bf 8f6f 	isb	sy
 8005ace:	f3bf 8f4f 	dsb	sy
 8005ad2:	603b      	str	r3, [r7, #0]
 8005ad4:	bf00      	nop
 8005ad6:	bf00      	nop
 8005ad8:	e7fd      	b.n	8005ad6 <xTaskIncrementTick+0x46>
 8005ada:	4b41      	ldr	r3, [pc, #260]	@ (8005be0 <xTaskIncrementTick+0x150>)
 8005adc:	681b      	ldr	r3, [r3, #0]
 8005ade:	60fb      	str	r3, [r7, #12]
 8005ae0:	4b40      	ldr	r3, [pc, #256]	@ (8005be4 <xTaskIncrementTick+0x154>)
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	4a3e      	ldr	r2, [pc, #248]	@ (8005be0 <xTaskIncrementTick+0x150>)
 8005ae6:	6013      	str	r3, [r2, #0]
 8005ae8:	4a3e      	ldr	r2, [pc, #248]	@ (8005be4 <xTaskIncrementTick+0x154>)
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	6013      	str	r3, [r2, #0]
 8005aee:	4b3e      	ldr	r3, [pc, #248]	@ (8005be8 <xTaskIncrementTick+0x158>)
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	3301      	adds	r3, #1
 8005af4:	4a3c      	ldr	r2, [pc, #240]	@ (8005be8 <xTaskIncrementTick+0x158>)
 8005af6:	6013      	str	r3, [r2, #0]
 8005af8:	f000 fae0 	bl	80060bc <prvResetNextTaskUnblockTime>
 8005afc:	4b3b      	ldr	r3, [pc, #236]	@ (8005bec <xTaskIncrementTick+0x15c>)
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	693a      	ldr	r2, [r7, #16]
 8005b02:	429a      	cmp	r2, r3
 8005b04:	d349      	bcc.n	8005b9a <xTaskIncrementTick+0x10a>
 8005b06:	4b36      	ldr	r3, [pc, #216]	@ (8005be0 <xTaskIncrementTick+0x150>)
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	681b      	ldr	r3, [r3, #0]
 8005b0c:	2b00      	cmp	r3, #0
 8005b0e:	d104      	bne.n	8005b1a <xTaskIncrementTick+0x8a>
 8005b10:	4b36      	ldr	r3, [pc, #216]	@ (8005bec <xTaskIncrementTick+0x15c>)
 8005b12:	f04f 32ff 	mov.w	r2, #4294967295
 8005b16:	601a      	str	r2, [r3, #0]
 8005b18:	e03f      	b.n	8005b9a <xTaskIncrementTick+0x10a>
 8005b1a:	4b31      	ldr	r3, [pc, #196]	@ (8005be0 <xTaskIncrementTick+0x150>)
 8005b1c:	681b      	ldr	r3, [r3, #0]
 8005b1e:	68db      	ldr	r3, [r3, #12]
 8005b20:	68db      	ldr	r3, [r3, #12]
 8005b22:	60bb      	str	r3, [r7, #8]
 8005b24:	68bb      	ldr	r3, [r7, #8]
 8005b26:	685b      	ldr	r3, [r3, #4]
 8005b28:	607b      	str	r3, [r7, #4]
 8005b2a:	693a      	ldr	r2, [r7, #16]
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	429a      	cmp	r2, r3
 8005b30:	d203      	bcs.n	8005b3a <xTaskIncrementTick+0xaa>
 8005b32:	4a2e      	ldr	r2, [pc, #184]	@ (8005bec <xTaskIncrementTick+0x15c>)
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	6013      	str	r3, [r2, #0]
 8005b38:	e02f      	b.n	8005b9a <xTaskIncrementTick+0x10a>
 8005b3a:	68bb      	ldr	r3, [r7, #8]
 8005b3c:	3304      	adds	r3, #4
 8005b3e:	4618      	mov	r0, r3
 8005b40:	f7fe ff1c 	bl	800497c <uxListRemove>
 8005b44:	68bb      	ldr	r3, [r7, #8]
 8005b46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005b48:	2b00      	cmp	r3, #0
 8005b4a:	d004      	beq.n	8005b56 <xTaskIncrementTick+0xc6>
 8005b4c:	68bb      	ldr	r3, [r7, #8]
 8005b4e:	3318      	adds	r3, #24
 8005b50:	4618      	mov	r0, r3
 8005b52:	f7fe ff13 	bl	800497c <uxListRemove>
 8005b56:	68bb      	ldr	r3, [r7, #8]
 8005b58:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005b5a:	4b25      	ldr	r3, [pc, #148]	@ (8005bf0 <xTaskIncrementTick+0x160>)
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	429a      	cmp	r2, r3
 8005b60:	d903      	bls.n	8005b6a <xTaskIncrementTick+0xda>
 8005b62:	68bb      	ldr	r3, [r7, #8]
 8005b64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005b66:	4a22      	ldr	r2, [pc, #136]	@ (8005bf0 <xTaskIncrementTick+0x160>)
 8005b68:	6013      	str	r3, [r2, #0]
 8005b6a:	68bb      	ldr	r3, [r7, #8]
 8005b6c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005b6e:	4613      	mov	r3, r2
 8005b70:	009b      	lsls	r3, r3, #2
 8005b72:	4413      	add	r3, r2
 8005b74:	009b      	lsls	r3, r3, #2
 8005b76:	4a1f      	ldr	r2, [pc, #124]	@ (8005bf4 <xTaskIncrementTick+0x164>)
 8005b78:	441a      	add	r2, r3
 8005b7a:	68bb      	ldr	r3, [r7, #8]
 8005b7c:	3304      	adds	r3, #4
 8005b7e:	4619      	mov	r1, r3
 8005b80:	4610      	mov	r0, r2
 8005b82:	f7fe fea0 	bl	80048c6 <vListInsertEnd>
 8005b86:	68bb      	ldr	r3, [r7, #8]
 8005b88:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005b8a:	4b1b      	ldr	r3, [pc, #108]	@ (8005bf8 <xTaskIncrementTick+0x168>)
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005b90:	429a      	cmp	r2, r3
 8005b92:	d3b8      	bcc.n	8005b06 <xTaskIncrementTick+0x76>
 8005b94:	2301      	movs	r3, #1
 8005b96:	617b      	str	r3, [r7, #20]
 8005b98:	e7b5      	b.n	8005b06 <xTaskIncrementTick+0x76>
 8005b9a:	4b17      	ldr	r3, [pc, #92]	@ (8005bf8 <xTaskIncrementTick+0x168>)
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005ba0:	4914      	ldr	r1, [pc, #80]	@ (8005bf4 <xTaskIncrementTick+0x164>)
 8005ba2:	4613      	mov	r3, r2
 8005ba4:	009b      	lsls	r3, r3, #2
 8005ba6:	4413      	add	r3, r2
 8005ba8:	009b      	lsls	r3, r3, #2
 8005baa:	440b      	add	r3, r1
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	2b01      	cmp	r3, #1
 8005bb0:	d901      	bls.n	8005bb6 <xTaskIncrementTick+0x126>
 8005bb2:	2301      	movs	r3, #1
 8005bb4:	617b      	str	r3, [r7, #20]
 8005bb6:	4b11      	ldr	r3, [pc, #68]	@ (8005bfc <xTaskIncrementTick+0x16c>)
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	2b00      	cmp	r3, #0
 8005bbc:	d007      	beq.n	8005bce <xTaskIncrementTick+0x13e>
 8005bbe:	2301      	movs	r3, #1
 8005bc0:	617b      	str	r3, [r7, #20]
 8005bc2:	e004      	b.n	8005bce <xTaskIncrementTick+0x13e>
 8005bc4:	4b0e      	ldr	r3, [pc, #56]	@ (8005c00 <xTaskIncrementTick+0x170>)
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	3301      	adds	r3, #1
 8005bca:	4a0d      	ldr	r2, [pc, #52]	@ (8005c00 <xTaskIncrementTick+0x170>)
 8005bcc:	6013      	str	r3, [r2, #0]
 8005bce:	697b      	ldr	r3, [r7, #20]
 8005bd0:	4618      	mov	r0, r3
 8005bd2:	3718      	adds	r7, #24
 8005bd4:	46bd      	mov	sp, r7
 8005bd6:	bd80      	pop	{r7, pc}
 8005bd8:	20001068 	.word	0x20001068
 8005bdc:	20001044 	.word	0x20001044
 8005be0:	20000ff8 	.word	0x20000ff8
 8005be4:	20000ffc 	.word	0x20000ffc
 8005be8:	20001058 	.word	0x20001058
 8005bec:	20001060 	.word	0x20001060
 8005bf0:	20001048 	.word	0x20001048
 8005bf4:	20000b70 	.word	0x20000b70
 8005bf8:	20000b6c 	.word	0x20000b6c
 8005bfc:	20001054 	.word	0x20001054
 8005c00:	20001050 	.word	0x20001050

08005c04 <vTaskSwitchContext>:
 8005c04:	b480      	push	{r7}
 8005c06:	b085      	sub	sp, #20
 8005c08:	af00      	add	r7, sp, #0
 8005c0a:	4b2a      	ldr	r3, [pc, #168]	@ (8005cb4 <vTaskSwitchContext+0xb0>)
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	2b00      	cmp	r3, #0
 8005c10:	d003      	beq.n	8005c1a <vTaskSwitchContext+0x16>
 8005c12:	4b29      	ldr	r3, [pc, #164]	@ (8005cb8 <vTaskSwitchContext+0xb4>)
 8005c14:	2201      	movs	r2, #1
 8005c16:	601a      	str	r2, [r3, #0]
 8005c18:	e047      	b.n	8005caa <vTaskSwitchContext+0xa6>
 8005c1a:	4b27      	ldr	r3, [pc, #156]	@ (8005cb8 <vTaskSwitchContext+0xb4>)
 8005c1c:	2200      	movs	r2, #0
 8005c1e:	601a      	str	r2, [r3, #0]
 8005c20:	4b26      	ldr	r3, [pc, #152]	@ (8005cbc <vTaskSwitchContext+0xb8>)
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	60fb      	str	r3, [r7, #12]
 8005c26:	e011      	b.n	8005c4c <vTaskSwitchContext+0x48>
 8005c28:	68fb      	ldr	r3, [r7, #12]
 8005c2a:	2b00      	cmp	r3, #0
 8005c2c:	d10b      	bne.n	8005c46 <vTaskSwitchContext+0x42>
 8005c2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c32:	f383 8811 	msr	BASEPRI, r3
 8005c36:	f3bf 8f6f 	isb	sy
 8005c3a:	f3bf 8f4f 	dsb	sy
 8005c3e:	607b      	str	r3, [r7, #4]
 8005c40:	bf00      	nop
 8005c42:	bf00      	nop
 8005c44:	e7fd      	b.n	8005c42 <vTaskSwitchContext+0x3e>
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	3b01      	subs	r3, #1
 8005c4a:	60fb      	str	r3, [r7, #12]
 8005c4c:	491c      	ldr	r1, [pc, #112]	@ (8005cc0 <vTaskSwitchContext+0xbc>)
 8005c4e:	68fa      	ldr	r2, [r7, #12]
 8005c50:	4613      	mov	r3, r2
 8005c52:	009b      	lsls	r3, r3, #2
 8005c54:	4413      	add	r3, r2
 8005c56:	009b      	lsls	r3, r3, #2
 8005c58:	440b      	add	r3, r1
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	2b00      	cmp	r3, #0
 8005c5e:	d0e3      	beq.n	8005c28 <vTaskSwitchContext+0x24>
 8005c60:	68fa      	ldr	r2, [r7, #12]
 8005c62:	4613      	mov	r3, r2
 8005c64:	009b      	lsls	r3, r3, #2
 8005c66:	4413      	add	r3, r2
 8005c68:	009b      	lsls	r3, r3, #2
 8005c6a:	4a15      	ldr	r2, [pc, #84]	@ (8005cc0 <vTaskSwitchContext+0xbc>)
 8005c6c:	4413      	add	r3, r2
 8005c6e:	60bb      	str	r3, [r7, #8]
 8005c70:	68bb      	ldr	r3, [r7, #8]
 8005c72:	685b      	ldr	r3, [r3, #4]
 8005c74:	685a      	ldr	r2, [r3, #4]
 8005c76:	68bb      	ldr	r3, [r7, #8]
 8005c78:	605a      	str	r2, [r3, #4]
 8005c7a:	68bb      	ldr	r3, [r7, #8]
 8005c7c:	685a      	ldr	r2, [r3, #4]
 8005c7e:	68bb      	ldr	r3, [r7, #8]
 8005c80:	3308      	adds	r3, #8
 8005c82:	429a      	cmp	r2, r3
 8005c84:	d104      	bne.n	8005c90 <vTaskSwitchContext+0x8c>
 8005c86:	68bb      	ldr	r3, [r7, #8]
 8005c88:	685b      	ldr	r3, [r3, #4]
 8005c8a:	685a      	ldr	r2, [r3, #4]
 8005c8c:	68bb      	ldr	r3, [r7, #8]
 8005c8e:	605a      	str	r2, [r3, #4]
 8005c90:	68bb      	ldr	r3, [r7, #8]
 8005c92:	685b      	ldr	r3, [r3, #4]
 8005c94:	68db      	ldr	r3, [r3, #12]
 8005c96:	4a0b      	ldr	r2, [pc, #44]	@ (8005cc4 <vTaskSwitchContext+0xc0>)
 8005c98:	6013      	str	r3, [r2, #0]
 8005c9a:	4a08      	ldr	r2, [pc, #32]	@ (8005cbc <vTaskSwitchContext+0xb8>)
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	6013      	str	r3, [r2, #0]
 8005ca0:	4b08      	ldr	r3, [pc, #32]	@ (8005cc4 <vTaskSwitchContext+0xc0>)
 8005ca2:	681b      	ldr	r3, [r3, #0]
 8005ca4:	3354      	adds	r3, #84	@ 0x54
 8005ca6:	4a08      	ldr	r2, [pc, #32]	@ (8005cc8 <vTaskSwitchContext+0xc4>)
 8005ca8:	6013      	str	r3, [r2, #0]
 8005caa:	bf00      	nop
 8005cac:	3714      	adds	r7, #20
 8005cae:	46bd      	mov	sp, r7
 8005cb0:	bc80      	pop	{r7}
 8005cb2:	4770      	bx	lr
 8005cb4:	20001068 	.word	0x20001068
 8005cb8:	20001054 	.word	0x20001054
 8005cbc:	20001048 	.word	0x20001048
 8005cc0:	20000b70 	.word	0x20000b70
 8005cc4:	20000b6c 	.word	0x20000b6c
 8005cc8:	20000014 	.word	0x20000014

08005ccc <vTaskPlaceOnEventList>:
 8005ccc:	b580      	push	{r7, lr}
 8005cce:	b084      	sub	sp, #16
 8005cd0:	af00      	add	r7, sp, #0
 8005cd2:	6078      	str	r0, [r7, #4]
 8005cd4:	6039      	str	r1, [r7, #0]
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	2b00      	cmp	r3, #0
 8005cda:	d10b      	bne.n	8005cf4 <vTaskPlaceOnEventList+0x28>
 8005cdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005ce0:	f383 8811 	msr	BASEPRI, r3
 8005ce4:	f3bf 8f6f 	isb	sy
 8005ce8:	f3bf 8f4f 	dsb	sy
 8005cec:	60fb      	str	r3, [r7, #12]
 8005cee:	bf00      	nop
 8005cf0:	bf00      	nop
 8005cf2:	e7fd      	b.n	8005cf0 <vTaskPlaceOnEventList+0x24>
 8005cf4:	4b07      	ldr	r3, [pc, #28]	@ (8005d14 <vTaskPlaceOnEventList+0x48>)
 8005cf6:	681b      	ldr	r3, [r3, #0]
 8005cf8:	3318      	adds	r3, #24
 8005cfa:	4619      	mov	r1, r3
 8005cfc:	6878      	ldr	r0, [r7, #4]
 8005cfe:	f7fe fe05 	bl	800490c <vListInsert>
 8005d02:	2101      	movs	r1, #1
 8005d04:	6838      	ldr	r0, [r7, #0]
 8005d06:	f000 fa87 	bl	8006218 <prvAddCurrentTaskToDelayedList>
 8005d0a:	bf00      	nop
 8005d0c:	3710      	adds	r7, #16
 8005d0e:	46bd      	mov	sp, r7
 8005d10:	bd80      	pop	{r7, pc}
 8005d12:	bf00      	nop
 8005d14:	20000b6c 	.word	0x20000b6c

08005d18 <vTaskPlaceOnEventListRestricted>:
 8005d18:	b580      	push	{r7, lr}
 8005d1a:	b086      	sub	sp, #24
 8005d1c:	af00      	add	r7, sp, #0
 8005d1e:	60f8      	str	r0, [r7, #12]
 8005d20:	60b9      	str	r1, [r7, #8]
 8005d22:	607a      	str	r2, [r7, #4]
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	2b00      	cmp	r3, #0
 8005d28:	d10b      	bne.n	8005d42 <vTaskPlaceOnEventListRestricted+0x2a>
 8005d2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005d2e:	f383 8811 	msr	BASEPRI, r3
 8005d32:	f3bf 8f6f 	isb	sy
 8005d36:	f3bf 8f4f 	dsb	sy
 8005d3a:	617b      	str	r3, [r7, #20]
 8005d3c:	bf00      	nop
 8005d3e:	bf00      	nop
 8005d40:	e7fd      	b.n	8005d3e <vTaskPlaceOnEventListRestricted+0x26>
 8005d42:	4b0a      	ldr	r3, [pc, #40]	@ (8005d6c <vTaskPlaceOnEventListRestricted+0x54>)
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	3318      	adds	r3, #24
 8005d48:	4619      	mov	r1, r3
 8005d4a:	68f8      	ldr	r0, [r7, #12]
 8005d4c:	f7fe fdbb 	bl	80048c6 <vListInsertEnd>
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	2b00      	cmp	r3, #0
 8005d54:	d002      	beq.n	8005d5c <vTaskPlaceOnEventListRestricted+0x44>
 8005d56:	f04f 33ff 	mov.w	r3, #4294967295
 8005d5a:	60bb      	str	r3, [r7, #8]
 8005d5c:	6879      	ldr	r1, [r7, #4]
 8005d5e:	68b8      	ldr	r0, [r7, #8]
 8005d60:	f000 fa5a 	bl	8006218 <prvAddCurrentTaskToDelayedList>
 8005d64:	bf00      	nop
 8005d66:	3718      	adds	r7, #24
 8005d68:	46bd      	mov	sp, r7
 8005d6a:	bd80      	pop	{r7, pc}
 8005d6c:	20000b6c 	.word	0x20000b6c

08005d70 <xTaskRemoveFromEventList>:
 8005d70:	b580      	push	{r7, lr}
 8005d72:	b086      	sub	sp, #24
 8005d74:	af00      	add	r7, sp, #0
 8005d76:	6078      	str	r0, [r7, #4]
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	68db      	ldr	r3, [r3, #12]
 8005d7c:	68db      	ldr	r3, [r3, #12]
 8005d7e:	613b      	str	r3, [r7, #16]
 8005d80:	693b      	ldr	r3, [r7, #16]
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d10b      	bne.n	8005d9e <xTaskRemoveFromEventList+0x2e>
 8005d86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005d8a:	f383 8811 	msr	BASEPRI, r3
 8005d8e:	f3bf 8f6f 	isb	sy
 8005d92:	f3bf 8f4f 	dsb	sy
 8005d96:	60fb      	str	r3, [r7, #12]
 8005d98:	bf00      	nop
 8005d9a:	bf00      	nop
 8005d9c:	e7fd      	b.n	8005d9a <xTaskRemoveFromEventList+0x2a>
 8005d9e:	693b      	ldr	r3, [r7, #16]
 8005da0:	3318      	adds	r3, #24
 8005da2:	4618      	mov	r0, r3
 8005da4:	f7fe fdea 	bl	800497c <uxListRemove>
 8005da8:	4b1d      	ldr	r3, [pc, #116]	@ (8005e20 <xTaskRemoveFromEventList+0xb0>)
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d11d      	bne.n	8005dec <xTaskRemoveFromEventList+0x7c>
 8005db0:	693b      	ldr	r3, [r7, #16]
 8005db2:	3304      	adds	r3, #4
 8005db4:	4618      	mov	r0, r3
 8005db6:	f7fe fde1 	bl	800497c <uxListRemove>
 8005dba:	693b      	ldr	r3, [r7, #16]
 8005dbc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005dbe:	4b19      	ldr	r3, [pc, #100]	@ (8005e24 <xTaskRemoveFromEventList+0xb4>)
 8005dc0:	681b      	ldr	r3, [r3, #0]
 8005dc2:	429a      	cmp	r2, r3
 8005dc4:	d903      	bls.n	8005dce <xTaskRemoveFromEventList+0x5e>
 8005dc6:	693b      	ldr	r3, [r7, #16]
 8005dc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005dca:	4a16      	ldr	r2, [pc, #88]	@ (8005e24 <xTaskRemoveFromEventList+0xb4>)
 8005dcc:	6013      	str	r3, [r2, #0]
 8005dce:	693b      	ldr	r3, [r7, #16]
 8005dd0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005dd2:	4613      	mov	r3, r2
 8005dd4:	009b      	lsls	r3, r3, #2
 8005dd6:	4413      	add	r3, r2
 8005dd8:	009b      	lsls	r3, r3, #2
 8005dda:	4a13      	ldr	r2, [pc, #76]	@ (8005e28 <xTaskRemoveFromEventList+0xb8>)
 8005ddc:	441a      	add	r2, r3
 8005dde:	693b      	ldr	r3, [r7, #16]
 8005de0:	3304      	adds	r3, #4
 8005de2:	4619      	mov	r1, r3
 8005de4:	4610      	mov	r0, r2
 8005de6:	f7fe fd6e 	bl	80048c6 <vListInsertEnd>
 8005dea:	e005      	b.n	8005df8 <xTaskRemoveFromEventList+0x88>
 8005dec:	693b      	ldr	r3, [r7, #16]
 8005dee:	3318      	adds	r3, #24
 8005df0:	4619      	mov	r1, r3
 8005df2:	480e      	ldr	r0, [pc, #56]	@ (8005e2c <xTaskRemoveFromEventList+0xbc>)
 8005df4:	f7fe fd67 	bl	80048c6 <vListInsertEnd>
 8005df8:	693b      	ldr	r3, [r7, #16]
 8005dfa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005dfc:	4b0c      	ldr	r3, [pc, #48]	@ (8005e30 <xTaskRemoveFromEventList+0xc0>)
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005e02:	429a      	cmp	r2, r3
 8005e04:	d905      	bls.n	8005e12 <xTaskRemoveFromEventList+0xa2>
 8005e06:	2301      	movs	r3, #1
 8005e08:	617b      	str	r3, [r7, #20]
 8005e0a:	4b0a      	ldr	r3, [pc, #40]	@ (8005e34 <xTaskRemoveFromEventList+0xc4>)
 8005e0c:	2201      	movs	r2, #1
 8005e0e:	601a      	str	r2, [r3, #0]
 8005e10:	e001      	b.n	8005e16 <xTaskRemoveFromEventList+0xa6>
 8005e12:	2300      	movs	r3, #0
 8005e14:	617b      	str	r3, [r7, #20]
 8005e16:	697b      	ldr	r3, [r7, #20]
 8005e18:	4618      	mov	r0, r3
 8005e1a:	3718      	adds	r7, #24
 8005e1c:	46bd      	mov	sp, r7
 8005e1e:	bd80      	pop	{r7, pc}
 8005e20:	20001068 	.word	0x20001068
 8005e24:	20001048 	.word	0x20001048
 8005e28:	20000b70 	.word	0x20000b70
 8005e2c:	20001000 	.word	0x20001000
 8005e30:	20000b6c 	.word	0x20000b6c
 8005e34:	20001054 	.word	0x20001054

08005e38 <vTaskInternalSetTimeOutState>:
 8005e38:	b480      	push	{r7}
 8005e3a:	b083      	sub	sp, #12
 8005e3c:	af00      	add	r7, sp, #0
 8005e3e:	6078      	str	r0, [r7, #4]
 8005e40:	4b06      	ldr	r3, [pc, #24]	@ (8005e5c <vTaskInternalSetTimeOutState+0x24>)
 8005e42:	681a      	ldr	r2, [r3, #0]
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	601a      	str	r2, [r3, #0]
 8005e48:	4b05      	ldr	r3, [pc, #20]	@ (8005e60 <vTaskInternalSetTimeOutState+0x28>)
 8005e4a:	681a      	ldr	r2, [r3, #0]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	605a      	str	r2, [r3, #4]
 8005e50:	bf00      	nop
 8005e52:	370c      	adds	r7, #12
 8005e54:	46bd      	mov	sp, r7
 8005e56:	bc80      	pop	{r7}
 8005e58:	4770      	bx	lr
 8005e5a:	bf00      	nop
 8005e5c:	20001058 	.word	0x20001058
 8005e60:	20001044 	.word	0x20001044

08005e64 <xTaskCheckForTimeOut>:
 8005e64:	b580      	push	{r7, lr}
 8005e66:	b088      	sub	sp, #32
 8005e68:	af00      	add	r7, sp, #0
 8005e6a:	6078      	str	r0, [r7, #4]
 8005e6c:	6039      	str	r1, [r7, #0]
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	2b00      	cmp	r3, #0
 8005e72:	d10b      	bne.n	8005e8c <xTaskCheckForTimeOut+0x28>
 8005e74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005e78:	f383 8811 	msr	BASEPRI, r3
 8005e7c:	f3bf 8f6f 	isb	sy
 8005e80:	f3bf 8f4f 	dsb	sy
 8005e84:	613b      	str	r3, [r7, #16]
 8005e86:	bf00      	nop
 8005e88:	bf00      	nop
 8005e8a:	e7fd      	b.n	8005e88 <xTaskCheckForTimeOut+0x24>
 8005e8c:	683b      	ldr	r3, [r7, #0]
 8005e8e:	2b00      	cmp	r3, #0
 8005e90:	d10b      	bne.n	8005eaa <xTaskCheckForTimeOut+0x46>
 8005e92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005e96:	f383 8811 	msr	BASEPRI, r3
 8005e9a:	f3bf 8f6f 	isb	sy
 8005e9e:	f3bf 8f4f 	dsb	sy
 8005ea2:	60fb      	str	r3, [r7, #12]
 8005ea4:	bf00      	nop
 8005ea6:	bf00      	nop
 8005ea8:	e7fd      	b.n	8005ea6 <xTaskCheckForTimeOut+0x42>
 8005eaa:	f000 fe4f 	bl	8006b4c <vPortEnterCritical>
 8005eae:	4b1d      	ldr	r3, [pc, #116]	@ (8005f24 <xTaskCheckForTimeOut+0xc0>)
 8005eb0:	681b      	ldr	r3, [r3, #0]
 8005eb2:	61bb      	str	r3, [r7, #24]
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	685b      	ldr	r3, [r3, #4]
 8005eb8:	69ba      	ldr	r2, [r7, #24]
 8005eba:	1ad3      	subs	r3, r2, r3
 8005ebc:	617b      	str	r3, [r7, #20]
 8005ebe:	683b      	ldr	r3, [r7, #0]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ec6:	d102      	bne.n	8005ece <xTaskCheckForTimeOut+0x6a>
 8005ec8:	2300      	movs	r3, #0
 8005eca:	61fb      	str	r3, [r7, #28]
 8005ecc:	e023      	b.n	8005f16 <xTaskCheckForTimeOut+0xb2>
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	681a      	ldr	r2, [r3, #0]
 8005ed2:	4b15      	ldr	r3, [pc, #84]	@ (8005f28 <xTaskCheckForTimeOut+0xc4>)
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	429a      	cmp	r2, r3
 8005ed8:	d007      	beq.n	8005eea <xTaskCheckForTimeOut+0x86>
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	685b      	ldr	r3, [r3, #4]
 8005ede:	69ba      	ldr	r2, [r7, #24]
 8005ee0:	429a      	cmp	r2, r3
 8005ee2:	d302      	bcc.n	8005eea <xTaskCheckForTimeOut+0x86>
 8005ee4:	2301      	movs	r3, #1
 8005ee6:	61fb      	str	r3, [r7, #28]
 8005ee8:	e015      	b.n	8005f16 <xTaskCheckForTimeOut+0xb2>
 8005eea:	683b      	ldr	r3, [r7, #0]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	697a      	ldr	r2, [r7, #20]
 8005ef0:	429a      	cmp	r2, r3
 8005ef2:	d20b      	bcs.n	8005f0c <xTaskCheckForTimeOut+0xa8>
 8005ef4:	683b      	ldr	r3, [r7, #0]
 8005ef6:	681a      	ldr	r2, [r3, #0]
 8005ef8:	697b      	ldr	r3, [r7, #20]
 8005efa:	1ad2      	subs	r2, r2, r3
 8005efc:	683b      	ldr	r3, [r7, #0]
 8005efe:	601a      	str	r2, [r3, #0]
 8005f00:	6878      	ldr	r0, [r7, #4]
 8005f02:	f7ff ff99 	bl	8005e38 <vTaskInternalSetTimeOutState>
 8005f06:	2300      	movs	r3, #0
 8005f08:	61fb      	str	r3, [r7, #28]
 8005f0a:	e004      	b.n	8005f16 <xTaskCheckForTimeOut+0xb2>
 8005f0c:	683b      	ldr	r3, [r7, #0]
 8005f0e:	2200      	movs	r2, #0
 8005f10:	601a      	str	r2, [r3, #0]
 8005f12:	2301      	movs	r3, #1
 8005f14:	61fb      	str	r3, [r7, #28]
 8005f16:	f000 fe49 	bl	8006bac <vPortExitCritical>
 8005f1a:	69fb      	ldr	r3, [r7, #28]
 8005f1c:	4618      	mov	r0, r3
 8005f1e:	3720      	adds	r7, #32
 8005f20:	46bd      	mov	sp, r7
 8005f22:	bd80      	pop	{r7, pc}
 8005f24:	20001044 	.word	0x20001044
 8005f28:	20001058 	.word	0x20001058

08005f2c <vTaskMissedYield>:
 8005f2c:	b480      	push	{r7}
 8005f2e:	af00      	add	r7, sp, #0
 8005f30:	4b03      	ldr	r3, [pc, #12]	@ (8005f40 <vTaskMissedYield+0x14>)
 8005f32:	2201      	movs	r2, #1
 8005f34:	601a      	str	r2, [r3, #0]
 8005f36:	bf00      	nop
 8005f38:	46bd      	mov	sp, r7
 8005f3a:	bc80      	pop	{r7}
 8005f3c:	4770      	bx	lr
 8005f3e:	bf00      	nop
 8005f40:	20001054 	.word	0x20001054

08005f44 <prvIdleTask>:
 8005f44:	b580      	push	{r7, lr}
 8005f46:	b082      	sub	sp, #8
 8005f48:	af00      	add	r7, sp, #0
 8005f4a:	6078      	str	r0, [r7, #4]
 8005f4c:	f000 f852 	bl	8005ff4 <prvCheckTasksWaitingTermination>
 8005f50:	4b06      	ldr	r3, [pc, #24]	@ (8005f6c <prvIdleTask+0x28>)
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	2b01      	cmp	r3, #1
 8005f56:	d9f9      	bls.n	8005f4c <prvIdleTask+0x8>
 8005f58:	4b05      	ldr	r3, [pc, #20]	@ (8005f70 <prvIdleTask+0x2c>)
 8005f5a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005f5e:	601a      	str	r2, [r3, #0]
 8005f60:	f3bf 8f4f 	dsb	sy
 8005f64:	f3bf 8f6f 	isb	sy
 8005f68:	e7f0      	b.n	8005f4c <prvIdleTask+0x8>
 8005f6a:	bf00      	nop
 8005f6c:	20000b70 	.word	0x20000b70
 8005f70:	e000ed04 	.word	0xe000ed04

08005f74 <prvInitialiseTaskLists>:
 8005f74:	b580      	push	{r7, lr}
 8005f76:	b082      	sub	sp, #8
 8005f78:	af00      	add	r7, sp, #0
 8005f7a:	2300      	movs	r3, #0
 8005f7c:	607b      	str	r3, [r7, #4]
 8005f7e:	e00c      	b.n	8005f9a <prvInitialiseTaskLists+0x26>
 8005f80:	687a      	ldr	r2, [r7, #4]
 8005f82:	4613      	mov	r3, r2
 8005f84:	009b      	lsls	r3, r3, #2
 8005f86:	4413      	add	r3, r2
 8005f88:	009b      	lsls	r3, r3, #2
 8005f8a:	4a12      	ldr	r2, [pc, #72]	@ (8005fd4 <prvInitialiseTaskLists+0x60>)
 8005f8c:	4413      	add	r3, r2
 8005f8e:	4618      	mov	r0, r3
 8005f90:	f7fe fc6e 	bl	8004870 <vListInitialise>
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	3301      	adds	r3, #1
 8005f98:	607b      	str	r3, [r7, #4]
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	2b37      	cmp	r3, #55	@ 0x37
 8005f9e:	d9ef      	bls.n	8005f80 <prvInitialiseTaskLists+0xc>
 8005fa0:	480d      	ldr	r0, [pc, #52]	@ (8005fd8 <prvInitialiseTaskLists+0x64>)
 8005fa2:	f7fe fc65 	bl	8004870 <vListInitialise>
 8005fa6:	480d      	ldr	r0, [pc, #52]	@ (8005fdc <prvInitialiseTaskLists+0x68>)
 8005fa8:	f7fe fc62 	bl	8004870 <vListInitialise>
 8005fac:	480c      	ldr	r0, [pc, #48]	@ (8005fe0 <prvInitialiseTaskLists+0x6c>)
 8005fae:	f7fe fc5f 	bl	8004870 <vListInitialise>
 8005fb2:	480c      	ldr	r0, [pc, #48]	@ (8005fe4 <prvInitialiseTaskLists+0x70>)
 8005fb4:	f7fe fc5c 	bl	8004870 <vListInitialise>
 8005fb8:	480b      	ldr	r0, [pc, #44]	@ (8005fe8 <prvInitialiseTaskLists+0x74>)
 8005fba:	f7fe fc59 	bl	8004870 <vListInitialise>
 8005fbe:	4b0b      	ldr	r3, [pc, #44]	@ (8005fec <prvInitialiseTaskLists+0x78>)
 8005fc0:	4a05      	ldr	r2, [pc, #20]	@ (8005fd8 <prvInitialiseTaskLists+0x64>)
 8005fc2:	601a      	str	r2, [r3, #0]
 8005fc4:	4b0a      	ldr	r3, [pc, #40]	@ (8005ff0 <prvInitialiseTaskLists+0x7c>)
 8005fc6:	4a05      	ldr	r2, [pc, #20]	@ (8005fdc <prvInitialiseTaskLists+0x68>)
 8005fc8:	601a      	str	r2, [r3, #0]
 8005fca:	bf00      	nop
 8005fcc:	3708      	adds	r7, #8
 8005fce:	46bd      	mov	sp, r7
 8005fd0:	bd80      	pop	{r7, pc}
 8005fd2:	bf00      	nop
 8005fd4:	20000b70 	.word	0x20000b70
 8005fd8:	20000fd0 	.word	0x20000fd0
 8005fdc:	20000fe4 	.word	0x20000fe4
 8005fe0:	20001000 	.word	0x20001000
 8005fe4:	20001014 	.word	0x20001014
 8005fe8:	2000102c 	.word	0x2000102c
 8005fec:	20000ff8 	.word	0x20000ff8
 8005ff0:	20000ffc 	.word	0x20000ffc

08005ff4 <prvCheckTasksWaitingTermination>:
 8005ff4:	b580      	push	{r7, lr}
 8005ff6:	b082      	sub	sp, #8
 8005ff8:	af00      	add	r7, sp, #0
 8005ffa:	e019      	b.n	8006030 <prvCheckTasksWaitingTermination+0x3c>
 8005ffc:	f000 fda6 	bl	8006b4c <vPortEnterCritical>
 8006000:	4b10      	ldr	r3, [pc, #64]	@ (8006044 <prvCheckTasksWaitingTermination+0x50>)
 8006002:	68db      	ldr	r3, [r3, #12]
 8006004:	68db      	ldr	r3, [r3, #12]
 8006006:	607b      	str	r3, [r7, #4]
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	3304      	adds	r3, #4
 800600c:	4618      	mov	r0, r3
 800600e:	f7fe fcb5 	bl	800497c <uxListRemove>
 8006012:	4b0d      	ldr	r3, [pc, #52]	@ (8006048 <prvCheckTasksWaitingTermination+0x54>)
 8006014:	681b      	ldr	r3, [r3, #0]
 8006016:	3b01      	subs	r3, #1
 8006018:	4a0b      	ldr	r2, [pc, #44]	@ (8006048 <prvCheckTasksWaitingTermination+0x54>)
 800601a:	6013      	str	r3, [r2, #0]
 800601c:	4b0b      	ldr	r3, [pc, #44]	@ (800604c <prvCheckTasksWaitingTermination+0x58>)
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	3b01      	subs	r3, #1
 8006022:	4a0a      	ldr	r2, [pc, #40]	@ (800604c <prvCheckTasksWaitingTermination+0x58>)
 8006024:	6013      	str	r3, [r2, #0]
 8006026:	f000 fdc1 	bl	8006bac <vPortExitCritical>
 800602a:	6878      	ldr	r0, [r7, #4]
 800602c:	f000 f810 	bl	8006050 <prvDeleteTCB>
 8006030:	4b06      	ldr	r3, [pc, #24]	@ (800604c <prvCheckTasksWaitingTermination+0x58>)
 8006032:	681b      	ldr	r3, [r3, #0]
 8006034:	2b00      	cmp	r3, #0
 8006036:	d1e1      	bne.n	8005ffc <prvCheckTasksWaitingTermination+0x8>
 8006038:	bf00      	nop
 800603a:	bf00      	nop
 800603c:	3708      	adds	r7, #8
 800603e:	46bd      	mov	sp, r7
 8006040:	bd80      	pop	{r7, pc}
 8006042:	bf00      	nop
 8006044:	20001014 	.word	0x20001014
 8006048:	20001040 	.word	0x20001040
 800604c:	20001028 	.word	0x20001028

08006050 <prvDeleteTCB>:
 8006050:	b580      	push	{r7, lr}
 8006052:	b084      	sub	sp, #16
 8006054:	af00      	add	r7, sp, #0
 8006056:	6078      	str	r0, [r7, #4]
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	3354      	adds	r3, #84	@ 0x54
 800605c:	4618      	mov	r0, r3
 800605e:	f001 f86b 	bl	8007138 <_reclaim_reent>
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8006068:	2b00      	cmp	r3, #0
 800606a:	d108      	bne.n	800607e <prvDeleteTCB+0x2e>
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006070:	4618      	mov	r0, r3
 8006072:	f000 ff3b 	bl	8006eec <vPortFree>
 8006076:	6878      	ldr	r0, [r7, #4]
 8006078:	f000 ff38 	bl	8006eec <vPortFree>
 800607c:	e019      	b.n	80060b2 <prvDeleteTCB+0x62>
 800607e:	687b      	ldr	r3, [r7, #4]
 8006080:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8006084:	2b01      	cmp	r3, #1
 8006086:	d103      	bne.n	8006090 <prvDeleteTCB+0x40>
 8006088:	6878      	ldr	r0, [r7, #4]
 800608a:	f000 ff2f 	bl	8006eec <vPortFree>
 800608e:	e010      	b.n	80060b2 <prvDeleteTCB+0x62>
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8006096:	2b02      	cmp	r3, #2
 8006098:	d00b      	beq.n	80060b2 <prvDeleteTCB+0x62>
 800609a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800609e:	f383 8811 	msr	BASEPRI, r3
 80060a2:	f3bf 8f6f 	isb	sy
 80060a6:	f3bf 8f4f 	dsb	sy
 80060aa:	60fb      	str	r3, [r7, #12]
 80060ac:	bf00      	nop
 80060ae:	bf00      	nop
 80060b0:	e7fd      	b.n	80060ae <prvDeleteTCB+0x5e>
 80060b2:	bf00      	nop
 80060b4:	3710      	adds	r7, #16
 80060b6:	46bd      	mov	sp, r7
 80060b8:	bd80      	pop	{r7, pc}
	...

080060bc <prvResetNextTaskUnblockTime>:
 80060bc:	b480      	push	{r7}
 80060be:	b083      	sub	sp, #12
 80060c0:	af00      	add	r7, sp, #0
 80060c2:	4b0c      	ldr	r3, [pc, #48]	@ (80060f4 <prvResetNextTaskUnblockTime+0x38>)
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	681b      	ldr	r3, [r3, #0]
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	d104      	bne.n	80060d6 <prvResetNextTaskUnblockTime+0x1a>
 80060cc:	4b0a      	ldr	r3, [pc, #40]	@ (80060f8 <prvResetNextTaskUnblockTime+0x3c>)
 80060ce:	f04f 32ff 	mov.w	r2, #4294967295
 80060d2:	601a      	str	r2, [r3, #0]
 80060d4:	e008      	b.n	80060e8 <prvResetNextTaskUnblockTime+0x2c>
 80060d6:	4b07      	ldr	r3, [pc, #28]	@ (80060f4 <prvResetNextTaskUnblockTime+0x38>)
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	68db      	ldr	r3, [r3, #12]
 80060dc:	68db      	ldr	r3, [r3, #12]
 80060de:	607b      	str	r3, [r7, #4]
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	685b      	ldr	r3, [r3, #4]
 80060e4:	4a04      	ldr	r2, [pc, #16]	@ (80060f8 <prvResetNextTaskUnblockTime+0x3c>)
 80060e6:	6013      	str	r3, [r2, #0]
 80060e8:	bf00      	nop
 80060ea:	370c      	adds	r7, #12
 80060ec:	46bd      	mov	sp, r7
 80060ee:	bc80      	pop	{r7}
 80060f0:	4770      	bx	lr
 80060f2:	bf00      	nop
 80060f4:	20000ff8 	.word	0x20000ff8
 80060f8:	20001060 	.word	0x20001060

080060fc <xTaskGetSchedulerState>:
 80060fc:	b480      	push	{r7}
 80060fe:	b083      	sub	sp, #12
 8006100:	af00      	add	r7, sp, #0
 8006102:	4b0b      	ldr	r3, [pc, #44]	@ (8006130 <xTaskGetSchedulerState+0x34>)
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	2b00      	cmp	r3, #0
 8006108:	d102      	bne.n	8006110 <xTaskGetSchedulerState+0x14>
 800610a:	2301      	movs	r3, #1
 800610c:	607b      	str	r3, [r7, #4]
 800610e:	e008      	b.n	8006122 <xTaskGetSchedulerState+0x26>
 8006110:	4b08      	ldr	r3, [pc, #32]	@ (8006134 <xTaskGetSchedulerState+0x38>)
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	2b00      	cmp	r3, #0
 8006116:	d102      	bne.n	800611e <xTaskGetSchedulerState+0x22>
 8006118:	2302      	movs	r3, #2
 800611a:	607b      	str	r3, [r7, #4]
 800611c:	e001      	b.n	8006122 <xTaskGetSchedulerState+0x26>
 800611e:	2300      	movs	r3, #0
 8006120:	607b      	str	r3, [r7, #4]
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	4618      	mov	r0, r3
 8006126:	370c      	adds	r7, #12
 8006128:	46bd      	mov	sp, r7
 800612a:	bc80      	pop	{r7}
 800612c:	4770      	bx	lr
 800612e:	bf00      	nop
 8006130:	2000104c 	.word	0x2000104c
 8006134:	20001068 	.word	0x20001068

08006138 <xTaskPriorityDisinherit>:
 8006138:	b580      	push	{r7, lr}
 800613a:	b086      	sub	sp, #24
 800613c:	af00      	add	r7, sp, #0
 800613e:	6078      	str	r0, [r7, #4]
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	613b      	str	r3, [r7, #16]
 8006144:	2300      	movs	r3, #0
 8006146:	617b      	str	r3, [r7, #20]
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	2b00      	cmp	r3, #0
 800614c:	d058      	beq.n	8006200 <xTaskPriorityDisinherit+0xc8>
 800614e:	4b2f      	ldr	r3, [pc, #188]	@ (800620c <xTaskPriorityDisinherit+0xd4>)
 8006150:	681b      	ldr	r3, [r3, #0]
 8006152:	693a      	ldr	r2, [r7, #16]
 8006154:	429a      	cmp	r2, r3
 8006156:	d00b      	beq.n	8006170 <xTaskPriorityDisinherit+0x38>
 8006158:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800615c:	f383 8811 	msr	BASEPRI, r3
 8006160:	f3bf 8f6f 	isb	sy
 8006164:	f3bf 8f4f 	dsb	sy
 8006168:	60fb      	str	r3, [r7, #12]
 800616a:	bf00      	nop
 800616c:	bf00      	nop
 800616e:	e7fd      	b.n	800616c <xTaskPriorityDisinherit+0x34>
 8006170:	693b      	ldr	r3, [r7, #16]
 8006172:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006174:	2b00      	cmp	r3, #0
 8006176:	d10b      	bne.n	8006190 <xTaskPriorityDisinherit+0x58>
 8006178:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800617c:	f383 8811 	msr	BASEPRI, r3
 8006180:	f3bf 8f6f 	isb	sy
 8006184:	f3bf 8f4f 	dsb	sy
 8006188:	60bb      	str	r3, [r7, #8]
 800618a:	bf00      	nop
 800618c:	bf00      	nop
 800618e:	e7fd      	b.n	800618c <xTaskPriorityDisinherit+0x54>
 8006190:	693b      	ldr	r3, [r7, #16]
 8006192:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006194:	1e5a      	subs	r2, r3, #1
 8006196:	693b      	ldr	r3, [r7, #16]
 8006198:	651a      	str	r2, [r3, #80]	@ 0x50
 800619a:	693b      	ldr	r3, [r7, #16]
 800619c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800619e:	693b      	ldr	r3, [r7, #16]
 80061a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80061a2:	429a      	cmp	r2, r3
 80061a4:	d02c      	beq.n	8006200 <xTaskPriorityDisinherit+0xc8>
 80061a6:	693b      	ldr	r3, [r7, #16]
 80061a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d128      	bne.n	8006200 <xTaskPriorityDisinherit+0xc8>
 80061ae:	693b      	ldr	r3, [r7, #16]
 80061b0:	3304      	adds	r3, #4
 80061b2:	4618      	mov	r0, r3
 80061b4:	f7fe fbe2 	bl	800497c <uxListRemove>
 80061b8:	693b      	ldr	r3, [r7, #16]
 80061ba:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80061bc:	693b      	ldr	r3, [r7, #16]
 80061be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80061c0:	693b      	ldr	r3, [r7, #16]
 80061c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80061c4:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80061c8:	693b      	ldr	r3, [r7, #16]
 80061ca:	619a      	str	r2, [r3, #24]
 80061cc:	693b      	ldr	r3, [r7, #16]
 80061ce:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80061d0:	4b0f      	ldr	r3, [pc, #60]	@ (8006210 <xTaskPriorityDisinherit+0xd8>)
 80061d2:	681b      	ldr	r3, [r3, #0]
 80061d4:	429a      	cmp	r2, r3
 80061d6:	d903      	bls.n	80061e0 <xTaskPriorityDisinherit+0xa8>
 80061d8:	693b      	ldr	r3, [r7, #16]
 80061da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80061dc:	4a0c      	ldr	r2, [pc, #48]	@ (8006210 <xTaskPriorityDisinherit+0xd8>)
 80061de:	6013      	str	r3, [r2, #0]
 80061e0:	693b      	ldr	r3, [r7, #16]
 80061e2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80061e4:	4613      	mov	r3, r2
 80061e6:	009b      	lsls	r3, r3, #2
 80061e8:	4413      	add	r3, r2
 80061ea:	009b      	lsls	r3, r3, #2
 80061ec:	4a09      	ldr	r2, [pc, #36]	@ (8006214 <xTaskPriorityDisinherit+0xdc>)
 80061ee:	441a      	add	r2, r3
 80061f0:	693b      	ldr	r3, [r7, #16]
 80061f2:	3304      	adds	r3, #4
 80061f4:	4619      	mov	r1, r3
 80061f6:	4610      	mov	r0, r2
 80061f8:	f7fe fb65 	bl	80048c6 <vListInsertEnd>
 80061fc:	2301      	movs	r3, #1
 80061fe:	617b      	str	r3, [r7, #20]
 8006200:	697b      	ldr	r3, [r7, #20]
 8006202:	4618      	mov	r0, r3
 8006204:	3718      	adds	r7, #24
 8006206:	46bd      	mov	sp, r7
 8006208:	bd80      	pop	{r7, pc}
 800620a:	bf00      	nop
 800620c:	20000b6c 	.word	0x20000b6c
 8006210:	20001048 	.word	0x20001048
 8006214:	20000b70 	.word	0x20000b70

08006218 <prvAddCurrentTaskToDelayedList>:
 8006218:	b580      	push	{r7, lr}
 800621a:	b084      	sub	sp, #16
 800621c:	af00      	add	r7, sp, #0
 800621e:	6078      	str	r0, [r7, #4]
 8006220:	6039      	str	r1, [r7, #0]
 8006222:	4b21      	ldr	r3, [pc, #132]	@ (80062a8 <prvAddCurrentTaskToDelayedList+0x90>)
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	60fb      	str	r3, [r7, #12]
 8006228:	4b20      	ldr	r3, [pc, #128]	@ (80062ac <prvAddCurrentTaskToDelayedList+0x94>)
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	3304      	adds	r3, #4
 800622e:	4618      	mov	r0, r3
 8006230:	f7fe fba4 	bl	800497c <uxListRemove>
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	f1b3 3fff 	cmp.w	r3, #4294967295
 800623a:	d10a      	bne.n	8006252 <prvAddCurrentTaskToDelayedList+0x3a>
 800623c:	683b      	ldr	r3, [r7, #0]
 800623e:	2b00      	cmp	r3, #0
 8006240:	d007      	beq.n	8006252 <prvAddCurrentTaskToDelayedList+0x3a>
 8006242:	4b1a      	ldr	r3, [pc, #104]	@ (80062ac <prvAddCurrentTaskToDelayedList+0x94>)
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	3304      	adds	r3, #4
 8006248:	4619      	mov	r1, r3
 800624a:	4819      	ldr	r0, [pc, #100]	@ (80062b0 <prvAddCurrentTaskToDelayedList+0x98>)
 800624c:	f7fe fb3b 	bl	80048c6 <vListInsertEnd>
 8006250:	e026      	b.n	80062a0 <prvAddCurrentTaskToDelayedList+0x88>
 8006252:	68fa      	ldr	r2, [r7, #12]
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	4413      	add	r3, r2
 8006258:	60bb      	str	r3, [r7, #8]
 800625a:	4b14      	ldr	r3, [pc, #80]	@ (80062ac <prvAddCurrentTaskToDelayedList+0x94>)
 800625c:	681b      	ldr	r3, [r3, #0]
 800625e:	68ba      	ldr	r2, [r7, #8]
 8006260:	605a      	str	r2, [r3, #4]
 8006262:	68ba      	ldr	r2, [r7, #8]
 8006264:	68fb      	ldr	r3, [r7, #12]
 8006266:	429a      	cmp	r2, r3
 8006268:	d209      	bcs.n	800627e <prvAddCurrentTaskToDelayedList+0x66>
 800626a:	4b12      	ldr	r3, [pc, #72]	@ (80062b4 <prvAddCurrentTaskToDelayedList+0x9c>)
 800626c:	681a      	ldr	r2, [r3, #0]
 800626e:	4b0f      	ldr	r3, [pc, #60]	@ (80062ac <prvAddCurrentTaskToDelayedList+0x94>)
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	3304      	adds	r3, #4
 8006274:	4619      	mov	r1, r3
 8006276:	4610      	mov	r0, r2
 8006278:	f7fe fb48 	bl	800490c <vListInsert>
 800627c:	e010      	b.n	80062a0 <prvAddCurrentTaskToDelayedList+0x88>
 800627e:	4b0e      	ldr	r3, [pc, #56]	@ (80062b8 <prvAddCurrentTaskToDelayedList+0xa0>)
 8006280:	681a      	ldr	r2, [r3, #0]
 8006282:	4b0a      	ldr	r3, [pc, #40]	@ (80062ac <prvAddCurrentTaskToDelayedList+0x94>)
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	3304      	adds	r3, #4
 8006288:	4619      	mov	r1, r3
 800628a:	4610      	mov	r0, r2
 800628c:	f7fe fb3e 	bl	800490c <vListInsert>
 8006290:	4b0a      	ldr	r3, [pc, #40]	@ (80062bc <prvAddCurrentTaskToDelayedList+0xa4>)
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	68ba      	ldr	r2, [r7, #8]
 8006296:	429a      	cmp	r2, r3
 8006298:	d202      	bcs.n	80062a0 <prvAddCurrentTaskToDelayedList+0x88>
 800629a:	4a08      	ldr	r2, [pc, #32]	@ (80062bc <prvAddCurrentTaskToDelayedList+0xa4>)
 800629c:	68bb      	ldr	r3, [r7, #8]
 800629e:	6013      	str	r3, [r2, #0]
 80062a0:	bf00      	nop
 80062a2:	3710      	adds	r7, #16
 80062a4:	46bd      	mov	sp, r7
 80062a6:	bd80      	pop	{r7, pc}
 80062a8:	20001044 	.word	0x20001044
 80062ac:	20000b6c 	.word	0x20000b6c
 80062b0:	2000102c 	.word	0x2000102c
 80062b4:	20000ffc 	.word	0x20000ffc
 80062b8:	20000ff8 	.word	0x20000ff8
 80062bc:	20001060 	.word	0x20001060

080062c0 <xTimerCreateTimerTask>:
 80062c0:	b580      	push	{r7, lr}
 80062c2:	b08a      	sub	sp, #40	@ 0x28
 80062c4:	af04      	add	r7, sp, #16
 80062c6:	2300      	movs	r3, #0
 80062c8:	617b      	str	r3, [r7, #20]
 80062ca:	f000 fb11 	bl	80068f0 <prvCheckForValidListAndQueue>
 80062ce:	4b1d      	ldr	r3, [pc, #116]	@ (8006344 <xTimerCreateTimerTask+0x84>)
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d021      	beq.n	800631a <xTimerCreateTimerTask+0x5a>
 80062d6:	2300      	movs	r3, #0
 80062d8:	60fb      	str	r3, [r7, #12]
 80062da:	2300      	movs	r3, #0
 80062dc:	60bb      	str	r3, [r7, #8]
 80062de:	1d3a      	adds	r2, r7, #4
 80062e0:	f107 0108 	add.w	r1, r7, #8
 80062e4:	f107 030c 	add.w	r3, r7, #12
 80062e8:	4618      	mov	r0, r3
 80062ea:	f7fe faa7 	bl	800483c <vApplicationGetTimerTaskMemory>
 80062ee:	6879      	ldr	r1, [r7, #4]
 80062f0:	68bb      	ldr	r3, [r7, #8]
 80062f2:	68fa      	ldr	r2, [r7, #12]
 80062f4:	9202      	str	r2, [sp, #8]
 80062f6:	9301      	str	r3, [sp, #4]
 80062f8:	2302      	movs	r3, #2
 80062fa:	9300      	str	r3, [sp, #0]
 80062fc:	2300      	movs	r3, #0
 80062fe:	460a      	mov	r2, r1
 8006300:	4911      	ldr	r1, [pc, #68]	@ (8006348 <xTimerCreateTimerTask+0x88>)
 8006302:	4812      	ldr	r0, [pc, #72]	@ (800634c <xTimerCreateTimerTask+0x8c>)
 8006304:	f7ff f85c 	bl	80053c0 <xTaskCreateStatic>
 8006308:	4603      	mov	r3, r0
 800630a:	4a11      	ldr	r2, [pc, #68]	@ (8006350 <xTimerCreateTimerTask+0x90>)
 800630c:	6013      	str	r3, [r2, #0]
 800630e:	4b10      	ldr	r3, [pc, #64]	@ (8006350 <xTimerCreateTimerTask+0x90>)
 8006310:	681b      	ldr	r3, [r3, #0]
 8006312:	2b00      	cmp	r3, #0
 8006314:	d001      	beq.n	800631a <xTimerCreateTimerTask+0x5a>
 8006316:	2301      	movs	r3, #1
 8006318:	617b      	str	r3, [r7, #20]
 800631a:	697b      	ldr	r3, [r7, #20]
 800631c:	2b00      	cmp	r3, #0
 800631e:	d10b      	bne.n	8006338 <xTimerCreateTimerTask+0x78>
 8006320:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006324:	f383 8811 	msr	BASEPRI, r3
 8006328:	f3bf 8f6f 	isb	sy
 800632c:	f3bf 8f4f 	dsb	sy
 8006330:	613b      	str	r3, [r7, #16]
 8006332:	bf00      	nop
 8006334:	bf00      	nop
 8006336:	e7fd      	b.n	8006334 <xTimerCreateTimerTask+0x74>
 8006338:	697b      	ldr	r3, [r7, #20]
 800633a:	4618      	mov	r0, r3
 800633c:	3718      	adds	r7, #24
 800633e:	46bd      	mov	sp, r7
 8006340:	bd80      	pop	{r7, pc}
 8006342:	bf00      	nop
 8006344:	2000109c 	.word	0x2000109c
 8006348:	0800733c 	.word	0x0800733c
 800634c:	0800648d 	.word	0x0800648d
 8006350:	200010a0 	.word	0x200010a0

08006354 <xTimerGenericCommand>:
 8006354:	b580      	push	{r7, lr}
 8006356:	b08a      	sub	sp, #40	@ 0x28
 8006358:	af00      	add	r7, sp, #0
 800635a:	60f8      	str	r0, [r7, #12]
 800635c:	60b9      	str	r1, [r7, #8]
 800635e:	607a      	str	r2, [r7, #4]
 8006360:	603b      	str	r3, [r7, #0]
 8006362:	2300      	movs	r3, #0
 8006364:	627b      	str	r3, [r7, #36]	@ 0x24
 8006366:	68fb      	ldr	r3, [r7, #12]
 8006368:	2b00      	cmp	r3, #0
 800636a:	d10b      	bne.n	8006384 <xTimerGenericCommand+0x30>
 800636c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006370:	f383 8811 	msr	BASEPRI, r3
 8006374:	f3bf 8f6f 	isb	sy
 8006378:	f3bf 8f4f 	dsb	sy
 800637c:	623b      	str	r3, [r7, #32]
 800637e:	bf00      	nop
 8006380:	bf00      	nop
 8006382:	e7fd      	b.n	8006380 <xTimerGenericCommand+0x2c>
 8006384:	4b19      	ldr	r3, [pc, #100]	@ (80063ec <xTimerGenericCommand+0x98>)
 8006386:	681b      	ldr	r3, [r3, #0]
 8006388:	2b00      	cmp	r3, #0
 800638a:	d02a      	beq.n	80063e2 <xTimerGenericCommand+0x8e>
 800638c:	68bb      	ldr	r3, [r7, #8]
 800638e:	613b      	str	r3, [r7, #16]
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	617b      	str	r3, [r7, #20]
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	61bb      	str	r3, [r7, #24]
 8006398:	68bb      	ldr	r3, [r7, #8]
 800639a:	2b05      	cmp	r3, #5
 800639c:	dc18      	bgt.n	80063d0 <xTimerGenericCommand+0x7c>
 800639e:	f7ff fead 	bl	80060fc <xTaskGetSchedulerState>
 80063a2:	4603      	mov	r3, r0
 80063a4:	2b02      	cmp	r3, #2
 80063a6:	d109      	bne.n	80063bc <xTimerGenericCommand+0x68>
 80063a8:	4b10      	ldr	r3, [pc, #64]	@ (80063ec <xTimerGenericCommand+0x98>)
 80063aa:	6818      	ldr	r0, [r3, #0]
 80063ac:	f107 0110 	add.w	r1, r7, #16
 80063b0:	2300      	movs	r3, #0
 80063b2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80063b4:	f7fe fc16 	bl	8004be4 <xQueueGenericSend>
 80063b8:	6278      	str	r0, [r7, #36]	@ 0x24
 80063ba:	e012      	b.n	80063e2 <xTimerGenericCommand+0x8e>
 80063bc:	4b0b      	ldr	r3, [pc, #44]	@ (80063ec <xTimerGenericCommand+0x98>)
 80063be:	6818      	ldr	r0, [r3, #0]
 80063c0:	f107 0110 	add.w	r1, r7, #16
 80063c4:	2300      	movs	r3, #0
 80063c6:	2200      	movs	r2, #0
 80063c8:	f7fe fc0c 	bl	8004be4 <xQueueGenericSend>
 80063cc:	6278      	str	r0, [r7, #36]	@ 0x24
 80063ce:	e008      	b.n	80063e2 <xTimerGenericCommand+0x8e>
 80063d0:	4b06      	ldr	r3, [pc, #24]	@ (80063ec <xTimerGenericCommand+0x98>)
 80063d2:	6818      	ldr	r0, [r3, #0]
 80063d4:	f107 0110 	add.w	r1, r7, #16
 80063d8:	2300      	movs	r3, #0
 80063da:	683a      	ldr	r2, [r7, #0]
 80063dc:	f7fe fd04 	bl	8004de8 <xQueueGenericSendFromISR>
 80063e0:	6278      	str	r0, [r7, #36]	@ 0x24
 80063e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063e4:	4618      	mov	r0, r3
 80063e6:	3728      	adds	r7, #40	@ 0x28
 80063e8:	46bd      	mov	sp, r7
 80063ea:	bd80      	pop	{r7, pc}
 80063ec:	2000109c 	.word	0x2000109c

080063f0 <prvProcessExpiredTimer>:
 80063f0:	b580      	push	{r7, lr}
 80063f2:	b088      	sub	sp, #32
 80063f4:	af02      	add	r7, sp, #8
 80063f6:	6078      	str	r0, [r7, #4]
 80063f8:	6039      	str	r1, [r7, #0]
 80063fa:	4b23      	ldr	r3, [pc, #140]	@ (8006488 <prvProcessExpiredTimer+0x98>)
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	68db      	ldr	r3, [r3, #12]
 8006400:	68db      	ldr	r3, [r3, #12]
 8006402:	617b      	str	r3, [r7, #20]
 8006404:	697b      	ldr	r3, [r7, #20]
 8006406:	3304      	adds	r3, #4
 8006408:	4618      	mov	r0, r3
 800640a:	f7fe fab7 	bl	800497c <uxListRemove>
 800640e:	697b      	ldr	r3, [r7, #20]
 8006410:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006414:	f003 0304 	and.w	r3, r3, #4
 8006418:	2b00      	cmp	r3, #0
 800641a:	d023      	beq.n	8006464 <prvProcessExpiredTimer+0x74>
 800641c:	697b      	ldr	r3, [r7, #20]
 800641e:	699a      	ldr	r2, [r3, #24]
 8006420:	687b      	ldr	r3, [r7, #4]
 8006422:	18d1      	adds	r1, r2, r3
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	683a      	ldr	r2, [r7, #0]
 8006428:	6978      	ldr	r0, [r7, #20]
 800642a:	f000 f8d3 	bl	80065d4 <prvInsertTimerInActiveList>
 800642e:	4603      	mov	r3, r0
 8006430:	2b00      	cmp	r3, #0
 8006432:	d020      	beq.n	8006476 <prvProcessExpiredTimer+0x86>
 8006434:	2300      	movs	r3, #0
 8006436:	9300      	str	r3, [sp, #0]
 8006438:	2300      	movs	r3, #0
 800643a:	687a      	ldr	r2, [r7, #4]
 800643c:	2100      	movs	r1, #0
 800643e:	6978      	ldr	r0, [r7, #20]
 8006440:	f7ff ff88 	bl	8006354 <xTimerGenericCommand>
 8006444:	6138      	str	r0, [r7, #16]
 8006446:	693b      	ldr	r3, [r7, #16]
 8006448:	2b00      	cmp	r3, #0
 800644a:	d114      	bne.n	8006476 <prvProcessExpiredTimer+0x86>
 800644c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006450:	f383 8811 	msr	BASEPRI, r3
 8006454:	f3bf 8f6f 	isb	sy
 8006458:	f3bf 8f4f 	dsb	sy
 800645c:	60fb      	str	r3, [r7, #12]
 800645e:	bf00      	nop
 8006460:	bf00      	nop
 8006462:	e7fd      	b.n	8006460 <prvProcessExpiredTimer+0x70>
 8006464:	697b      	ldr	r3, [r7, #20]
 8006466:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800646a:	f023 0301 	bic.w	r3, r3, #1
 800646e:	b2da      	uxtb	r2, r3
 8006470:	697b      	ldr	r3, [r7, #20]
 8006472:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006476:	697b      	ldr	r3, [r7, #20]
 8006478:	6a1b      	ldr	r3, [r3, #32]
 800647a:	6978      	ldr	r0, [r7, #20]
 800647c:	4798      	blx	r3
 800647e:	bf00      	nop
 8006480:	3718      	adds	r7, #24
 8006482:	46bd      	mov	sp, r7
 8006484:	bd80      	pop	{r7, pc}
 8006486:	bf00      	nop
 8006488:	20001094 	.word	0x20001094

0800648c <prvTimerTask>:
 800648c:	b580      	push	{r7, lr}
 800648e:	b084      	sub	sp, #16
 8006490:	af00      	add	r7, sp, #0
 8006492:	6078      	str	r0, [r7, #4]
 8006494:	f107 0308 	add.w	r3, r7, #8
 8006498:	4618      	mov	r0, r3
 800649a:	f000 f859 	bl	8006550 <prvGetNextExpireTime>
 800649e:	60f8      	str	r0, [r7, #12]
 80064a0:	68bb      	ldr	r3, [r7, #8]
 80064a2:	4619      	mov	r1, r3
 80064a4:	68f8      	ldr	r0, [r7, #12]
 80064a6:	f000 f805 	bl	80064b4 <prvProcessTimerOrBlockTask>
 80064aa:	f000 f8d5 	bl	8006658 <prvProcessReceivedCommands>
 80064ae:	bf00      	nop
 80064b0:	e7f0      	b.n	8006494 <prvTimerTask+0x8>
	...

080064b4 <prvProcessTimerOrBlockTask>:
 80064b4:	b580      	push	{r7, lr}
 80064b6:	b084      	sub	sp, #16
 80064b8:	af00      	add	r7, sp, #0
 80064ba:	6078      	str	r0, [r7, #4]
 80064bc:	6039      	str	r1, [r7, #0]
 80064be:	f7ff fa2d 	bl	800591c <vTaskSuspendAll>
 80064c2:	f107 0308 	add.w	r3, r7, #8
 80064c6:	4618      	mov	r0, r3
 80064c8:	f000 f864 	bl	8006594 <prvSampleTimeNow>
 80064cc:	60f8      	str	r0, [r7, #12]
 80064ce:	68bb      	ldr	r3, [r7, #8]
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	d130      	bne.n	8006536 <prvProcessTimerOrBlockTask+0x82>
 80064d4:	683b      	ldr	r3, [r7, #0]
 80064d6:	2b00      	cmp	r3, #0
 80064d8:	d10a      	bne.n	80064f0 <prvProcessTimerOrBlockTask+0x3c>
 80064da:	687a      	ldr	r2, [r7, #4]
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	429a      	cmp	r2, r3
 80064e0:	d806      	bhi.n	80064f0 <prvProcessTimerOrBlockTask+0x3c>
 80064e2:	f7ff fa29 	bl	8005938 <xTaskResumeAll>
 80064e6:	68f9      	ldr	r1, [r7, #12]
 80064e8:	6878      	ldr	r0, [r7, #4]
 80064ea:	f7ff ff81 	bl	80063f0 <prvProcessExpiredTimer>
 80064ee:	e024      	b.n	800653a <prvProcessTimerOrBlockTask+0x86>
 80064f0:	683b      	ldr	r3, [r7, #0]
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d008      	beq.n	8006508 <prvProcessTimerOrBlockTask+0x54>
 80064f6:	4b13      	ldr	r3, [pc, #76]	@ (8006544 <prvProcessTimerOrBlockTask+0x90>)
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	681b      	ldr	r3, [r3, #0]
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d101      	bne.n	8006504 <prvProcessTimerOrBlockTask+0x50>
 8006500:	2301      	movs	r3, #1
 8006502:	e000      	b.n	8006506 <prvProcessTimerOrBlockTask+0x52>
 8006504:	2300      	movs	r3, #0
 8006506:	603b      	str	r3, [r7, #0]
 8006508:	4b0f      	ldr	r3, [pc, #60]	@ (8006548 <prvProcessTimerOrBlockTask+0x94>)
 800650a:	6818      	ldr	r0, [r3, #0]
 800650c:	687a      	ldr	r2, [r7, #4]
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	1ad3      	subs	r3, r2, r3
 8006512:	683a      	ldr	r2, [r7, #0]
 8006514:	4619      	mov	r1, r3
 8006516:	f7fe ff1f 	bl	8005358 <vQueueWaitForMessageRestricted>
 800651a:	f7ff fa0d 	bl	8005938 <xTaskResumeAll>
 800651e:	4603      	mov	r3, r0
 8006520:	2b00      	cmp	r3, #0
 8006522:	d10a      	bne.n	800653a <prvProcessTimerOrBlockTask+0x86>
 8006524:	4b09      	ldr	r3, [pc, #36]	@ (800654c <prvProcessTimerOrBlockTask+0x98>)
 8006526:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800652a:	601a      	str	r2, [r3, #0]
 800652c:	f3bf 8f4f 	dsb	sy
 8006530:	f3bf 8f6f 	isb	sy
 8006534:	e001      	b.n	800653a <prvProcessTimerOrBlockTask+0x86>
 8006536:	f7ff f9ff 	bl	8005938 <xTaskResumeAll>
 800653a:	bf00      	nop
 800653c:	3710      	adds	r7, #16
 800653e:	46bd      	mov	sp, r7
 8006540:	bd80      	pop	{r7, pc}
 8006542:	bf00      	nop
 8006544:	20001098 	.word	0x20001098
 8006548:	2000109c 	.word	0x2000109c
 800654c:	e000ed04 	.word	0xe000ed04

08006550 <prvGetNextExpireTime>:
 8006550:	b480      	push	{r7}
 8006552:	b085      	sub	sp, #20
 8006554:	af00      	add	r7, sp, #0
 8006556:	6078      	str	r0, [r7, #4]
 8006558:	4b0d      	ldr	r3, [pc, #52]	@ (8006590 <prvGetNextExpireTime+0x40>)
 800655a:	681b      	ldr	r3, [r3, #0]
 800655c:	681b      	ldr	r3, [r3, #0]
 800655e:	2b00      	cmp	r3, #0
 8006560:	d101      	bne.n	8006566 <prvGetNextExpireTime+0x16>
 8006562:	2201      	movs	r2, #1
 8006564:	e000      	b.n	8006568 <prvGetNextExpireTime+0x18>
 8006566:	2200      	movs	r2, #0
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	601a      	str	r2, [r3, #0]
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	681b      	ldr	r3, [r3, #0]
 8006570:	2b00      	cmp	r3, #0
 8006572:	d105      	bne.n	8006580 <prvGetNextExpireTime+0x30>
 8006574:	4b06      	ldr	r3, [pc, #24]	@ (8006590 <prvGetNextExpireTime+0x40>)
 8006576:	681b      	ldr	r3, [r3, #0]
 8006578:	68db      	ldr	r3, [r3, #12]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	60fb      	str	r3, [r7, #12]
 800657e:	e001      	b.n	8006584 <prvGetNextExpireTime+0x34>
 8006580:	2300      	movs	r3, #0
 8006582:	60fb      	str	r3, [r7, #12]
 8006584:	68fb      	ldr	r3, [r7, #12]
 8006586:	4618      	mov	r0, r3
 8006588:	3714      	adds	r7, #20
 800658a:	46bd      	mov	sp, r7
 800658c:	bc80      	pop	{r7}
 800658e:	4770      	bx	lr
 8006590:	20001094 	.word	0x20001094

08006594 <prvSampleTimeNow>:
 8006594:	b580      	push	{r7, lr}
 8006596:	b084      	sub	sp, #16
 8006598:	af00      	add	r7, sp, #0
 800659a:	6078      	str	r0, [r7, #4]
 800659c:	f7ff fa6a 	bl	8005a74 <xTaskGetTickCount>
 80065a0:	60f8      	str	r0, [r7, #12]
 80065a2:	4b0b      	ldr	r3, [pc, #44]	@ (80065d0 <prvSampleTimeNow+0x3c>)
 80065a4:	681b      	ldr	r3, [r3, #0]
 80065a6:	68fa      	ldr	r2, [r7, #12]
 80065a8:	429a      	cmp	r2, r3
 80065aa:	d205      	bcs.n	80065b8 <prvSampleTimeNow+0x24>
 80065ac:	f000 f93a 	bl	8006824 <prvSwitchTimerLists>
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	2201      	movs	r2, #1
 80065b4:	601a      	str	r2, [r3, #0]
 80065b6:	e002      	b.n	80065be <prvSampleTimeNow+0x2a>
 80065b8:	687b      	ldr	r3, [r7, #4]
 80065ba:	2200      	movs	r2, #0
 80065bc:	601a      	str	r2, [r3, #0]
 80065be:	4a04      	ldr	r2, [pc, #16]	@ (80065d0 <prvSampleTimeNow+0x3c>)
 80065c0:	68fb      	ldr	r3, [r7, #12]
 80065c2:	6013      	str	r3, [r2, #0]
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	4618      	mov	r0, r3
 80065c8:	3710      	adds	r7, #16
 80065ca:	46bd      	mov	sp, r7
 80065cc:	bd80      	pop	{r7, pc}
 80065ce:	bf00      	nop
 80065d0:	200010a4 	.word	0x200010a4

080065d4 <prvInsertTimerInActiveList>:
 80065d4:	b580      	push	{r7, lr}
 80065d6:	b086      	sub	sp, #24
 80065d8:	af00      	add	r7, sp, #0
 80065da:	60f8      	str	r0, [r7, #12]
 80065dc:	60b9      	str	r1, [r7, #8]
 80065de:	607a      	str	r2, [r7, #4]
 80065e0:	603b      	str	r3, [r7, #0]
 80065e2:	2300      	movs	r3, #0
 80065e4:	617b      	str	r3, [r7, #20]
 80065e6:	68fb      	ldr	r3, [r7, #12]
 80065e8:	68ba      	ldr	r2, [r7, #8]
 80065ea:	605a      	str	r2, [r3, #4]
 80065ec:	68fb      	ldr	r3, [r7, #12]
 80065ee:	68fa      	ldr	r2, [r7, #12]
 80065f0:	611a      	str	r2, [r3, #16]
 80065f2:	68ba      	ldr	r2, [r7, #8]
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	429a      	cmp	r2, r3
 80065f8:	d812      	bhi.n	8006620 <prvInsertTimerInActiveList+0x4c>
 80065fa:	687a      	ldr	r2, [r7, #4]
 80065fc:	683b      	ldr	r3, [r7, #0]
 80065fe:	1ad2      	subs	r2, r2, r3
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	699b      	ldr	r3, [r3, #24]
 8006604:	429a      	cmp	r2, r3
 8006606:	d302      	bcc.n	800660e <prvInsertTimerInActiveList+0x3a>
 8006608:	2301      	movs	r3, #1
 800660a:	617b      	str	r3, [r7, #20]
 800660c:	e01b      	b.n	8006646 <prvInsertTimerInActiveList+0x72>
 800660e:	4b10      	ldr	r3, [pc, #64]	@ (8006650 <prvInsertTimerInActiveList+0x7c>)
 8006610:	681a      	ldr	r2, [r3, #0]
 8006612:	68fb      	ldr	r3, [r7, #12]
 8006614:	3304      	adds	r3, #4
 8006616:	4619      	mov	r1, r3
 8006618:	4610      	mov	r0, r2
 800661a:	f7fe f977 	bl	800490c <vListInsert>
 800661e:	e012      	b.n	8006646 <prvInsertTimerInActiveList+0x72>
 8006620:	687a      	ldr	r2, [r7, #4]
 8006622:	683b      	ldr	r3, [r7, #0]
 8006624:	429a      	cmp	r2, r3
 8006626:	d206      	bcs.n	8006636 <prvInsertTimerInActiveList+0x62>
 8006628:	68ba      	ldr	r2, [r7, #8]
 800662a:	683b      	ldr	r3, [r7, #0]
 800662c:	429a      	cmp	r2, r3
 800662e:	d302      	bcc.n	8006636 <prvInsertTimerInActiveList+0x62>
 8006630:	2301      	movs	r3, #1
 8006632:	617b      	str	r3, [r7, #20]
 8006634:	e007      	b.n	8006646 <prvInsertTimerInActiveList+0x72>
 8006636:	4b07      	ldr	r3, [pc, #28]	@ (8006654 <prvInsertTimerInActiveList+0x80>)
 8006638:	681a      	ldr	r2, [r3, #0]
 800663a:	68fb      	ldr	r3, [r7, #12]
 800663c:	3304      	adds	r3, #4
 800663e:	4619      	mov	r1, r3
 8006640:	4610      	mov	r0, r2
 8006642:	f7fe f963 	bl	800490c <vListInsert>
 8006646:	697b      	ldr	r3, [r7, #20]
 8006648:	4618      	mov	r0, r3
 800664a:	3718      	adds	r7, #24
 800664c:	46bd      	mov	sp, r7
 800664e:	bd80      	pop	{r7, pc}
 8006650:	20001098 	.word	0x20001098
 8006654:	20001094 	.word	0x20001094

08006658 <prvProcessReceivedCommands>:
 8006658:	b580      	push	{r7, lr}
 800665a:	b08e      	sub	sp, #56	@ 0x38
 800665c:	af02      	add	r7, sp, #8
 800665e:	e0ce      	b.n	80067fe <prvProcessReceivedCommands+0x1a6>
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	2b00      	cmp	r3, #0
 8006664:	da19      	bge.n	800669a <prvProcessReceivedCommands+0x42>
 8006666:	1d3b      	adds	r3, r7, #4
 8006668:	3304      	adds	r3, #4
 800666a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800666c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800666e:	2b00      	cmp	r3, #0
 8006670:	d10b      	bne.n	800668a <prvProcessReceivedCommands+0x32>
 8006672:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006676:	f383 8811 	msr	BASEPRI, r3
 800667a:	f3bf 8f6f 	isb	sy
 800667e:	f3bf 8f4f 	dsb	sy
 8006682:	61fb      	str	r3, [r7, #28]
 8006684:	bf00      	nop
 8006686:	bf00      	nop
 8006688:	e7fd      	b.n	8006686 <prvProcessReceivedCommands+0x2e>
 800668a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006690:	6850      	ldr	r0, [r2, #4]
 8006692:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006694:	6892      	ldr	r2, [r2, #8]
 8006696:	4611      	mov	r1, r2
 8006698:	4798      	blx	r3
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	2b00      	cmp	r3, #0
 800669e:	f2c0 80ae 	blt.w	80067fe <prvProcessReceivedCommands+0x1a6>
 80066a2:	68fb      	ldr	r3, [r7, #12]
 80066a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80066a6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80066a8:	695b      	ldr	r3, [r3, #20]
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	d004      	beq.n	80066b8 <prvProcessReceivedCommands+0x60>
 80066ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80066b0:	3304      	adds	r3, #4
 80066b2:	4618      	mov	r0, r3
 80066b4:	f7fe f962 	bl	800497c <uxListRemove>
 80066b8:	463b      	mov	r3, r7
 80066ba:	4618      	mov	r0, r3
 80066bc:	f7ff ff6a 	bl	8006594 <prvSampleTimeNow>
 80066c0:	6278      	str	r0, [r7, #36]	@ 0x24
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	2b09      	cmp	r3, #9
 80066c6:	f200 8097 	bhi.w	80067f8 <prvProcessReceivedCommands+0x1a0>
 80066ca:	a201      	add	r2, pc, #4	@ (adr r2, 80066d0 <prvProcessReceivedCommands+0x78>)
 80066cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80066d0:	080066f9 	.word	0x080066f9
 80066d4:	080066f9 	.word	0x080066f9
 80066d8:	080066f9 	.word	0x080066f9
 80066dc:	0800676f 	.word	0x0800676f
 80066e0:	08006783 	.word	0x08006783
 80066e4:	080067cf 	.word	0x080067cf
 80066e8:	080066f9 	.word	0x080066f9
 80066ec:	080066f9 	.word	0x080066f9
 80066f0:	0800676f 	.word	0x0800676f
 80066f4:	08006783 	.word	0x08006783
 80066f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80066fa:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80066fe:	f043 0301 	orr.w	r3, r3, #1
 8006702:	b2da      	uxtb	r2, r3
 8006704:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006706:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800670a:	68ba      	ldr	r2, [r7, #8]
 800670c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800670e:	699b      	ldr	r3, [r3, #24]
 8006710:	18d1      	adds	r1, r2, r3
 8006712:	68bb      	ldr	r3, [r7, #8]
 8006714:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006716:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006718:	f7ff ff5c 	bl	80065d4 <prvInsertTimerInActiveList>
 800671c:	4603      	mov	r3, r0
 800671e:	2b00      	cmp	r3, #0
 8006720:	d06c      	beq.n	80067fc <prvProcessReceivedCommands+0x1a4>
 8006722:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006724:	6a1b      	ldr	r3, [r3, #32]
 8006726:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006728:	4798      	blx	r3
 800672a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800672c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006730:	f003 0304 	and.w	r3, r3, #4
 8006734:	2b00      	cmp	r3, #0
 8006736:	d061      	beq.n	80067fc <prvProcessReceivedCommands+0x1a4>
 8006738:	68ba      	ldr	r2, [r7, #8]
 800673a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800673c:	699b      	ldr	r3, [r3, #24]
 800673e:	441a      	add	r2, r3
 8006740:	2300      	movs	r3, #0
 8006742:	9300      	str	r3, [sp, #0]
 8006744:	2300      	movs	r3, #0
 8006746:	2100      	movs	r1, #0
 8006748:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800674a:	f7ff fe03 	bl	8006354 <xTimerGenericCommand>
 800674e:	6238      	str	r0, [r7, #32]
 8006750:	6a3b      	ldr	r3, [r7, #32]
 8006752:	2b00      	cmp	r3, #0
 8006754:	d152      	bne.n	80067fc <prvProcessReceivedCommands+0x1a4>
 8006756:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800675a:	f383 8811 	msr	BASEPRI, r3
 800675e:	f3bf 8f6f 	isb	sy
 8006762:	f3bf 8f4f 	dsb	sy
 8006766:	61bb      	str	r3, [r7, #24]
 8006768:	bf00      	nop
 800676a:	bf00      	nop
 800676c:	e7fd      	b.n	800676a <prvProcessReceivedCommands+0x112>
 800676e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006770:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006774:	f023 0301 	bic.w	r3, r3, #1
 8006778:	b2da      	uxtb	r2, r3
 800677a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800677c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006780:	e03d      	b.n	80067fe <prvProcessReceivedCommands+0x1a6>
 8006782:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006784:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006788:	f043 0301 	orr.w	r3, r3, #1
 800678c:	b2da      	uxtb	r2, r3
 800678e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006790:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006794:	68ba      	ldr	r2, [r7, #8]
 8006796:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006798:	619a      	str	r2, [r3, #24]
 800679a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800679c:	699b      	ldr	r3, [r3, #24]
 800679e:	2b00      	cmp	r3, #0
 80067a0:	d10b      	bne.n	80067ba <prvProcessReceivedCommands+0x162>
 80067a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80067a6:	f383 8811 	msr	BASEPRI, r3
 80067aa:	f3bf 8f6f 	isb	sy
 80067ae:	f3bf 8f4f 	dsb	sy
 80067b2:	617b      	str	r3, [r7, #20]
 80067b4:	bf00      	nop
 80067b6:	bf00      	nop
 80067b8:	e7fd      	b.n	80067b6 <prvProcessReceivedCommands+0x15e>
 80067ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80067bc:	699a      	ldr	r2, [r3, #24]
 80067be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067c0:	18d1      	adds	r1, r2, r3
 80067c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067c4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80067c6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80067c8:	f7ff ff04 	bl	80065d4 <prvInsertTimerInActiveList>
 80067cc:	e017      	b.n	80067fe <prvProcessReceivedCommands+0x1a6>
 80067ce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80067d0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80067d4:	f003 0302 	and.w	r3, r3, #2
 80067d8:	2b00      	cmp	r3, #0
 80067da:	d103      	bne.n	80067e4 <prvProcessReceivedCommands+0x18c>
 80067dc:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80067de:	f000 fb85 	bl	8006eec <vPortFree>
 80067e2:	e00c      	b.n	80067fe <prvProcessReceivedCommands+0x1a6>
 80067e4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80067e6:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80067ea:	f023 0301 	bic.w	r3, r3, #1
 80067ee:	b2da      	uxtb	r2, r3
 80067f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80067f2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80067f6:	e002      	b.n	80067fe <prvProcessReceivedCommands+0x1a6>
 80067f8:	bf00      	nop
 80067fa:	e000      	b.n	80067fe <prvProcessReceivedCommands+0x1a6>
 80067fc:	bf00      	nop
 80067fe:	4b08      	ldr	r3, [pc, #32]	@ (8006820 <prvProcessReceivedCommands+0x1c8>)
 8006800:	681b      	ldr	r3, [r3, #0]
 8006802:	1d39      	adds	r1, r7, #4
 8006804:	2200      	movs	r2, #0
 8006806:	4618      	mov	r0, r3
 8006808:	f7fe fb8c 	bl	8004f24 <xQueueReceive>
 800680c:	4603      	mov	r3, r0
 800680e:	2b00      	cmp	r3, #0
 8006810:	f47f af26 	bne.w	8006660 <prvProcessReceivedCommands+0x8>
 8006814:	bf00      	nop
 8006816:	bf00      	nop
 8006818:	3730      	adds	r7, #48	@ 0x30
 800681a:	46bd      	mov	sp, r7
 800681c:	bd80      	pop	{r7, pc}
 800681e:	bf00      	nop
 8006820:	2000109c 	.word	0x2000109c

08006824 <prvSwitchTimerLists>:
 8006824:	b580      	push	{r7, lr}
 8006826:	b088      	sub	sp, #32
 8006828:	af02      	add	r7, sp, #8
 800682a:	e049      	b.n	80068c0 <prvSwitchTimerLists+0x9c>
 800682c:	4b2e      	ldr	r3, [pc, #184]	@ (80068e8 <prvSwitchTimerLists+0xc4>)
 800682e:	681b      	ldr	r3, [r3, #0]
 8006830:	68db      	ldr	r3, [r3, #12]
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	613b      	str	r3, [r7, #16]
 8006836:	4b2c      	ldr	r3, [pc, #176]	@ (80068e8 <prvSwitchTimerLists+0xc4>)
 8006838:	681b      	ldr	r3, [r3, #0]
 800683a:	68db      	ldr	r3, [r3, #12]
 800683c:	68db      	ldr	r3, [r3, #12]
 800683e:	60fb      	str	r3, [r7, #12]
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	3304      	adds	r3, #4
 8006844:	4618      	mov	r0, r3
 8006846:	f7fe f899 	bl	800497c <uxListRemove>
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	6a1b      	ldr	r3, [r3, #32]
 800684e:	68f8      	ldr	r0, [r7, #12]
 8006850:	4798      	blx	r3
 8006852:	68fb      	ldr	r3, [r7, #12]
 8006854:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006858:	f003 0304 	and.w	r3, r3, #4
 800685c:	2b00      	cmp	r3, #0
 800685e:	d02f      	beq.n	80068c0 <prvSwitchTimerLists+0x9c>
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	699b      	ldr	r3, [r3, #24]
 8006864:	693a      	ldr	r2, [r7, #16]
 8006866:	4413      	add	r3, r2
 8006868:	60bb      	str	r3, [r7, #8]
 800686a:	68ba      	ldr	r2, [r7, #8]
 800686c:	693b      	ldr	r3, [r7, #16]
 800686e:	429a      	cmp	r2, r3
 8006870:	d90e      	bls.n	8006890 <prvSwitchTimerLists+0x6c>
 8006872:	68fb      	ldr	r3, [r7, #12]
 8006874:	68ba      	ldr	r2, [r7, #8]
 8006876:	605a      	str	r2, [r3, #4]
 8006878:	68fb      	ldr	r3, [r7, #12]
 800687a:	68fa      	ldr	r2, [r7, #12]
 800687c:	611a      	str	r2, [r3, #16]
 800687e:	4b1a      	ldr	r3, [pc, #104]	@ (80068e8 <prvSwitchTimerLists+0xc4>)
 8006880:	681a      	ldr	r2, [r3, #0]
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	3304      	adds	r3, #4
 8006886:	4619      	mov	r1, r3
 8006888:	4610      	mov	r0, r2
 800688a:	f7fe f83f 	bl	800490c <vListInsert>
 800688e:	e017      	b.n	80068c0 <prvSwitchTimerLists+0x9c>
 8006890:	2300      	movs	r3, #0
 8006892:	9300      	str	r3, [sp, #0]
 8006894:	2300      	movs	r3, #0
 8006896:	693a      	ldr	r2, [r7, #16]
 8006898:	2100      	movs	r1, #0
 800689a:	68f8      	ldr	r0, [r7, #12]
 800689c:	f7ff fd5a 	bl	8006354 <xTimerGenericCommand>
 80068a0:	6078      	str	r0, [r7, #4]
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d10b      	bne.n	80068c0 <prvSwitchTimerLists+0x9c>
 80068a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80068ac:	f383 8811 	msr	BASEPRI, r3
 80068b0:	f3bf 8f6f 	isb	sy
 80068b4:	f3bf 8f4f 	dsb	sy
 80068b8:	603b      	str	r3, [r7, #0]
 80068ba:	bf00      	nop
 80068bc:	bf00      	nop
 80068be:	e7fd      	b.n	80068bc <prvSwitchTimerLists+0x98>
 80068c0:	4b09      	ldr	r3, [pc, #36]	@ (80068e8 <prvSwitchTimerLists+0xc4>)
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	2b00      	cmp	r3, #0
 80068c8:	d1b0      	bne.n	800682c <prvSwitchTimerLists+0x8>
 80068ca:	4b07      	ldr	r3, [pc, #28]	@ (80068e8 <prvSwitchTimerLists+0xc4>)
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	617b      	str	r3, [r7, #20]
 80068d0:	4b06      	ldr	r3, [pc, #24]	@ (80068ec <prvSwitchTimerLists+0xc8>)
 80068d2:	681b      	ldr	r3, [r3, #0]
 80068d4:	4a04      	ldr	r2, [pc, #16]	@ (80068e8 <prvSwitchTimerLists+0xc4>)
 80068d6:	6013      	str	r3, [r2, #0]
 80068d8:	4a04      	ldr	r2, [pc, #16]	@ (80068ec <prvSwitchTimerLists+0xc8>)
 80068da:	697b      	ldr	r3, [r7, #20]
 80068dc:	6013      	str	r3, [r2, #0]
 80068de:	bf00      	nop
 80068e0:	3718      	adds	r7, #24
 80068e2:	46bd      	mov	sp, r7
 80068e4:	bd80      	pop	{r7, pc}
 80068e6:	bf00      	nop
 80068e8:	20001094 	.word	0x20001094
 80068ec:	20001098 	.word	0x20001098

080068f0 <prvCheckForValidListAndQueue>:
 80068f0:	b580      	push	{r7, lr}
 80068f2:	b082      	sub	sp, #8
 80068f4:	af02      	add	r7, sp, #8
 80068f6:	f000 f929 	bl	8006b4c <vPortEnterCritical>
 80068fa:	4b15      	ldr	r3, [pc, #84]	@ (8006950 <prvCheckForValidListAndQueue+0x60>)
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d120      	bne.n	8006944 <prvCheckForValidListAndQueue+0x54>
 8006902:	4814      	ldr	r0, [pc, #80]	@ (8006954 <prvCheckForValidListAndQueue+0x64>)
 8006904:	f7fd ffb4 	bl	8004870 <vListInitialise>
 8006908:	4813      	ldr	r0, [pc, #76]	@ (8006958 <prvCheckForValidListAndQueue+0x68>)
 800690a:	f7fd ffb1 	bl	8004870 <vListInitialise>
 800690e:	4b13      	ldr	r3, [pc, #76]	@ (800695c <prvCheckForValidListAndQueue+0x6c>)
 8006910:	4a10      	ldr	r2, [pc, #64]	@ (8006954 <prvCheckForValidListAndQueue+0x64>)
 8006912:	601a      	str	r2, [r3, #0]
 8006914:	4b12      	ldr	r3, [pc, #72]	@ (8006960 <prvCheckForValidListAndQueue+0x70>)
 8006916:	4a10      	ldr	r2, [pc, #64]	@ (8006958 <prvCheckForValidListAndQueue+0x68>)
 8006918:	601a      	str	r2, [r3, #0]
 800691a:	2300      	movs	r3, #0
 800691c:	9300      	str	r3, [sp, #0]
 800691e:	4b11      	ldr	r3, [pc, #68]	@ (8006964 <prvCheckForValidListAndQueue+0x74>)
 8006920:	4a11      	ldr	r2, [pc, #68]	@ (8006968 <prvCheckForValidListAndQueue+0x78>)
 8006922:	2110      	movs	r1, #16
 8006924:	200a      	movs	r0, #10
 8006926:	f7fe f8bd 	bl	8004aa4 <xQueueGenericCreateStatic>
 800692a:	4603      	mov	r3, r0
 800692c:	4a08      	ldr	r2, [pc, #32]	@ (8006950 <prvCheckForValidListAndQueue+0x60>)
 800692e:	6013      	str	r3, [r2, #0]
 8006930:	4b07      	ldr	r3, [pc, #28]	@ (8006950 <prvCheckForValidListAndQueue+0x60>)
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	2b00      	cmp	r3, #0
 8006936:	d005      	beq.n	8006944 <prvCheckForValidListAndQueue+0x54>
 8006938:	4b05      	ldr	r3, [pc, #20]	@ (8006950 <prvCheckForValidListAndQueue+0x60>)
 800693a:	681b      	ldr	r3, [r3, #0]
 800693c:	490b      	ldr	r1, [pc, #44]	@ (800696c <prvCheckForValidListAndQueue+0x7c>)
 800693e:	4618      	mov	r0, r3
 8006940:	f7fe fce2 	bl	8005308 <vQueueAddToRegistry>
 8006944:	f000 f932 	bl	8006bac <vPortExitCritical>
 8006948:	bf00      	nop
 800694a:	46bd      	mov	sp, r7
 800694c:	bd80      	pop	{r7, pc}
 800694e:	bf00      	nop
 8006950:	2000109c 	.word	0x2000109c
 8006954:	2000106c 	.word	0x2000106c
 8006958:	20001080 	.word	0x20001080
 800695c:	20001094 	.word	0x20001094
 8006960:	20001098 	.word	0x20001098
 8006964:	20001148 	.word	0x20001148
 8006968:	200010a8 	.word	0x200010a8
 800696c:	08007344 	.word	0x08007344

08006970 <pxPortInitialiseStack>:
 8006970:	b480      	push	{r7}
 8006972:	b085      	sub	sp, #20
 8006974:	af00      	add	r7, sp, #0
 8006976:	60f8      	str	r0, [r7, #12]
 8006978:	60b9      	str	r1, [r7, #8]
 800697a:	607a      	str	r2, [r7, #4]
 800697c:	68fb      	ldr	r3, [r7, #12]
 800697e:	3b04      	subs	r3, #4
 8006980:	60fb      	str	r3, [r7, #12]
 8006982:	68fb      	ldr	r3, [r7, #12]
 8006984:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006988:	601a      	str	r2, [r3, #0]
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	3b04      	subs	r3, #4
 800698e:	60fb      	str	r3, [r7, #12]
 8006990:	68bb      	ldr	r3, [r7, #8]
 8006992:	f023 0201 	bic.w	r2, r3, #1
 8006996:	68fb      	ldr	r3, [r7, #12]
 8006998:	601a      	str	r2, [r3, #0]
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	3b04      	subs	r3, #4
 800699e:	60fb      	str	r3, [r7, #12]
 80069a0:	4a08      	ldr	r2, [pc, #32]	@ (80069c4 <pxPortInitialiseStack+0x54>)
 80069a2:	68fb      	ldr	r3, [r7, #12]
 80069a4:	601a      	str	r2, [r3, #0]
 80069a6:	68fb      	ldr	r3, [r7, #12]
 80069a8:	3b14      	subs	r3, #20
 80069aa:	60fb      	str	r3, [r7, #12]
 80069ac:	687a      	ldr	r2, [r7, #4]
 80069ae:	68fb      	ldr	r3, [r7, #12]
 80069b0:	601a      	str	r2, [r3, #0]
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	3b20      	subs	r3, #32
 80069b6:	60fb      	str	r3, [r7, #12]
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	4618      	mov	r0, r3
 80069bc:	3714      	adds	r7, #20
 80069be:	46bd      	mov	sp, r7
 80069c0:	bc80      	pop	{r7}
 80069c2:	4770      	bx	lr
 80069c4:	080069c9 	.word	0x080069c9

080069c8 <prvTaskExitError>:
 80069c8:	b480      	push	{r7}
 80069ca:	b085      	sub	sp, #20
 80069cc:	af00      	add	r7, sp, #0
 80069ce:	2300      	movs	r3, #0
 80069d0:	607b      	str	r3, [r7, #4]
 80069d2:	4b12      	ldr	r3, [pc, #72]	@ (8006a1c <prvTaskExitError+0x54>)
 80069d4:	681b      	ldr	r3, [r3, #0]
 80069d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80069da:	d00b      	beq.n	80069f4 <prvTaskExitError+0x2c>
 80069dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80069e0:	f383 8811 	msr	BASEPRI, r3
 80069e4:	f3bf 8f6f 	isb	sy
 80069e8:	f3bf 8f4f 	dsb	sy
 80069ec:	60fb      	str	r3, [r7, #12]
 80069ee:	bf00      	nop
 80069f0:	bf00      	nop
 80069f2:	e7fd      	b.n	80069f0 <prvTaskExitError+0x28>
 80069f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80069f8:	f383 8811 	msr	BASEPRI, r3
 80069fc:	f3bf 8f6f 	isb	sy
 8006a00:	f3bf 8f4f 	dsb	sy
 8006a04:	60bb      	str	r3, [r7, #8]
 8006a06:	bf00      	nop
 8006a08:	bf00      	nop
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	d0fc      	beq.n	8006a0a <prvTaskExitError+0x42>
 8006a10:	bf00      	nop
 8006a12:	bf00      	nop
 8006a14:	3714      	adds	r7, #20
 8006a16:	46bd      	mov	sp, r7
 8006a18:	bc80      	pop	{r7}
 8006a1a:	4770      	bx	lr
 8006a1c:	20000010 	.word	0x20000010

08006a20 <SVC_Handler>:
 8006a20:	4b07      	ldr	r3, [pc, #28]	@ (8006a40 <pxCurrentTCBConst2>)
 8006a22:	6819      	ldr	r1, [r3, #0]
 8006a24:	6808      	ldr	r0, [r1, #0]
 8006a26:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006a2a:	f380 8809 	msr	PSP, r0
 8006a2e:	f3bf 8f6f 	isb	sy
 8006a32:	f04f 0000 	mov.w	r0, #0
 8006a36:	f380 8811 	msr	BASEPRI, r0
 8006a3a:	f04e 0e0d 	orr.w	lr, lr, #13
 8006a3e:	4770      	bx	lr

08006a40 <pxCurrentTCBConst2>:
 8006a40:	20000b6c 	.word	0x20000b6c
 8006a44:	bf00      	nop
 8006a46:	bf00      	nop

08006a48 <prvPortStartFirstTask>:
 8006a48:	4806      	ldr	r0, [pc, #24]	@ (8006a64 <prvPortStartFirstTask+0x1c>)
 8006a4a:	6800      	ldr	r0, [r0, #0]
 8006a4c:	6800      	ldr	r0, [r0, #0]
 8006a4e:	f380 8808 	msr	MSP, r0
 8006a52:	b662      	cpsie	i
 8006a54:	b661      	cpsie	f
 8006a56:	f3bf 8f4f 	dsb	sy
 8006a5a:	f3bf 8f6f 	isb	sy
 8006a5e:	df00      	svc	0
 8006a60:	bf00      	nop
 8006a62:	bf00      	nop
 8006a64:	e000ed08 	.word	0xe000ed08

08006a68 <xPortStartScheduler>:
 8006a68:	b580      	push	{r7, lr}
 8006a6a:	b084      	sub	sp, #16
 8006a6c:	af00      	add	r7, sp, #0
 8006a6e:	4b32      	ldr	r3, [pc, #200]	@ (8006b38 <xPortStartScheduler+0xd0>)
 8006a70:	60fb      	str	r3, [r7, #12]
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	781b      	ldrb	r3, [r3, #0]
 8006a76:	b2db      	uxtb	r3, r3
 8006a78:	607b      	str	r3, [r7, #4]
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	22ff      	movs	r2, #255	@ 0xff
 8006a7e:	701a      	strb	r2, [r3, #0]
 8006a80:	68fb      	ldr	r3, [r7, #12]
 8006a82:	781b      	ldrb	r3, [r3, #0]
 8006a84:	b2db      	uxtb	r3, r3
 8006a86:	70fb      	strb	r3, [r7, #3]
 8006a88:	78fb      	ldrb	r3, [r7, #3]
 8006a8a:	b2db      	uxtb	r3, r3
 8006a8c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8006a90:	b2da      	uxtb	r2, r3
 8006a92:	4b2a      	ldr	r3, [pc, #168]	@ (8006b3c <xPortStartScheduler+0xd4>)
 8006a94:	701a      	strb	r2, [r3, #0]
 8006a96:	4b2a      	ldr	r3, [pc, #168]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006a98:	2207      	movs	r2, #7
 8006a9a:	601a      	str	r2, [r3, #0]
 8006a9c:	e009      	b.n	8006ab2 <xPortStartScheduler+0x4a>
 8006a9e:	4b28      	ldr	r3, [pc, #160]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	3b01      	subs	r3, #1
 8006aa4:	4a26      	ldr	r2, [pc, #152]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006aa6:	6013      	str	r3, [r2, #0]
 8006aa8:	78fb      	ldrb	r3, [r7, #3]
 8006aaa:	b2db      	uxtb	r3, r3
 8006aac:	005b      	lsls	r3, r3, #1
 8006aae:	b2db      	uxtb	r3, r3
 8006ab0:	70fb      	strb	r3, [r7, #3]
 8006ab2:	78fb      	ldrb	r3, [r7, #3]
 8006ab4:	b2db      	uxtb	r3, r3
 8006ab6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006aba:	2b80      	cmp	r3, #128	@ 0x80
 8006abc:	d0ef      	beq.n	8006a9e <xPortStartScheduler+0x36>
 8006abe:	4b20      	ldr	r3, [pc, #128]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006ac0:	681b      	ldr	r3, [r3, #0]
 8006ac2:	f1c3 0307 	rsb	r3, r3, #7
 8006ac6:	2b04      	cmp	r3, #4
 8006ac8:	d00b      	beq.n	8006ae2 <xPortStartScheduler+0x7a>
 8006aca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006ace:	f383 8811 	msr	BASEPRI, r3
 8006ad2:	f3bf 8f6f 	isb	sy
 8006ad6:	f3bf 8f4f 	dsb	sy
 8006ada:	60bb      	str	r3, [r7, #8]
 8006adc:	bf00      	nop
 8006ade:	bf00      	nop
 8006ae0:	e7fd      	b.n	8006ade <xPortStartScheduler+0x76>
 8006ae2:	4b17      	ldr	r3, [pc, #92]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006ae4:	681b      	ldr	r3, [r3, #0]
 8006ae6:	021b      	lsls	r3, r3, #8
 8006ae8:	4a15      	ldr	r2, [pc, #84]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006aea:	6013      	str	r3, [r2, #0]
 8006aec:	4b14      	ldr	r3, [pc, #80]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006aee:	681b      	ldr	r3, [r3, #0]
 8006af0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8006af4:	4a12      	ldr	r2, [pc, #72]	@ (8006b40 <xPortStartScheduler+0xd8>)
 8006af6:	6013      	str	r3, [r2, #0]
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	b2da      	uxtb	r2, r3
 8006afc:	68fb      	ldr	r3, [r7, #12]
 8006afe:	701a      	strb	r2, [r3, #0]
 8006b00:	4b10      	ldr	r3, [pc, #64]	@ (8006b44 <xPortStartScheduler+0xdc>)
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	4a0f      	ldr	r2, [pc, #60]	@ (8006b44 <xPortStartScheduler+0xdc>)
 8006b06:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8006b0a:	6013      	str	r3, [r2, #0]
 8006b0c:	4b0d      	ldr	r3, [pc, #52]	@ (8006b44 <xPortStartScheduler+0xdc>)
 8006b0e:	681b      	ldr	r3, [r3, #0]
 8006b10:	4a0c      	ldr	r2, [pc, #48]	@ (8006b44 <xPortStartScheduler+0xdc>)
 8006b12:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8006b16:	6013      	str	r3, [r2, #0]
 8006b18:	f000 f8b8 	bl	8006c8c <vPortSetupTimerInterrupt>
 8006b1c:	4b0a      	ldr	r3, [pc, #40]	@ (8006b48 <xPortStartScheduler+0xe0>)
 8006b1e:	2200      	movs	r2, #0
 8006b20:	601a      	str	r2, [r3, #0]
 8006b22:	f7ff ff91 	bl	8006a48 <prvPortStartFirstTask>
 8006b26:	f7ff f86d 	bl	8005c04 <vTaskSwitchContext>
 8006b2a:	f7ff ff4d 	bl	80069c8 <prvTaskExitError>
 8006b2e:	2300      	movs	r3, #0
 8006b30:	4618      	mov	r0, r3
 8006b32:	3710      	adds	r7, #16
 8006b34:	46bd      	mov	sp, r7
 8006b36:	bd80      	pop	{r7, pc}
 8006b38:	e000e400 	.word	0xe000e400
 8006b3c:	20001198 	.word	0x20001198
 8006b40:	2000119c 	.word	0x2000119c
 8006b44:	e000ed20 	.word	0xe000ed20
 8006b48:	20000010 	.word	0x20000010

08006b4c <vPortEnterCritical>:
 8006b4c:	b480      	push	{r7}
 8006b4e:	b083      	sub	sp, #12
 8006b50:	af00      	add	r7, sp, #0
 8006b52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006b56:	f383 8811 	msr	BASEPRI, r3
 8006b5a:	f3bf 8f6f 	isb	sy
 8006b5e:	f3bf 8f4f 	dsb	sy
 8006b62:	607b      	str	r3, [r7, #4]
 8006b64:	bf00      	nop
 8006b66:	4b0f      	ldr	r3, [pc, #60]	@ (8006ba4 <vPortEnterCritical+0x58>)
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	3301      	adds	r3, #1
 8006b6c:	4a0d      	ldr	r2, [pc, #52]	@ (8006ba4 <vPortEnterCritical+0x58>)
 8006b6e:	6013      	str	r3, [r2, #0]
 8006b70:	4b0c      	ldr	r3, [pc, #48]	@ (8006ba4 <vPortEnterCritical+0x58>)
 8006b72:	681b      	ldr	r3, [r3, #0]
 8006b74:	2b01      	cmp	r3, #1
 8006b76:	d110      	bne.n	8006b9a <vPortEnterCritical+0x4e>
 8006b78:	4b0b      	ldr	r3, [pc, #44]	@ (8006ba8 <vPortEnterCritical+0x5c>)
 8006b7a:	681b      	ldr	r3, [r3, #0]
 8006b7c:	b2db      	uxtb	r3, r3
 8006b7e:	2b00      	cmp	r3, #0
 8006b80:	d00b      	beq.n	8006b9a <vPortEnterCritical+0x4e>
 8006b82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006b86:	f383 8811 	msr	BASEPRI, r3
 8006b8a:	f3bf 8f6f 	isb	sy
 8006b8e:	f3bf 8f4f 	dsb	sy
 8006b92:	603b      	str	r3, [r7, #0]
 8006b94:	bf00      	nop
 8006b96:	bf00      	nop
 8006b98:	e7fd      	b.n	8006b96 <vPortEnterCritical+0x4a>
 8006b9a:	bf00      	nop
 8006b9c:	370c      	adds	r7, #12
 8006b9e:	46bd      	mov	sp, r7
 8006ba0:	bc80      	pop	{r7}
 8006ba2:	4770      	bx	lr
 8006ba4:	20000010 	.word	0x20000010
 8006ba8:	e000ed04 	.word	0xe000ed04

08006bac <vPortExitCritical>:
 8006bac:	b480      	push	{r7}
 8006bae:	b083      	sub	sp, #12
 8006bb0:	af00      	add	r7, sp, #0
 8006bb2:	4b12      	ldr	r3, [pc, #72]	@ (8006bfc <vPortExitCritical+0x50>)
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	2b00      	cmp	r3, #0
 8006bb8:	d10b      	bne.n	8006bd2 <vPortExitCritical+0x26>
 8006bba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006bbe:	f383 8811 	msr	BASEPRI, r3
 8006bc2:	f3bf 8f6f 	isb	sy
 8006bc6:	f3bf 8f4f 	dsb	sy
 8006bca:	607b      	str	r3, [r7, #4]
 8006bcc:	bf00      	nop
 8006bce:	bf00      	nop
 8006bd0:	e7fd      	b.n	8006bce <vPortExitCritical+0x22>
 8006bd2:	4b0a      	ldr	r3, [pc, #40]	@ (8006bfc <vPortExitCritical+0x50>)
 8006bd4:	681b      	ldr	r3, [r3, #0]
 8006bd6:	3b01      	subs	r3, #1
 8006bd8:	4a08      	ldr	r2, [pc, #32]	@ (8006bfc <vPortExitCritical+0x50>)
 8006bda:	6013      	str	r3, [r2, #0]
 8006bdc:	4b07      	ldr	r3, [pc, #28]	@ (8006bfc <vPortExitCritical+0x50>)
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d105      	bne.n	8006bf0 <vPortExitCritical+0x44>
 8006be4:	2300      	movs	r3, #0
 8006be6:	603b      	str	r3, [r7, #0]
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	f383 8811 	msr	BASEPRI, r3
 8006bee:	bf00      	nop
 8006bf0:	bf00      	nop
 8006bf2:	370c      	adds	r7, #12
 8006bf4:	46bd      	mov	sp, r7
 8006bf6:	bc80      	pop	{r7}
 8006bf8:	4770      	bx	lr
 8006bfa:	bf00      	nop
 8006bfc:	20000010 	.word	0x20000010

08006c00 <PendSV_Handler>:
 8006c00:	f3ef 8009 	mrs	r0, PSP
 8006c04:	f3bf 8f6f 	isb	sy
 8006c08:	4b0d      	ldr	r3, [pc, #52]	@ (8006c40 <pxCurrentTCBConst>)
 8006c0a:	681a      	ldr	r2, [r3, #0]
 8006c0c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006c10:	6010      	str	r0, [r2, #0]
 8006c12:	e92d 4008 	stmdb	sp!, {r3, lr}
 8006c16:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8006c1a:	f380 8811 	msr	BASEPRI, r0
 8006c1e:	f7fe fff1 	bl	8005c04 <vTaskSwitchContext>
 8006c22:	f04f 0000 	mov.w	r0, #0
 8006c26:	f380 8811 	msr	BASEPRI, r0
 8006c2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006c2e:	6819      	ldr	r1, [r3, #0]
 8006c30:	6808      	ldr	r0, [r1, #0]
 8006c32:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006c36:	f380 8809 	msr	PSP, r0
 8006c3a:	f3bf 8f6f 	isb	sy
 8006c3e:	4770      	bx	lr

08006c40 <pxCurrentTCBConst>:
 8006c40:	20000b6c 	.word	0x20000b6c
 8006c44:	bf00      	nop
 8006c46:	bf00      	nop

08006c48 <xPortSysTickHandler>:
 8006c48:	b580      	push	{r7, lr}
 8006c4a:	b082      	sub	sp, #8
 8006c4c:	af00      	add	r7, sp, #0
 8006c4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006c52:	f383 8811 	msr	BASEPRI, r3
 8006c56:	f3bf 8f6f 	isb	sy
 8006c5a:	f3bf 8f4f 	dsb	sy
 8006c5e:	607b      	str	r3, [r7, #4]
 8006c60:	bf00      	nop
 8006c62:	f7fe ff15 	bl	8005a90 <xTaskIncrementTick>
 8006c66:	4603      	mov	r3, r0
 8006c68:	2b00      	cmp	r3, #0
 8006c6a:	d003      	beq.n	8006c74 <xPortSysTickHandler+0x2c>
 8006c6c:	4b06      	ldr	r3, [pc, #24]	@ (8006c88 <xPortSysTickHandler+0x40>)
 8006c6e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006c72:	601a      	str	r2, [r3, #0]
 8006c74:	2300      	movs	r3, #0
 8006c76:	603b      	str	r3, [r7, #0]
 8006c78:	683b      	ldr	r3, [r7, #0]
 8006c7a:	f383 8811 	msr	BASEPRI, r3
 8006c7e:	bf00      	nop
 8006c80:	bf00      	nop
 8006c82:	3708      	adds	r7, #8
 8006c84:	46bd      	mov	sp, r7
 8006c86:	bd80      	pop	{r7, pc}
 8006c88:	e000ed04 	.word	0xe000ed04

08006c8c <vPortSetupTimerInterrupt>:
 8006c8c:	b480      	push	{r7}
 8006c8e:	af00      	add	r7, sp, #0
 8006c90:	4b0a      	ldr	r3, [pc, #40]	@ (8006cbc <vPortSetupTimerInterrupt+0x30>)
 8006c92:	2200      	movs	r2, #0
 8006c94:	601a      	str	r2, [r3, #0]
 8006c96:	4b0a      	ldr	r3, [pc, #40]	@ (8006cc0 <vPortSetupTimerInterrupt+0x34>)
 8006c98:	2200      	movs	r2, #0
 8006c9a:	601a      	str	r2, [r3, #0]
 8006c9c:	4b09      	ldr	r3, [pc, #36]	@ (8006cc4 <vPortSetupTimerInterrupt+0x38>)
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	4a09      	ldr	r2, [pc, #36]	@ (8006cc8 <vPortSetupTimerInterrupt+0x3c>)
 8006ca2:	fba2 2303 	umull	r2, r3, r2, r3
 8006ca6:	099b      	lsrs	r3, r3, #6
 8006ca8:	4a08      	ldr	r2, [pc, #32]	@ (8006ccc <vPortSetupTimerInterrupt+0x40>)
 8006caa:	3b01      	subs	r3, #1
 8006cac:	6013      	str	r3, [r2, #0]
 8006cae:	4b03      	ldr	r3, [pc, #12]	@ (8006cbc <vPortSetupTimerInterrupt+0x30>)
 8006cb0:	2207      	movs	r2, #7
 8006cb2:	601a      	str	r2, [r3, #0]
 8006cb4:	bf00      	nop
 8006cb6:	46bd      	mov	sp, r7
 8006cb8:	bc80      	pop	{r7}
 8006cba:	4770      	bx	lr
 8006cbc:	e000e010 	.word	0xe000e010
 8006cc0:	e000e018 	.word	0xe000e018
 8006cc4:	20000004 	.word	0x20000004
 8006cc8:	10624dd3 	.word	0x10624dd3
 8006ccc:	e000e014 	.word	0xe000e014

08006cd0 <vPortValidateInterruptPriority>:
 8006cd0:	b480      	push	{r7}
 8006cd2:	b085      	sub	sp, #20
 8006cd4:	af00      	add	r7, sp, #0
 8006cd6:	f3ef 8305 	mrs	r3, IPSR
 8006cda:	60fb      	str	r3, [r7, #12]
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	2b0f      	cmp	r3, #15
 8006ce0:	d915      	bls.n	8006d0e <vPortValidateInterruptPriority+0x3e>
 8006ce2:	4a17      	ldr	r2, [pc, #92]	@ (8006d40 <vPortValidateInterruptPriority+0x70>)
 8006ce4:	68fb      	ldr	r3, [r7, #12]
 8006ce6:	4413      	add	r3, r2
 8006ce8:	781b      	ldrb	r3, [r3, #0]
 8006cea:	72fb      	strb	r3, [r7, #11]
 8006cec:	4b15      	ldr	r3, [pc, #84]	@ (8006d44 <vPortValidateInterruptPriority+0x74>)
 8006cee:	781b      	ldrb	r3, [r3, #0]
 8006cf0:	7afa      	ldrb	r2, [r7, #11]
 8006cf2:	429a      	cmp	r2, r3
 8006cf4:	d20b      	bcs.n	8006d0e <vPortValidateInterruptPriority+0x3e>
 8006cf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006cfa:	f383 8811 	msr	BASEPRI, r3
 8006cfe:	f3bf 8f6f 	isb	sy
 8006d02:	f3bf 8f4f 	dsb	sy
 8006d06:	607b      	str	r3, [r7, #4]
 8006d08:	bf00      	nop
 8006d0a:	bf00      	nop
 8006d0c:	e7fd      	b.n	8006d0a <vPortValidateInterruptPriority+0x3a>
 8006d0e:	4b0e      	ldr	r3, [pc, #56]	@ (8006d48 <vPortValidateInterruptPriority+0x78>)
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8006d16:	4b0d      	ldr	r3, [pc, #52]	@ (8006d4c <vPortValidateInterruptPriority+0x7c>)
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	429a      	cmp	r2, r3
 8006d1c:	d90b      	bls.n	8006d36 <vPortValidateInterruptPriority+0x66>
 8006d1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006d22:	f383 8811 	msr	BASEPRI, r3
 8006d26:	f3bf 8f6f 	isb	sy
 8006d2a:	f3bf 8f4f 	dsb	sy
 8006d2e:	603b      	str	r3, [r7, #0]
 8006d30:	bf00      	nop
 8006d32:	bf00      	nop
 8006d34:	e7fd      	b.n	8006d32 <vPortValidateInterruptPriority+0x62>
 8006d36:	bf00      	nop
 8006d38:	3714      	adds	r7, #20
 8006d3a:	46bd      	mov	sp, r7
 8006d3c:	bc80      	pop	{r7}
 8006d3e:	4770      	bx	lr
 8006d40:	e000e3f0 	.word	0xe000e3f0
 8006d44:	20001198 	.word	0x20001198
 8006d48:	e000ed0c 	.word	0xe000ed0c
 8006d4c:	2000119c 	.word	0x2000119c

08006d50 <pvPortMalloc>:
 8006d50:	b580      	push	{r7, lr}
 8006d52:	b08a      	sub	sp, #40	@ 0x28
 8006d54:	af00      	add	r7, sp, #0
 8006d56:	6078      	str	r0, [r7, #4]
 8006d58:	2300      	movs	r3, #0
 8006d5a:	61fb      	str	r3, [r7, #28]
 8006d5c:	f7fe fdde 	bl	800591c <vTaskSuspendAll>
 8006d60:	4b5c      	ldr	r3, [pc, #368]	@ (8006ed4 <pvPortMalloc+0x184>)
 8006d62:	681b      	ldr	r3, [r3, #0]
 8006d64:	2b00      	cmp	r3, #0
 8006d66:	d101      	bne.n	8006d6c <pvPortMalloc+0x1c>
 8006d68:	f000 f924 	bl	8006fb4 <prvHeapInit>
 8006d6c:	4b5a      	ldr	r3, [pc, #360]	@ (8006ed8 <pvPortMalloc+0x188>)
 8006d6e:	681a      	ldr	r2, [r3, #0]
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	4013      	ands	r3, r2
 8006d74:	2b00      	cmp	r3, #0
 8006d76:	f040 8095 	bne.w	8006ea4 <pvPortMalloc+0x154>
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	2b00      	cmp	r3, #0
 8006d7e:	d01e      	beq.n	8006dbe <pvPortMalloc+0x6e>
 8006d80:	2208      	movs	r2, #8
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	4413      	add	r3, r2
 8006d86:	607b      	str	r3, [r7, #4]
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	f003 0307 	and.w	r3, r3, #7
 8006d8e:	2b00      	cmp	r3, #0
 8006d90:	d015      	beq.n	8006dbe <pvPortMalloc+0x6e>
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	f023 0307 	bic.w	r3, r3, #7
 8006d98:	3308      	adds	r3, #8
 8006d9a:	607b      	str	r3, [r7, #4]
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	f003 0307 	and.w	r3, r3, #7
 8006da2:	2b00      	cmp	r3, #0
 8006da4:	d00b      	beq.n	8006dbe <pvPortMalloc+0x6e>
 8006da6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006daa:	f383 8811 	msr	BASEPRI, r3
 8006dae:	f3bf 8f6f 	isb	sy
 8006db2:	f3bf 8f4f 	dsb	sy
 8006db6:	617b      	str	r3, [r7, #20]
 8006db8:	bf00      	nop
 8006dba:	bf00      	nop
 8006dbc:	e7fd      	b.n	8006dba <pvPortMalloc+0x6a>
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	d06f      	beq.n	8006ea4 <pvPortMalloc+0x154>
 8006dc4:	4b45      	ldr	r3, [pc, #276]	@ (8006edc <pvPortMalloc+0x18c>)
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	687a      	ldr	r2, [r7, #4]
 8006dca:	429a      	cmp	r2, r3
 8006dcc:	d86a      	bhi.n	8006ea4 <pvPortMalloc+0x154>
 8006dce:	4b44      	ldr	r3, [pc, #272]	@ (8006ee0 <pvPortMalloc+0x190>)
 8006dd0:	623b      	str	r3, [r7, #32]
 8006dd2:	4b43      	ldr	r3, [pc, #268]	@ (8006ee0 <pvPortMalloc+0x190>)
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	627b      	str	r3, [r7, #36]	@ 0x24
 8006dd8:	e004      	b.n	8006de4 <pvPortMalloc+0x94>
 8006dda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ddc:	623b      	str	r3, [r7, #32]
 8006dde:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006de0:	681b      	ldr	r3, [r3, #0]
 8006de2:	627b      	str	r3, [r7, #36]	@ 0x24
 8006de4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006de6:	685b      	ldr	r3, [r3, #4]
 8006de8:	687a      	ldr	r2, [r7, #4]
 8006dea:	429a      	cmp	r2, r3
 8006dec:	d903      	bls.n	8006df6 <pvPortMalloc+0xa6>
 8006dee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	d1f1      	bne.n	8006dda <pvPortMalloc+0x8a>
 8006df6:	4b37      	ldr	r3, [pc, #220]	@ (8006ed4 <pvPortMalloc+0x184>)
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006dfc:	429a      	cmp	r2, r3
 8006dfe:	d051      	beq.n	8006ea4 <pvPortMalloc+0x154>
 8006e00:	6a3b      	ldr	r3, [r7, #32]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	2208      	movs	r2, #8
 8006e06:	4413      	add	r3, r2
 8006e08:	61fb      	str	r3, [r7, #28]
 8006e0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e0c:	681a      	ldr	r2, [r3, #0]
 8006e0e:	6a3b      	ldr	r3, [r7, #32]
 8006e10:	601a      	str	r2, [r3, #0]
 8006e12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e14:	685a      	ldr	r2, [r3, #4]
 8006e16:	687b      	ldr	r3, [r7, #4]
 8006e18:	1ad2      	subs	r2, r2, r3
 8006e1a:	2308      	movs	r3, #8
 8006e1c:	005b      	lsls	r3, r3, #1
 8006e1e:	429a      	cmp	r2, r3
 8006e20:	d920      	bls.n	8006e64 <pvPortMalloc+0x114>
 8006e22:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	4413      	add	r3, r2
 8006e28:	61bb      	str	r3, [r7, #24]
 8006e2a:	69bb      	ldr	r3, [r7, #24]
 8006e2c:	f003 0307 	and.w	r3, r3, #7
 8006e30:	2b00      	cmp	r3, #0
 8006e32:	d00b      	beq.n	8006e4c <pvPortMalloc+0xfc>
 8006e34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006e38:	f383 8811 	msr	BASEPRI, r3
 8006e3c:	f3bf 8f6f 	isb	sy
 8006e40:	f3bf 8f4f 	dsb	sy
 8006e44:	613b      	str	r3, [r7, #16]
 8006e46:	bf00      	nop
 8006e48:	bf00      	nop
 8006e4a:	e7fd      	b.n	8006e48 <pvPortMalloc+0xf8>
 8006e4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e4e:	685a      	ldr	r2, [r3, #4]
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	1ad2      	subs	r2, r2, r3
 8006e54:	69bb      	ldr	r3, [r7, #24]
 8006e56:	605a      	str	r2, [r3, #4]
 8006e58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e5a:	687a      	ldr	r2, [r7, #4]
 8006e5c:	605a      	str	r2, [r3, #4]
 8006e5e:	69b8      	ldr	r0, [r7, #24]
 8006e60:	f000 f90a 	bl	8007078 <prvInsertBlockIntoFreeList>
 8006e64:	4b1d      	ldr	r3, [pc, #116]	@ (8006edc <pvPortMalloc+0x18c>)
 8006e66:	681a      	ldr	r2, [r3, #0]
 8006e68:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e6a:	685b      	ldr	r3, [r3, #4]
 8006e6c:	1ad3      	subs	r3, r2, r3
 8006e6e:	4a1b      	ldr	r2, [pc, #108]	@ (8006edc <pvPortMalloc+0x18c>)
 8006e70:	6013      	str	r3, [r2, #0]
 8006e72:	4b1a      	ldr	r3, [pc, #104]	@ (8006edc <pvPortMalloc+0x18c>)
 8006e74:	681a      	ldr	r2, [r3, #0]
 8006e76:	4b1b      	ldr	r3, [pc, #108]	@ (8006ee4 <pvPortMalloc+0x194>)
 8006e78:	681b      	ldr	r3, [r3, #0]
 8006e7a:	429a      	cmp	r2, r3
 8006e7c:	d203      	bcs.n	8006e86 <pvPortMalloc+0x136>
 8006e7e:	4b17      	ldr	r3, [pc, #92]	@ (8006edc <pvPortMalloc+0x18c>)
 8006e80:	681b      	ldr	r3, [r3, #0]
 8006e82:	4a18      	ldr	r2, [pc, #96]	@ (8006ee4 <pvPortMalloc+0x194>)
 8006e84:	6013      	str	r3, [r2, #0]
 8006e86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e88:	685a      	ldr	r2, [r3, #4]
 8006e8a:	4b13      	ldr	r3, [pc, #76]	@ (8006ed8 <pvPortMalloc+0x188>)
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	431a      	orrs	r2, r3
 8006e90:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e92:	605a      	str	r2, [r3, #4]
 8006e94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e96:	2200      	movs	r2, #0
 8006e98:	601a      	str	r2, [r3, #0]
 8006e9a:	4b13      	ldr	r3, [pc, #76]	@ (8006ee8 <pvPortMalloc+0x198>)
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	3301      	adds	r3, #1
 8006ea0:	4a11      	ldr	r2, [pc, #68]	@ (8006ee8 <pvPortMalloc+0x198>)
 8006ea2:	6013      	str	r3, [r2, #0]
 8006ea4:	f7fe fd48 	bl	8005938 <xTaskResumeAll>
 8006ea8:	69fb      	ldr	r3, [r7, #28]
 8006eaa:	f003 0307 	and.w	r3, r3, #7
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	d00b      	beq.n	8006eca <pvPortMalloc+0x17a>
 8006eb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006eb6:	f383 8811 	msr	BASEPRI, r3
 8006eba:	f3bf 8f6f 	isb	sy
 8006ebe:	f3bf 8f4f 	dsb	sy
 8006ec2:	60fb      	str	r3, [r7, #12]
 8006ec4:	bf00      	nop
 8006ec6:	bf00      	nop
 8006ec8:	e7fd      	b.n	8006ec6 <pvPortMalloc+0x176>
 8006eca:	69fb      	ldr	r3, [r7, #28]
 8006ecc:	4618      	mov	r0, r3
 8006ece:	3728      	adds	r7, #40	@ 0x28
 8006ed0:	46bd      	mov	sp, r7
 8006ed2:	bd80      	pop	{r7, pc}
 8006ed4:	20001da8 	.word	0x20001da8
 8006ed8:	20001dbc 	.word	0x20001dbc
 8006edc:	20001dac 	.word	0x20001dac
 8006ee0:	20001da0 	.word	0x20001da0
 8006ee4:	20001db0 	.word	0x20001db0
 8006ee8:	20001db4 	.word	0x20001db4

08006eec <vPortFree>:
 8006eec:	b580      	push	{r7, lr}
 8006eee:	b086      	sub	sp, #24
 8006ef0:	af00      	add	r7, sp, #0
 8006ef2:	6078      	str	r0, [r7, #4]
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	617b      	str	r3, [r7, #20]
 8006ef8:	687b      	ldr	r3, [r7, #4]
 8006efa:	2b00      	cmp	r3, #0
 8006efc:	d04f      	beq.n	8006f9e <vPortFree+0xb2>
 8006efe:	2308      	movs	r3, #8
 8006f00:	425b      	negs	r3, r3
 8006f02:	697a      	ldr	r2, [r7, #20]
 8006f04:	4413      	add	r3, r2
 8006f06:	617b      	str	r3, [r7, #20]
 8006f08:	697b      	ldr	r3, [r7, #20]
 8006f0a:	613b      	str	r3, [r7, #16]
 8006f0c:	693b      	ldr	r3, [r7, #16]
 8006f0e:	685a      	ldr	r2, [r3, #4]
 8006f10:	4b25      	ldr	r3, [pc, #148]	@ (8006fa8 <vPortFree+0xbc>)
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	4013      	ands	r3, r2
 8006f16:	2b00      	cmp	r3, #0
 8006f18:	d10b      	bne.n	8006f32 <vPortFree+0x46>
 8006f1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006f1e:	f383 8811 	msr	BASEPRI, r3
 8006f22:	f3bf 8f6f 	isb	sy
 8006f26:	f3bf 8f4f 	dsb	sy
 8006f2a:	60fb      	str	r3, [r7, #12]
 8006f2c:	bf00      	nop
 8006f2e:	bf00      	nop
 8006f30:	e7fd      	b.n	8006f2e <vPortFree+0x42>
 8006f32:	693b      	ldr	r3, [r7, #16]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	2b00      	cmp	r3, #0
 8006f38:	d00b      	beq.n	8006f52 <vPortFree+0x66>
 8006f3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006f3e:	f383 8811 	msr	BASEPRI, r3
 8006f42:	f3bf 8f6f 	isb	sy
 8006f46:	f3bf 8f4f 	dsb	sy
 8006f4a:	60bb      	str	r3, [r7, #8]
 8006f4c:	bf00      	nop
 8006f4e:	bf00      	nop
 8006f50:	e7fd      	b.n	8006f4e <vPortFree+0x62>
 8006f52:	693b      	ldr	r3, [r7, #16]
 8006f54:	685a      	ldr	r2, [r3, #4]
 8006f56:	4b14      	ldr	r3, [pc, #80]	@ (8006fa8 <vPortFree+0xbc>)
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	4013      	ands	r3, r2
 8006f5c:	2b00      	cmp	r3, #0
 8006f5e:	d01e      	beq.n	8006f9e <vPortFree+0xb2>
 8006f60:	693b      	ldr	r3, [r7, #16]
 8006f62:	681b      	ldr	r3, [r3, #0]
 8006f64:	2b00      	cmp	r3, #0
 8006f66:	d11a      	bne.n	8006f9e <vPortFree+0xb2>
 8006f68:	693b      	ldr	r3, [r7, #16]
 8006f6a:	685a      	ldr	r2, [r3, #4]
 8006f6c:	4b0e      	ldr	r3, [pc, #56]	@ (8006fa8 <vPortFree+0xbc>)
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	43db      	mvns	r3, r3
 8006f72:	401a      	ands	r2, r3
 8006f74:	693b      	ldr	r3, [r7, #16]
 8006f76:	605a      	str	r2, [r3, #4]
 8006f78:	f7fe fcd0 	bl	800591c <vTaskSuspendAll>
 8006f7c:	693b      	ldr	r3, [r7, #16]
 8006f7e:	685a      	ldr	r2, [r3, #4]
 8006f80:	4b0a      	ldr	r3, [pc, #40]	@ (8006fac <vPortFree+0xc0>)
 8006f82:	681b      	ldr	r3, [r3, #0]
 8006f84:	4413      	add	r3, r2
 8006f86:	4a09      	ldr	r2, [pc, #36]	@ (8006fac <vPortFree+0xc0>)
 8006f88:	6013      	str	r3, [r2, #0]
 8006f8a:	6938      	ldr	r0, [r7, #16]
 8006f8c:	f000 f874 	bl	8007078 <prvInsertBlockIntoFreeList>
 8006f90:	4b07      	ldr	r3, [pc, #28]	@ (8006fb0 <vPortFree+0xc4>)
 8006f92:	681b      	ldr	r3, [r3, #0]
 8006f94:	3301      	adds	r3, #1
 8006f96:	4a06      	ldr	r2, [pc, #24]	@ (8006fb0 <vPortFree+0xc4>)
 8006f98:	6013      	str	r3, [r2, #0]
 8006f9a:	f7fe fccd 	bl	8005938 <xTaskResumeAll>
 8006f9e:	bf00      	nop
 8006fa0:	3718      	adds	r7, #24
 8006fa2:	46bd      	mov	sp, r7
 8006fa4:	bd80      	pop	{r7, pc}
 8006fa6:	bf00      	nop
 8006fa8:	20001dbc 	.word	0x20001dbc
 8006fac:	20001dac 	.word	0x20001dac
 8006fb0:	20001db8 	.word	0x20001db8

08006fb4 <prvHeapInit>:
 8006fb4:	b480      	push	{r7}
 8006fb6:	b085      	sub	sp, #20
 8006fb8:	af00      	add	r7, sp, #0
 8006fba:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8006fbe:	60bb      	str	r3, [r7, #8]
 8006fc0:	4b27      	ldr	r3, [pc, #156]	@ (8007060 <prvHeapInit+0xac>)
 8006fc2:	60fb      	str	r3, [r7, #12]
 8006fc4:	68fb      	ldr	r3, [r7, #12]
 8006fc6:	f003 0307 	and.w	r3, r3, #7
 8006fca:	2b00      	cmp	r3, #0
 8006fcc:	d00c      	beq.n	8006fe8 <prvHeapInit+0x34>
 8006fce:	68fb      	ldr	r3, [r7, #12]
 8006fd0:	3307      	adds	r3, #7
 8006fd2:	60fb      	str	r3, [r7, #12]
 8006fd4:	68fb      	ldr	r3, [r7, #12]
 8006fd6:	f023 0307 	bic.w	r3, r3, #7
 8006fda:	60fb      	str	r3, [r7, #12]
 8006fdc:	68ba      	ldr	r2, [r7, #8]
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	1ad3      	subs	r3, r2, r3
 8006fe2:	4a1f      	ldr	r2, [pc, #124]	@ (8007060 <prvHeapInit+0xac>)
 8006fe4:	4413      	add	r3, r2
 8006fe6:	60bb      	str	r3, [r7, #8]
 8006fe8:	68fb      	ldr	r3, [r7, #12]
 8006fea:	607b      	str	r3, [r7, #4]
 8006fec:	4a1d      	ldr	r2, [pc, #116]	@ (8007064 <prvHeapInit+0xb0>)
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	6013      	str	r3, [r2, #0]
 8006ff2:	4b1c      	ldr	r3, [pc, #112]	@ (8007064 <prvHeapInit+0xb0>)
 8006ff4:	2200      	movs	r2, #0
 8006ff6:	605a      	str	r2, [r3, #4]
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	68ba      	ldr	r2, [r7, #8]
 8006ffc:	4413      	add	r3, r2
 8006ffe:	60fb      	str	r3, [r7, #12]
 8007000:	2208      	movs	r2, #8
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	1a9b      	subs	r3, r3, r2
 8007006:	60fb      	str	r3, [r7, #12]
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	f023 0307 	bic.w	r3, r3, #7
 800700e:	60fb      	str	r3, [r7, #12]
 8007010:	68fb      	ldr	r3, [r7, #12]
 8007012:	4a15      	ldr	r2, [pc, #84]	@ (8007068 <prvHeapInit+0xb4>)
 8007014:	6013      	str	r3, [r2, #0]
 8007016:	4b14      	ldr	r3, [pc, #80]	@ (8007068 <prvHeapInit+0xb4>)
 8007018:	681b      	ldr	r3, [r3, #0]
 800701a:	2200      	movs	r2, #0
 800701c:	605a      	str	r2, [r3, #4]
 800701e:	4b12      	ldr	r3, [pc, #72]	@ (8007068 <prvHeapInit+0xb4>)
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	2200      	movs	r2, #0
 8007024:	601a      	str	r2, [r3, #0]
 8007026:	687b      	ldr	r3, [r7, #4]
 8007028:	603b      	str	r3, [r7, #0]
 800702a:	683b      	ldr	r3, [r7, #0]
 800702c:	68fa      	ldr	r2, [r7, #12]
 800702e:	1ad2      	subs	r2, r2, r3
 8007030:	683b      	ldr	r3, [r7, #0]
 8007032:	605a      	str	r2, [r3, #4]
 8007034:	4b0c      	ldr	r3, [pc, #48]	@ (8007068 <prvHeapInit+0xb4>)
 8007036:	681a      	ldr	r2, [r3, #0]
 8007038:	683b      	ldr	r3, [r7, #0]
 800703a:	601a      	str	r2, [r3, #0]
 800703c:	683b      	ldr	r3, [r7, #0]
 800703e:	685b      	ldr	r3, [r3, #4]
 8007040:	4a0a      	ldr	r2, [pc, #40]	@ (800706c <prvHeapInit+0xb8>)
 8007042:	6013      	str	r3, [r2, #0]
 8007044:	683b      	ldr	r3, [r7, #0]
 8007046:	685b      	ldr	r3, [r3, #4]
 8007048:	4a09      	ldr	r2, [pc, #36]	@ (8007070 <prvHeapInit+0xbc>)
 800704a:	6013      	str	r3, [r2, #0]
 800704c:	4b09      	ldr	r3, [pc, #36]	@ (8007074 <prvHeapInit+0xc0>)
 800704e:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8007052:	601a      	str	r2, [r3, #0]
 8007054:	bf00      	nop
 8007056:	3714      	adds	r7, #20
 8007058:	46bd      	mov	sp, r7
 800705a:	bc80      	pop	{r7}
 800705c:	4770      	bx	lr
 800705e:	bf00      	nop
 8007060:	200011a0 	.word	0x200011a0
 8007064:	20001da0 	.word	0x20001da0
 8007068:	20001da8 	.word	0x20001da8
 800706c:	20001db0 	.word	0x20001db0
 8007070:	20001dac 	.word	0x20001dac
 8007074:	20001dbc 	.word	0x20001dbc

08007078 <prvInsertBlockIntoFreeList>:
 8007078:	b480      	push	{r7}
 800707a:	b085      	sub	sp, #20
 800707c:	af00      	add	r7, sp, #0
 800707e:	6078      	str	r0, [r7, #4]
 8007080:	4b27      	ldr	r3, [pc, #156]	@ (8007120 <prvInsertBlockIntoFreeList+0xa8>)
 8007082:	60fb      	str	r3, [r7, #12]
 8007084:	e002      	b.n	800708c <prvInsertBlockIntoFreeList+0x14>
 8007086:	68fb      	ldr	r3, [r7, #12]
 8007088:	681b      	ldr	r3, [r3, #0]
 800708a:	60fb      	str	r3, [r7, #12]
 800708c:	68fb      	ldr	r3, [r7, #12]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	687a      	ldr	r2, [r7, #4]
 8007092:	429a      	cmp	r2, r3
 8007094:	d8f7      	bhi.n	8007086 <prvInsertBlockIntoFreeList+0xe>
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	60bb      	str	r3, [r7, #8]
 800709a:	68fb      	ldr	r3, [r7, #12]
 800709c:	685b      	ldr	r3, [r3, #4]
 800709e:	68ba      	ldr	r2, [r7, #8]
 80070a0:	4413      	add	r3, r2
 80070a2:	687a      	ldr	r2, [r7, #4]
 80070a4:	429a      	cmp	r2, r3
 80070a6:	d108      	bne.n	80070ba <prvInsertBlockIntoFreeList+0x42>
 80070a8:	68fb      	ldr	r3, [r7, #12]
 80070aa:	685a      	ldr	r2, [r3, #4]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	685b      	ldr	r3, [r3, #4]
 80070b0:	441a      	add	r2, r3
 80070b2:	68fb      	ldr	r3, [r7, #12]
 80070b4:	605a      	str	r2, [r3, #4]
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	607b      	str	r3, [r7, #4]
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	60bb      	str	r3, [r7, #8]
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	685b      	ldr	r3, [r3, #4]
 80070c2:	68ba      	ldr	r2, [r7, #8]
 80070c4:	441a      	add	r2, r3
 80070c6:	68fb      	ldr	r3, [r7, #12]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	429a      	cmp	r2, r3
 80070cc:	d118      	bne.n	8007100 <prvInsertBlockIntoFreeList+0x88>
 80070ce:	68fb      	ldr	r3, [r7, #12]
 80070d0:	681a      	ldr	r2, [r3, #0]
 80070d2:	4b14      	ldr	r3, [pc, #80]	@ (8007124 <prvInsertBlockIntoFreeList+0xac>)
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	429a      	cmp	r2, r3
 80070d8:	d00d      	beq.n	80070f6 <prvInsertBlockIntoFreeList+0x7e>
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	685a      	ldr	r2, [r3, #4]
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	685b      	ldr	r3, [r3, #4]
 80070e4:	441a      	add	r2, r3
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	605a      	str	r2, [r3, #4]
 80070ea:	68fb      	ldr	r3, [r7, #12]
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	681a      	ldr	r2, [r3, #0]
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	601a      	str	r2, [r3, #0]
 80070f4:	e008      	b.n	8007108 <prvInsertBlockIntoFreeList+0x90>
 80070f6:	4b0b      	ldr	r3, [pc, #44]	@ (8007124 <prvInsertBlockIntoFreeList+0xac>)
 80070f8:	681a      	ldr	r2, [r3, #0]
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	601a      	str	r2, [r3, #0]
 80070fe:	e003      	b.n	8007108 <prvInsertBlockIntoFreeList+0x90>
 8007100:	68fb      	ldr	r3, [r7, #12]
 8007102:	681a      	ldr	r2, [r3, #0]
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	601a      	str	r2, [r3, #0]
 8007108:	68fa      	ldr	r2, [r7, #12]
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	429a      	cmp	r2, r3
 800710e:	d002      	beq.n	8007116 <prvInsertBlockIntoFreeList+0x9e>
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	687a      	ldr	r2, [r7, #4]
 8007114:	601a      	str	r2, [r3, #0]
 8007116:	bf00      	nop
 8007118:	3714      	adds	r7, #20
 800711a:	46bd      	mov	sp, r7
 800711c:	bc80      	pop	{r7}
 800711e:	4770      	bx	lr
 8007120:	20001da0 	.word	0x20001da0
 8007124:	20001da8 	.word	0x20001da8

08007128 <memset>:
 8007128:	4603      	mov	r3, r0
 800712a:	4402      	add	r2, r0
 800712c:	4293      	cmp	r3, r2
 800712e:	d100      	bne.n	8007132 <memset+0xa>
 8007130:	4770      	bx	lr
 8007132:	f803 1b01 	strb.w	r1, [r3], #1
 8007136:	e7f9      	b.n	800712c <memset+0x4>

08007138 <_reclaim_reent>:
 8007138:	4b2d      	ldr	r3, [pc, #180]	@ (80071f0 <_reclaim_reent+0xb8>)
 800713a:	b570      	push	{r4, r5, r6, lr}
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	4604      	mov	r4, r0
 8007140:	4283      	cmp	r3, r0
 8007142:	d053      	beq.n	80071ec <_reclaim_reent+0xb4>
 8007144:	69c3      	ldr	r3, [r0, #28]
 8007146:	b31b      	cbz	r3, 8007190 <_reclaim_reent+0x58>
 8007148:	68db      	ldr	r3, [r3, #12]
 800714a:	b163      	cbz	r3, 8007166 <_reclaim_reent+0x2e>
 800714c:	2500      	movs	r5, #0
 800714e:	69e3      	ldr	r3, [r4, #28]
 8007150:	68db      	ldr	r3, [r3, #12]
 8007152:	5959      	ldr	r1, [r3, r5]
 8007154:	b9b1      	cbnz	r1, 8007184 <_reclaim_reent+0x4c>
 8007156:	3504      	adds	r5, #4
 8007158:	2d80      	cmp	r5, #128	@ 0x80
 800715a:	d1f8      	bne.n	800714e <_reclaim_reent+0x16>
 800715c:	69e3      	ldr	r3, [r4, #28]
 800715e:	4620      	mov	r0, r4
 8007160:	68d9      	ldr	r1, [r3, #12]
 8007162:	f000 f87b 	bl	800725c <_free_r>
 8007166:	69e3      	ldr	r3, [r4, #28]
 8007168:	6819      	ldr	r1, [r3, #0]
 800716a:	b111      	cbz	r1, 8007172 <_reclaim_reent+0x3a>
 800716c:	4620      	mov	r0, r4
 800716e:	f000 f875 	bl	800725c <_free_r>
 8007172:	69e3      	ldr	r3, [r4, #28]
 8007174:	689d      	ldr	r5, [r3, #8]
 8007176:	b15d      	cbz	r5, 8007190 <_reclaim_reent+0x58>
 8007178:	4629      	mov	r1, r5
 800717a:	4620      	mov	r0, r4
 800717c:	682d      	ldr	r5, [r5, #0]
 800717e:	f000 f86d 	bl	800725c <_free_r>
 8007182:	e7f8      	b.n	8007176 <_reclaim_reent+0x3e>
 8007184:	680e      	ldr	r6, [r1, #0]
 8007186:	4620      	mov	r0, r4
 8007188:	f000 f868 	bl	800725c <_free_r>
 800718c:	4631      	mov	r1, r6
 800718e:	e7e1      	b.n	8007154 <_reclaim_reent+0x1c>
 8007190:	6961      	ldr	r1, [r4, #20]
 8007192:	b111      	cbz	r1, 800719a <_reclaim_reent+0x62>
 8007194:	4620      	mov	r0, r4
 8007196:	f000 f861 	bl	800725c <_free_r>
 800719a:	69e1      	ldr	r1, [r4, #28]
 800719c:	b111      	cbz	r1, 80071a4 <_reclaim_reent+0x6c>
 800719e:	4620      	mov	r0, r4
 80071a0:	f000 f85c 	bl	800725c <_free_r>
 80071a4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80071a6:	b111      	cbz	r1, 80071ae <_reclaim_reent+0x76>
 80071a8:	4620      	mov	r0, r4
 80071aa:	f000 f857 	bl	800725c <_free_r>
 80071ae:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80071b0:	b111      	cbz	r1, 80071b8 <_reclaim_reent+0x80>
 80071b2:	4620      	mov	r0, r4
 80071b4:	f000 f852 	bl	800725c <_free_r>
 80071b8:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 80071ba:	b111      	cbz	r1, 80071c2 <_reclaim_reent+0x8a>
 80071bc:	4620      	mov	r0, r4
 80071be:	f000 f84d 	bl	800725c <_free_r>
 80071c2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 80071c4:	b111      	cbz	r1, 80071cc <_reclaim_reent+0x94>
 80071c6:	4620      	mov	r0, r4
 80071c8:	f000 f848 	bl	800725c <_free_r>
 80071cc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80071ce:	b111      	cbz	r1, 80071d6 <_reclaim_reent+0x9e>
 80071d0:	4620      	mov	r0, r4
 80071d2:	f000 f843 	bl	800725c <_free_r>
 80071d6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80071d8:	b111      	cbz	r1, 80071e0 <_reclaim_reent+0xa8>
 80071da:	4620      	mov	r0, r4
 80071dc:	f000 f83e 	bl	800725c <_free_r>
 80071e0:	6a23      	ldr	r3, [r4, #32]
 80071e2:	b11b      	cbz	r3, 80071ec <_reclaim_reent+0xb4>
 80071e4:	4620      	mov	r0, r4
 80071e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80071ea:	4718      	bx	r3
 80071ec:	bd70      	pop	{r4, r5, r6, pc}
 80071ee:	bf00      	nop
 80071f0:	20000014 	.word	0x20000014

080071f4 <__libc_init_array>:
 80071f4:	b570      	push	{r4, r5, r6, lr}
 80071f6:	2600      	movs	r6, #0
 80071f8:	4d0c      	ldr	r5, [pc, #48]	@ (800722c <__libc_init_array+0x38>)
 80071fa:	4c0d      	ldr	r4, [pc, #52]	@ (8007230 <__libc_init_array+0x3c>)
 80071fc:	1b64      	subs	r4, r4, r5
 80071fe:	10a4      	asrs	r4, r4, #2
 8007200:	42a6      	cmp	r6, r4
 8007202:	d109      	bne.n	8007218 <__libc_init_array+0x24>
 8007204:	f000 f87e 	bl	8007304 <_init>
 8007208:	2600      	movs	r6, #0
 800720a:	4d0a      	ldr	r5, [pc, #40]	@ (8007234 <__libc_init_array+0x40>)
 800720c:	4c0a      	ldr	r4, [pc, #40]	@ (8007238 <__libc_init_array+0x44>)
 800720e:	1b64      	subs	r4, r4, r5
 8007210:	10a4      	asrs	r4, r4, #2
 8007212:	42a6      	cmp	r6, r4
 8007214:	d105      	bne.n	8007222 <__libc_init_array+0x2e>
 8007216:	bd70      	pop	{r4, r5, r6, pc}
 8007218:	f855 3b04 	ldr.w	r3, [r5], #4
 800721c:	4798      	blx	r3
 800721e:	3601      	adds	r6, #1
 8007220:	e7ee      	b.n	8007200 <__libc_init_array+0xc>
 8007222:	f855 3b04 	ldr.w	r3, [r5], #4
 8007226:	4798      	blx	r3
 8007228:	3601      	adds	r6, #1
 800722a:	e7f2      	b.n	8007212 <__libc_init_array+0x1e>
 800722c:	080073d0 	.word	0x080073d0
 8007230:	080073d0 	.word	0x080073d0
 8007234:	080073d0 	.word	0x080073d0
 8007238:	080073d4 	.word	0x080073d4

0800723c <__retarget_lock_acquire_recursive>:
 800723c:	4770      	bx	lr

0800723e <__retarget_lock_release_recursive>:
 800723e:	4770      	bx	lr

08007240 <memcpy>:
 8007240:	440a      	add	r2, r1
 8007242:	4291      	cmp	r1, r2
 8007244:	f100 33ff 	add.w	r3, r0, #4294967295
 8007248:	d100      	bne.n	800724c <memcpy+0xc>
 800724a:	4770      	bx	lr
 800724c:	b510      	push	{r4, lr}
 800724e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007252:	4291      	cmp	r1, r2
 8007254:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007258:	d1f9      	bne.n	800724e <memcpy+0xe>
 800725a:	bd10      	pop	{r4, pc}

0800725c <_free_r>:
 800725c:	b538      	push	{r3, r4, r5, lr}
 800725e:	4605      	mov	r5, r0
 8007260:	2900      	cmp	r1, #0
 8007262:	d040      	beq.n	80072e6 <_free_r+0x8a>
 8007264:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007268:	1f0c      	subs	r4, r1, #4
 800726a:	2b00      	cmp	r3, #0
 800726c:	bfb8      	it	lt
 800726e:	18e4      	addlt	r4, r4, r3
 8007270:	f000 f83c 	bl	80072ec <__malloc_lock>
 8007274:	4a1c      	ldr	r2, [pc, #112]	@ (80072e8 <_free_r+0x8c>)
 8007276:	6813      	ldr	r3, [r2, #0]
 8007278:	b933      	cbnz	r3, 8007288 <_free_r+0x2c>
 800727a:	6063      	str	r3, [r4, #4]
 800727c:	6014      	str	r4, [r2, #0]
 800727e:	4628      	mov	r0, r5
 8007280:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007284:	f000 b838 	b.w	80072f8 <__malloc_unlock>
 8007288:	42a3      	cmp	r3, r4
 800728a:	d908      	bls.n	800729e <_free_r+0x42>
 800728c:	6820      	ldr	r0, [r4, #0]
 800728e:	1821      	adds	r1, r4, r0
 8007290:	428b      	cmp	r3, r1
 8007292:	bf01      	itttt	eq
 8007294:	6819      	ldreq	r1, [r3, #0]
 8007296:	685b      	ldreq	r3, [r3, #4]
 8007298:	1809      	addeq	r1, r1, r0
 800729a:	6021      	streq	r1, [r4, #0]
 800729c:	e7ed      	b.n	800727a <_free_r+0x1e>
 800729e:	461a      	mov	r2, r3
 80072a0:	685b      	ldr	r3, [r3, #4]
 80072a2:	b10b      	cbz	r3, 80072a8 <_free_r+0x4c>
 80072a4:	42a3      	cmp	r3, r4
 80072a6:	d9fa      	bls.n	800729e <_free_r+0x42>
 80072a8:	6811      	ldr	r1, [r2, #0]
 80072aa:	1850      	adds	r0, r2, r1
 80072ac:	42a0      	cmp	r0, r4
 80072ae:	d10b      	bne.n	80072c8 <_free_r+0x6c>
 80072b0:	6820      	ldr	r0, [r4, #0]
 80072b2:	4401      	add	r1, r0
 80072b4:	1850      	adds	r0, r2, r1
 80072b6:	4283      	cmp	r3, r0
 80072b8:	6011      	str	r1, [r2, #0]
 80072ba:	d1e0      	bne.n	800727e <_free_r+0x22>
 80072bc:	6818      	ldr	r0, [r3, #0]
 80072be:	685b      	ldr	r3, [r3, #4]
 80072c0:	4408      	add	r0, r1
 80072c2:	6010      	str	r0, [r2, #0]
 80072c4:	6053      	str	r3, [r2, #4]
 80072c6:	e7da      	b.n	800727e <_free_r+0x22>
 80072c8:	d902      	bls.n	80072d0 <_free_r+0x74>
 80072ca:	230c      	movs	r3, #12
 80072cc:	602b      	str	r3, [r5, #0]
 80072ce:	e7d6      	b.n	800727e <_free_r+0x22>
 80072d0:	6820      	ldr	r0, [r4, #0]
 80072d2:	1821      	adds	r1, r4, r0
 80072d4:	428b      	cmp	r3, r1
 80072d6:	bf01      	itttt	eq
 80072d8:	6819      	ldreq	r1, [r3, #0]
 80072da:	685b      	ldreq	r3, [r3, #4]
 80072dc:	1809      	addeq	r1, r1, r0
 80072de:	6021      	streq	r1, [r4, #0]
 80072e0:	6063      	str	r3, [r4, #4]
 80072e2:	6054      	str	r4, [r2, #4]
 80072e4:	e7cb      	b.n	800727e <_free_r+0x22>
 80072e6:	bd38      	pop	{r3, r4, r5, pc}
 80072e8:	20001efc 	.word	0x20001efc

080072ec <__malloc_lock>:
 80072ec:	4801      	ldr	r0, [pc, #4]	@ (80072f4 <__malloc_lock+0x8>)
 80072ee:	f7ff bfa5 	b.w	800723c <__retarget_lock_acquire_recursive>
 80072f2:	bf00      	nop
 80072f4:	20001ef8 	.word	0x20001ef8

080072f8 <__malloc_unlock>:
 80072f8:	4801      	ldr	r0, [pc, #4]	@ (8007300 <__malloc_unlock+0x8>)
 80072fa:	f7ff bfa0 	b.w	800723e <__retarget_lock_release_recursive>
 80072fe:	bf00      	nop
 8007300:	20001ef8 	.word	0x20001ef8

08007304 <_init>:
 8007304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007306:	bf00      	nop
 8007308:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800730a:	bc08      	pop	{r3}
 800730c:	469e      	mov	lr, r3
 800730e:	4770      	bx	lr

08007310 <_fini>:
 8007310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007312:	bf00      	nop
 8007314:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007316:	bc08      	pop	{r3}
 8007318:	469e      	mov	lr, r3
 800731a:	4770      	bx	lr
