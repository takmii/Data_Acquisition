
Data_Acquisition.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000078ec  08000110  08000110  00001110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e0  080079fc  080079fc  000089fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007adc  08007adc  00009064  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08007adc  08007adc  00009064  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08007adc  08007adc  00009064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007adc  08007adc  00008adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08007ae0  08007ae0  00008ae0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  08007ae4  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001d34  20000064  08007b48  00009064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20001d98  08007b48  00009d98  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00009064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00018623  00000000  00000000  0000908d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000416e  00000000  00000000  000216b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001540  00000000  00000000  00025820  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000103e  00000000  00000000  00026d60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001bac9  00000000  00000000  00027d9e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019b95  00000000  00000000  00043867  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009ac70  00000000  00000000  0005d3fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000f806c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005c34  00000000  00000000  000f80b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000fdce4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000064 	.word	0x20000064
 800012c:	00000000 	.word	0x00000000
 8000130:	080079e4 	.word	0x080079e4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	20000068 	.word	0x20000068
 800014c:	080079e4 	.word	0x080079e4

08000150 <__aeabi_frsub>:
 8000150:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000154:	e002      	b.n	800015c <__addsf3>
 8000156:	bf00      	nop

08000158 <__aeabi_fsub>:
 8000158:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

0800015c <__addsf3>:
 800015c:	0042      	lsls	r2, r0, #1
 800015e:	bf1f      	itttt	ne
 8000160:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000164:	ea92 0f03 	teqne	r2, r3
 8000168:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 800016c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000170:	d06a      	beq.n	8000248 <__addsf3+0xec>
 8000172:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000176:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 800017a:	bfc1      	itttt	gt
 800017c:	18d2      	addgt	r2, r2, r3
 800017e:	4041      	eorgt	r1, r0
 8000180:	4048      	eorgt	r0, r1
 8000182:	4041      	eorgt	r1, r0
 8000184:	bfb8      	it	lt
 8000186:	425b      	neglt	r3, r3
 8000188:	2b19      	cmp	r3, #25
 800018a:	bf88      	it	hi
 800018c:	4770      	bxhi	lr
 800018e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000192:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000196:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 800019a:	bf18      	it	ne
 800019c:	4240      	negne	r0, r0
 800019e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001a2:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80001a6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80001aa:	bf18      	it	ne
 80001ac:	4249      	negne	r1, r1
 80001ae:	ea92 0f03 	teq	r2, r3
 80001b2:	d03f      	beq.n	8000234 <__addsf3+0xd8>
 80001b4:	f1a2 0201 	sub.w	r2, r2, #1
 80001b8:	fa41 fc03 	asr.w	ip, r1, r3
 80001bc:	eb10 000c 	adds.w	r0, r0, ip
 80001c0:	f1c3 0320 	rsb	r3, r3, #32
 80001c4:	fa01 f103 	lsl.w	r1, r1, r3
 80001c8:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 80001cc:	d502      	bpl.n	80001d4 <__addsf3+0x78>
 80001ce:	4249      	negs	r1, r1
 80001d0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80001d4:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 80001d8:	d313      	bcc.n	8000202 <__addsf3+0xa6>
 80001da:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 80001de:	d306      	bcc.n	80001ee <__addsf3+0x92>
 80001e0:	0840      	lsrs	r0, r0, #1
 80001e2:	ea4f 0131 	mov.w	r1, r1, rrx
 80001e6:	f102 0201 	add.w	r2, r2, #1
 80001ea:	2afe      	cmp	r2, #254	@ 0xfe
 80001ec:	d251      	bcs.n	8000292 <__addsf3+0x136>
 80001ee:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 80001f2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001f6:	bf08      	it	eq
 80001f8:	f020 0001 	biceq.w	r0, r0, #1
 80001fc:	ea40 0003 	orr.w	r0, r0, r3
 8000200:	4770      	bx	lr
 8000202:	0049      	lsls	r1, r1, #1
 8000204:	eb40 0000 	adc.w	r0, r0, r0
 8000208:	3a01      	subs	r2, #1
 800020a:	bf28      	it	cs
 800020c:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000210:	d2ed      	bcs.n	80001ee <__addsf3+0x92>
 8000212:	fab0 fc80 	clz	ip, r0
 8000216:	f1ac 0c08 	sub.w	ip, ip, #8
 800021a:	ebb2 020c 	subs.w	r2, r2, ip
 800021e:	fa00 f00c 	lsl.w	r0, r0, ip
 8000222:	bfaa      	itet	ge
 8000224:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000228:	4252      	neglt	r2, r2
 800022a:	4318      	orrge	r0, r3
 800022c:	bfbc      	itt	lt
 800022e:	40d0      	lsrlt	r0, r2
 8000230:	4318      	orrlt	r0, r3
 8000232:	4770      	bx	lr
 8000234:	f092 0f00 	teq	r2, #0
 8000238:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 800023c:	bf06      	itte	eq
 800023e:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000242:	3201      	addeq	r2, #1
 8000244:	3b01      	subne	r3, #1
 8000246:	e7b5      	b.n	80001b4 <__addsf3+0x58>
 8000248:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800024c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000250:	bf18      	it	ne
 8000252:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000256:	d021      	beq.n	800029c <__addsf3+0x140>
 8000258:	ea92 0f03 	teq	r2, r3
 800025c:	d004      	beq.n	8000268 <__addsf3+0x10c>
 800025e:	f092 0f00 	teq	r2, #0
 8000262:	bf08      	it	eq
 8000264:	4608      	moveq	r0, r1
 8000266:	4770      	bx	lr
 8000268:	ea90 0f01 	teq	r0, r1
 800026c:	bf1c      	itt	ne
 800026e:	2000      	movne	r0, #0
 8000270:	4770      	bxne	lr
 8000272:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000276:	d104      	bne.n	8000282 <__addsf3+0x126>
 8000278:	0040      	lsls	r0, r0, #1
 800027a:	bf28      	it	cs
 800027c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000280:	4770      	bx	lr
 8000282:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000286:	bf3c      	itt	cc
 8000288:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 800028c:	4770      	bxcc	lr
 800028e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000292:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000296:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 800029a:	4770      	bx	lr
 800029c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80002a0:	bf16      	itet	ne
 80002a2:	4608      	movne	r0, r1
 80002a4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80002a8:	4601      	movne	r1, r0
 80002aa:	0242      	lsls	r2, r0, #9
 80002ac:	bf06      	itte	eq
 80002ae:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80002b2:	ea90 0f01 	teqeq	r0, r1
 80002b6:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 80002ba:	4770      	bx	lr

080002bc <__aeabi_ui2f>:
 80002bc:	f04f 0300 	mov.w	r3, #0
 80002c0:	e004      	b.n	80002cc <__aeabi_i2f+0x8>
 80002c2:	bf00      	nop

080002c4 <__aeabi_i2f>:
 80002c4:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 80002c8:	bf48      	it	mi
 80002ca:	4240      	negmi	r0, r0
 80002cc:	ea5f 0c00 	movs.w	ip, r0
 80002d0:	bf08      	it	eq
 80002d2:	4770      	bxeq	lr
 80002d4:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 80002d8:	4601      	mov	r1, r0
 80002da:	f04f 0000 	mov.w	r0, #0
 80002de:	e01c      	b.n	800031a <__aeabi_l2f+0x2a>

080002e0 <__aeabi_ul2f>:
 80002e0:	ea50 0201 	orrs.w	r2, r0, r1
 80002e4:	bf08      	it	eq
 80002e6:	4770      	bxeq	lr
 80002e8:	f04f 0300 	mov.w	r3, #0
 80002ec:	e00a      	b.n	8000304 <__aeabi_l2f+0x14>
 80002ee:	bf00      	nop

080002f0 <__aeabi_l2f>:
 80002f0:	ea50 0201 	orrs.w	r2, r0, r1
 80002f4:	bf08      	it	eq
 80002f6:	4770      	bxeq	lr
 80002f8:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 80002fc:	d502      	bpl.n	8000304 <__aeabi_l2f+0x14>
 80002fe:	4240      	negs	r0, r0
 8000300:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000304:	ea5f 0c01 	movs.w	ip, r1
 8000308:	bf02      	ittt	eq
 800030a:	4684      	moveq	ip, r0
 800030c:	4601      	moveq	r1, r0
 800030e:	2000      	moveq	r0, #0
 8000310:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000314:	bf08      	it	eq
 8000316:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 800031a:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 800031e:	fabc f28c 	clz	r2, ip
 8000322:	3a08      	subs	r2, #8
 8000324:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000328:	db10      	blt.n	800034c <__aeabi_l2f+0x5c>
 800032a:	fa01 fc02 	lsl.w	ip, r1, r2
 800032e:	4463      	add	r3, ip
 8000330:	fa00 fc02 	lsl.w	ip, r0, r2
 8000334:	f1c2 0220 	rsb	r2, r2, #32
 8000338:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800033c:	fa20 f202 	lsr.w	r2, r0, r2
 8000340:	eb43 0002 	adc.w	r0, r3, r2
 8000344:	bf08      	it	eq
 8000346:	f020 0001 	biceq.w	r0, r0, #1
 800034a:	4770      	bx	lr
 800034c:	f102 0220 	add.w	r2, r2, #32
 8000350:	fa01 fc02 	lsl.w	ip, r1, r2
 8000354:	f1c2 0220 	rsb	r2, r2, #32
 8000358:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 800035c:	fa21 f202 	lsr.w	r2, r1, r2
 8000360:	eb43 0002 	adc.w	r0, r3, r2
 8000364:	bf08      	it	eq
 8000366:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800036a:	4770      	bx	lr

0800036c <__aeabi_fmul>:
 800036c:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000370:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000374:	bf1e      	ittt	ne
 8000376:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800037a:	ea92 0f0c 	teqne	r2, ip
 800037e:	ea93 0f0c 	teqne	r3, ip
 8000382:	d06f      	beq.n	8000464 <__aeabi_fmul+0xf8>
 8000384:	441a      	add	r2, r3
 8000386:	ea80 0c01 	eor.w	ip, r0, r1
 800038a:	0240      	lsls	r0, r0, #9
 800038c:	bf18      	it	ne
 800038e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000392:	d01e      	beq.n	80003d2 <__aeabi_fmul+0x66>
 8000394:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000398:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800039c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80003a0:	fba0 3101 	umull	r3, r1, r0, r1
 80003a4:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80003a8:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80003ac:	bf3e      	ittt	cc
 80003ae:	0049      	lslcc	r1, r1, #1
 80003b0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80003b4:	005b      	lslcc	r3, r3, #1
 80003b6:	ea40 0001 	orr.w	r0, r0, r1
 80003ba:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80003be:	2afd      	cmp	r2, #253	@ 0xfd
 80003c0:	d81d      	bhi.n	80003fe <__aeabi_fmul+0x92>
 80003c2:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80003c6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003ca:	bf08      	it	eq
 80003cc:	f020 0001 	biceq.w	r0, r0, #1
 80003d0:	4770      	bx	lr
 80003d2:	f090 0f00 	teq	r0, #0
 80003d6:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80003da:	bf08      	it	eq
 80003dc:	0249      	lsleq	r1, r1, #9
 80003de:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80003e2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80003e6:	3a7f      	subs	r2, #127	@ 0x7f
 80003e8:	bfc2      	ittt	gt
 80003ea:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 80003ee:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80003f2:	4770      	bxgt	lr
 80003f4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80003f8:	f04f 0300 	mov.w	r3, #0
 80003fc:	3a01      	subs	r2, #1
 80003fe:	dc5d      	bgt.n	80004bc <__aeabi_fmul+0x150>
 8000400:	f112 0f19 	cmn.w	r2, #25
 8000404:	bfdc      	itt	le
 8000406:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 800040a:	4770      	bxle	lr
 800040c:	f1c2 0200 	rsb	r2, r2, #0
 8000410:	0041      	lsls	r1, r0, #1
 8000412:	fa21 f102 	lsr.w	r1, r1, r2
 8000416:	f1c2 0220 	rsb	r2, r2, #32
 800041a:	fa00 fc02 	lsl.w	ip, r0, r2
 800041e:	ea5f 0031 	movs.w	r0, r1, rrx
 8000422:	f140 0000 	adc.w	r0, r0, #0
 8000426:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800042a:	bf08      	it	eq
 800042c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000430:	4770      	bx	lr
 8000432:	f092 0f00 	teq	r2, #0
 8000436:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800043a:	bf02      	ittt	eq
 800043c:	0040      	lsleq	r0, r0, #1
 800043e:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000442:	3a01      	subeq	r2, #1
 8000444:	d0f9      	beq.n	800043a <__aeabi_fmul+0xce>
 8000446:	ea40 000c 	orr.w	r0, r0, ip
 800044a:	f093 0f00 	teq	r3, #0
 800044e:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000452:	bf02      	ittt	eq
 8000454:	0049      	lsleq	r1, r1, #1
 8000456:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800045a:	3b01      	subeq	r3, #1
 800045c:	d0f9      	beq.n	8000452 <__aeabi_fmul+0xe6>
 800045e:	ea41 010c 	orr.w	r1, r1, ip
 8000462:	e78f      	b.n	8000384 <__aeabi_fmul+0x18>
 8000464:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000468:	ea92 0f0c 	teq	r2, ip
 800046c:	bf18      	it	ne
 800046e:	ea93 0f0c 	teqne	r3, ip
 8000472:	d00a      	beq.n	800048a <__aeabi_fmul+0x11e>
 8000474:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000478:	bf18      	it	ne
 800047a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800047e:	d1d8      	bne.n	8000432 <__aeabi_fmul+0xc6>
 8000480:	ea80 0001 	eor.w	r0, r0, r1
 8000484:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000488:	4770      	bx	lr
 800048a:	f090 0f00 	teq	r0, #0
 800048e:	bf17      	itett	ne
 8000490:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000494:	4608      	moveq	r0, r1
 8000496:	f091 0f00 	teqne	r1, #0
 800049a:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 800049e:	d014      	beq.n	80004ca <__aeabi_fmul+0x15e>
 80004a0:	ea92 0f0c 	teq	r2, ip
 80004a4:	d101      	bne.n	80004aa <__aeabi_fmul+0x13e>
 80004a6:	0242      	lsls	r2, r0, #9
 80004a8:	d10f      	bne.n	80004ca <__aeabi_fmul+0x15e>
 80004aa:	ea93 0f0c 	teq	r3, ip
 80004ae:	d103      	bne.n	80004b8 <__aeabi_fmul+0x14c>
 80004b0:	024b      	lsls	r3, r1, #9
 80004b2:	bf18      	it	ne
 80004b4:	4608      	movne	r0, r1
 80004b6:	d108      	bne.n	80004ca <__aeabi_fmul+0x15e>
 80004b8:	ea80 0001 	eor.w	r0, r0, r1
 80004bc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80004c0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80004c4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80004c8:	4770      	bx	lr
 80004ca:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80004ce:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80004d2:	4770      	bx	lr

080004d4 <__aeabi_fdiv>:
 80004d4:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004d8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80004dc:	bf1e      	ittt	ne
 80004de:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80004e2:	ea92 0f0c 	teqne	r2, ip
 80004e6:	ea93 0f0c 	teqne	r3, ip
 80004ea:	d069      	beq.n	80005c0 <__aeabi_fdiv+0xec>
 80004ec:	eba2 0203 	sub.w	r2, r2, r3
 80004f0:	ea80 0c01 	eor.w	ip, r0, r1
 80004f4:	0249      	lsls	r1, r1, #9
 80004f6:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80004fa:	d037      	beq.n	800056c <__aeabi_fdiv+0x98>
 80004fc:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000500:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000504:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000508:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 800050c:	428b      	cmp	r3, r1
 800050e:	bf38      	it	cc
 8000510:	005b      	lslcc	r3, r3, #1
 8000512:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000516:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 800051a:	428b      	cmp	r3, r1
 800051c:	bf24      	itt	cs
 800051e:	1a5b      	subcs	r3, r3, r1
 8000520:	ea40 000c 	orrcs.w	r0, r0, ip
 8000524:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000528:	bf24      	itt	cs
 800052a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800052e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000532:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000536:	bf24      	itt	cs
 8000538:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 800053c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000540:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000544:	bf24      	itt	cs
 8000546:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800054a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800054e:	011b      	lsls	r3, r3, #4
 8000550:	bf18      	it	ne
 8000552:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000556:	d1e0      	bne.n	800051a <__aeabi_fdiv+0x46>
 8000558:	2afd      	cmp	r2, #253	@ 0xfd
 800055a:	f63f af50 	bhi.w	80003fe <__aeabi_fmul+0x92>
 800055e:	428b      	cmp	r3, r1
 8000560:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000564:	bf08      	it	eq
 8000566:	f020 0001 	biceq.w	r0, r0, #1
 800056a:	4770      	bx	lr
 800056c:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000570:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000574:	327f      	adds	r2, #127	@ 0x7f
 8000576:	bfc2      	ittt	gt
 8000578:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 800057c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000580:	4770      	bxgt	lr
 8000582:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000586:	f04f 0300 	mov.w	r3, #0
 800058a:	3a01      	subs	r2, #1
 800058c:	e737      	b.n	80003fe <__aeabi_fmul+0x92>
 800058e:	f092 0f00 	teq	r2, #0
 8000592:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000596:	bf02      	ittt	eq
 8000598:	0040      	lsleq	r0, r0, #1
 800059a:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 800059e:	3a01      	subeq	r2, #1
 80005a0:	d0f9      	beq.n	8000596 <__aeabi_fdiv+0xc2>
 80005a2:	ea40 000c 	orr.w	r0, r0, ip
 80005a6:	f093 0f00 	teq	r3, #0
 80005aa:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 80005ae:	bf02      	ittt	eq
 80005b0:	0049      	lsleq	r1, r1, #1
 80005b2:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 80005b6:	3b01      	subeq	r3, #1
 80005b8:	d0f9      	beq.n	80005ae <__aeabi_fdiv+0xda>
 80005ba:	ea41 010c 	orr.w	r1, r1, ip
 80005be:	e795      	b.n	80004ec <__aeabi_fdiv+0x18>
 80005c0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80005c4:	ea92 0f0c 	teq	r2, ip
 80005c8:	d108      	bne.n	80005dc <__aeabi_fdiv+0x108>
 80005ca:	0242      	lsls	r2, r0, #9
 80005cc:	f47f af7d 	bne.w	80004ca <__aeabi_fmul+0x15e>
 80005d0:	ea93 0f0c 	teq	r3, ip
 80005d4:	f47f af70 	bne.w	80004b8 <__aeabi_fmul+0x14c>
 80005d8:	4608      	mov	r0, r1
 80005da:	e776      	b.n	80004ca <__aeabi_fmul+0x15e>
 80005dc:	ea93 0f0c 	teq	r3, ip
 80005e0:	d104      	bne.n	80005ec <__aeabi_fdiv+0x118>
 80005e2:	024b      	lsls	r3, r1, #9
 80005e4:	f43f af4c 	beq.w	8000480 <__aeabi_fmul+0x114>
 80005e8:	4608      	mov	r0, r1
 80005ea:	e76e      	b.n	80004ca <__aeabi_fmul+0x15e>
 80005ec:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 80005f0:	bf18      	it	ne
 80005f2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 80005f6:	d1ca      	bne.n	800058e <__aeabi_fdiv+0xba>
 80005f8:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 80005fc:	f47f af5c 	bne.w	80004b8 <__aeabi_fmul+0x14c>
 8000600:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000604:	f47f af3c 	bne.w	8000480 <__aeabi_fmul+0x114>
 8000608:	e75f      	b.n	80004ca <__aeabi_fmul+0x15e>
 800060a:	bf00      	nop

0800060c <__aeabi_f2uiz>:
 800060c:	0042      	lsls	r2, r0, #1
 800060e:	d20e      	bcs.n	800062e <__aeabi_f2uiz+0x22>
 8000610:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000614:	d30b      	bcc.n	800062e <__aeabi_f2uiz+0x22>
 8000616:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 800061a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800061e:	d409      	bmi.n	8000634 <__aeabi_f2uiz+0x28>
 8000620:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000624:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000628:	fa23 f002 	lsr.w	r0, r3, r2
 800062c:	4770      	bx	lr
 800062e:	f04f 0000 	mov.w	r0, #0
 8000632:	4770      	bx	lr
 8000634:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8000638:	d101      	bne.n	800063e <__aeabi_f2uiz+0x32>
 800063a:	0242      	lsls	r2, r0, #9
 800063c:	d102      	bne.n	8000644 <__aeabi_f2uiz+0x38>
 800063e:	f04f 30ff 	mov.w	r0, #4294967295
 8000642:	4770      	bx	lr
 8000644:	f04f 0000 	mov.w	r0, #0
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
ADC_HandleTypeDef hadc2;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 800064c:	b580      	push	{r7, lr}
 800064e:	b084      	sub	sp, #16
 8000650:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000652:	1d3b      	adds	r3, r7, #4
 8000654:	2200      	movs	r2, #0
 8000656:	601a      	str	r2, [r3, #0]
 8000658:	605a      	str	r2, [r3, #4]
 800065a:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 800065c:	4b18      	ldr	r3, [pc, #96]	@ (80006c0 <MX_ADC1_Init+0x74>)
 800065e:	4a19      	ldr	r2, [pc, #100]	@ (80006c4 <MX_ADC1_Init+0x78>)
 8000660:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000662:	4b17      	ldr	r3, [pc, #92]	@ (80006c0 <MX_ADC1_Init+0x74>)
 8000664:	2200      	movs	r2, #0
 8000666:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000668:	4b15      	ldr	r3, [pc, #84]	@ (80006c0 <MX_ADC1_Init+0x74>)
 800066a:	2201      	movs	r2, #1
 800066c:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800066e:	4b14      	ldr	r3, [pc, #80]	@ (80006c0 <MX_ADC1_Init+0x74>)
 8000670:	2200      	movs	r2, #0
 8000672:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000674:	4b12      	ldr	r3, [pc, #72]	@ (80006c0 <MX_ADC1_Init+0x74>)
 8000676:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 800067a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800067c:	4b10      	ldr	r3, [pc, #64]	@ (80006c0 <MX_ADC1_Init+0x74>)
 800067e:	2200      	movs	r2, #0
 8000680:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 1;
 8000682:	4b0f      	ldr	r3, [pc, #60]	@ (80006c0 <MX_ADC1_Init+0x74>)
 8000684:	2201      	movs	r2, #1
 8000686:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000688:	480d      	ldr	r0, [pc, #52]	@ (80006c0 <MX_ADC1_Init+0x74>)
 800068a:	f001 fbdd 	bl	8001e48 <HAL_ADC_Init>
 800068e:	4603      	mov	r3, r0
 8000690:	2b00      	cmp	r3, #0
 8000692:	d001      	beq.n	8000698 <MX_ADC1_Init+0x4c>
  {
    Error_Handler();
 8000694:	f001 f894 	bl	80017c0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000698:	2301      	movs	r3, #1
 800069a:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800069c:	2301      	movs	r3, #1
 800069e:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 80006a0:	2302      	movs	r3, #2
 80006a2:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80006a4:	1d3b      	adds	r3, r7, #4
 80006a6:	4619      	mov	r1, r3
 80006a8:	4805      	ldr	r0, [pc, #20]	@ (80006c0 <MX_ADC1_Init+0x74>)
 80006aa:	f001 fe91 	bl	80023d0 <HAL_ADC_ConfigChannel>
 80006ae:	4603      	mov	r3, r0
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	d001      	beq.n	80006b8 <MX_ADC1_Init+0x6c>
  {
    Error_Handler();
 80006b4:	f001 f884 	bl	80017c0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80006b8:	bf00      	nop
 80006ba:	3710      	adds	r7, #16
 80006bc:	46bd      	mov	sp, r7
 80006be:	bd80      	pop	{r7, pc}
 80006c0:	20000080 	.word	0x20000080
 80006c4:	40012400 	.word	0x40012400

080006c8 <MX_ADC2_Init>:
/* ADC2 init function */
void MX_ADC2_Init(void)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b084      	sub	sp, #16
 80006cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80006ce:	1d3b      	adds	r3, r7, #4
 80006d0:	2200      	movs	r2, #0
 80006d2:	601a      	str	r2, [r3, #0]
 80006d4:	605a      	str	r2, [r3, #4]
 80006d6:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 80006d8:	4b18      	ldr	r3, [pc, #96]	@ (800073c <MX_ADC2_Init+0x74>)
 80006da:	4a19      	ldr	r2, [pc, #100]	@ (8000740 <MX_ADC2_Init+0x78>)
 80006dc:	601a      	str	r2, [r3, #0]
  hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80006de:	4b17      	ldr	r3, [pc, #92]	@ (800073c <MX_ADC2_Init+0x74>)
 80006e0:	2200      	movs	r2, #0
 80006e2:	609a      	str	r2, [r3, #8]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80006e4:	4b15      	ldr	r3, [pc, #84]	@ (800073c <MX_ADC2_Init+0x74>)
 80006e6:	2201      	movs	r2, #1
 80006e8:	731a      	strb	r2, [r3, #12]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80006ea:	4b14      	ldr	r3, [pc, #80]	@ (800073c <MX_ADC2_Init+0x74>)
 80006ec:	2200      	movs	r2, #0
 80006ee:	751a      	strb	r2, [r3, #20]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80006f0:	4b12      	ldr	r3, [pc, #72]	@ (800073c <MX_ADC2_Init+0x74>)
 80006f2:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 80006f6:	61da      	str	r2, [r3, #28]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80006f8:	4b10      	ldr	r3, [pc, #64]	@ (800073c <MX_ADC2_Init+0x74>)
 80006fa:	2200      	movs	r2, #0
 80006fc:	605a      	str	r2, [r3, #4]
  hadc2.Init.NbrOfConversion = 1;
 80006fe:	4b0f      	ldr	r3, [pc, #60]	@ (800073c <MX_ADC2_Init+0x74>)
 8000700:	2201      	movs	r2, #1
 8000702:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8000704:	480d      	ldr	r0, [pc, #52]	@ (800073c <MX_ADC2_Init+0x74>)
 8000706:	f001 fb9f 	bl	8001e48 <HAL_ADC_Init>
 800070a:	4603      	mov	r3, r0
 800070c:	2b00      	cmp	r3, #0
 800070e:	d001      	beq.n	8000714 <MX_ADC2_Init+0x4c>
  {
    Error_Handler();
 8000710:	f001 f856 	bl	80017c0 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000714:	2300      	movs	r3, #0
 8000716:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000718:	2301      	movs	r3, #1
 800071a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 800071c:	2302      	movs	r3, #2
 800071e:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000720:	1d3b      	adds	r3, r7, #4
 8000722:	4619      	mov	r1, r3
 8000724:	4805      	ldr	r0, [pc, #20]	@ (800073c <MX_ADC2_Init+0x74>)
 8000726:	f001 fe53 	bl	80023d0 <HAL_ADC_ConfigChannel>
 800072a:	4603      	mov	r3, r0
 800072c:	2b00      	cmp	r3, #0
 800072e:	d001      	beq.n	8000734 <MX_ADC2_Init+0x6c>
  {
    Error_Handler();
 8000730:	f001 f846 	bl	80017c0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8000734:	bf00      	nop
 8000736:	3710      	adds	r7, #16
 8000738:	46bd      	mov	sp, r7
 800073a:	bd80      	pop	{r7, pc}
 800073c:	200000b0 	.word	0x200000b0
 8000740:	40012800 	.word	0x40012800

08000744 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8000744:	b580      	push	{r7, lr}
 8000746:	b08a      	sub	sp, #40	@ 0x28
 8000748:	af00      	add	r7, sp, #0
 800074a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800074c:	f107 0318 	add.w	r3, r7, #24
 8000750:	2200      	movs	r2, #0
 8000752:	601a      	str	r2, [r3, #0]
 8000754:	605a      	str	r2, [r3, #4]
 8000756:	609a      	str	r2, [r3, #8]
 8000758:	60da      	str	r2, [r3, #12]
  if(adcHandle->Instance==ADC1)
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	4a28      	ldr	r2, [pc, #160]	@ (8000800 <HAL_ADC_MspInit+0xbc>)
 8000760:	4293      	cmp	r3, r2
 8000762:	d122      	bne.n	80007aa <HAL_ADC_MspInit+0x66>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000764:	4b27      	ldr	r3, [pc, #156]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 8000766:	699b      	ldr	r3, [r3, #24]
 8000768:	4a26      	ldr	r2, [pc, #152]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 800076a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800076e:	6193      	str	r3, [r2, #24]
 8000770:	4b24      	ldr	r3, [pc, #144]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 8000772:	699b      	ldr	r3, [r3, #24]
 8000774:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8000778:	617b      	str	r3, [r7, #20]
 800077a:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800077c:	4b21      	ldr	r3, [pc, #132]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 800077e:	699b      	ldr	r3, [r3, #24]
 8000780:	4a20      	ldr	r2, [pc, #128]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 8000782:	f043 0304 	orr.w	r3, r3, #4
 8000786:	6193      	str	r3, [r2, #24]
 8000788:	4b1e      	ldr	r3, [pc, #120]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 800078a:	699b      	ldr	r3, [r3, #24]
 800078c:	f003 0304 	and.w	r3, r3, #4
 8000790:	613b      	str	r3, [r7, #16]
 8000792:	693b      	ldr	r3, [r7, #16]
    /**ADC1 GPIO Configuration
    PA1     ------> ADC1_IN1
    PA2     ------> ADC1_IN2
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 8000794:	230e      	movs	r3, #14
 8000796:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000798:	2303      	movs	r3, #3
 800079a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800079c:	f107 0318 	add.w	r3, r7, #24
 80007a0:	4619      	mov	r1, r3
 80007a2:	4819      	ldr	r0, [pc, #100]	@ (8000808 <HAL_ADC_MspInit+0xc4>)
 80007a4:	f002 fab8 	bl	8002d18 <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }
}
 80007a8:	e026      	b.n	80007f8 <HAL_ADC_MspInit+0xb4>
  else if(adcHandle->Instance==ADC2)
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	4a17      	ldr	r2, [pc, #92]	@ (800080c <HAL_ADC_MspInit+0xc8>)
 80007b0:	4293      	cmp	r3, r2
 80007b2:	d121      	bne.n	80007f8 <HAL_ADC_MspInit+0xb4>
    __HAL_RCC_ADC2_CLK_ENABLE();
 80007b4:	4b13      	ldr	r3, [pc, #76]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 80007b6:	699b      	ldr	r3, [r3, #24]
 80007b8:	4a12      	ldr	r2, [pc, #72]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 80007ba:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80007be:	6193      	str	r3, [r2, #24]
 80007c0:	4b10      	ldr	r3, [pc, #64]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 80007c2:	699b      	ldr	r3, [r3, #24]
 80007c4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80007c8:	60fb      	str	r3, [r7, #12]
 80007ca:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80007cc:	4b0d      	ldr	r3, [pc, #52]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 80007ce:	699b      	ldr	r3, [r3, #24]
 80007d0:	4a0c      	ldr	r2, [pc, #48]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 80007d2:	f043 0304 	orr.w	r3, r3, #4
 80007d6:	6193      	str	r3, [r2, #24]
 80007d8:	4b0a      	ldr	r3, [pc, #40]	@ (8000804 <HAL_ADC_MspInit+0xc0>)
 80007da:	699b      	ldr	r3, [r3, #24]
 80007dc:	f003 0304 	and.w	r3, r3, #4
 80007e0:	60bb      	str	r3, [r7, #8]
 80007e2:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 80007e4:	2371      	movs	r3, #113	@ 0x71
 80007e6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80007e8:	2303      	movs	r3, #3
 80007ea:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80007ec:	f107 0318 	add.w	r3, r7, #24
 80007f0:	4619      	mov	r1, r3
 80007f2:	4805      	ldr	r0, [pc, #20]	@ (8000808 <HAL_ADC_MspInit+0xc4>)
 80007f4:	f002 fa90 	bl	8002d18 <HAL_GPIO_Init>
}
 80007f8:	bf00      	nop
 80007fa:	3728      	adds	r7, #40	@ 0x28
 80007fc:	46bd      	mov	sp, r7
 80007fe:	bd80      	pop	{r7, pc}
 8000800:	40012400 	.word	0x40012400
 8000804:	40021000 	.word	0x40021000
 8000808:	40010800 	.word	0x40010800
 800080c:	40012800 	.word	0x40012800

08000810 <setADCChannel1>:
ADC_ChannelConfTypeDef sConfig1 = {0};
ADC_ChannelConfTypeDef sConfig2 = {0};

unsigned char readings_qtt=5;

HAL_StatusTypeDef setADCChannel1(unsigned char channel){
 8000810:	b580      	push	{r7, lr}
 8000812:	b082      	sub	sp, #8
 8000814:	af00      	add	r7, sp, #0
 8000816:	4603      	mov	r3, r0
 8000818:	71fb      	strb	r3, [r7, #7]
	switch(channel) {
 800081a:	79fb      	ldrb	r3, [r7, #7]
 800081c:	2b11      	cmp	r3, #17
 800081e:	d86f      	bhi.n	8000900 <setADCChannel1+0xf0>
 8000820:	a201      	add	r2, pc, #4	@ (adr r2, 8000828 <setADCChannel1+0x18>)
 8000822:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000826:	bf00      	nop
 8000828:	08000871 	.word	0x08000871
 800082c:	08000879 	.word	0x08000879
 8000830:	08000881 	.word	0x08000881
 8000834:	08000889 	.word	0x08000889
 8000838:	08000891 	.word	0x08000891
 800083c:	08000899 	.word	0x08000899
 8000840:	080008a1 	.word	0x080008a1
 8000844:	080008a9 	.word	0x080008a9
 8000848:	080008b1 	.word	0x080008b1
 800084c:	080008b9 	.word	0x080008b9
 8000850:	080008c1 	.word	0x080008c1
 8000854:	080008c9 	.word	0x080008c9
 8000858:	080008d1 	.word	0x080008d1
 800085c:	080008d9 	.word	0x080008d9
 8000860:	080008e1 	.word	0x080008e1
 8000864:	080008e9 	.word	0x080008e9
 8000868:	080008f1 	.word	0x080008f1
 800086c:	080008f9 	.word	0x080008f9
	       	case 0:
	            sConfig1.Channel = ADC_CHANNEL_0;
 8000870:	4b2c      	ldr	r3, [pc, #176]	@ (8000924 <setADCChannel1+0x114>)
 8000872:	2200      	movs	r2, #0
 8000874:	601a      	str	r2, [r3, #0]
	            break;
 8000876:	e045      	b.n	8000904 <setADCChannel1+0xf4>
	        case 1:
	            sConfig1.Channel = ADC_CHANNEL_1;
 8000878:	4b2a      	ldr	r3, [pc, #168]	@ (8000924 <setADCChannel1+0x114>)
 800087a:	2201      	movs	r2, #1
 800087c:	601a      	str	r2, [r3, #0]
	            break;
 800087e:	e041      	b.n	8000904 <setADCChannel1+0xf4>
	        case 2:
	            sConfig1.Channel = ADC_CHANNEL_2;
 8000880:	4b28      	ldr	r3, [pc, #160]	@ (8000924 <setADCChannel1+0x114>)
 8000882:	2202      	movs	r2, #2
 8000884:	601a      	str	r2, [r3, #0]
	            break;
 8000886:	e03d      	b.n	8000904 <setADCChannel1+0xf4>
	        case 3:
	            sConfig1.Channel = ADC_CHANNEL_3;
 8000888:	4b26      	ldr	r3, [pc, #152]	@ (8000924 <setADCChannel1+0x114>)
 800088a:	2203      	movs	r2, #3
 800088c:	601a      	str	r2, [r3, #0]
	            break;
 800088e:	e039      	b.n	8000904 <setADCChannel1+0xf4>
	        case 4:
	            sConfig1.Channel = ADC_CHANNEL_4;
 8000890:	4b24      	ldr	r3, [pc, #144]	@ (8000924 <setADCChannel1+0x114>)
 8000892:	2204      	movs	r2, #4
 8000894:	601a      	str	r2, [r3, #0]
	            break;
 8000896:	e035      	b.n	8000904 <setADCChannel1+0xf4>
	        case 5:
	            sConfig1.Channel = ADC_CHANNEL_5;
 8000898:	4b22      	ldr	r3, [pc, #136]	@ (8000924 <setADCChannel1+0x114>)
 800089a:	2205      	movs	r2, #5
 800089c:	601a      	str	r2, [r3, #0]
	            break;
 800089e:	e031      	b.n	8000904 <setADCChannel1+0xf4>
	        case 6:
	            sConfig1.Channel = ADC_CHANNEL_6;
 80008a0:	4b20      	ldr	r3, [pc, #128]	@ (8000924 <setADCChannel1+0x114>)
 80008a2:	2206      	movs	r2, #6
 80008a4:	601a      	str	r2, [r3, #0]
	            break;
 80008a6:	e02d      	b.n	8000904 <setADCChannel1+0xf4>
	        case 7:
	            sConfig1.Channel = ADC_CHANNEL_7;
 80008a8:	4b1e      	ldr	r3, [pc, #120]	@ (8000924 <setADCChannel1+0x114>)
 80008aa:	2207      	movs	r2, #7
 80008ac:	601a      	str	r2, [r3, #0]
	            break;
 80008ae:	e029      	b.n	8000904 <setADCChannel1+0xf4>
	        case 8:
	            sConfig1.Channel = ADC_CHANNEL_8;
 80008b0:	4b1c      	ldr	r3, [pc, #112]	@ (8000924 <setADCChannel1+0x114>)
 80008b2:	2208      	movs	r2, #8
 80008b4:	601a      	str	r2, [r3, #0]
	            break;
 80008b6:	e025      	b.n	8000904 <setADCChannel1+0xf4>
	        case 9:
	            sConfig1.Channel = ADC_CHANNEL_9;
 80008b8:	4b1a      	ldr	r3, [pc, #104]	@ (8000924 <setADCChannel1+0x114>)
 80008ba:	2209      	movs	r2, #9
 80008bc:	601a      	str	r2, [r3, #0]
	            break;
 80008be:	e021      	b.n	8000904 <setADCChannel1+0xf4>
	        case 10:
	            sConfig1.Channel = ADC_CHANNEL_10;
 80008c0:	4b18      	ldr	r3, [pc, #96]	@ (8000924 <setADCChannel1+0x114>)
 80008c2:	220a      	movs	r2, #10
 80008c4:	601a      	str	r2, [r3, #0]
	            break;
 80008c6:	e01d      	b.n	8000904 <setADCChannel1+0xf4>
	        case 11:
	            sConfig1.Channel = ADC_CHANNEL_11;
 80008c8:	4b16      	ldr	r3, [pc, #88]	@ (8000924 <setADCChannel1+0x114>)
 80008ca:	220b      	movs	r2, #11
 80008cc:	601a      	str	r2, [r3, #0]
	            break;
 80008ce:	e019      	b.n	8000904 <setADCChannel1+0xf4>
	        case 12:
	            sConfig1.Channel = ADC_CHANNEL_12;
 80008d0:	4b14      	ldr	r3, [pc, #80]	@ (8000924 <setADCChannel1+0x114>)
 80008d2:	220c      	movs	r2, #12
 80008d4:	601a      	str	r2, [r3, #0]
	            break;
 80008d6:	e015      	b.n	8000904 <setADCChannel1+0xf4>
	        case 13:
	            sConfig1.Channel = ADC_CHANNEL_13;
 80008d8:	4b12      	ldr	r3, [pc, #72]	@ (8000924 <setADCChannel1+0x114>)
 80008da:	220d      	movs	r2, #13
 80008dc:	601a      	str	r2, [r3, #0]
	            break;
 80008de:	e011      	b.n	8000904 <setADCChannel1+0xf4>
	        case 14:
	            sConfig1.Channel = ADC_CHANNEL_14;
 80008e0:	4b10      	ldr	r3, [pc, #64]	@ (8000924 <setADCChannel1+0x114>)
 80008e2:	220e      	movs	r2, #14
 80008e4:	601a      	str	r2, [r3, #0]
	            break;
 80008e6:	e00d      	b.n	8000904 <setADCChannel1+0xf4>
	        case 15:
	            sConfig1.Channel = ADC_CHANNEL_15;
 80008e8:	4b0e      	ldr	r3, [pc, #56]	@ (8000924 <setADCChannel1+0x114>)
 80008ea:	220f      	movs	r2, #15
 80008ec:	601a      	str	r2, [r3, #0]
	            break;
 80008ee:	e009      	b.n	8000904 <setADCChannel1+0xf4>
	        case 16:
	            sConfig1.Channel = ADC_CHANNEL_16;
 80008f0:	4b0c      	ldr	r3, [pc, #48]	@ (8000924 <setADCChannel1+0x114>)
 80008f2:	2210      	movs	r2, #16
 80008f4:	601a      	str	r2, [r3, #0]
	            break;
 80008f6:	e005      	b.n	8000904 <setADCChannel1+0xf4>
	        case 17:
	            sConfig1.Channel = ADC_CHANNEL_17;
 80008f8:	4b0a      	ldr	r3, [pc, #40]	@ (8000924 <setADCChannel1+0x114>)
 80008fa:	2211      	movs	r2, #17
 80008fc:	601a      	str	r2, [r3, #0]
	            break;
 80008fe:	e001      	b.n	8000904 <setADCChannel1+0xf4>
	        default:
	            return HAL_ERROR; // Canal inválido
 8000900:	2301      	movs	r3, #1
 8000902:	e00a      	b.n	800091a <setADCChannel1+0x10a>
	    }

	    sConfig1.Rank = ADC_REGULAR_RANK_1;
 8000904:	4b07      	ldr	r3, [pc, #28]	@ (8000924 <setADCChannel1+0x114>)
 8000906:	2201      	movs	r2, #1
 8000908:	605a      	str	r2, [r3, #4]
	    sConfig1.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 800090a:	4b06      	ldr	r3, [pc, #24]	@ (8000924 <setADCChannel1+0x114>)
 800090c:	2205      	movs	r2, #5
 800090e:	609a      	str	r2, [r3, #8]

	    return HAL_ADC_ConfigChannel(&hadc1, &sConfig1);
 8000910:	4904      	ldr	r1, [pc, #16]	@ (8000924 <setADCChannel1+0x114>)
 8000912:	4805      	ldr	r0, [pc, #20]	@ (8000928 <setADCChannel1+0x118>)
 8000914:	f001 fd5c 	bl	80023d0 <HAL_ADC_ConfigChannel>
 8000918:	4603      	mov	r3, r0

}
 800091a:	4618      	mov	r0, r3
 800091c:	3708      	adds	r7, #8
 800091e:	46bd      	mov	sp, r7
 8000920:	bd80      	pop	{r7, pc}
 8000922:	bf00      	nop
 8000924:	200000e0 	.word	0x200000e0
 8000928:	20000080 	.word	0x20000080

0800092c <setADCChannel2>:

HAL_StatusTypeDef setADCChannel2(unsigned char channel){
 800092c:	b580      	push	{r7, lr}
 800092e:	b082      	sub	sp, #8
 8000930:	af00      	add	r7, sp, #0
 8000932:	4603      	mov	r3, r0
 8000934:	71fb      	strb	r3, [r7, #7]
	switch(channel) {
 8000936:	79fb      	ldrb	r3, [r7, #7]
 8000938:	2b11      	cmp	r3, #17
 800093a:	d86f      	bhi.n	8000a1c <setADCChannel2+0xf0>
 800093c:	a201      	add	r2, pc, #4	@ (adr r2, 8000944 <setADCChannel2+0x18>)
 800093e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000942:	bf00      	nop
 8000944:	0800098d 	.word	0x0800098d
 8000948:	08000995 	.word	0x08000995
 800094c:	0800099d 	.word	0x0800099d
 8000950:	080009a5 	.word	0x080009a5
 8000954:	080009ad 	.word	0x080009ad
 8000958:	080009b5 	.word	0x080009b5
 800095c:	080009bd 	.word	0x080009bd
 8000960:	080009c5 	.word	0x080009c5
 8000964:	080009cd 	.word	0x080009cd
 8000968:	080009d5 	.word	0x080009d5
 800096c:	080009dd 	.word	0x080009dd
 8000970:	080009e5 	.word	0x080009e5
 8000974:	080009ed 	.word	0x080009ed
 8000978:	080009f5 	.word	0x080009f5
 800097c:	080009fd 	.word	0x080009fd
 8000980:	08000a05 	.word	0x08000a05
 8000984:	08000a0d 	.word	0x08000a0d
 8000988:	08000a15 	.word	0x08000a15
	        case 0:
	            sConfig2.Channel = ADC_CHANNEL_0;
 800098c:	4b2c      	ldr	r3, [pc, #176]	@ (8000a40 <setADCChannel2+0x114>)
 800098e:	2200      	movs	r2, #0
 8000990:	601a      	str	r2, [r3, #0]
	            break;
 8000992:	e045      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 1:
	            sConfig2.Channel = ADC_CHANNEL_1;
 8000994:	4b2a      	ldr	r3, [pc, #168]	@ (8000a40 <setADCChannel2+0x114>)
 8000996:	2201      	movs	r2, #1
 8000998:	601a      	str	r2, [r3, #0]
	            break;
 800099a:	e041      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 2:
	            sConfig2.Channel = ADC_CHANNEL_2;
 800099c:	4b28      	ldr	r3, [pc, #160]	@ (8000a40 <setADCChannel2+0x114>)
 800099e:	2202      	movs	r2, #2
 80009a0:	601a      	str	r2, [r3, #0]
	            break;
 80009a2:	e03d      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 3:
	            sConfig2.Channel = ADC_CHANNEL_3;
 80009a4:	4b26      	ldr	r3, [pc, #152]	@ (8000a40 <setADCChannel2+0x114>)
 80009a6:	2203      	movs	r2, #3
 80009a8:	601a      	str	r2, [r3, #0]
	            break;
 80009aa:	e039      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 4:
	            sConfig2.Channel = ADC_CHANNEL_4;
 80009ac:	4b24      	ldr	r3, [pc, #144]	@ (8000a40 <setADCChannel2+0x114>)
 80009ae:	2204      	movs	r2, #4
 80009b0:	601a      	str	r2, [r3, #0]
	            break;
 80009b2:	e035      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 5:
	            sConfig2.Channel = ADC_CHANNEL_5;
 80009b4:	4b22      	ldr	r3, [pc, #136]	@ (8000a40 <setADCChannel2+0x114>)
 80009b6:	2205      	movs	r2, #5
 80009b8:	601a      	str	r2, [r3, #0]
	            break;
 80009ba:	e031      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 6:
	            sConfig2.Channel = ADC_CHANNEL_6;
 80009bc:	4b20      	ldr	r3, [pc, #128]	@ (8000a40 <setADCChannel2+0x114>)
 80009be:	2206      	movs	r2, #6
 80009c0:	601a      	str	r2, [r3, #0]
	            break;
 80009c2:	e02d      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 7:
	            sConfig2.Channel = ADC_CHANNEL_7;
 80009c4:	4b1e      	ldr	r3, [pc, #120]	@ (8000a40 <setADCChannel2+0x114>)
 80009c6:	2207      	movs	r2, #7
 80009c8:	601a      	str	r2, [r3, #0]
	            break;
 80009ca:	e029      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 8:
	            sConfig2.Channel = ADC_CHANNEL_8;
 80009cc:	4b1c      	ldr	r3, [pc, #112]	@ (8000a40 <setADCChannel2+0x114>)
 80009ce:	2208      	movs	r2, #8
 80009d0:	601a      	str	r2, [r3, #0]
	            break;
 80009d2:	e025      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 9:
	            sConfig2.Channel = ADC_CHANNEL_9;
 80009d4:	4b1a      	ldr	r3, [pc, #104]	@ (8000a40 <setADCChannel2+0x114>)
 80009d6:	2209      	movs	r2, #9
 80009d8:	601a      	str	r2, [r3, #0]
	            break;
 80009da:	e021      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 10:
	            sConfig2.Channel = ADC_CHANNEL_10;
 80009dc:	4b18      	ldr	r3, [pc, #96]	@ (8000a40 <setADCChannel2+0x114>)
 80009de:	220a      	movs	r2, #10
 80009e0:	601a      	str	r2, [r3, #0]
	            break;
 80009e2:	e01d      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 11:
	            sConfig2.Channel = ADC_CHANNEL_11;
 80009e4:	4b16      	ldr	r3, [pc, #88]	@ (8000a40 <setADCChannel2+0x114>)
 80009e6:	220b      	movs	r2, #11
 80009e8:	601a      	str	r2, [r3, #0]
	            break;
 80009ea:	e019      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 12:
	            sConfig2.Channel = ADC_CHANNEL_12;
 80009ec:	4b14      	ldr	r3, [pc, #80]	@ (8000a40 <setADCChannel2+0x114>)
 80009ee:	220c      	movs	r2, #12
 80009f0:	601a      	str	r2, [r3, #0]
	            break;
 80009f2:	e015      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 13:
	            sConfig2.Channel = ADC_CHANNEL_13;
 80009f4:	4b12      	ldr	r3, [pc, #72]	@ (8000a40 <setADCChannel2+0x114>)
 80009f6:	220d      	movs	r2, #13
 80009f8:	601a      	str	r2, [r3, #0]
	            break;
 80009fa:	e011      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 14:
	            sConfig2.Channel = ADC_CHANNEL_14;
 80009fc:	4b10      	ldr	r3, [pc, #64]	@ (8000a40 <setADCChannel2+0x114>)
 80009fe:	220e      	movs	r2, #14
 8000a00:	601a      	str	r2, [r3, #0]
	            break;
 8000a02:	e00d      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 15:
	            sConfig2.Channel = ADC_CHANNEL_15;
 8000a04:	4b0e      	ldr	r3, [pc, #56]	@ (8000a40 <setADCChannel2+0x114>)
 8000a06:	220f      	movs	r2, #15
 8000a08:	601a      	str	r2, [r3, #0]
	            break;
 8000a0a:	e009      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 16:
	            sConfig2.Channel = ADC_CHANNEL_16;
 8000a0c:	4b0c      	ldr	r3, [pc, #48]	@ (8000a40 <setADCChannel2+0x114>)
 8000a0e:	2210      	movs	r2, #16
 8000a10:	601a      	str	r2, [r3, #0]
	            break;
 8000a12:	e005      	b.n	8000a20 <setADCChannel2+0xf4>
	        case 17:
	            sConfig2.Channel = ADC_CHANNEL_17;
 8000a14:	4b0a      	ldr	r3, [pc, #40]	@ (8000a40 <setADCChannel2+0x114>)
 8000a16:	2211      	movs	r2, #17
 8000a18:	601a      	str	r2, [r3, #0]
	            break;
 8000a1a:	e001      	b.n	8000a20 <setADCChannel2+0xf4>
	        default:
	            return HAL_ERROR; // canal inválido
 8000a1c:	2301      	movs	r3, #1
 8000a1e:	e00a      	b.n	8000a36 <setADCChannel2+0x10a>
	    }

	    sConfig2.Rank = ADC_REGULAR_RANK_1;
 8000a20:	4b07      	ldr	r3, [pc, #28]	@ (8000a40 <setADCChannel2+0x114>)
 8000a22:	2201      	movs	r2, #1
 8000a24:	605a      	str	r2, [r3, #4]
	    sConfig2.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 8000a26:	4b06      	ldr	r3, [pc, #24]	@ (8000a40 <setADCChannel2+0x114>)
 8000a28:	2205      	movs	r2, #5
 8000a2a:	609a      	str	r2, [r3, #8]
	    return HAL_ADC_ConfigChannel(&hadc2, &sConfig2);
 8000a2c:	4904      	ldr	r1, [pc, #16]	@ (8000a40 <setADCChannel2+0x114>)
 8000a2e:	4805      	ldr	r0, [pc, #20]	@ (8000a44 <setADCChannel2+0x118>)
 8000a30:	f001 fcce 	bl	80023d0 <HAL_ADC_ConfigChannel>
 8000a34:	4603      	mov	r3, r0

}
 8000a36:	4618      	mov	r0, r3
 8000a38:	3708      	adds	r7, #8
 8000a3a:	46bd      	mov	sp, r7
 8000a3c:	bd80      	pop	{r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	200000ec 	.word	0x200000ec
 8000a44:	200000b0 	.word	0x200000b0

08000a48 <readADCValue1>:

uint16_t readADCValue1(unsigned char channelNumber) {
 8000a48:	b580      	push	{r7, lr}
 8000a4a:	b084      	sub	sp, #16
 8000a4c:	af00      	add	r7, sp, #0
 8000a4e:	4603      	mov	r3, r0
 8000a50:	71fb      	strb	r3, [r7, #7]

    if (setADCChannel1(channelNumber) != HAL_OK) {
 8000a52:	79fb      	ldrb	r3, [r7, #7]
 8000a54:	4618      	mov	r0, r3
 8000a56:	f7ff fedb 	bl	8000810 <setADCChannel1>
 8000a5a:	4603      	mov	r3, r0
 8000a5c:	2b00      	cmp	r3, #0
 8000a5e:	d002      	beq.n	8000a66 <readADCValue1+0x1e>
        return 0xFFFF;  // erro
 8000a60:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000a64:	e031      	b.n	8000aca <readADCValue1+0x82>
    }
    delay_us(10);
 8000a66:	200a      	movs	r0, #10
 8000a68:	f000 f910 	bl	8000c8c <delay_us>
    uint32_t sum=0;
 8000a6c:	2300      	movs	r3, #0
 8000a6e:	60fb      	str	r3, [r7, #12]
    HAL_ADC_Start(&hadc1);
 8000a70:	4818      	ldr	r0, [pc, #96]	@ (8000ad4 <readADCValue1+0x8c>)
 8000a72:	f001 fac1 	bl	8001ff8 <HAL_ADC_Start>
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000a76:	2300      	movs	r3, #0
 8000a78:	72fb      	strb	r3, [r7, #11]
 8000a7a:	e017      	b.n	8000aac <readADCValue1+0x64>
    	if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) != HAL_OK) {
 8000a7c:	f04f 31ff 	mov.w	r1, #4294967295
 8000a80:	4814      	ldr	r0, [pc, #80]	@ (8000ad4 <readADCValue1+0x8c>)
 8000a82:	f001 fb93 	bl	80021ac <HAL_ADC_PollForConversion>
 8000a86:	4603      	mov	r3, r0
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d005      	beq.n	8000a98 <readADCValue1+0x50>
    		HAL_ADC_Stop(&hadc1);
 8000a8c:	4811      	ldr	r0, [pc, #68]	@ (8000ad4 <readADCValue1+0x8c>)
 8000a8e:	f001 fb61 	bl	8002154 <HAL_ADC_Stop>
    		return 0xFFFF;  // erro
 8000a92:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000a96:	e018      	b.n	8000aca <readADCValue1+0x82>
    	}
    	sum += HAL_ADC_GetValue(&hadc1);
 8000a98:	480e      	ldr	r0, [pc, #56]	@ (8000ad4 <readADCValue1+0x8c>)
 8000a9a:	f001 fc8d 	bl	80023b8 <HAL_ADC_GetValue>
 8000a9e:	4602      	mov	r2, r0
 8000aa0:	68fb      	ldr	r3, [r7, #12]
 8000aa2:	4413      	add	r3, r2
 8000aa4:	60fb      	str	r3, [r7, #12]
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000aa6:	7afb      	ldrb	r3, [r7, #11]
 8000aa8:	3301      	adds	r3, #1
 8000aaa:	72fb      	strb	r3, [r7, #11]
 8000aac:	4b0a      	ldr	r3, [pc, #40]	@ (8000ad8 <readADCValue1+0x90>)
 8000aae:	781b      	ldrb	r3, [r3, #0]
 8000ab0:	7afa      	ldrb	r2, [r7, #11]
 8000ab2:	429a      	cmp	r2, r3
 8000ab4:	d3e2      	bcc.n	8000a7c <readADCValue1+0x34>
    }
    HAL_ADC_Stop(&hadc1);
 8000ab6:	4807      	ldr	r0, [pc, #28]	@ (8000ad4 <readADCValue1+0x8c>)
 8000ab8:	f001 fb4c 	bl	8002154 <HAL_ADC_Stop>
    return (uint16_t)(sum / readings_qtt);
 8000abc:	4b06      	ldr	r3, [pc, #24]	@ (8000ad8 <readADCValue1+0x90>)
 8000abe:	781b      	ldrb	r3, [r3, #0]
 8000ac0:	461a      	mov	r2, r3
 8000ac2:	68fb      	ldr	r3, [r7, #12]
 8000ac4:	fbb3 f3f2 	udiv	r3, r3, r2
 8000ac8:	b29b      	uxth	r3, r3
}
 8000aca:	4618      	mov	r0, r3
 8000acc:	3710      	adds	r7, #16
 8000ace:	46bd      	mov	sp, r7
 8000ad0:	bd80      	pop	{r7, pc}
 8000ad2:	bf00      	nop
 8000ad4:	20000080 	.word	0x20000080
 8000ad8:	20000000 	.word	0x20000000

08000adc <readADCValue2>:

uint16_t readADCValue2(unsigned char channelNumber) {
 8000adc:	b580      	push	{r7, lr}
 8000ade:	b084      	sub	sp, #16
 8000ae0:	af00      	add	r7, sp, #0
 8000ae2:	4603      	mov	r3, r0
 8000ae4:	71fb      	strb	r3, [r7, #7]
    if (setADCChannel2(channelNumber) != HAL_OK) {
 8000ae6:	79fb      	ldrb	r3, [r7, #7]
 8000ae8:	4618      	mov	r0, r3
 8000aea:	f7ff ff1f 	bl	800092c <setADCChannel2>
 8000aee:	4603      	mov	r3, r0
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d002      	beq.n	8000afa <readADCValue2+0x1e>
        return 0xFFFF;  // erro
 8000af4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000af8:	e031      	b.n	8000b5e <readADCValue2+0x82>
    }
    delay_us(10);
 8000afa:	200a      	movs	r0, #10
 8000afc:	f000 f8c6 	bl	8000c8c <delay_us>
    uint32_t sum=0;
 8000b00:	2300      	movs	r3, #0
 8000b02:	60fb      	str	r3, [r7, #12]
    HAL_ADC_Start(&hadc2);
 8000b04:	4818      	ldr	r0, [pc, #96]	@ (8000b68 <readADCValue2+0x8c>)
 8000b06:	f001 fa77 	bl	8001ff8 <HAL_ADC_Start>
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	72fb      	strb	r3, [r7, #11]
 8000b0e:	e017      	b.n	8000b40 <readADCValue2+0x64>
        if (HAL_ADC_PollForConversion(&hadc2, HAL_MAX_DELAY) != HAL_OK) {
 8000b10:	f04f 31ff 	mov.w	r1, #4294967295
 8000b14:	4814      	ldr	r0, [pc, #80]	@ (8000b68 <readADCValue2+0x8c>)
 8000b16:	f001 fb49 	bl	80021ac <HAL_ADC_PollForConversion>
 8000b1a:	4603      	mov	r3, r0
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	d005      	beq.n	8000b2c <readADCValue2+0x50>
            HAL_ADC_Stop(&hadc2);
 8000b20:	4811      	ldr	r0, [pc, #68]	@ (8000b68 <readADCValue2+0x8c>)
 8000b22:	f001 fb17 	bl	8002154 <HAL_ADC_Stop>
            return 0xFFFF;
 8000b26:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000b2a:	e018      	b.n	8000b5e <readADCValue2+0x82>
        }
        sum += HAL_ADC_GetValue(&hadc2);
 8000b2c:	480e      	ldr	r0, [pc, #56]	@ (8000b68 <readADCValue2+0x8c>)
 8000b2e:	f001 fc43 	bl	80023b8 <HAL_ADC_GetValue>
 8000b32:	4602      	mov	r2, r0
 8000b34:	68fb      	ldr	r3, [r7, #12]
 8000b36:	4413      	add	r3, r2
 8000b38:	60fb      	str	r3, [r7, #12]
    for (uint8_t i = 0; i < readings_qtt; i++) {
 8000b3a:	7afb      	ldrb	r3, [r7, #11]
 8000b3c:	3301      	adds	r3, #1
 8000b3e:	72fb      	strb	r3, [r7, #11]
 8000b40:	4b0a      	ldr	r3, [pc, #40]	@ (8000b6c <readADCValue2+0x90>)
 8000b42:	781b      	ldrb	r3, [r3, #0]
 8000b44:	7afa      	ldrb	r2, [r7, #11]
 8000b46:	429a      	cmp	r2, r3
 8000b48:	d3e2      	bcc.n	8000b10 <readADCValue2+0x34>
    }
    HAL_ADC_Stop(&hadc2);
 8000b4a:	4807      	ldr	r0, [pc, #28]	@ (8000b68 <readADCValue2+0x8c>)
 8000b4c:	f001 fb02 	bl	8002154 <HAL_ADC_Stop>
    return (uint16_t)(sum / readings_qtt);
 8000b50:	4b06      	ldr	r3, [pc, #24]	@ (8000b6c <readADCValue2+0x90>)
 8000b52:	781b      	ldrb	r3, [r3, #0]
 8000b54:	461a      	mov	r2, r3
 8000b56:	68fb      	ldr	r3, [r7, #12]
 8000b58:	fbb3 f3f2 	udiv	r3, r3, r2
 8000b5c:	b29b      	uxth	r3, r3
}
 8000b5e:	4618      	mov	r0, r3
 8000b60:	3710      	adds	r7, #16
 8000b62:	46bd      	mov	sp, r7
 8000b64:	bd80      	pop	{r7, pc}
 8000b66:	bf00      	nop
 8000b68:	200000b0 	.word	0x200000b0
 8000b6c:	20000000 	.word	0x20000000

08000b70 <readSensor>:

uint16_t readSensor(unsigned char mux_pin){
 8000b70:	b580      	push	{r7, lr}
 8000b72:	b084      	sub	sp, #16
 8000b74:	af00      	add	r7, sp, #0
 8000b76:	4603      	mov	r3, r0
 8000b78:	71fb      	strb	r3, [r7, #7]
	unsigned char mux = mux_pin>>4;
 8000b7a:	79fb      	ldrb	r3, [r7, #7]
 8000b7c:	091b      	lsrs	r3, r3, #4
 8000b7e:	737b      	strb	r3, [r7, #13]
	unsigned char porta  = mux_pin&0b1111;
 8000b80:	79fb      	ldrb	r3, [r7, #7]
 8000b82:	f003 030f 	and.w	r3, r3, #15
 8000b86:	733b      	strb	r3, [r7, #12]
	_Bool s0 = porta&0b0001;
 8000b88:	7b3b      	ldrb	r3, [r7, #12]
 8000b8a:	f003 0301 	and.w	r3, r3, #1
 8000b8e:	2b00      	cmp	r3, #0
 8000b90:	bf14      	ite	ne
 8000b92:	2301      	movne	r3, #1
 8000b94:	2300      	moveq	r3, #0
 8000b96:	72fb      	strb	r3, [r7, #11]
	_Bool s1 = (porta&0b0010)>>1;
 8000b98:	7b3b      	ldrb	r3, [r7, #12]
 8000b9a:	105b      	asrs	r3, r3, #1
 8000b9c:	f003 0301 	and.w	r3, r3, #1
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	bf14      	ite	ne
 8000ba4:	2301      	movne	r3, #1
 8000ba6:	2300      	moveq	r3, #0
 8000ba8:	72bb      	strb	r3, [r7, #10]
	_Bool s2 = (porta&0b0100)>>2;
 8000baa:	7b3b      	ldrb	r3, [r7, #12]
 8000bac:	109b      	asrs	r3, r3, #2
 8000bae:	f003 0301 	and.w	r3, r3, #1
 8000bb2:	2b00      	cmp	r3, #0
 8000bb4:	bf14      	ite	ne
 8000bb6:	2301      	movne	r3, #1
 8000bb8:	2300      	moveq	r3, #0
 8000bba:	727b      	strb	r3, [r7, #9]
	_Bool s3 = (porta&0b1000)>>3;
 8000bbc:	7b3b      	ldrb	r3, [r7, #12]
 8000bbe:	10db      	asrs	r3, r3, #3
 8000bc0:	f003 0301 	and.w	r3, r3, #1
 8000bc4:	2b00      	cmp	r3, #0
 8000bc6:	bf14      	ite	ne
 8000bc8:	2301      	movne	r3, #1
 8000bca:	2300      	moveq	r3, #0
 8000bcc:	723b      	strb	r3, [r7, #8]

	HAL_GPIO_WritePin(EN1_GPIO, EN1_PIN, GPIO_PIN_SET); // EN1 (B4)
 8000bce:	2201      	movs	r2, #1
 8000bd0:	2110      	movs	r1, #16
 8000bd2:	482c      	ldr	r0, [pc, #176]	@ (8000c84 <readSensor+0x114>)
 8000bd4:	f002 fa24 	bl	8003020 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN2_GPIO, EN2_PIN, GPIO_PIN_SET); // EN2 (B3)
 8000bd8:	2201      	movs	r2, #1
 8000bda:	2108      	movs	r1, #8
 8000bdc:	4829      	ldr	r0, [pc, #164]	@ (8000c84 <readSensor+0x114>)
 8000bde:	f002 fa1f 	bl	8003020 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(EN3_GPIO, EN3_PIN, GPIO_PIN_SET); // EN3 (A15)
 8000be2:	2201      	movs	r2, #1
 8000be4:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000be8:	4827      	ldr	r0, [pc, #156]	@ (8000c88 <readSensor+0x118>)
 8000bea:	f002 fa19 	bl	8003020 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(S0_GPIO, S0_PIN, s0);
 8000bee:	7afb      	ldrb	r3, [r7, #11]
 8000bf0:	461a      	mov	r2, r3
 8000bf2:	2180      	movs	r1, #128	@ 0x80
 8000bf4:	4823      	ldr	r0, [pc, #140]	@ (8000c84 <readSensor+0x114>)
 8000bf6:	f002 fa13 	bl	8003020 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S1_GPIO, S1_PIN, s1);
 8000bfa:	7abb      	ldrb	r3, [r7, #10]
 8000bfc:	461a      	mov	r2, r3
 8000bfe:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000c02:	4820      	ldr	r0, [pc, #128]	@ (8000c84 <readSensor+0x114>)
 8000c04:	f002 fa0c 	bl	8003020 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S2_GPIO, S2_PIN, s2);
 8000c08:	7a7b      	ldrb	r3, [r7, #9]
 8000c0a:	461a      	mov	r2, r3
 8000c0c:	2120      	movs	r1, #32
 8000c0e:	481d      	ldr	r0, [pc, #116]	@ (8000c84 <readSensor+0x114>)
 8000c10:	f002 fa06 	bl	8003020 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S3_GPIO, S3_PIN, s3);
 8000c14:	7a3b      	ldrb	r3, [r7, #8]
 8000c16:	461a      	mov	r2, r3
 8000c18:	2140      	movs	r1, #64	@ 0x40
 8000c1a:	481a      	ldr	r0, [pc, #104]	@ (8000c84 <readSensor+0x114>)
 8000c1c:	f002 fa00 	bl	8003020 <HAL_GPIO_WritePin>

	uint16_t value;
	switch (mux) {
 8000c20:	7b7b      	ldrb	r3, [r7, #13]
 8000c22:	2b03      	cmp	r3, #3
 8000c24:	d01c      	beq.n	8000c60 <readSensor+0xf0>
 8000c26:	2b03      	cmp	r3, #3
 8000c28:	dc26      	bgt.n	8000c78 <readSensor+0x108>
 8000c2a:	2b01      	cmp	r3, #1
 8000c2c:	d002      	beq.n	8000c34 <readSensor+0xc4>
 8000c2e:	2b02      	cmp	r3, #2
 8000c30:	d00b      	beq.n	8000c4a <readSensor+0xda>
	        case 3:
	            HAL_GPIO_WritePin(EN3_GPIO, EN3_PIN, GPIO_PIN_RESET); // Ativa EN3 (A15)
	            value = readADCValue1(3);
	            break;
	        default:
	            break;
 8000c32:	e021      	b.n	8000c78 <readSensor+0x108>
	            HAL_GPIO_WritePin(EN1_GPIO, EN1_PIN, GPIO_PIN_RESET); // Ativa EN1 (B4)
 8000c34:	2200      	movs	r2, #0
 8000c36:	2110      	movs	r1, #16
 8000c38:	4812      	ldr	r0, [pc, #72]	@ (8000c84 <readSensor+0x114>)
 8000c3a:	f002 f9f1 	bl	8003020 <HAL_GPIO_WritePin>
	            value = readADCValue1(1);
 8000c3e:	2001      	movs	r0, #1
 8000c40:	f7ff ff02 	bl	8000a48 <readADCValue1>
 8000c44:	4603      	mov	r3, r0
 8000c46:	81fb      	strh	r3, [r7, #14]
	            break;
 8000c48:	e017      	b.n	8000c7a <readSensor+0x10a>
	            HAL_GPIO_WritePin(EN2_GPIO, EN2_PIN, GPIO_PIN_RESET); // Ativa EN2 (B3)
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	2108      	movs	r1, #8
 8000c4e:	480d      	ldr	r0, [pc, #52]	@ (8000c84 <readSensor+0x114>)
 8000c50:	f002 f9e6 	bl	8003020 <HAL_GPIO_WritePin>
	            value = readADCValue1(2);
 8000c54:	2002      	movs	r0, #2
 8000c56:	f7ff fef7 	bl	8000a48 <readADCValue1>
 8000c5a:	4603      	mov	r3, r0
 8000c5c:	81fb      	strh	r3, [r7, #14]
	            break;
 8000c5e:	e00c      	b.n	8000c7a <readSensor+0x10a>
	            HAL_GPIO_WritePin(EN3_GPIO, EN3_PIN, GPIO_PIN_RESET); // Ativa EN3 (A15)
 8000c60:	2200      	movs	r2, #0
 8000c62:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000c66:	4808      	ldr	r0, [pc, #32]	@ (8000c88 <readSensor+0x118>)
 8000c68:	f002 f9da 	bl	8003020 <HAL_GPIO_WritePin>
	            value = readADCValue1(3);
 8000c6c:	2003      	movs	r0, #3
 8000c6e:	f7ff feeb 	bl	8000a48 <readADCValue1>
 8000c72:	4603      	mov	r3, r0
 8000c74:	81fb      	strh	r3, [r7, #14]
	            break;
 8000c76:	e000      	b.n	8000c7a <readSensor+0x10a>
	            break;
 8000c78:	bf00      	nop
	    }
	return value;
 8000c7a:	89fb      	ldrh	r3, [r7, #14]
}
 8000c7c:	4618      	mov	r0, r3
 8000c7e:	3710      	adds	r7, #16
 8000c80:	46bd      	mov	sp, r7
 8000c82:	bd80      	pop	{r7, pc}
 8000c84:	40010c00 	.word	0x40010c00
 8000c88:	40010800 	.word	0x40010800

08000c8c <delay_us>:

void delay_us(unsigned short us)
{
 8000c8c:	b580      	push	{r7, lr}
 8000c8e:	b082      	sub	sp, #8
 8000c90:	af00      	add	r7, sp, #0
 8000c92:	4603      	mov	r3, r0
 8000c94:	80fb      	strh	r3, [r7, #6]
    __HAL_TIM_SET_COUNTER(&htim1, 0);
 8000c96:	4b0a      	ldr	r3, [pc, #40]	@ (8000cc0 <delay_us+0x34>)
 8000c98:	681b      	ldr	r3, [r3, #0]
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	625a      	str	r2, [r3, #36]	@ 0x24
    HAL_TIM_Base_Start(&htim1);
 8000c9e:	4808      	ldr	r0, [pc, #32]	@ (8000cc0 <delay_us+0x34>)
 8000ca0:	f002 ffd2 	bl	8003c48 <HAL_TIM_Base_Start>

    while (__HAL_TIM_GET_COUNTER(&htim1) < us);
 8000ca4:	bf00      	nop
 8000ca6:	4b06      	ldr	r3, [pc, #24]	@ (8000cc0 <delay_us+0x34>)
 8000ca8:	681b      	ldr	r3, [r3, #0]
 8000caa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000cac:	88fb      	ldrh	r3, [r7, #6]
 8000cae:	429a      	cmp	r2, r3
 8000cb0:	d3f9      	bcc.n	8000ca6 <delay_us+0x1a>

    HAL_TIM_Base_Stop(&htim1);
 8000cb2:	4803      	ldr	r0, [pc, #12]	@ (8000cc0 <delay_us+0x34>)
 8000cb4:	f003 f812 	bl	8003cdc <HAL_TIM_Base_Stop>
}
 8000cb8:	bf00      	nop
 8000cba:	3708      	adds	r7, #8
 8000cbc:	46bd      	mov	sp, r7
 8000cbe:	bd80      	pop	{r7, pc}
 8000cc0:	2000021c 	.word	0x2000021c

08000cc4 <MX_CAN_Init>:

CAN_HandleTypeDef hcan;

/* CAN init function */
void MX_CAN_Init(void)
{
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	af00      	add	r7, sp, #0
  /* USER CODE END CAN_Init 0 */

  /* USER CODE BEGIN CAN_Init 1 */

  /* USER CODE END CAN_Init 1 */
  hcan.Instance = CAN1;
 8000cc8:	4b17      	ldr	r3, [pc, #92]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cca:	4a18      	ldr	r2, [pc, #96]	@ (8000d2c <MX_CAN_Init+0x68>)
 8000ccc:	601a      	str	r2, [r3, #0]
  hcan.Init.Prescaler = 4;
 8000cce:	4b16      	ldr	r3, [pc, #88]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cd0:	2204      	movs	r2, #4
 8000cd2:	605a      	str	r2, [r3, #4]
  hcan.Init.Mode = CAN_MODE_NORMAL;
 8000cd4:	4b14      	ldr	r3, [pc, #80]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	609a      	str	r2, [r3, #8]
  hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000cda:	4b13      	ldr	r3, [pc, #76]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cdc:	2200      	movs	r2, #0
 8000cde:	60da      	str	r2, [r3, #12]
  hcan.Init.TimeSeg1 = CAN_BS1_4TQ;
 8000ce0:	4b11      	ldr	r3, [pc, #68]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000ce2:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8000ce6:	611a      	str	r2, [r3, #16]
  hcan.Init.TimeSeg2 = CAN_BS2_4TQ;
 8000ce8:	4b0f      	ldr	r3, [pc, #60]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cea:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8000cee:	615a      	str	r2, [r3, #20]
  hcan.Init.TimeTriggeredMode = DISABLE;
 8000cf0:	4b0d      	ldr	r3, [pc, #52]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cf2:	2200      	movs	r2, #0
 8000cf4:	761a      	strb	r2, [r3, #24]
  hcan.Init.AutoBusOff = DISABLE;
 8000cf6:	4b0c      	ldr	r3, [pc, #48]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	765a      	strb	r2, [r3, #25]
  hcan.Init.AutoWakeUp = DISABLE;
 8000cfc:	4b0a      	ldr	r3, [pc, #40]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000cfe:	2200      	movs	r2, #0
 8000d00:	769a      	strb	r2, [r3, #26]
  hcan.Init.AutoRetransmission = DISABLE;
 8000d02:	4b09      	ldr	r3, [pc, #36]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000d04:	2200      	movs	r2, #0
 8000d06:	76da      	strb	r2, [r3, #27]
  hcan.Init.ReceiveFifoLocked = DISABLE;
 8000d08:	4b07      	ldr	r3, [pc, #28]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000d0a:	2200      	movs	r2, #0
 8000d0c:	771a      	strb	r2, [r3, #28]
  hcan.Init.TransmitFifoPriority = DISABLE;
 8000d0e:	4b06      	ldr	r3, [pc, #24]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000d10:	2200      	movs	r2, #0
 8000d12:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan) != HAL_OK)
 8000d14:	4804      	ldr	r0, [pc, #16]	@ (8000d28 <MX_CAN_Init+0x64>)
 8000d16:	f001 fcee 	bl	80026f6 <HAL_CAN_Init>
 8000d1a:	4603      	mov	r3, r0
 8000d1c:	2b00      	cmp	r3, #0
 8000d1e:	d001      	beq.n	8000d24 <MX_CAN_Init+0x60>
  {
    Error_Handler();
 8000d20:	f000 fd4e 	bl	80017c0 <Error_Handler>
  }
  /* USER CODE BEGIN CAN_Init 2 */

  /* USER CODE END CAN_Init 2 */

}
 8000d24:	bf00      	nop
 8000d26:	bd80      	pop	{r7, pc}
 8000d28:	200000f8 	.word	0x200000f8
 8000d2c:	40006400 	.word	0x40006400

08000d30 <HAL_CAN_MspInit>:

void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
{
 8000d30:	b580      	push	{r7, lr}
 8000d32:	b088      	sub	sp, #32
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d38:	f107 0310 	add.w	r3, r7, #16
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	601a      	str	r2, [r3, #0]
 8000d40:	605a      	str	r2, [r3, #4]
 8000d42:	609a      	str	r2, [r3, #8]
 8000d44:	60da      	str	r2, [r3, #12]
  if(canHandle->Instance==CAN1)
 8000d46:	687b      	ldr	r3, [r7, #4]
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	4a1c      	ldr	r2, [pc, #112]	@ (8000dbc <HAL_CAN_MspInit+0x8c>)
 8000d4c:	4293      	cmp	r3, r2
 8000d4e:	d131      	bne.n	8000db4 <HAL_CAN_MspInit+0x84>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* CAN1 clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 8000d50:	4b1b      	ldr	r3, [pc, #108]	@ (8000dc0 <HAL_CAN_MspInit+0x90>)
 8000d52:	69db      	ldr	r3, [r3, #28]
 8000d54:	4a1a      	ldr	r2, [pc, #104]	@ (8000dc0 <HAL_CAN_MspInit+0x90>)
 8000d56:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000d5a:	61d3      	str	r3, [r2, #28]
 8000d5c:	4b18      	ldr	r3, [pc, #96]	@ (8000dc0 <HAL_CAN_MspInit+0x90>)
 8000d5e:	69db      	ldr	r3, [r3, #28]
 8000d60:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000d64:	60fb      	str	r3, [r7, #12]
 8000d66:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d68:	4b15      	ldr	r3, [pc, #84]	@ (8000dc0 <HAL_CAN_MspInit+0x90>)
 8000d6a:	699b      	ldr	r3, [r3, #24]
 8000d6c:	4a14      	ldr	r2, [pc, #80]	@ (8000dc0 <HAL_CAN_MspInit+0x90>)
 8000d6e:	f043 0304 	orr.w	r3, r3, #4
 8000d72:	6193      	str	r3, [r2, #24]
 8000d74:	4b12      	ldr	r3, [pc, #72]	@ (8000dc0 <HAL_CAN_MspInit+0x90>)
 8000d76:	699b      	ldr	r3, [r3, #24]
 8000d78:	f003 0304 	and.w	r3, r3, #4
 8000d7c:	60bb      	str	r3, [r7, #8]
 8000d7e:	68bb      	ldr	r3, [r7, #8]
    /**CAN GPIO Configuration
    PA11     ------> CAN_RX
    PA12     ------> CAN_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8000d80:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8000d84:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d86:	2300      	movs	r3, #0
 8000d88:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d8a:	2300      	movs	r3, #0
 8000d8c:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d8e:	f107 0310 	add.w	r3, r7, #16
 8000d92:	4619      	mov	r1, r3
 8000d94:	480b      	ldr	r0, [pc, #44]	@ (8000dc4 <HAL_CAN_MspInit+0x94>)
 8000d96:	f001 ffbf 	bl	8002d18 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000d9a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000d9e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000da0:	2302      	movs	r3, #2
 8000da2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000da4:	2303      	movs	r3, #3
 8000da6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000da8:	f107 0310 	add.w	r3, r7, #16
 8000dac:	4619      	mov	r1, r3
 8000dae:	4805      	ldr	r0, [pc, #20]	@ (8000dc4 <HAL_CAN_MspInit+0x94>)
 8000db0:	f001 ffb2 	bl	8002d18 <HAL_GPIO_Init>

  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }
}
 8000db4:	bf00      	nop
 8000db6:	3720      	adds	r7, #32
 8000db8:	46bd      	mov	sp, r7
 8000dba:	bd80      	pop	{r7, pc}
 8000dbc:	40006400 	.word	0x40006400
 8000dc0:	40021000 	.word	0x40021000
 8000dc4:	40010800 	.word	0x40010800

08000dc8 <sendCANString>:


const unsigned char DEBUG_ID = 0x7B;
const unsigned char DEBUG_DLC = 8;

HAL_StatusTypeDef sendCANString(const char* message){
 8000dc8:	b580      	push	{r7, lr}
 8000dca:	b08e      	sub	sp, #56	@ 0x38
 8000dcc:	af00      	add	r7, sp, #0
 8000dce:	6078      	str	r0, [r7, #4]
	CAN_TxHeaderTypeDef txHeader;
	unsigned long txMailbox;
	unsigned char txData[8];
	
	HAL_StatusTypeDef status = HAL_OK;
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
	
	txHeader.StdId = DEBUG_ID;
 8000dd6:	237b      	movs	r3, #123	@ 0x7b
 8000dd8:	61bb      	str	r3, [r7, #24]
    txHeader.ExtId = 0;
 8000dda:	2300      	movs	r3, #0
 8000ddc:	61fb      	str	r3, [r7, #28]
    txHeader.IDE = CAN_ID_STD;
 8000dde:	2300      	movs	r3, #0
 8000de0:	623b      	str	r3, [r7, #32]
    txHeader.RTR = CAN_RTR_DATA;
 8000de2:	2300      	movs	r3, #0
 8000de4:	627b      	str	r3, [r7, #36]	@ 0x24
    txHeader.DLC = DEBUG_DLC;
 8000de6:	2308      	movs	r3, #8
 8000de8:	62bb      	str	r3, [r7, #40]	@ 0x28
    txHeader.TransmitGlobalTime = DISABLE;
 8000dea:	2300      	movs	r3, #0
 8000dec:	f887 302c 	strb.w	r3, [r7, #44]	@ 0x2c
	
	unsigned char len = 0;
 8000df0:	2300      	movs	r3, #0
 8000df2:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
    while (1) {
        if (message[len] == '\0') {
 8000df6:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8000dfa:	687a      	ldr	r2, [r7, #4]
 8000dfc:	4413      	add	r3, r2
 8000dfe:	781b      	ldrb	r3, [r3, #0]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d109      	bne.n	8000e18 <sendCANString+0x50>
        	  len++;
 8000e04:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8000e08:	3301      	adds	r3, #1
 8000e0a:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
              break;
 8000e0e:	bf00      	nop
        }
        len++;
    }
	
	for (unsigned char i = 0; i < len; i += 8) {
 8000e10:	2300      	movs	r3, #0
 8000e12:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
 8000e16:	e060      	b.n	8000eda <sendCANString+0x112>
        len++;
 8000e18:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8000e1c:	3301      	adds	r3, #1
 8000e1e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
        if (message[len] == '\0') {
 8000e22:	e7e8      	b.n	8000df6 <sendCANString+0x2e>
        txHeader.DLC = (len - i > 8) ? 8 : (len - i);
 8000e24:	f897 2037 	ldrb.w	r2, [r7, #55]	@ 0x37
 8000e28:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8000e2c:	1ad3      	subs	r3, r2, r3
 8000e2e:	2b08      	cmp	r3, #8
 8000e30:	bfa8      	it	ge
 8000e32:	2308      	movge	r3, #8
 8000e34:	62bb      	str	r3, [r7, #40]	@ 0x28
        for (unsigned char j = 0; j < 8; j++) {
 8000e36:	2300      	movs	r3, #0
 8000e38:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
 8000e3c:	e00b      	b.n	8000e56 <sendCANString+0x8e>
            txData[j] = 0;
 8000e3e:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8000e42:	3338      	adds	r3, #56	@ 0x38
 8000e44:	443b      	add	r3, r7
 8000e46:	2200      	movs	r2, #0
 8000e48:	f803 2c2c 	strb.w	r2, [r3, #-44]
        for (unsigned char j = 0; j < 8; j++) {
 8000e4c:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8000e50:	3301      	adds	r3, #1
 8000e52:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
 8000e56:	f897 3035 	ldrb.w	r3, [r7, #53]	@ 0x35
 8000e5a:	2b07      	cmp	r3, #7
 8000e5c:	d9ef      	bls.n	8000e3e <sendCANString+0x76>
        }
        for (unsigned char j = 0; j < txHeader.DLC; j++) {
 8000e5e:	2300      	movs	r3, #0
 8000e60:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
 8000e64:	e013      	b.n	8000e8e <sendCANString+0xc6>
            txData[j] = message[i + j];
 8000e66:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000e6a:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8000e6e:	4413      	add	r3, r2
 8000e70:	461a      	mov	r2, r3
 8000e72:	687b      	ldr	r3, [r7, #4]
 8000e74:	441a      	add	r2, r3
 8000e76:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8000e7a:	7812      	ldrb	r2, [r2, #0]
 8000e7c:	3338      	adds	r3, #56	@ 0x38
 8000e7e:	443b      	add	r3, r7
 8000e80:	f803 2c2c 	strb.w	r2, [r3, #-44]
        for (unsigned char j = 0; j < txHeader.DLC; j++) {
 8000e84:	f897 3034 	ldrb.w	r3, [r7, #52]	@ 0x34
 8000e88:	3301      	adds	r3, #1
 8000e8a:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
 8000e8e:	f897 2034 	ldrb.w	r2, [r7, #52]	@ 0x34
 8000e92:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000e94:	429a      	cmp	r2, r3
 8000e96:	d3e6      	bcc.n	8000e66 <sendCANString+0x9e>
        }
        status = HAL_CAN_AddTxMessage(&hcan, &txHeader, txData, &txMailbox);
 8000e98:	f107 0314 	add.w	r3, r7, #20
 8000e9c:	f107 020c 	add.w	r2, r7, #12
 8000ea0:	f107 0118 	add.w	r1, r7, #24
 8000ea4:	4812      	ldr	r0, [pc, #72]	@ (8000ef0 <sendCANString+0x128>)
 8000ea6:	f001 fd65 	bl	8002974 <HAL_CAN_AddTxMessage>
 8000eaa:	4603      	mov	r3, r0
 8000eac:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
        if (status != HAL_OK) {
 8000eb0:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8000eb4:	2b00      	cmp	r3, #0
 8000eb6:	d002      	beq.n	8000ebe <sendCANString+0xf6>
            return status;
 8000eb8:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8000ebc:	e014      	b.n	8000ee8 <sendCANString+0x120>
        }
        while (HAL_CAN_IsTxMessagePending(&hcan, txMailbox));
 8000ebe:	bf00      	nop
 8000ec0:	697b      	ldr	r3, [r7, #20]
 8000ec2:	4619      	mov	r1, r3
 8000ec4:	480a      	ldr	r0, [pc, #40]	@ (8000ef0 <sendCANString+0x128>)
 8000ec6:	f001 fe24 	bl	8002b12 <HAL_CAN_IsTxMessagePending>
 8000eca:	4603      	mov	r3, r0
 8000ecc:	2b00      	cmp	r3, #0
 8000ece:	d1f7      	bne.n	8000ec0 <sendCANString+0xf8>
	for (unsigned char i = 0; i < len; i += 8) {
 8000ed0:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8000ed4:	3308      	adds	r3, #8
 8000ed6:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
 8000eda:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000ede:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8000ee2:	429a      	cmp	r2, r3
 8000ee4:	d39e      	bcc.n	8000e24 <sendCANString+0x5c>
    }
	return HAL_OK;
 8000ee6:	2300      	movs	r3, #0

}
 8000ee8:	4618      	mov	r0, r3
 8000eea:	3738      	adds	r7, #56	@ 0x38
 8000eec:	46bd      	mov	sp, r7
 8000eee:	bd80      	pop	{r7, pc}
 8000ef0:	200000f8 	.word	0x200000f8

08000ef4 <sendCANData>:


HAL_StatusTypeDef sendCANData(unsigned char message[8], unsigned char CAN_ID, unsigned char CAN_DLC){
 8000ef4:	b580      	push	{r7, lr}
 8000ef6:	b08a      	sub	sp, #40	@ 0x28
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	6078      	str	r0, [r7, #4]
 8000efc:	460b      	mov	r3, r1
 8000efe:	70fb      	strb	r3, [r7, #3]
 8000f00:	4613      	mov	r3, r2
 8000f02:	70bb      	strb	r3, [r7, #2]
	CAN_TxHeaderTypeDef txHeader;
	unsigned long txMailbox;

	HAL_StatusTypeDef status = HAL_OK;
 8000f04:	2300      	movs	r3, #0
 8000f06:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

	txHeader.StdId = CAN_ID;
 8000f0a:	78fb      	ldrb	r3, [r7, #3]
 8000f0c:	60fb      	str	r3, [r7, #12]
    txHeader.ExtId = 0;
 8000f0e:	2300      	movs	r3, #0
 8000f10:	613b      	str	r3, [r7, #16]
    txHeader.IDE = CAN_ID_STD;
 8000f12:	2300      	movs	r3, #0
 8000f14:	617b      	str	r3, [r7, #20]
    txHeader.RTR = CAN_RTR_DATA;
 8000f16:	2300      	movs	r3, #0
 8000f18:	61bb      	str	r3, [r7, #24]
    txHeader.DLC = CAN_DLC;
 8000f1a:	78bb      	ldrb	r3, [r7, #2]
 8000f1c:	61fb      	str	r3, [r7, #28]
    txHeader.TransmitGlobalTime = DISABLE;
 8000f1e:	2300      	movs	r3, #0
 8000f20:	f887 3020 	strb.w	r3, [r7, #32]

    status = HAL_CAN_AddTxMessage(&hcan, &txHeader, message, &txMailbox);
 8000f24:	f107 0308 	add.w	r3, r7, #8
 8000f28:	f107 010c 	add.w	r1, r7, #12
 8000f2c:	687a      	ldr	r2, [r7, #4]
 8000f2e:	480d      	ldr	r0, [pc, #52]	@ (8000f64 <sendCANData+0x70>)
 8000f30:	f001 fd20 	bl	8002974 <HAL_CAN_AddTxMessage>
 8000f34:	4603      	mov	r3, r0
 8000f36:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    if (status != HAL_OK) {
 8000f3a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f3e:	2b00      	cmp	r3, #0
 8000f40:	d002      	beq.n	8000f48 <sendCANData+0x54>
        return status;
 8000f42:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f46:	e009      	b.n	8000f5c <sendCANData+0x68>
    }
    while (HAL_CAN_IsTxMessagePending(&hcan, txMailbox)){}
 8000f48:	bf00      	nop
 8000f4a:	68bb      	ldr	r3, [r7, #8]
 8000f4c:	4619      	mov	r1, r3
 8000f4e:	4805      	ldr	r0, [pc, #20]	@ (8000f64 <sendCANData+0x70>)
 8000f50:	f001 fddf 	bl	8002b12 <HAL_CAN_IsTxMessagePending>
 8000f54:	4603      	mov	r3, r0
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d1f7      	bne.n	8000f4a <sendCANData+0x56>
	return HAL_OK;
 8000f5a:	2300      	movs	r3, #0
}
 8000f5c:	4618      	mov	r0, r3
 8000f5e:	3728      	adds	r7, #40	@ 0x28
 8000f60:	46bd      	mov	sp, r7
 8000f62:	bd80      	pop	{r7, pc}
 8000f64:	200000f8 	.word	0x200000f8

08000f68 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS initialization
  * @param  None
  * @retval None
  */
void MX_FREERTOS_Init(void) {
 8000f68:	b580      	push	{r7, lr}
 8000f6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Init */
	hal_message=setupSensors();
 8000f6c:	f000 fc2e 	bl	80017cc <setupSensors>
 8000f70:	4603      	mov	r3, r0
 8000f72:	461a      	mov	r2, r3
 8000f74:	4b1e      	ldr	r3, [pc, #120]	@ (8000ff0 <MX_FREERTOS_Init+0x88>)
 8000f76:	701a      	strb	r2, [r3, #0]

	Message_Debug_Time = HAL_GetTick();
 8000f78:	f000 ff5c 	bl	8001e34 <HAL_GetTick>
 8000f7c:	4603      	mov	r3, r0
 8000f7e:	4a1d      	ldr	r2, [pc, #116]	@ (8000ff4 <MX_FREERTOS_Init+0x8c>)
 8000f80:	6013      	str	r3, [r2, #0]

	DATA_01.time = HAL_GetTick();
 8000f82:	f000 ff57 	bl	8001e34 <HAL_GetTick>
 8000f86:	4603      	mov	r3, r0
 8000f88:	4a1b      	ldr	r2, [pc, #108]	@ (8000ff8 <MX_FREERTOS_Init+0x90>)
 8000f8a:	6013      	str	r3, [r2, #0]
	DATA_02.time = HAL_GetTick();
 8000f8c:	f000 ff52 	bl	8001e34 <HAL_GetTick>
 8000f90:	4603      	mov	r3, r0
 8000f92:	4a1a      	ldr	r2, [pc, #104]	@ (8000ffc <MX_FREERTOS_Init+0x94>)
 8000f94:	6013      	str	r3, [r2, #0]
	DATA_03.time = HAL_GetTick();
 8000f96:	f000 ff4d 	bl	8001e34 <HAL_GetTick>
 8000f9a:	4603      	mov	r3, r0
 8000f9c:	4a18      	ldr	r2, [pc, #96]	@ (8001000 <MX_FREERTOS_Init+0x98>)
 8000f9e:	6013      	str	r3, [r2, #0]
	DATA_04.time = HAL_GetTick();
 8000fa0:	f000 ff48 	bl	8001e34 <HAL_GetTick>
 8000fa4:	4603      	mov	r3, r0
 8000fa6:	4a17      	ldr	r2, [pc, #92]	@ (8001004 <MX_FREERTOS_Init+0x9c>)
 8000fa8:	6013      	str	r3, [r2, #0]
	DATA_05.time = HAL_GetTick();
 8000faa:	f000 ff43 	bl	8001e34 <HAL_GetTick>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	4a15      	ldr	r2, [pc, #84]	@ (8001008 <MX_FREERTOS_Init+0xa0>)
 8000fb2:	6013      	str	r3, [r2, #0]
	DATA_06.time = HAL_GetTick();
 8000fb4:	f000 ff3e 	bl	8001e34 <HAL_GetTick>
 8000fb8:	4603      	mov	r3, r0
 8000fba:	4a14      	ldr	r2, [pc, #80]	@ (800100c <MX_FREERTOS_Init+0xa4>)
 8000fbc:	6013      	str	r3, [r2, #0]
	DATA_07.time = HAL_GetTick();
 8000fbe:	f000 ff39 	bl	8001e34 <HAL_GetTick>
 8000fc2:	4603      	mov	r3, r0
 8000fc4:	4a12      	ldr	r2, [pc, #72]	@ (8001010 <MX_FREERTOS_Init+0xa8>)
 8000fc6:	6013      	str	r3, [r2, #0]
	DATA_08.time = HAL_GetTick();
 8000fc8:	f000 ff34 	bl	8001e34 <HAL_GetTick>
 8000fcc:	4603      	mov	r3, r0
 8000fce:	4a11      	ldr	r2, [pc, #68]	@ (8001014 <MX_FREERTOS_Init+0xac>)
 8000fd0:	6013      	str	r3, [r2, #0]
	DATA_09.time = HAL_GetTick();
 8000fd2:	f000 ff2f 	bl	8001e34 <HAL_GetTick>
 8000fd6:	4603      	mov	r3, r0
 8000fd8:	4a0f      	ldr	r2, [pc, #60]	@ (8001018 <MX_FREERTOS_Init+0xb0>)
 8000fda:	6013      	str	r3, [r2, #0]
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of sensor_Task */
  sensor_TaskHandle = osThreadNew(sensorTask, NULL, &sensor_Task_attributes);
 8000fdc:	4a0f      	ldr	r2, [pc, #60]	@ (800101c <MX_FREERTOS_Init+0xb4>)
 8000fde:	2100      	movs	r1, #0
 8000fe0:	480f      	ldr	r0, [pc, #60]	@ (8001020 <MX_FREERTOS_Init+0xb8>)
 8000fe2:	f003 facf 	bl	8004584 <osThreadNew>
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	4a0e      	ldr	r2, [pc, #56]	@ (8001024 <MX_FREERTOS_Init+0xbc>)
 8000fea:	6013      	str	r3, [r2, #0]

  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

}
 8000fec:	bf00      	nop
 8000fee:	bd80      	pop	{r7, pc}
 8000ff0:	20000120 	.word	0x20000120
 8000ff4:	2000012c 	.word	0x2000012c
 8000ff8:	20000130 	.word	0x20000130
 8000ffc:	20000140 	.word	0x20000140
 8001000:	20000150 	.word	0x20000150
 8001004:	20000160 	.word	0x20000160
 8001008:	20000170 	.word	0x20000170
 800100c:	20000180 	.word	0x20000180
 8001010:	20000190 	.word	0x20000190
 8001014:	200001a0 	.word	0x200001a0
 8001018:	200001b0 	.word	0x200001b0
 800101c:	08007a30 	.word	0x08007a30
 8001020:	08001029 	.word	0x08001029
 8001024:	20000124 	.word	0x20000124

08001028 <sensorTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_sensorTask */
void sensorTask(void *argument)
{
 8001028:	b580      	push	{r7, lr}
 800102a:	b08c      	sub	sp, #48	@ 0x30
 800102c:	af00      	add	r7, sp, #0
 800102e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN sensorTask */
	TickType_t xLastWakeTime = xTaskGetTickCount();
 8001030:	f004 fc6e 	bl	8005910 <xTaskGetTickCount>
 8001034:	4603      	mov	r3, r0
 8001036:	623b      	str	r3, [r7, #32]
	uint16_t adc_value;
	char value[20];
  /* Infinite loop */
  for(;;)
  {
	RTOS_Time = HAL_GetTick();
 8001038:	f000 fefc 	bl	8001e34 <HAL_GetTick>
 800103c:	62f8      	str	r0, [r7, #44]	@ 0x2c
	uint16_t v_ref = vRefValue(readADCValue1(VREF_PIN));
 800103e:	2000      	movs	r0, #0
 8001040:	f7ff fd02 	bl	8000a48 <readADCValue1>
 8001044:	4603      	mov	r3, r0
 8001046:	4618      	mov	r0, r3
 8001048:	f000 fc8e 	bl	8001968 <vRefValue>
 800104c:	4603      	mov	r3, r0
 800104e:	857b      	strh	r3, [r7, #42]	@ 0x2a
	uint16_t data;
	if (RTOS_Time - Message_Debug_Time >= MESSAGE_DEBUG_REFRESH_RATE) {
 8001050:	4b5e      	ldr	r3, [pc, #376]	@ (80011cc <sensorTask+0x1a4>)
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001056:	1ad3      	subs	r3, r2, r3
 8001058:	4a5d      	ldr	r2, [pc, #372]	@ (80011d0 <sensorTask+0x1a8>)
 800105a:	8812      	ldrh	r2, [r2, #0]
 800105c:	4293      	cmp	r3, r2
 800105e:	d31e      	bcc.n	800109e <sensorTask+0x76>
		Message_Debug_Time = RTOS_Time;
 8001060:	4a5a      	ldr	r2, [pc, #360]	@ (80011cc <sensorTask+0x1a4>)
 8001062:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001064:	6013      	str	r3, [r2, #0]
		adc_value=resistorValue(readSensor(C1_1),v_ref);
 8001066:	202b      	movs	r0, #43	@ 0x2b
 8001068:	f7ff fd82 	bl	8000b70 <readSensor>
 800106c:	4603      	mov	r3, r0
 800106e:	461a      	mov	r2, r3
 8001070:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001072:	4619      	mov	r1, r3
 8001074:	4610      	mov	r0, r2
 8001076:	f000 fca7 	bl	80019c8 <resistorValue>
 800107a:	4603      	mov	r3, r0
 800107c:	853b      	strh	r3, [r7, #40]	@ 0x28
		//adc_value=readSensor(C1_1);
		//hal_message = sendCANString("Teste: ");
		sprintf(value, "%u$", adc_value);
 800107e:	8d3a      	ldrh	r2, [r7, #40]	@ 0x28
 8001080:	f107 030c 	add.w	r3, r7, #12
 8001084:	4953      	ldr	r1, [pc, #332]	@ (80011d4 <sensorTask+0x1ac>)
 8001086:	4618      	mov	r0, r3
 8001088:	f005 ff9e 	bl	8006fc8 <siprintf>
		//sprintf(value, "%u$", v_ref);
		hal_message = sendCANString(value);
 800108c:	f107 030c 	add.w	r3, r7, #12
 8001090:	4618      	mov	r0, r3
 8001092:	f7ff fe99 	bl	8000dc8 <sendCANString>
 8001096:	4603      	mov	r3, r0
 8001098:	461a      	mov	r2, r3
 800109a:	4b4f      	ldr	r3, [pc, #316]	@ (80011d8 <sensorTask+0x1b0>)
 800109c:	701a      	strb	r2, [r3, #0]
		}

	if (RTOS_Time - DATA_01.time >= DATA_01.refresh_rate) {
 800109e:	4b4f      	ldr	r3, [pc, #316]	@ (80011dc <sensorTask+0x1b4>)
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80010a4:	1ad3      	subs	r3, r2, r3
 80010a6:	4a4d      	ldr	r2, [pc, #308]	@ (80011dc <sensorTask+0x1b4>)
 80010a8:	7912      	ldrb	r2, [r2, #4]
 80010aa:	4293      	cmp	r3, r2
 80010ac:	f0c0 80ab 	bcc.w	8001206 <sensorTask+0x1de>
	    DATA_01.time = RTOS_Time;
 80010b0:	4a4a      	ldr	r2, [pc, #296]	@ (80011dc <sensorTask+0x1b4>)
 80010b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80010b4:	6013      	str	r3, [r2, #0]

	    data = vBatValue(readADCValue2(VBAT_PIN));  // Tensao da Bateria
 80010b6:	2004      	movs	r0, #4
 80010b8:	f7ff fd10 	bl	8000adc <readADCValue2>
 80010bc:	4603      	mov	r3, r0
 80010be:	4618      	mov	r0, r3
 80010c0:	f000 fc22 	bl	8001908 <vBatValue>
 80010c4:	4603      	mov	r3, r0
 80010c6:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_01.data[0] = data&0xFF;
 80010c8:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80010ca:	b2da      	uxtb	r2, r3
 80010cc:	4b43      	ldr	r3, [pc, #268]	@ (80011dc <sensorTask+0x1b4>)
 80010ce:	71da      	strb	r2, [r3, #7]
	    DATA_01.data[1] = (data>>8)&0x0F;
 80010d0:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80010d2:	0a1b      	lsrs	r3, r3, #8
 80010d4:	b29b      	uxth	r3, r3
 80010d6:	b2db      	uxtb	r3, r3
 80010d8:	f003 030f 	and.w	r3, r3, #15
 80010dc:	b2da      	uxtb	r2, r3
 80010de:	4b3f      	ldr	r3, [pc, #252]	@ (80011dc <sensorTask+0x1b4>)
 80010e0:	721a      	strb	r2, [r3, #8]
	    data = readADCValue2(TEMP_PIN);  // Sensor de Temperatura Interno
 80010e2:	2006      	movs	r0, #6
 80010e4:	f7ff fcfa 	bl	8000adc <readADCValue2>
 80010e8:	4603      	mov	r3, r0
 80010ea:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_01.data[1]|=(data&0x0F)<<4;
 80010ec:	4b3b      	ldr	r3, [pc, #236]	@ (80011dc <sensorTask+0x1b4>)
 80010ee:	7a1b      	ldrb	r3, [r3, #8]
 80010f0:	b25a      	sxtb	r2, r3
 80010f2:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80010f4:	b25b      	sxtb	r3, r3
 80010f6:	011b      	lsls	r3, r3, #4
 80010f8:	b25b      	sxtb	r3, r3
 80010fa:	4313      	orrs	r3, r2
 80010fc:	b25b      	sxtb	r3, r3
 80010fe:	b2da      	uxtb	r2, r3
 8001100:	4b36      	ldr	r3, [pc, #216]	@ (80011dc <sensorTask+0x1b4>)
 8001102:	721a      	strb	r2, [r3, #8]
	    DATA_01.data[2] = (data>>4)&0xFF;
 8001104:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001106:	091b      	lsrs	r3, r3, #4
 8001108:	b29b      	uxth	r3, r3
 800110a:	b2da      	uxtb	r2, r3
 800110c:	4b33      	ldr	r3, [pc, #204]	@ (80011dc <sensorTask+0x1b4>)
 800110e:	725a      	strb	r2, [r3, #9]
	    DATA_01.data[3] = v_ref&0xFF;    // Tensao Referencia
 8001110:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001112:	b2da      	uxtb	r2, r3
 8001114:	4b31      	ldr	r3, [pc, #196]	@ (80011dc <sensorTask+0x1b4>)
 8001116:	729a      	strb	r2, [r3, #10]
	    DATA_01.data[4] = (v_ref>>8)&0x0F;
 8001118:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 800111a:	0a1b      	lsrs	r3, r3, #8
 800111c:	b29b      	uxth	r3, r3
 800111e:	b2db      	uxtb	r3, r3
 8001120:	f003 030f 	and.w	r3, r3, #15
 8001124:	b2da      	uxtb	r2, r3
 8001126:	4b2d      	ldr	r3, [pc, #180]	@ (80011dc <sensorTask+0x1b4>)
 8001128:	72da      	strb	r2, [r3, #11]
	    data = readADCValue2(GEAR_PIN);  // Sensor de Marcha
 800112a:	2005      	movs	r0, #5
 800112c:	f7ff fcd6 	bl	8000adc <readADCValue2>
 8001130:	4603      	mov	r3, r0
 8001132:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    if (data>3682){
 8001134:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001136:	f640 6262 	movw	r2, #3682	@ 0xe62
 800113a:	4293      	cmp	r3, r2
 800113c:	d907      	bls.n	800114e <sensorTask+0x126>
	    	DATA_01.data[4] |= (7<<4);
 800113e:	4b27      	ldr	r3, [pc, #156]	@ (80011dc <sensorTask+0x1b4>)
 8001140:	7adb      	ldrb	r3, [r3, #11]
 8001142:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
 8001146:	b2da      	uxtb	r2, r3
 8001148:	4b24      	ldr	r3, [pc, #144]	@ (80011dc <sensorTask+0x1b4>)
 800114a:	72da      	strb	r2, [r3, #11]
 800114c:	e04f      	b.n	80011ee <sensorTask+0x1c6>
	    	}
	    else if (data>2995){
 800114e:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001150:	f640 32b3 	movw	r2, #2995	@ 0xbb3
 8001154:	4293      	cmp	r3, r2
 8001156:	d907      	bls.n	8001168 <sensorTask+0x140>
	    	DATA_01.data[4] |= (1<<4);
 8001158:	4b20      	ldr	r3, [pc, #128]	@ (80011dc <sensorTask+0x1b4>)
 800115a:	7adb      	ldrb	r3, [r3, #11]
 800115c:	f043 0310 	orr.w	r3, r3, #16
 8001160:	b2da      	uxtb	r2, r3
 8001162:	4b1e      	ldr	r3, [pc, #120]	@ (80011dc <sensorTask+0x1b4>)
 8001164:	72da      	strb	r2, [r3, #11]
 8001166:	e042      	b.n	80011ee <sensorTask+0x1c6>
	    }
	    else if (data>2432){
 8001168:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800116a:	f5b3 6f18 	cmp.w	r3, #2432	@ 0x980
 800116e:	d907      	bls.n	8001180 <sensorTask+0x158>
	    	DATA_01.data[4] |= (2<<4);
 8001170:	4b1a      	ldr	r3, [pc, #104]	@ (80011dc <sensorTask+0x1b4>)
 8001172:	7adb      	ldrb	r3, [r3, #11]
 8001174:	f043 0320 	orr.w	r3, r3, #32
 8001178:	b2da      	uxtb	r2, r3
 800117a:	4b18      	ldr	r3, [pc, #96]	@ (80011dc <sensorTask+0x1b4>)
 800117c:	72da      	strb	r2, [r3, #11]
 800117e:	e036      	b.n	80011ee <sensorTask+0x1c6>
	    }
	    else if (data>1852){
 8001180:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001182:	f240 723c 	movw	r2, #1852	@ 0x73c
 8001186:	4293      	cmp	r3, r2
 8001188:	d907      	bls.n	800119a <sensorTask+0x172>
	    	DATA_01.data[4] |= (3<<4);
 800118a:	4b14      	ldr	r3, [pc, #80]	@ (80011dc <sensorTask+0x1b4>)
 800118c:	7adb      	ldrb	r3, [r3, #11]
 800118e:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8001192:	b2da      	uxtb	r2, r3
 8001194:	4b11      	ldr	r3, [pc, #68]	@ (80011dc <sensorTask+0x1b4>)
 8001196:	72da      	strb	r2, [r3, #11]
 8001198:	e029      	b.n	80011ee <sensorTask+0x1c6>
	    }
	    else if (data>1249){
 800119a:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800119c:	f240 42e1 	movw	r2, #1249	@ 0x4e1
 80011a0:	4293      	cmp	r3, r2
 80011a2:	d907      	bls.n	80011b4 <sensorTask+0x18c>
	    	DATA_01.data[4] |= (4<<4);
 80011a4:	4b0d      	ldr	r3, [pc, #52]	@ (80011dc <sensorTask+0x1b4>)
 80011a6:	7adb      	ldrb	r3, [r3, #11]
 80011a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011ac:	b2da      	uxtb	r2, r3
 80011ae:	4b0b      	ldr	r3, [pc, #44]	@ (80011dc <sensorTask+0x1b4>)
 80011b0:	72da      	strb	r2, [r3, #11]
 80011b2:	e01c      	b.n	80011ee <sensorTask+0x1c6>
	    }
	    else if (data>672){
 80011b4:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80011b6:	f5b3 7f28 	cmp.w	r3, #672	@ 0x2a0
 80011ba:	d911      	bls.n	80011e0 <sensorTask+0x1b8>
	    	DATA_01.data[4] |= (5<<4);
 80011bc:	4b07      	ldr	r3, [pc, #28]	@ (80011dc <sensorTask+0x1b4>)
 80011be:	7adb      	ldrb	r3, [r3, #11]
 80011c0:	f043 0350 	orr.w	r3, r3, #80	@ 0x50
 80011c4:	b2da      	uxtb	r2, r3
 80011c6:	4b05      	ldr	r3, [pc, #20]	@ (80011dc <sensorTask+0x1b4>)
 80011c8:	72da      	strb	r2, [r3, #11]
 80011ca:	e010      	b.n	80011ee <sensorTask+0x1c6>
 80011cc:	2000012c 	.word	0x2000012c
 80011d0:	08007a56 	.word	0x08007a56
 80011d4:	08007a08 	.word	0x08007a08
 80011d8:	20000120 	.word	0x20000120
 80011dc:	20000130 	.word	0x20000130
	    }
	    else {
	    	DATA_01.data[4] |= (6<<4);
 80011e0:	4b9d      	ldr	r3, [pc, #628]	@ (8001458 <sensorTask+0x430>)
 80011e2:	7adb      	ldrb	r3, [r3, #11]
 80011e4:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80011e8:	b2da      	uxtb	r2, r3
 80011ea:	4b9b      	ldr	r3, [pc, #620]	@ (8001458 <sensorTask+0x430>)
 80011ec:	72da      	strb	r2, [r3, #11]
	    }
	    hal_message = sendCANData(DATA_01.data,DATA_01.id,DATA_01.dlc);
 80011ee:	4b9a      	ldr	r3, [pc, #616]	@ (8001458 <sensorTask+0x430>)
 80011f0:	795b      	ldrb	r3, [r3, #5]
 80011f2:	4a99      	ldr	r2, [pc, #612]	@ (8001458 <sensorTask+0x430>)
 80011f4:	7992      	ldrb	r2, [r2, #6]
 80011f6:	4619      	mov	r1, r3
 80011f8:	4898      	ldr	r0, [pc, #608]	@ (800145c <sensorTask+0x434>)
 80011fa:	f7ff fe7b 	bl	8000ef4 <sendCANData>
 80011fe:	4603      	mov	r3, r0
 8001200:	461a      	mov	r2, r3
 8001202:	4b97      	ldr	r3, [pc, #604]	@ (8001460 <sensorTask+0x438>)
 8001204:	701a      	strb	r2, [r3, #0]
	}

	if (RTOS_Time - DATA_02.time >= DATA_02.refresh_rate) {
 8001206:	4b97      	ldr	r3, [pc, #604]	@ (8001464 <sensorTask+0x43c>)
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800120c:	1ad3      	subs	r3, r2, r3
 800120e:	4a95      	ldr	r2, [pc, #596]	@ (8001464 <sensorTask+0x43c>)
 8001210:	7912      	ldrb	r2, [r2, #4]
 8001212:	4293      	cmp	r3, r2
 8001214:	d37c      	bcc.n	8001310 <sensorTask+0x2e8>
	    DATA_02.time = RTOS_Time;
 8001216:	4a93      	ldr	r2, [pc, #588]	@ (8001464 <sensorTask+0x43c>)
 8001218:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800121a:	6013      	str	r3, [r2, #0]

	    data = readSensor(FR_Susp_Angle);
 800121c:	4b92      	ldr	r3, [pc, #584]	@ (8001468 <sensorTask+0x440>)
 800121e:	781b      	ldrb	r3, [r3, #0]
 8001220:	4618      	mov	r0, r3
 8001222:	f7ff fca5 	bl	8000b70 <readSensor>
 8001226:	4603      	mov	r3, r0
 8001228:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_02.data[0] = data&0xFF;;
 800122a:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800122c:	b2da      	uxtb	r2, r3
 800122e:	4b8d      	ldr	r3, [pc, #564]	@ (8001464 <sensorTask+0x43c>)
 8001230:	71da      	strb	r2, [r3, #7]
	    DATA_02.data[1] = (data>>8)&0xF;
 8001232:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001234:	0a1b      	lsrs	r3, r3, #8
 8001236:	b29b      	uxth	r3, r3
 8001238:	b2db      	uxtb	r3, r3
 800123a:	f003 030f 	and.w	r3, r3, #15
 800123e:	b2da      	uxtb	r2, r3
 8001240:	4b88      	ldr	r3, [pc, #544]	@ (8001464 <sensorTask+0x43c>)
 8001242:	721a      	strb	r2, [r3, #8]

	    data = readSensor(FL_Susp_Angle);
 8001244:	4b89      	ldr	r3, [pc, #548]	@ (800146c <sensorTask+0x444>)
 8001246:	781b      	ldrb	r3, [r3, #0]
 8001248:	4618      	mov	r0, r3
 800124a:	f7ff fc91 	bl	8000b70 <readSensor>
 800124e:	4603      	mov	r3, r0
 8001250:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_02.data[1] |= (data&0xF)<<4;
 8001252:	4b84      	ldr	r3, [pc, #528]	@ (8001464 <sensorTask+0x43c>)
 8001254:	7a1b      	ldrb	r3, [r3, #8]
 8001256:	b25a      	sxtb	r2, r3
 8001258:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800125a:	b25b      	sxtb	r3, r3
 800125c:	011b      	lsls	r3, r3, #4
 800125e:	b25b      	sxtb	r3, r3
 8001260:	4313      	orrs	r3, r2
 8001262:	b25b      	sxtb	r3, r3
 8001264:	b2da      	uxtb	r2, r3
 8001266:	4b7f      	ldr	r3, [pc, #508]	@ (8001464 <sensorTask+0x43c>)
 8001268:	721a      	strb	r2, [r3, #8]
	    DATA_02.data[2] = (data>>4)&0xFF;
 800126a:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800126c:	091b      	lsrs	r3, r3, #4
 800126e:	b29b      	uxth	r3, r3
 8001270:	b2da      	uxtb	r2, r3
 8001272:	4b7c      	ldr	r3, [pc, #496]	@ (8001464 <sensorTask+0x43c>)
 8001274:	725a      	strb	r2, [r3, #9]

	    data = readSensor(RR_Susp_Angle);
 8001276:	4b7e      	ldr	r3, [pc, #504]	@ (8001470 <sensorTask+0x448>)
 8001278:	781b      	ldrb	r3, [r3, #0]
 800127a:	4618      	mov	r0, r3
 800127c:	f7ff fc78 	bl	8000b70 <readSensor>
 8001280:	4603      	mov	r3, r0
 8001282:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_02.data[3] = data&0xFF;;
 8001284:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001286:	b2da      	uxtb	r2, r3
 8001288:	4b76      	ldr	r3, [pc, #472]	@ (8001464 <sensorTask+0x43c>)
 800128a:	729a      	strb	r2, [r3, #10]
	    DATA_02.data[4] = (data>>8)&0xF;
 800128c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800128e:	0a1b      	lsrs	r3, r3, #8
 8001290:	b29b      	uxth	r3, r3
 8001292:	b2db      	uxtb	r3, r3
 8001294:	f003 030f 	and.w	r3, r3, #15
 8001298:	b2da      	uxtb	r2, r3
 800129a:	4b72      	ldr	r3, [pc, #456]	@ (8001464 <sensorTask+0x43c>)
 800129c:	72da      	strb	r2, [r3, #11]

	    data = readSensor(RL_Susp_Angle);
 800129e:	4b75      	ldr	r3, [pc, #468]	@ (8001474 <sensorTask+0x44c>)
 80012a0:	781b      	ldrb	r3, [r3, #0]
 80012a2:	4618      	mov	r0, r3
 80012a4:	f7ff fc64 	bl	8000b70 <readSensor>
 80012a8:	4603      	mov	r3, r0
 80012aa:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_02.data[4] |= (data&0xF)<<4;
 80012ac:	4b6d      	ldr	r3, [pc, #436]	@ (8001464 <sensorTask+0x43c>)
 80012ae:	7adb      	ldrb	r3, [r3, #11]
 80012b0:	b25a      	sxtb	r2, r3
 80012b2:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80012b4:	b25b      	sxtb	r3, r3
 80012b6:	011b      	lsls	r3, r3, #4
 80012b8:	b25b      	sxtb	r3, r3
 80012ba:	4313      	orrs	r3, r2
 80012bc:	b25b      	sxtb	r3, r3
 80012be:	b2da      	uxtb	r2, r3
 80012c0:	4b68      	ldr	r3, [pc, #416]	@ (8001464 <sensorTask+0x43c>)
 80012c2:	72da      	strb	r2, [r3, #11]
	    DATA_02.data[5] = (data>>4)&0xFF;
 80012c4:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80012c6:	091b      	lsrs	r3, r3, #4
 80012c8:	b29b      	uxth	r3, r3
 80012ca:	b2da      	uxtb	r2, r3
 80012cc:	4b65      	ldr	r3, [pc, #404]	@ (8001464 <sensorTask+0x43c>)
 80012ce:	731a      	strb	r2, [r3, #12]

	    data = readSensor(Wheel_Angle);
 80012d0:	4b69      	ldr	r3, [pc, #420]	@ (8001478 <sensorTask+0x450>)
 80012d2:	781b      	ldrb	r3, [r3, #0]
 80012d4:	4618      	mov	r0, r3
 80012d6:	f7ff fc4b 	bl	8000b70 <readSensor>
 80012da:	4603      	mov	r3, r0
 80012dc:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_02.data[6] = data&0xFF;;
 80012de:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80012e0:	b2da      	uxtb	r2, r3
 80012e2:	4b60      	ldr	r3, [pc, #384]	@ (8001464 <sensorTask+0x43c>)
 80012e4:	735a      	strb	r2, [r3, #13]
	    DATA_02.data[7] = (data>>8)&0xF;
 80012e6:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80012e8:	0a1b      	lsrs	r3, r3, #8
 80012ea:	b29b      	uxth	r3, r3
 80012ec:	b2db      	uxtb	r3, r3
 80012ee:	f003 030f 	and.w	r3, r3, #15
 80012f2:	b2da      	uxtb	r2, r3
 80012f4:	4b5b      	ldr	r3, [pc, #364]	@ (8001464 <sensorTask+0x43c>)
 80012f6:	739a      	strb	r2, [r3, #14]

	    hal_message = sendCANData(DATA_02.data,DATA_02.id,DATA_02.dlc);
 80012f8:	4b5a      	ldr	r3, [pc, #360]	@ (8001464 <sensorTask+0x43c>)
 80012fa:	795b      	ldrb	r3, [r3, #5]
 80012fc:	4a59      	ldr	r2, [pc, #356]	@ (8001464 <sensorTask+0x43c>)
 80012fe:	7992      	ldrb	r2, [r2, #6]
 8001300:	4619      	mov	r1, r3
 8001302:	485e      	ldr	r0, [pc, #376]	@ (800147c <sensorTask+0x454>)
 8001304:	f7ff fdf6 	bl	8000ef4 <sendCANData>
 8001308:	4603      	mov	r3, r0
 800130a:	461a      	mov	r2, r3
 800130c:	4b54      	ldr	r3, [pc, #336]	@ (8001460 <sensorTask+0x438>)
 800130e:	701a      	strb	r2, [r3, #0]
	}

	if (RTOS_Time - DATA_03.time >= DATA_03.refresh_rate) {
 8001310:	4b5b      	ldr	r3, [pc, #364]	@ (8001480 <sensorTask+0x458>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001316:	1ad3      	subs	r3, r2, r3
 8001318:	4a59      	ldr	r2, [pc, #356]	@ (8001480 <sensorTask+0x458>)
 800131a:	7912      	ldrb	r2, [r2, #4]
 800131c:	4293      	cmp	r3, r2
 800131e:	d368      	bcc.n	80013f2 <sensorTask+0x3ca>
	    DATA_03.time = RTOS_Time;
 8001320:	4a57      	ldr	r2, [pc, #348]	@ (8001480 <sensorTask+0x458>)
 8001322:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001324:	6013      	str	r3, [r2, #0]

	    data = readSensor(FR_Hall);
 8001326:	4b57      	ldr	r3, [pc, #348]	@ (8001484 <sensorTask+0x45c>)
 8001328:	781b      	ldrb	r3, [r3, #0]
 800132a:	4618      	mov	r0, r3
 800132c:	f7ff fc20 	bl	8000b70 <readSensor>
 8001330:	4603      	mov	r3, r0
 8001332:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_03.data[0] = data&0xFF;;
 8001334:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001336:	b2da      	uxtb	r2, r3
 8001338:	4b51      	ldr	r3, [pc, #324]	@ (8001480 <sensorTask+0x458>)
 800133a:	71da      	strb	r2, [r3, #7]
	    DATA_03.data[1] = (data>>8)&0xF;
 800133c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800133e:	0a1b      	lsrs	r3, r3, #8
 8001340:	b29b      	uxth	r3, r3
 8001342:	b2db      	uxtb	r3, r3
 8001344:	f003 030f 	and.w	r3, r3, #15
 8001348:	b2da      	uxtb	r2, r3
 800134a:	4b4d      	ldr	r3, [pc, #308]	@ (8001480 <sensorTask+0x458>)
 800134c:	721a      	strb	r2, [r3, #8]

	    data = readSensor(FL_Hall);
 800134e:	4b4e      	ldr	r3, [pc, #312]	@ (8001488 <sensorTask+0x460>)
 8001350:	781b      	ldrb	r3, [r3, #0]
 8001352:	4618      	mov	r0, r3
 8001354:	f7ff fc0c 	bl	8000b70 <readSensor>
 8001358:	4603      	mov	r3, r0
 800135a:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_03.data[1] |= (data&0xF)<<4;
 800135c:	4b48      	ldr	r3, [pc, #288]	@ (8001480 <sensorTask+0x458>)
 800135e:	7a1b      	ldrb	r3, [r3, #8]
 8001360:	b25a      	sxtb	r2, r3
 8001362:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001364:	b25b      	sxtb	r3, r3
 8001366:	011b      	lsls	r3, r3, #4
 8001368:	b25b      	sxtb	r3, r3
 800136a:	4313      	orrs	r3, r2
 800136c:	b25b      	sxtb	r3, r3
 800136e:	b2da      	uxtb	r2, r3
 8001370:	4b43      	ldr	r3, [pc, #268]	@ (8001480 <sensorTask+0x458>)
 8001372:	721a      	strb	r2, [r3, #8]
	    DATA_03.data[2] = (data>>4)&0xFF;
 8001374:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001376:	091b      	lsrs	r3, r3, #4
 8001378:	b29b      	uxth	r3, r3
 800137a:	b2da      	uxtb	r2, r3
 800137c:	4b40      	ldr	r3, [pc, #256]	@ (8001480 <sensorTask+0x458>)
 800137e:	725a      	strb	r2, [r3, #9]

	    data = readSensor(RR_Hall);
 8001380:	4b42      	ldr	r3, [pc, #264]	@ (800148c <sensorTask+0x464>)
 8001382:	781b      	ldrb	r3, [r3, #0]
 8001384:	4618      	mov	r0, r3
 8001386:	f7ff fbf3 	bl	8000b70 <readSensor>
 800138a:	4603      	mov	r3, r0
 800138c:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_03.data[3] = data&0xFF;;
 800138e:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001390:	b2da      	uxtb	r2, r3
 8001392:	4b3b      	ldr	r3, [pc, #236]	@ (8001480 <sensorTask+0x458>)
 8001394:	729a      	strb	r2, [r3, #10]
	    DATA_03.data[4] = (data>>8)&0xF;
 8001396:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001398:	0a1b      	lsrs	r3, r3, #8
 800139a:	b29b      	uxth	r3, r3
 800139c:	b2db      	uxtb	r3, r3
 800139e:	f003 030f 	and.w	r3, r3, #15
 80013a2:	b2da      	uxtb	r2, r3
 80013a4:	4b36      	ldr	r3, [pc, #216]	@ (8001480 <sensorTask+0x458>)
 80013a6:	72da      	strb	r2, [r3, #11]

	    data = readSensor(RL_Hall);
 80013a8:	4b39      	ldr	r3, [pc, #228]	@ (8001490 <sensorTask+0x468>)
 80013aa:	781b      	ldrb	r3, [r3, #0]
 80013ac:	4618      	mov	r0, r3
 80013ae:	f7ff fbdf 	bl	8000b70 <readSensor>
 80013b2:	4603      	mov	r3, r0
 80013b4:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_03.data[4] |= (data&0xF)<<4;
 80013b6:	4b32      	ldr	r3, [pc, #200]	@ (8001480 <sensorTask+0x458>)
 80013b8:	7adb      	ldrb	r3, [r3, #11]
 80013ba:	b25a      	sxtb	r2, r3
 80013bc:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80013be:	b25b      	sxtb	r3, r3
 80013c0:	011b      	lsls	r3, r3, #4
 80013c2:	b25b      	sxtb	r3, r3
 80013c4:	4313      	orrs	r3, r2
 80013c6:	b25b      	sxtb	r3, r3
 80013c8:	b2da      	uxtb	r2, r3
 80013ca:	4b2d      	ldr	r3, [pc, #180]	@ (8001480 <sensorTask+0x458>)
 80013cc:	72da      	strb	r2, [r3, #11]
	    DATA_03.data[5] = (data>>4)&0xFF;
 80013ce:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80013d0:	091b      	lsrs	r3, r3, #4
 80013d2:	b29b      	uxth	r3, r3
 80013d4:	b2da      	uxtb	r2, r3
 80013d6:	4b2a      	ldr	r3, [pc, #168]	@ (8001480 <sensorTask+0x458>)
 80013d8:	731a      	strb	r2, [r3, #12]

	    hal_message = sendCANData(DATA_03.data,DATA_03.id,DATA_03.dlc);
 80013da:	4b29      	ldr	r3, [pc, #164]	@ (8001480 <sensorTask+0x458>)
 80013dc:	795b      	ldrb	r3, [r3, #5]
 80013de:	4a28      	ldr	r2, [pc, #160]	@ (8001480 <sensorTask+0x458>)
 80013e0:	7992      	ldrb	r2, [r2, #6]
 80013e2:	4619      	mov	r1, r3
 80013e4:	482b      	ldr	r0, [pc, #172]	@ (8001494 <sensorTask+0x46c>)
 80013e6:	f7ff fd85 	bl	8000ef4 <sendCANData>
 80013ea:	4603      	mov	r3, r0
 80013ec:	461a      	mov	r2, r3
 80013ee:	4b1c      	ldr	r3, [pc, #112]	@ (8001460 <sensorTask+0x438>)
 80013f0:	701a      	strb	r2, [r3, #0]
	}

	if (RTOS_Time - DATA_04.time >= DATA_04.refresh_rate) {
 80013f2:	4b29      	ldr	r3, [pc, #164]	@ (8001498 <sensorTask+0x470>)
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80013f8:	1ad3      	subs	r3, r2, r3
 80013fa:	4a27      	ldr	r2, [pc, #156]	@ (8001498 <sensorTask+0x470>)
 80013fc:	7912      	ldrb	r2, [r2, #4]
 80013fe:	4293      	cmp	r3, r2
 8001400:	f0c0 80a5 	bcc.w	800154e <sensorTask+0x526>
	    DATA_04.time = RTOS_Time;
 8001404:	4a24      	ldr	r2, [pc, #144]	@ (8001498 <sensorTask+0x470>)
 8001406:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001408:	6013      	str	r3, [r2, #0]

	    data = readSensor(FR_Disk_Temp);
 800140a:	4b24      	ldr	r3, [pc, #144]	@ (800149c <sensorTask+0x474>)
 800140c:	781b      	ldrb	r3, [r3, #0]
 800140e:	4618      	mov	r0, r3
 8001410:	f7ff fbae 	bl	8000b70 <readSensor>
 8001414:	4603      	mov	r3, r0
 8001416:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_04.data[0] = data&0xFF;;
 8001418:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800141a:	b2da      	uxtb	r2, r3
 800141c:	4b1e      	ldr	r3, [pc, #120]	@ (8001498 <sensorTask+0x470>)
 800141e:	71da      	strb	r2, [r3, #7]
	    DATA_04.data[1] = (data>>8)&0xF;
 8001420:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001422:	0a1b      	lsrs	r3, r3, #8
 8001424:	b29b      	uxth	r3, r3
 8001426:	b2db      	uxtb	r3, r3
 8001428:	f003 030f 	and.w	r3, r3, #15
 800142c:	b2da      	uxtb	r2, r3
 800142e:	4b1a      	ldr	r3, [pc, #104]	@ (8001498 <sensorTask+0x470>)
 8001430:	721a      	strb	r2, [r3, #8]

	    data = readSensor(FL_Disk_Temp);
 8001432:	4b1b      	ldr	r3, [pc, #108]	@ (80014a0 <sensorTask+0x478>)
 8001434:	781b      	ldrb	r3, [r3, #0]
 8001436:	4618      	mov	r0, r3
 8001438:	f7ff fb9a 	bl	8000b70 <readSensor>
 800143c:	4603      	mov	r3, r0
 800143e:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_04.data[1] |= (data&0xF)<<4;
 8001440:	4b15      	ldr	r3, [pc, #84]	@ (8001498 <sensorTask+0x470>)
 8001442:	7a1b      	ldrb	r3, [r3, #8]
 8001444:	b25a      	sxtb	r2, r3
 8001446:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001448:	b25b      	sxtb	r3, r3
 800144a:	011b      	lsls	r3, r3, #4
 800144c:	b25b      	sxtb	r3, r3
 800144e:	4313      	orrs	r3, r2
 8001450:	b25b      	sxtb	r3, r3
 8001452:	b2da      	uxtb	r2, r3
 8001454:	e026      	b.n	80014a4 <sensorTask+0x47c>
 8001456:	bf00      	nop
 8001458:	20000130 	.word	0x20000130
 800145c:	20000137 	.word	0x20000137
 8001460:	20000120 	.word	0x20000120
 8001464:	20000140 	.word	0x20000140
 8001468:	08007a61 	.word	0x08007a61
 800146c:	08007a62 	.word	0x08007a62
 8001470:	08007a63 	.word	0x08007a63
 8001474:	08007a64 	.word	0x08007a64
 8001478:	08007a58 	.word	0x08007a58
 800147c:	20000147 	.word	0x20000147
 8001480:	20000150 	.word	0x20000150
 8001484:	08007a59 	.word	0x08007a59
 8001488:	08007a5a 	.word	0x08007a5a
 800148c:	08007a5b 	.word	0x08007a5b
 8001490:	08007a5c 	.word	0x08007a5c
 8001494:	20000157 	.word	0x20000157
 8001498:	20000160 	.word	0x20000160
 800149c:	08007a5d 	.word	0x08007a5d
 80014a0:	08007a5e 	.word	0x08007a5e
 80014a4:	4b40      	ldr	r3, [pc, #256]	@ (80015a8 <sensorTask+0x580>)
 80014a6:	721a      	strb	r2, [r3, #8]
	    DATA_04.data[2] = (data>>4)&0xFF;
 80014a8:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80014aa:	091b      	lsrs	r3, r3, #4
 80014ac:	b29b      	uxth	r3, r3
 80014ae:	b2da      	uxtb	r2, r3
 80014b0:	4b3d      	ldr	r3, [pc, #244]	@ (80015a8 <sensorTask+0x580>)
 80014b2:	725a      	strb	r2, [r3, #9]

	    data = readSensor(RR_Disk_Temp);
 80014b4:	4b3d      	ldr	r3, [pc, #244]	@ (80015ac <sensorTask+0x584>)
 80014b6:	781b      	ldrb	r3, [r3, #0]
 80014b8:	4618      	mov	r0, r3
 80014ba:	f7ff fb59 	bl	8000b70 <readSensor>
 80014be:	4603      	mov	r3, r0
 80014c0:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_04.data[3] = data&0xFF;;
 80014c2:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80014c4:	b2da      	uxtb	r2, r3
 80014c6:	4b38      	ldr	r3, [pc, #224]	@ (80015a8 <sensorTask+0x580>)
 80014c8:	729a      	strb	r2, [r3, #10]
	    DATA_04.data[4] = (data>>8)&0xF;
 80014ca:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80014cc:	0a1b      	lsrs	r3, r3, #8
 80014ce:	b29b      	uxth	r3, r3
 80014d0:	b2db      	uxtb	r3, r3
 80014d2:	f003 030f 	and.w	r3, r3, #15
 80014d6:	b2da      	uxtb	r2, r3
 80014d8:	4b33      	ldr	r3, [pc, #204]	@ (80015a8 <sensorTask+0x580>)
 80014da:	72da      	strb	r2, [r3, #11]

	    data = readSensor(RL_Disk_Temp);
 80014dc:	4b34      	ldr	r3, [pc, #208]	@ (80015b0 <sensorTask+0x588>)
 80014de:	781b      	ldrb	r3, [r3, #0]
 80014e0:	4618      	mov	r0, r3
 80014e2:	f7ff fb45 	bl	8000b70 <readSensor>
 80014e6:	4603      	mov	r3, r0
 80014e8:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_04.data[4] |= (data&0xF)<<4;
 80014ea:	4b2f      	ldr	r3, [pc, #188]	@ (80015a8 <sensorTask+0x580>)
 80014ec:	7adb      	ldrb	r3, [r3, #11]
 80014ee:	b25a      	sxtb	r2, r3
 80014f0:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80014f2:	b25b      	sxtb	r3, r3
 80014f4:	011b      	lsls	r3, r3, #4
 80014f6:	b25b      	sxtb	r3, r3
 80014f8:	4313      	orrs	r3, r2
 80014fa:	b25b      	sxtb	r3, r3
 80014fc:	b2da      	uxtb	r2, r3
 80014fe:	4b2a      	ldr	r3, [pc, #168]	@ (80015a8 <sensorTask+0x580>)
 8001500:	72da      	strb	r2, [r3, #11]
	    DATA_04.data[5] = (data>>4)&0xFF;
 8001502:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001504:	091b      	lsrs	r3, r3, #4
 8001506:	b29b      	uxth	r3, r3
 8001508:	b2da      	uxtb	r2, r3
 800150a:	4b27      	ldr	r3, [pc, #156]	@ (80015a8 <sensorTask+0x580>)
 800150c:	731a      	strb	r2, [r3, #12]

	    data = readSensor(Oil_Temp);
 800150e:	4b29      	ldr	r3, [pc, #164]	@ (80015b4 <sensorTask+0x58c>)
 8001510:	781b      	ldrb	r3, [r3, #0]
 8001512:	4618      	mov	r0, r3
 8001514:	f7ff fb2c 	bl	8000b70 <readSensor>
 8001518:	4603      	mov	r3, r0
 800151a:	84fb      	strh	r3, [r7, #38]	@ 0x26
	    DATA_04.data[6] = data&0xFF;;
 800151c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 800151e:	b2da      	uxtb	r2, r3
 8001520:	4b21      	ldr	r3, [pc, #132]	@ (80015a8 <sensorTask+0x580>)
 8001522:	735a      	strb	r2, [r3, #13]
	    DATA_04.data[7] = (data>>8)&0xF;
 8001524:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8001526:	0a1b      	lsrs	r3, r3, #8
 8001528:	b29b      	uxth	r3, r3
 800152a:	b2db      	uxtb	r3, r3
 800152c:	f003 030f 	and.w	r3, r3, #15
 8001530:	b2da      	uxtb	r2, r3
 8001532:	4b1d      	ldr	r3, [pc, #116]	@ (80015a8 <sensorTask+0x580>)
 8001534:	739a      	strb	r2, [r3, #14]

	    hal_message = sendCANData(DATA_04.data,DATA_04.id,DATA_04.dlc);
 8001536:	4b1c      	ldr	r3, [pc, #112]	@ (80015a8 <sensorTask+0x580>)
 8001538:	795b      	ldrb	r3, [r3, #5]
 800153a:	4a1b      	ldr	r2, [pc, #108]	@ (80015a8 <sensorTask+0x580>)
 800153c:	7992      	ldrb	r2, [r2, #6]
 800153e:	4619      	mov	r1, r3
 8001540:	481d      	ldr	r0, [pc, #116]	@ (80015b8 <sensorTask+0x590>)
 8001542:	f7ff fcd7 	bl	8000ef4 <sendCANData>
 8001546:	4603      	mov	r3, r0
 8001548:	461a      	mov	r2, r3
 800154a:	4b1c      	ldr	r3, [pc, #112]	@ (80015bc <sensorTask+0x594>)
 800154c:	701a      	strb	r2, [r3, #0]
	if (RTOS_Time - DATA_09.time >= DATA_09.refresh_rate) {
	    DATA_09.time = RTOS_Time;
	}*/


	if (RTOS_Time - BUFFER_ACK.time >= BUFFER_ACK.refresh_rate) {
 800154e:	4b1c      	ldr	r3, [pc, #112]	@ (80015c0 <sensorTask+0x598>)
 8001550:	681b      	ldr	r3, [r3, #0]
 8001552:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001554:	1ad3      	subs	r3, r2, r3
 8001556:	4a1a      	ldr	r2, [pc, #104]	@ (80015c0 <sensorTask+0x598>)
 8001558:	7912      	ldrb	r2, [r2, #4]
 800155a:	4293      	cmp	r3, r2
 800155c:	d311      	bcc.n	8001582 <sensorTask+0x55a>
		BUFFER_ACK.time = RTOS_Time;
 800155e:	4a18      	ldr	r2, [pc, #96]	@ (80015c0 <sensorTask+0x598>)
 8001560:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001562:	6013      	str	r3, [r2, #0]
		BUFFER_ACK.data[0]='1';
 8001564:	4b16      	ldr	r3, [pc, #88]	@ (80015c0 <sensorTask+0x598>)
 8001566:	2231      	movs	r2, #49	@ 0x31
 8001568:	71da      	strb	r2, [r3, #7]
		hal_message = sendCANData(BUFFER_ACK.data,BUFFER_ACK.id,BUFFER_ACK.dlc);
 800156a:	4b15      	ldr	r3, [pc, #84]	@ (80015c0 <sensorTask+0x598>)
 800156c:	795b      	ldrb	r3, [r3, #5]
 800156e:	4a14      	ldr	r2, [pc, #80]	@ (80015c0 <sensorTask+0x598>)
 8001570:	7992      	ldrb	r2, [r2, #6]
 8001572:	4619      	mov	r1, r3
 8001574:	4813      	ldr	r0, [pc, #76]	@ (80015c4 <sensorTask+0x59c>)
 8001576:	f7ff fcbd 	bl	8000ef4 <sendCANData>
 800157a:	4603      	mov	r3, r0
 800157c:	461a      	mov	r2, r3
 800157e:	4b0f      	ldr	r3, [pc, #60]	@ (80015bc <sensorTask+0x594>)
 8001580:	701a      	strb	r2, [r3, #0]
	}
	vTaskDelayUntil(&xLastWakeTime, pdMS_TO_TICKS(Time_Mult));
 8001582:	4b11      	ldr	r3, [pc, #68]	@ (80015c8 <sensorTask+0x5a0>)
 8001584:	781b      	ldrb	r3, [r3, #0]
 8001586:	461a      	mov	r2, r3
 8001588:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800158c:	fb02 f303 	mul.w	r3, r2, r3
 8001590:	4a0e      	ldr	r2, [pc, #56]	@ (80015cc <sensorTask+0x5a4>)
 8001592:	fba2 2303 	umull	r2, r3, r2, r3
 8001596:	099a      	lsrs	r2, r3, #6
 8001598:	f107 0320 	add.w	r3, r7, #32
 800159c:	4611      	mov	r1, r2
 800159e:	4618      	mov	r0, r3
 80015a0:	f004 f81a 	bl	80055d8 <vTaskDelayUntil>
  {
 80015a4:	e548      	b.n	8001038 <sensorTask+0x10>
 80015a6:	bf00      	nop
 80015a8:	20000160 	.word	0x20000160
 80015ac:	08007a5f 	.word	0x08007a5f
 80015b0:	08007a60 	.word	0x08007a60
 80015b4:	08007a65 	.word	0x08007a65
 80015b8:	20000167 	.word	0x20000167
 80015bc:	20000120 	.word	0x20000120
 80015c0:	200001c0 	.word	0x200001c0
 80015c4:	200001c7 	.word	0x200001c7
 80015c8:	08007a54 	.word	0x08007a54
 80015cc:	10624dd3 	.word	0x10624dd3

080015d0 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b088      	sub	sp, #32
 80015d4:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015d6:	f107 0310 	add.w	r3, r7, #16
 80015da:	2200      	movs	r2, #0
 80015dc:	601a      	str	r2, [r3, #0]
 80015de:	605a      	str	r2, [r3, #4]
 80015e0:	609a      	str	r2, [r3, #8]
 80015e2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80015e4:	4b28      	ldr	r3, [pc, #160]	@ (8001688 <MX_GPIO_Init+0xb8>)
 80015e6:	699b      	ldr	r3, [r3, #24]
 80015e8:	4a27      	ldr	r2, [pc, #156]	@ (8001688 <MX_GPIO_Init+0xb8>)
 80015ea:	f043 0320 	orr.w	r3, r3, #32
 80015ee:	6193      	str	r3, [r2, #24]
 80015f0:	4b25      	ldr	r3, [pc, #148]	@ (8001688 <MX_GPIO_Init+0xb8>)
 80015f2:	699b      	ldr	r3, [r3, #24]
 80015f4:	f003 0320 	and.w	r3, r3, #32
 80015f8:	60fb      	str	r3, [r7, #12]
 80015fa:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015fc:	4b22      	ldr	r3, [pc, #136]	@ (8001688 <MX_GPIO_Init+0xb8>)
 80015fe:	699b      	ldr	r3, [r3, #24]
 8001600:	4a21      	ldr	r2, [pc, #132]	@ (8001688 <MX_GPIO_Init+0xb8>)
 8001602:	f043 0304 	orr.w	r3, r3, #4
 8001606:	6193      	str	r3, [r2, #24]
 8001608:	4b1f      	ldr	r3, [pc, #124]	@ (8001688 <MX_GPIO_Init+0xb8>)
 800160a:	699b      	ldr	r3, [r3, #24]
 800160c:	f003 0304 	and.w	r3, r3, #4
 8001610:	60bb      	str	r3, [r7, #8]
 8001612:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001614:	4b1c      	ldr	r3, [pc, #112]	@ (8001688 <MX_GPIO_Init+0xb8>)
 8001616:	699b      	ldr	r3, [r3, #24]
 8001618:	4a1b      	ldr	r2, [pc, #108]	@ (8001688 <MX_GPIO_Init+0xb8>)
 800161a:	f043 0308 	orr.w	r3, r3, #8
 800161e:	6193      	str	r3, [r2, #24]
 8001620:	4b19      	ldr	r3, [pc, #100]	@ (8001688 <MX_GPIO_Init+0xb8>)
 8001622:	699b      	ldr	r3, [r3, #24]
 8001624:	f003 0308 	and.w	r3, r3, #8
 8001628:	607b      	str	r3, [r7, #4]
 800162a:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10|GPIO_PIN_15, GPIO_PIN_RESET);
 800162c:	2200      	movs	r2, #0
 800162e:	f44f 4104 	mov.w	r1, #33792	@ 0x8400
 8001632:	4816      	ldr	r0, [pc, #88]	@ (800168c <MX_GPIO_Init+0xbc>)
 8001634:	f001 fcf4 	bl	8003020 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 8001638:	2200      	movs	r2, #0
 800163a:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
 800163e:	4814      	ldr	r0, [pc, #80]	@ (8001690 <MX_GPIO_Init+0xc0>)
 8001640:	f001 fcee 	bl	8003020 <HAL_GPIO_WritePin>
                          |GPIO_PIN_7|GPIO_PIN_8, GPIO_PIN_RESET);

  /*Configure GPIO pins : PA10 PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_15;
 8001644:	f44f 4304 	mov.w	r3, #33792	@ 0x8400
 8001648:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800164a:	2301      	movs	r3, #1
 800164c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800164e:	2300      	movs	r3, #0
 8001650:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001652:	2302      	movs	r3, #2
 8001654:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001656:	f107 0310 	add.w	r3, r7, #16
 800165a:	4619      	mov	r1, r3
 800165c:	480b      	ldr	r0, [pc, #44]	@ (800168c <MX_GPIO_Init+0xbc>)
 800165e:	f001 fb5b 	bl	8002d18 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 PB5 PB6
                           PB7 PB8 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 8001662:	f44f 73fc 	mov.w	r3, #504	@ 0x1f8
 8001666:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_7|GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001668:	2301      	movs	r3, #1
 800166a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800166c:	2300      	movs	r3, #0
 800166e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001670:	2302      	movs	r3, #2
 8001672:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001674:	f107 0310 	add.w	r3, r7, #16
 8001678:	4619      	mov	r1, r3
 800167a:	4805      	ldr	r0, [pc, #20]	@ (8001690 <MX_GPIO_Init+0xc0>)
 800167c:	f001 fb4c 	bl	8002d18 <HAL_GPIO_Init>

}
 8001680:	bf00      	nop
 8001682:	3720      	adds	r7, #32
 8001684:	46bd      	mov	sp, r7
 8001686:	bd80      	pop	{r7, pc}
 8001688:	40021000 	.word	0x40021000
 800168c:	40010800 	.word	0x40010800
 8001690:	40010c00 	.word	0x40010c00

08001694 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001694:	b580      	push	{r7, lr}
 8001696:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001698:	f000 fba4 	bl	8001de4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800169c:	f000 f822 	bl	80016e4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80016a0:	f7ff ff96 	bl	80015d0 <MX_GPIO_Init>
  MX_ADC1_Init();
 80016a4:	f7fe ffd2 	bl	800064c <MX_ADC1_Init>
  MX_CAN_Init();
 80016a8:	f7ff fb0c 	bl	8000cc4 <MX_CAN_Init>
  MX_ADC2_Init();
 80016ac:	f7ff f80c 	bl	80006c8 <MX_ADC2_Init>
  MX_TIM1_Init();
 80016b0:	f000 fb04 	bl	8001cbc <MX_TIM1_Init>
  /* USER CODE BEGIN 2 */
  HAL_CAN_Start(&hcan);
 80016b4:	4808      	ldr	r0, [pc, #32]	@ (80016d8 <main+0x44>)
 80016b6:	f001 f919 	bl	80028ec <HAL_CAN_Start>
  can_msg = sendCANString("CAN Started");
 80016ba:	4808      	ldr	r0, [pc, #32]	@ (80016dc <main+0x48>)
 80016bc:	f7ff fb84 	bl	8000dc8 <sendCANString>
 80016c0:	4603      	mov	r3, r0
 80016c2:	461a      	mov	r2, r3
 80016c4:	4b06      	ldr	r3, [pc, #24]	@ (80016e0 <main+0x4c>)
 80016c6:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 80016c8:	f002 ff14 	bl	80044f4 <osKernelInitialize>

  /* Call init function for freertos objects (in cmsis_os2.c) */
  MX_FREERTOS_Init();
 80016cc:	f7ff fc4c 	bl	8000f68 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 80016d0:	f002 ff32 	bl	8004538 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80016d4:	bf00      	nop
 80016d6:	e7fd      	b.n	80016d4 <main+0x40>
 80016d8:	200000f8 	.word	0x200000f8
 80016dc:	08007a0c 	.word	0x08007a0c
 80016e0:	20000128 	.word	0x20000128

080016e4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b094      	sub	sp, #80	@ 0x50
 80016e8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80016ea:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80016ee:	2228      	movs	r2, #40	@ 0x28
 80016f0:	2100      	movs	r1, #0
 80016f2:	4618      	mov	r0, r3
 80016f4:	f005 fc8a 	bl	800700c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80016f8:	f107 0314 	add.w	r3, r7, #20
 80016fc:	2200      	movs	r2, #0
 80016fe:	601a      	str	r2, [r3, #0]
 8001700:	605a      	str	r2, [r3, #4]
 8001702:	609a      	str	r2, [r3, #8]
 8001704:	60da      	str	r2, [r3, #12]
 8001706:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001708:	1d3b      	adds	r3, r7, #4
 800170a:	2200      	movs	r2, #0
 800170c:	601a      	str	r2, [r3, #0]
 800170e:	605a      	str	r2, [r3, #4]
 8001710:	609a      	str	r2, [r3, #8]
 8001712:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001714:	2301      	movs	r3, #1
 8001716:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001718:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800171c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 800171e:	2300      	movs	r3, #0
 8001720:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001722:	2301      	movs	r3, #1
 8001724:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001726:	2302      	movs	r3, #2
 8001728:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800172a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800172e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001730:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8001734:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001736:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800173a:	4618      	mov	r0, r3
 800173c:	f001 fc88 	bl	8003050 <HAL_RCC_OscConfig>
 8001740:	4603      	mov	r3, r0
 8001742:	2b00      	cmp	r3, #0
 8001744:	d001      	beq.n	800174a <SystemClock_Config+0x66>
  {
    Error_Handler();
 8001746:	f000 f83b 	bl	80017c0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800174a:	230f      	movs	r3, #15
 800174c:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800174e:	2302      	movs	r3, #2
 8001750:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001752:	2300      	movs	r3, #0
 8001754:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001756:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800175a:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800175c:	2300      	movs	r3, #0
 800175e:	627b      	str	r3, [r7, #36]	@ 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001760:	f107 0314 	add.w	r3, r7, #20
 8001764:	2102      	movs	r1, #2
 8001766:	4618      	mov	r0, r3
 8001768:	f001 fef4 	bl	8003554 <HAL_RCC_ClockConfig>
 800176c:	4603      	mov	r3, r0
 800176e:	2b00      	cmp	r3, #0
 8001770:	d001      	beq.n	8001776 <SystemClock_Config+0x92>
  {
    Error_Handler();
 8001772:	f000 f825 	bl	80017c0 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8001776:	2302      	movs	r3, #2
 8001778:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 800177a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800177e:	60fb      	str	r3, [r7, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001780:	1d3b      	adds	r3, r7, #4
 8001782:	4618      	mov	r0, r3
 8001784:	f002 f8a4 	bl	80038d0 <HAL_RCCEx_PeriphCLKConfig>
 8001788:	4603      	mov	r3, r0
 800178a:	2b00      	cmp	r3, #0
 800178c:	d001      	beq.n	8001792 <SystemClock_Config+0xae>
  {
    Error_Handler();
 800178e:	f000 f817 	bl	80017c0 <Error_Handler>
  }
}
 8001792:	bf00      	nop
 8001794:	3750      	adds	r7, #80	@ 0x50
 8001796:	46bd      	mov	sp, r7
 8001798:	bd80      	pop	{r7, pc}
	...

0800179c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800179c:	b580      	push	{r7, lr}
 800179e:	b082      	sub	sp, #8
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM4)
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	4a04      	ldr	r2, [pc, #16]	@ (80017bc <HAL_TIM_PeriodElapsedCallback+0x20>)
 80017aa:	4293      	cmp	r3, r2
 80017ac:	d101      	bne.n	80017b2 <HAL_TIM_PeriodElapsedCallback+0x16>
  {
    HAL_IncTick();
 80017ae:	f000 fb2f 	bl	8001e10 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80017b2:	bf00      	nop
 80017b4:	3708      	adds	r7, #8
 80017b6:	46bd      	mov	sp, r7
 80017b8:	bd80      	pop	{r7, pc}
 80017ba:	bf00      	nop
 80017bc:	40000800 	.word	0x40000800

080017c0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017c0:	b480      	push	{r7}
 80017c2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80017c4:	b672      	cpsid	i
}
 80017c6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80017c8:	bf00      	nop
 80017ca:	e7fd      	b.n	80017c8 <Error_Handler+0x8>

080017cc <setupSensors>:
Sensor DATA_08;
Sensor DATA_09;
Sensor BUFFER_ACK;


HAL_StatusTypeDef setupSensors(){
 80017cc:	b480      	push	{r7}
 80017ce:	af00      	add	r7, sp, #0
	DATA_01.refresh_rate = Time_Mult;
 80017d0:	2202      	movs	r2, #2
 80017d2:	4b43      	ldr	r3, [pc, #268]	@ (80018e0 <setupSensors+0x114>)
 80017d4:	711a      	strb	r2, [r3, #4]
	DATA_01.id = 0x02;
 80017d6:	4b42      	ldr	r3, [pc, #264]	@ (80018e0 <setupSensors+0x114>)
 80017d8:	2202      	movs	r2, #2
 80017da:	715a      	strb	r2, [r3, #5]
	DATA_01.dlc = 5;
 80017dc:	4b40      	ldr	r3, [pc, #256]	@ (80018e0 <setupSensors+0x114>)
 80017de:	2205      	movs	r2, #5
 80017e0:	719a      	strb	r2, [r3, #6]

	DATA_02.refresh_rate = Time_Mult;
 80017e2:	2202      	movs	r2, #2
 80017e4:	4b3f      	ldr	r3, [pc, #252]	@ (80018e4 <setupSensors+0x118>)
 80017e6:	711a      	strb	r2, [r3, #4]
	DATA_02.id = 0x03;
 80017e8:	4b3e      	ldr	r3, [pc, #248]	@ (80018e4 <setupSensors+0x118>)
 80017ea:	2203      	movs	r2, #3
 80017ec:	715a      	strb	r2, [r3, #5]
	DATA_02.dlc = 8;
 80017ee:	4b3d      	ldr	r3, [pc, #244]	@ (80018e4 <setupSensors+0x118>)
 80017f0:	2208      	movs	r2, #8
 80017f2:	719a      	strb	r2, [r3, #6]

	DATA_03.refresh_rate = Time_Mult;
 80017f4:	2202      	movs	r2, #2
 80017f6:	4b3c      	ldr	r3, [pc, #240]	@ (80018e8 <setupSensors+0x11c>)
 80017f8:	711a      	strb	r2, [r3, #4]
	DATA_03.id = 0x04;
 80017fa:	4b3b      	ldr	r3, [pc, #236]	@ (80018e8 <setupSensors+0x11c>)
 80017fc:	2204      	movs	r2, #4
 80017fe:	715a      	strb	r2, [r3, #5]
	DATA_03.dlc = 8;
 8001800:	4b39      	ldr	r3, [pc, #228]	@ (80018e8 <setupSensors+0x11c>)
 8001802:	2208      	movs	r2, #8
 8001804:	719a      	strb	r2, [r3, #6]

	DATA_04.refresh_rate = 50*Time_Mult;
 8001806:	2302      	movs	r3, #2
 8001808:	461a      	mov	r2, r3
 800180a:	0092      	lsls	r2, r2, #2
 800180c:	4413      	add	r3, r2
 800180e:	461a      	mov	r2, r3
 8001810:	0091      	lsls	r1, r2, #2
 8001812:	461a      	mov	r2, r3
 8001814:	460b      	mov	r3, r1
 8001816:	4413      	add	r3, r2
 8001818:	005b      	lsls	r3, r3, #1
 800181a:	b2da      	uxtb	r2, r3
 800181c:	4b33      	ldr	r3, [pc, #204]	@ (80018ec <setupSensors+0x120>)
 800181e:	711a      	strb	r2, [r3, #4]
	DATA_04.id = 0x05;
 8001820:	4b32      	ldr	r3, [pc, #200]	@ (80018ec <setupSensors+0x120>)
 8001822:	2205      	movs	r2, #5
 8001824:	715a      	strb	r2, [r3, #5]
	DATA_04.dlc = 8;
 8001826:	4b31      	ldr	r3, [pc, #196]	@ (80018ec <setupSensors+0x120>)
 8001828:	2208      	movs	r2, #8
 800182a:	719a      	strb	r2, [r3, #6]

	DATA_05.refresh_rate = 50*Time_Mult;
 800182c:	2302      	movs	r3, #2
 800182e:	461a      	mov	r2, r3
 8001830:	0092      	lsls	r2, r2, #2
 8001832:	4413      	add	r3, r2
 8001834:	461a      	mov	r2, r3
 8001836:	0091      	lsls	r1, r2, #2
 8001838:	461a      	mov	r2, r3
 800183a:	460b      	mov	r3, r1
 800183c:	4413      	add	r3, r2
 800183e:	005b      	lsls	r3, r3, #1
 8001840:	b2da      	uxtb	r2, r3
 8001842:	4b2b      	ldr	r3, [pc, #172]	@ (80018f0 <setupSensors+0x124>)
 8001844:	711a      	strb	r2, [r3, #4]
	DATA_05.id = 0x06;
 8001846:	4b2a      	ldr	r3, [pc, #168]	@ (80018f0 <setupSensors+0x124>)
 8001848:	2206      	movs	r2, #6
 800184a:	715a      	strb	r2, [r3, #5]
	DATA_05.dlc = 6;
 800184c:	4b28      	ldr	r3, [pc, #160]	@ (80018f0 <setupSensors+0x124>)
 800184e:	2206      	movs	r2, #6
 8001850:	719a      	strb	r2, [r3, #6]

	DATA_06.refresh_rate = Time_Mult;
 8001852:	2202      	movs	r2, #2
 8001854:	4b27      	ldr	r3, [pc, #156]	@ (80018f4 <setupSensors+0x128>)
 8001856:	711a      	strb	r2, [r3, #4]
	DATA_06.id = 0x07;
 8001858:	4b26      	ldr	r3, [pc, #152]	@ (80018f4 <setupSensors+0x128>)
 800185a:	2207      	movs	r2, #7
 800185c:	715a      	strb	r2, [r3, #5]
	DATA_06.dlc = 3;
 800185e:	4b25      	ldr	r3, [pc, #148]	@ (80018f4 <setupSensors+0x128>)
 8001860:	2203      	movs	r2, #3
 8001862:	719a      	strb	r2, [r3, #6]

	DATA_07.refresh_rate = 50*Time_Mult;
 8001864:	2302      	movs	r3, #2
 8001866:	461a      	mov	r2, r3
 8001868:	0092      	lsls	r2, r2, #2
 800186a:	4413      	add	r3, r2
 800186c:	461a      	mov	r2, r3
 800186e:	0091      	lsls	r1, r2, #2
 8001870:	461a      	mov	r2, r3
 8001872:	460b      	mov	r3, r1
 8001874:	4413      	add	r3, r2
 8001876:	005b      	lsls	r3, r3, #1
 8001878:	b2da      	uxtb	r2, r3
 800187a:	4b1f      	ldr	r3, [pc, #124]	@ (80018f8 <setupSensors+0x12c>)
 800187c:	711a      	strb	r2, [r3, #4]
	DATA_07.id = 0x08;
 800187e:	4b1e      	ldr	r3, [pc, #120]	@ (80018f8 <setupSensors+0x12c>)
 8001880:	2208      	movs	r2, #8
 8001882:	715a      	strb	r2, [r3, #5]
	DATA_07.dlc = 6;
 8001884:	4b1c      	ldr	r3, [pc, #112]	@ (80018f8 <setupSensors+0x12c>)
 8001886:	2206      	movs	r2, #6
 8001888:	719a      	strb	r2, [r3, #6]

	DATA_08.refresh_rate = 50*Time_Mult;
 800188a:	2302      	movs	r3, #2
 800188c:	461a      	mov	r2, r3
 800188e:	0092      	lsls	r2, r2, #2
 8001890:	4413      	add	r3, r2
 8001892:	461a      	mov	r2, r3
 8001894:	0091      	lsls	r1, r2, #2
 8001896:	461a      	mov	r2, r3
 8001898:	460b      	mov	r3, r1
 800189a:	4413      	add	r3, r2
 800189c:	005b      	lsls	r3, r3, #1
 800189e:	b2da      	uxtb	r2, r3
 80018a0:	4b16      	ldr	r3, [pc, #88]	@ (80018fc <setupSensors+0x130>)
 80018a2:	711a      	strb	r2, [r3, #4]
	DATA_08.id = 0x09;
 80018a4:	4b15      	ldr	r3, [pc, #84]	@ (80018fc <setupSensors+0x130>)
 80018a6:	2209      	movs	r2, #9
 80018a8:	715a      	strb	r2, [r3, #5]
	DATA_08.dlc = 6;
 80018aa:	4b14      	ldr	r3, [pc, #80]	@ (80018fc <setupSensors+0x130>)
 80018ac:	2206      	movs	r2, #6
 80018ae:	719a      	strb	r2, [r3, #6]

	DATA_09.refresh_rate = Time_Mult;
 80018b0:	2202      	movs	r2, #2
 80018b2:	4b13      	ldr	r3, [pc, #76]	@ (8001900 <setupSensors+0x134>)
 80018b4:	711a      	strb	r2, [r3, #4]
	DATA_09.id = 0x0A;
 80018b6:	4b12      	ldr	r3, [pc, #72]	@ (8001900 <setupSensors+0x134>)
 80018b8:	220a      	movs	r2, #10
 80018ba:	715a      	strb	r2, [r3, #5]
	DATA_09.dlc = 6;
 80018bc:	4b10      	ldr	r3, [pc, #64]	@ (8001900 <setupSensors+0x134>)
 80018be:	2206      	movs	r2, #6
 80018c0:	719a      	strb	r2, [r3, #6]

	BUFFER_ACK.refresh_rate = Time_Mult;
 80018c2:	2202      	movs	r2, #2
 80018c4:	4b0f      	ldr	r3, [pc, #60]	@ (8001904 <setupSensors+0x138>)
 80018c6:	711a      	strb	r2, [r3, #4]
	BUFFER_ACK.id = 0x0B;
 80018c8:	4b0e      	ldr	r3, [pc, #56]	@ (8001904 <setupSensors+0x138>)
 80018ca:	220b      	movs	r2, #11
 80018cc:	715a      	strb	r2, [r3, #5]
	BUFFER_ACK.dlc = 1;
 80018ce:	4b0d      	ldr	r3, [pc, #52]	@ (8001904 <setupSensors+0x138>)
 80018d0:	2201      	movs	r2, #1
 80018d2:	719a      	strb	r2, [r3, #6]

	return HAL_OK;
 80018d4:	2300      	movs	r3, #0
}
 80018d6:	4618      	mov	r0, r3
 80018d8:	46bd      	mov	sp, r7
 80018da:	bc80      	pop	{r7}
 80018dc:	4770      	bx	lr
 80018de:	bf00      	nop
 80018e0:	20000130 	.word	0x20000130
 80018e4:	20000140 	.word	0x20000140
 80018e8:	20000150 	.word	0x20000150
 80018ec:	20000160 	.word	0x20000160
 80018f0:	20000170 	.word	0x20000170
 80018f4:	20000180 	.word	0x20000180
 80018f8:	20000190 	.word	0x20000190
 80018fc:	200001a0 	.word	0x200001a0
 8001900:	200001b0 	.word	0x200001b0
 8001904:	200001c0 	.word	0x200001c0

08001908 <vBatValue>:

unsigned short vBatValue(unsigned short ADC_Value){
 8001908:	b580      	push	{r7, lr}
 800190a:	b084      	sub	sp, #16
 800190c:	af00      	add	r7, sp, #0
 800190e:	4603      	mov	r3, r0
 8001910:	80fb      	strh	r3, [r7, #6]
	float vBat = ADC_Value*(VBAT_R1 + VBAT_R2)/VBAT_R2;
 8001912:	88fb      	ldrh	r3, [r7, #6]
 8001914:	f645 525c 	movw	r2, #23900	@ 0x5d5c
 8001918:	fb02 f303 	mul.w	r3, r2, r3
 800191c:	4a0f      	ldr	r2, [pc, #60]	@ (800195c <vBatValue+0x54>)
 800191e:	fb82 1203 	smull	r1, r2, r2, r3
 8001922:	1252      	asrs	r2, r2, #9
 8001924:	17db      	asrs	r3, r3, #31
 8001926:	1ad3      	subs	r3, r2, r3
 8001928:	4618      	mov	r0, r3
 800192a:	f7fe fccb 	bl	80002c4 <__aeabi_i2f>
 800192e:	4603      	mov	r3, r0
 8001930:	60fb      	str	r3, [r7, #12]
	unsigned short vBat0 = vBat/A_20V * 4095;
 8001932:	490b      	ldr	r1, [pc, #44]	@ (8001960 <vBatValue+0x58>)
 8001934:	68f8      	ldr	r0, [r7, #12]
 8001936:	f7fe fdcd 	bl	80004d4 <__aeabi_fdiv>
 800193a:	4603      	mov	r3, r0
 800193c:	4909      	ldr	r1, [pc, #36]	@ (8001964 <vBatValue+0x5c>)
 800193e:	4618      	mov	r0, r3
 8001940:	f7fe fd14 	bl	800036c <__aeabi_fmul>
 8001944:	4603      	mov	r3, r0
 8001946:	4618      	mov	r0, r3
 8001948:	f7fe fe60 	bl	800060c <__aeabi_f2uiz>
 800194c:	4603      	mov	r3, r0
 800194e:	817b      	strh	r3, [r7, #10]
	return vBat0;
 8001950:	897b      	ldrh	r3, [r7, #10]
}
 8001952:	4618      	mov	r0, r3
 8001954:	3710      	adds	r7, #16
 8001956:	46bd      	mov	sp, r7
 8001958:	bd80      	pop	{r7, pc}
 800195a:	bf00      	nop
 800195c:	219bb355 	.word	0x219bb355
 8001960:	46c1e400 	.word	0x46c1e400
 8001964:	457ff000 	.word	0x457ff000

08001968 <vRefValue>:

unsigned short vRefValue(unsigned short ADC_Value){
 8001968:	b580      	push	{r7, lr}
 800196a:	b084      	sub	sp, #16
 800196c:	af00      	add	r7, sp, #0
 800196e:	4603      	mov	r3, r0
 8001970:	80fb      	strh	r3, [r7, #6]
	float vRef = ADC_Value*(V_REF_R1 + V_REF_R2)/V_REF_R2;
 8001972:	88fb      	ldrh	r3, [r7, #6]
 8001974:	f241 72d4 	movw	r2, #6100	@ 0x17d4
 8001978:	fb02 f303 	mul.w	r3, r2, r3
 800197c:	4a0f      	ldr	r2, [pc, #60]	@ (80019bc <vRefValue+0x54>)
 800197e:	fb82 1203 	smull	r1, r2, r2, r3
 8001982:	1252      	asrs	r2, r2, #9
 8001984:	17db      	asrs	r3, r3, #31
 8001986:	1ad3      	subs	r3, r2, r3
 8001988:	4618      	mov	r0, r3
 800198a:	f7fe fc9b 	bl	80002c4 <__aeabi_i2f>
 800198e:	4603      	mov	r3, r0
 8001990:	60fb      	str	r3, [r7, #12]
	unsigned short vRef0 = vRef/A_5_5V * 4095;
 8001992:	490b      	ldr	r1, [pc, #44]	@ (80019c0 <vRefValue+0x58>)
 8001994:	68f8      	ldr	r0, [r7, #12]
 8001996:	f7fe fd9d 	bl	80004d4 <__aeabi_fdiv>
 800199a:	4603      	mov	r3, r0
 800199c:	4909      	ldr	r1, [pc, #36]	@ (80019c4 <vRefValue+0x5c>)
 800199e:	4618      	mov	r0, r3
 80019a0:	f7fe fce4 	bl	800036c <__aeabi_fmul>
 80019a4:	4603      	mov	r3, r0
 80019a6:	4618      	mov	r0, r3
 80019a8:	f7fe fe30 	bl	800060c <__aeabi_f2uiz>
 80019ac:	4603      	mov	r3, r0
 80019ae:	817b      	strh	r3, [r7, #10]
	return vRef0;
 80019b0:	897b      	ldrh	r3, [r7, #10]
}
 80019b2:	4618      	mov	r0, r3
 80019b4:	3710      	adds	r7, #16
 80019b6:	46bd      	mov	sp, r7
 80019b8:	bd80      	pop	{r7, pc}
 80019ba:	bf00      	nop
 80019bc:	219bb355 	.word	0x219bb355
 80019c0:	45d54800 	.word	0x45d54800
 80019c4:	457ff000 	.word	0x457ff000

080019c8 <resistorValue>:

unsigned short resistorValue(unsigned short ADC_Value,unsigned short vRef){
 80019c8:	b590      	push	{r4, r7, lr}
 80019ca:	b085      	sub	sp, #20
 80019cc:	af00      	add	r7, sp, #0
 80019ce:	4603      	mov	r3, r0
 80019d0:	460a      	mov	r2, r1
 80019d2:	80fb      	strh	r3, [r7, #6]
 80019d4:	4613      	mov	r3, r2
 80019d6:	80bb      	strh	r3, [r7, #4]
	if(ADC_Value==0){
 80019d8:	88fb      	ldrh	r3, [r7, #6]
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d101      	bne.n	80019e2 <resistorValue+0x1a>
		return 0;
 80019de:	2300      	movs	r3, #0
 80019e0:	e029      	b.n	8001a36 <resistorValue+0x6e>
	}
	unsigned short vRefProp = propVRef(vRef);
 80019e2:	88bb      	ldrh	r3, [r7, #4]
 80019e4:	4618      	mov	r0, r3
 80019e6:	f000 f82f 	bl	8001a48 <propVRef>
 80019ea:	4603      	mov	r3, r0
 80019ec:	81fb      	strh	r3, [r7, #14]
	float Rvalue = (((float)vRefProp/ADC_Value)* MUX2_R2) - MUX2_R1 - MUX2_R2;
 80019ee:	89fb      	ldrh	r3, [r7, #14]
 80019f0:	4618      	mov	r0, r3
 80019f2:	f7fe fc63 	bl	80002bc <__aeabi_ui2f>
 80019f6:	4604      	mov	r4, r0
 80019f8:	88fb      	ldrh	r3, [r7, #6]
 80019fa:	4618      	mov	r0, r3
 80019fc:	f7fe fc62 	bl	80002c4 <__aeabi_i2f>
 8001a00:	4603      	mov	r3, r0
 8001a02:	4619      	mov	r1, r3
 8001a04:	4620      	mov	r0, r4
 8001a06:	f7fe fd65 	bl	80004d4 <__aeabi_fdiv>
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	490c      	ldr	r1, [pc, #48]	@ (8001a40 <resistorValue+0x78>)
 8001a0e:	4618      	mov	r0, r3
 8001a10:	f7fe fcac 	bl	800036c <__aeabi_fmul>
 8001a14:	4603      	mov	r3, r0
 8001a16:	490b      	ldr	r1, [pc, #44]	@ (8001a44 <resistorValue+0x7c>)
 8001a18:	4618      	mov	r0, r3
 8001a1a:	f7fe fb9d 	bl	8000158 <__aeabi_fsub>
 8001a1e:	4603      	mov	r3, r0
 8001a20:	4907      	ldr	r1, [pc, #28]	@ (8001a40 <resistorValue+0x78>)
 8001a22:	4618      	mov	r0, r3
 8001a24:	f7fe fb98 	bl	8000158 <__aeabi_fsub>
 8001a28:	4603      	mov	r3, r0
 8001a2a:	60bb      	str	r3, [r7, #8]
	return (unsigned short)Rvalue;
 8001a2c:	68b8      	ldr	r0, [r7, #8]
 8001a2e:	f7fe fded 	bl	800060c <__aeabi_f2uiz>
 8001a32:	4603      	mov	r3, r0
 8001a34:	b29b      	uxth	r3, r3
}
 8001a36:	4618      	mov	r0, r3
 8001a38:	3714      	adds	r7, #20
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd90      	pop	{r4, r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	4573c000 	.word	0x4573c000
 8001a44:	45098000 	.word	0x45098000

08001a48 <propVRef>:

unsigned short propVRef(unsigned short vRef){
 8001a48:	b580      	push	{r7, lr}
 8001a4a:	b084      	sub	sp, #16
 8001a4c:	af00      	add	r7, sp, #0
 8001a4e:	4603      	mov	r3, r0
 8001a50:	80fb      	strh	r3, [r7, #6]
	float prop = (float)vRef/4095;
 8001a52:	88fb      	ldrh	r3, [r7, #6]
 8001a54:	4618      	mov	r0, r3
 8001a56:	f7fe fc31 	bl	80002bc <__aeabi_ui2f>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	490a      	ldr	r1, [pc, #40]	@ (8001a88 <propVRef+0x40>)
 8001a5e:	4618      	mov	r0, r3
 8001a60:	f7fe fd38 	bl	80004d4 <__aeabi_fdiv>
 8001a64:	4603      	mov	r3, r0
 8001a66:	60fb      	str	r3, [r7, #12]
	prop = prop * A_5_5V;
 8001a68:	4908      	ldr	r1, [pc, #32]	@ (8001a8c <propVRef+0x44>)
 8001a6a:	68f8      	ldr	r0, [r7, #12]
 8001a6c:	f7fe fc7e 	bl	800036c <__aeabi_fmul>
 8001a70:	4603      	mov	r3, r0
 8001a72:	60fb      	str	r3, [r7, #12]
	return (unsigned short)prop;
 8001a74:	68f8      	ldr	r0, [r7, #12]
 8001a76:	f7fe fdc9 	bl	800060c <__aeabi_f2uiz>
 8001a7a:	4603      	mov	r3, r0
 8001a7c:	b29b      	uxth	r3, r3
}
 8001a7e:	4618      	mov	r0, r3
 8001a80:	3710      	adds	r7, #16
 8001a82:	46bd      	mov	sp, r7
 8001a84:	bd80      	pop	{r7, pc}
 8001a86:	bf00      	nop
 8001a88:	457ff000 	.word	0x457ff000
 8001a8c:	45d54800 	.word	0x45d54800

08001a90 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b084      	sub	sp, #16
 8001a94:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001a96:	4b18      	ldr	r3, [pc, #96]	@ (8001af8 <HAL_MspInit+0x68>)
 8001a98:	699b      	ldr	r3, [r3, #24]
 8001a9a:	4a17      	ldr	r2, [pc, #92]	@ (8001af8 <HAL_MspInit+0x68>)
 8001a9c:	f043 0301 	orr.w	r3, r3, #1
 8001aa0:	6193      	str	r3, [r2, #24]
 8001aa2:	4b15      	ldr	r3, [pc, #84]	@ (8001af8 <HAL_MspInit+0x68>)
 8001aa4:	699b      	ldr	r3, [r3, #24]
 8001aa6:	f003 0301 	and.w	r3, r3, #1
 8001aaa:	60bb      	str	r3, [r7, #8]
 8001aac:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001aae:	4b12      	ldr	r3, [pc, #72]	@ (8001af8 <HAL_MspInit+0x68>)
 8001ab0:	69db      	ldr	r3, [r3, #28]
 8001ab2:	4a11      	ldr	r2, [pc, #68]	@ (8001af8 <HAL_MspInit+0x68>)
 8001ab4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001ab8:	61d3      	str	r3, [r2, #28]
 8001aba:	4b0f      	ldr	r3, [pc, #60]	@ (8001af8 <HAL_MspInit+0x68>)
 8001abc:	69db      	ldr	r3, [r3, #28]
 8001abe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ac2:	607b      	str	r3, [r7, #4]
 8001ac4:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ac6:	2200      	movs	r2, #0
 8001ac8:	210f      	movs	r1, #15
 8001aca:	f06f 0001 	mvn.w	r0, #1
 8001ace:	f001 f8f8 	bl	8002cc2 <HAL_NVIC_SetPriority>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8001ad2:	4b0a      	ldr	r3, [pc, #40]	@ (8001afc <HAL_MspInit+0x6c>)
 8001ad4:	685b      	ldr	r3, [r3, #4]
 8001ad6:	60fb      	str	r3, [r7, #12]
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8001ade:	60fb      	str	r3, [r7, #12]
 8001ae0:	68fb      	ldr	r3, [r7, #12]
 8001ae2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001ae6:	60fb      	str	r3, [r7, #12]
 8001ae8:	4a04      	ldr	r2, [pc, #16]	@ (8001afc <HAL_MspInit+0x6c>)
 8001aea:	68fb      	ldr	r3, [r7, #12]
 8001aec:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001aee:	bf00      	nop
 8001af0:	3710      	adds	r7, #16
 8001af2:	46bd      	mov	sp, r7
 8001af4:	bd80      	pop	{r7, pc}
 8001af6:	bf00      	nop
 8001af8:	40021000 	.word	0x40021000
 8001afc:	40010000 	.word	0x40010000

08001b00 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	b08e      	sub	sp, #56	@ 0x38
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 8001b08:	2300      	movs	r3, #0
 8001b0a:	62fb      	str	r3, [r7, #44]	@ 0x2c

  uint32_t              uwPrescalerValue = 0U;
 8001b0c:	2300      	movs	r3, #0
 8001b0e:	62bb      	str	r3, [r7, #40]	@ 0x28
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status = HAL_OK;
 8001b10:	2300      	movs	r3, #0
 8001b12:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33

  /* Enable TIM4 clock */
  __HAL_RCC_TIM4_CLK_ENABLE();
 8001b16:	4b34      	ldr	r3, [pc, #208]	@ (8001be8 <HAL_InitTick+0xe8>)
 8001b18:	69db      	ldr	r3, [r3, #28]
 8001b1a:	4a33      	ldr	r2, [pc, #204]	@ (8001be8 <HAL_InitTick+0xe8>)
 8001b1c:	f043 0304 	orr.w	r3, r3, #4
 8001b20:	61d3      	str	r3, [r2, #28]
 8001b22:	4b31      	ldr	r3, [pc, #196]	@ (8001be8 <HAL_InitTick+0xe8>)
 8001b24:	69db      	ldr	r3, [r3, #28]
 8001b26:	f003 0304 	and.w	r3, r3, #4
 8001b2a:	60fb      	str	r3, [r7, #12]
 8001b2c:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b2e:	f107 0210 	add.w	r2, r7, #16
 8001b32:	f107 0314 	add.w	r3, r7, #20
 8001b36:	4611      	mov	r1, r2
 8001b38:	4618      	mov	r0, r3
 8001b3a:	f001 fe7b 	bl	8003834 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8001b3e:	6a3b      	ldr	r3, [r7, #32]
 8001b40:	62fb      	str	r3, [r7, #44]	@ 0x2c
  /* Compute TIM4 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001b42:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001b44:	2b00      	cmp	r3, #0
 8001b46:	d103      	bne.n	8001b50 <HAL_InitTick+0x50>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001b48:	f001 fe4c 	bl	80037e4 <HAL_RCC_GetPCLK1Freq>
 8001b4c:	6378      	str	r0, [r7, #52]	@ 0x34
 8001b4e:	e004      	b.n	8001b5a <HAL_InitTick+0x5a>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001b50:	f001 fe48 	bl	80037e4 <HAL_RCC_GetPCLK1Freq>
 8001b54:	4603      	mov	r3, r0
 8001b56:	005b      	lsls	r3, r3, #1
 8001b58:	637b      	str	r3, [r7, #52]	@ 0x34
  }

  /* Compute the prescaler value to have TIM4 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b5a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001b5c:	4a23      	ldr	r2, [pc, #140]	@ (8001bec <HAL_InitTick+0xec>)
 8001b5e:	fba2 2303 	umull	r2, r3, r2, r3
 8001b62:	0c9b      	lsrs	r3, r3, #18
 8001b64:	3b01      	subs	r3, #1
 8001b66:	62bb      	str	r3, [r7, #40]	@ 0x28

  /* Initialize TIM4 */
  htim4.Instance = TIM4;
 8001b68:	4b21      	ldr	r3, [pc, #132]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b6a:	4a22      	ldr	r2, [pc, #136]	@ (8001bf4 <HAL_InitTick+0xf4>)
 8001b6c:	601a      	str	r2, [r3, #0]
   * Period = [(TIM4CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim4.Init.Period = (1000000U / 1000U) - 1U;
 8001b6e:	4b20      	ldr	r3, [pc, #128]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b70:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001b74:	60da      	str	r2, [r3, #12]
  htim4.Init.Prescaler = uwPrescalerValue;
 8001b76:	4a1e      	ldr	r2, [pc, #120]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b78:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001b7a:	6053      	str	r3, [r2, #4]
  htim4.Init.ClockDivision = 0;
 8001b7c:	4b1c      	ldr	r3, [pc, #112]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b7e:	2200      	movs	r2, #0
 8001b80:	611a      	str	r2, [r3, #16]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b82:	4b1b      	ldr	r3, [pc, #108]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b84:	2200      	movs	r2, #0
 8001b86:	609a      	str	r2, [r3, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b88:	4b19      	ldr	r3, [pc, #100]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim4);
 8001b8e:	4818      	ldr	r0, [pc, #96]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001b90:	f002 f80a 	bl	8003ba8 <HAL_TIM_Base_Init>
 8001b94:	4603      	mov	r3, r0
 8001b96:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
  if (status == HAL_OK)
 8001b9a:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d11b      	bne.n	8001bda <HAL_InitTick+0xda>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim4);
 8001ba2:	4813      	ldr	r0, [pc, #76]	@ (8001bf0 <HAL_InitTick+0xf0>)
 8001ba4:	f002 f8c0 	bl	8003d28 <HAL_TIM_Base_Start_IT>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
    if (status == HAL_OK)
 8001bae:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d111      	bne.n	8001bda <HAL_InitTick+0xda>
    {
    /* Enable the TIM4 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001bb6:	201e      	movs	r0, #30
 8001bb8:	f001 f89f 	bl	8002cfa <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	2b0f      	cmp	r3, #15
 8001bc0:	d808      	bhi.n	8001bd4 <HAL_InitTick+0xd4>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM4_IRQn, TickPriority, 0U);
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	6879      	ldr	r1, [r7, #4]
 8001bc6:	201e      	movs	r0, #30
 8001bc8:	f001 f87b 	bl	8002cc2 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001bcc:	4a0a      	ldr	r2, [pc, #40]	@ (8001bf8 <HAL_InitTick+0xf8>)
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	6013      	str	r3, [r2, #0]
 8001bd2:	e002      	b.n	8001bda <HAL_InitTick+0xda>
      }
      else
      {
        status = HAL_ERROR;
 8001bd4:	2301      	movs	r3, #1
 8001bd6:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
      }
    }
  }

 /* Return function status */
  return status;
 8001bda:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
}
 8001bde:	4618      	mov	r0, r3
 8001be0:	3738      	adds	r7, #56	@ 0x38
 8001be2:	46bd      	mov	sp, r7
 8001be4:	bd80      	pop	{r7, pc}
 8001be6:	bf00      	nop
 8001be8:	40021000 	.word	0x40021000
 8001bec:	431bde83 	.word	0x431bde83
 8001bf0:	200001d0 	.word	0x200001d0
 8001bf4:	40000800 	.word	0x40000800
 8001bf8:	20000008 	.word	0x20000008

08001bfc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001bfc:	b480      	push	{r7}
 8001bfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001c00:	bf00      	nop
 8001c02:	e7fd      	b.n	8001c00 <NMI_Handler+0x4>

08001c04 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001c04:	b480      	push	{r7}
 8001c06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001c08:	bf00      	nop
 8001c0a:	e7fd      	b.n	8001c08 <HardFault_Handler+0x4>

08001c0c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001c0c:	b480      	push	{r7}
 8001c0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001c10:	bf00      	nop
 8001c12:	e7fd      	b.n	8001c10 <MemManage_Handler+0x4>

08001c14 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001c14:	b480      	push	{r7}
 8001c16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001c18:	bf00      	nop
 8001c1a:	e7fd      	b.n	8001c18 <BusFault_Handler+0x4>

08001c1c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001c1c:	b480      	push	{r7}
 8001c1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001c20:	bf00      	nop
 8001c22:	e7fd      	b.n	8001c20 <UsageFault_Handler+0x4>

08001c24 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001c24:	b480      	push	{r7}
 8001c26:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001c28:	bf00      	nop
 8001c2a:	46bd      	mov	sp, r7
 8001c2c:	bc80      	pop	{r7}
 8001c2e:	4770      	bx	lr

08001c30 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001c30:	b580      	push	{r7, lr}
 8001c32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001c34:	4802      	ldr	r0, [pc, #8]	@ (8001c40 <TIM4_IRQHandler+0x10>)
 8001c36:	f002 f8c9 	bl	8003dcc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001c3a:	bf00      	nop
 8001c3c:	bd80      	pop	{r7, pc}
 8001c3e:	bf00      	nop
 8001c40:	200001d0 	.word	0x200001d0

08001c44 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001c44:	b580      	push	{r7, lr}
 8001c46:	b086      	sub	sp, #24
 8001c48:	af00      	add	r7, sp, #0
 8001c4a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001c4c:	4a14      	ldr	r2, [pc, #80]	@ (8001ca0 <_sbrk+0x5c>)
 8001c4e:	4b15      	ldr	r3, [pc, #84]	@ (8001ca4 <_sbrk+0x60>)
 8001c50:	1ad3      	subs	r3, r2, r3
 8001c52:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001c54:	697b      	ldr	r3, [r7, #20]
 8001c56:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001c58:	4b13      	ldr	r3, [pc, #76]	@ (8001ca8 <_sbrk+0x64>)
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	2b00      	cmp	r3, #0
 8001c5e:	d102      	bne.n	8001c66 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001c60:	4b11      	ldr	r3, [pc, #68]	@ (8001ca8 <_sbrk+0x64>)
 8001c62:	4a12      	ldr	r2, [pc, #72]	@ (8001cac <_sbrk+0x68>)
 8001c64:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001c66:	4b10      	ldr	r3, [pc, #64]	@ (8001ca8 <_sbrk+0x64>)
 8001c68:	681a      	ldr	r2, [r3, #0]
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	4413      	add	r3, r2
 8001c6e:	693a      	ldr	r2, [r7, #16]
 8001c70:	429a      	cmp	r2, r3
 8001c72:	d207      	bcs.n	8001c84 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001c74:	f005 fa30 	bl	80070d8 <__errno>
 8001c78:	4603      	mov	r3, r0
 8001c7a:	220c      	movs	r2, #12
 8001c7c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001c7e:	f04f 33ff 	mov.w	r3, #4294967295
 8001c82:	e009      	b.n	8001c98 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001c84:	4b08      	ldr	r3, [pc, #32]	@ (8001ca8 <_sbrk+0x64>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001c8a:	4b07      	ldr	r3, [pc, #28]	@ (8001ca8 <_sbrk+0x64>)
 8001c8c:	681a      	ldr	r2, [r3, #0]
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	4413      	add	r3, r2
 8001c92:	4a05      	ldr	r2, [pc, #20]	@ (8001ca8 <_sbrk+0x64>)
 8001c94:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001c96:	68fb      	ldr	r3, [r7, #12]
}
 8001c98:	4618      	mov	r0, r3
 8001c9a:	3718      	adds	r7, #24
 8001c9c:	46bd      	mov	sp, r7
 8001c9e:	bd80      	pop	{r7, pc}
 8001ca0:	20005000 	.word	0x20005000
 8001ca4:	00000400 	.word	0x00000400
 8001ca8:	20000218 	.word	0x20000218
 8001cac:	20001d98 	.word	0x20001d98

08001cb0 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001cb0:	b480      	push	{r7}
 8001cb2:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001cb4:	bf00      	nop
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	bc80      	pop	{r7}
 8001cba:	4770      	bx	lr

08001cbc <MX_TIM1_Init>:

TIM_HandleTypeDef htim1;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8001cbc:	b580      	push	{r7, lr}
 8001cbe:	b086      	sub	sp, #24
 8001cc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001cc2:	f107 0308 	add.w	r3, r7, #8
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	601a      	str	r2, [r3, #0]
 8001cca:	605a      	str	r2, [r3, #4]
 8001ccc:	609a      	str	r2, [r3, #8]
 8001cce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001cd0:	463b      	mov	r3, r7
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	601a      	str	r2, [r3, #0]
 8001cd6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001cd8:	4b1e      	ldr	r3, [pc, #120]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001cda:	4a1f      	ldr	r2, [pc, #124]	@ (8001d58 <MX_TIM1_Init+0x9c>)
 8001cdc:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 71;
 8001cde:	4b1d      	ldr	r3, [pc, #116]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001ce0:	2247      	movs	r2, #71	@ 0x47
 8001ce2:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ce4:	4b1b      	ldr	r3, [pc, #108]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8001cea:	4b1a      	ldr	r3, [pc, #104]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001cec:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001cf0:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001cf2:	4b18      	ldr	r3, [pc, #96]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001cf4:	2200      	movs	r2, #0
 8001cf6:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001cf8:	4b16      	ldr	r3, [pc, #88]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001cfa:	2200      	movs	r2, #0
 8001cfc:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001cfe:	4b15      	ldr	r3, [pc, #84]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001d00:	2200      	movs	r2, #0
 8001d02:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001d04:	4813      	ldr	r0, [pc, #76]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001d06:	f001 ff4f 	bl	8003ba8 <HAL_TIM_Base_Init>
 8001d0a:	4603      	mov	r3, r0
 8001d0c:	2b00      	cmp	r3, #0
 8001d0e:	d001      	beq.n	8001d14 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 8001d10:	f7ff fd56 	bl	80017c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d14:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001d18:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001d1a:	f107 0308 	add.w	r3, r7, #8
 8001d1e:	4619      	mov	r1, r3
 8001d20:	480c      	ldr	r0, [pc, #48]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001d22:	f002 f943 	bl	8003fac <HAL_TIM_ConfigClockSource>
 8001d26:	4603      	mov	r3, r0
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d001      	beq.n	8001d30 <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8001d2c:	f7ff fd48 	bl	80017c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001d30:	2300      	movs	r3, #0
 8001d32:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001d34:	2300      	movs	r3, #0
 8001d36:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001d38:	463b      	mov	r3, r7
 8001d3a:	4619      	mov	r1, r3
 8001d3c:	4805      	ldr	r0, [pc, #20]	@ (8001d54 <MX_TIM1_Init+0x98>)
 8001d3e:	f002 fb25 	bl	800438c <HAL_TIMEx_MasterConfigSynchronization>
 8001d42:	4603      	mov	r3, r0
 8001d44:	2b00      	cmp	r3, #0
 8001d46:	d001      	beq.n	8001d4c <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 8001d48:	f7ff fd3a 	bl	80017c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001d4c:	bf00      	nop
 8001d4e:	3718      	adds	r7, #24
 8001d50:	46bd      	mov	sp, r7
 8001d52:	bd80      	pop	{r7, pc}
 8001d54:	2000021c 	.word	0x2000021c
 8001d58:	40012c00 	.word	0x40012c00

08001d5c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001d5c:	b480      	push	{r7}
 8001d5e:	b085      	sub	sp, #20
 8001d60:	af00      	add	r7, sp, #0
 8001d62:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	4a09      	ldr	r2, [pc, #36]	@ (8001d90 <HAL_TIM_Base_MspInit+0x34>)
 8001d6a:	4293      	cmp	r3, r2
 8001d6c:	d10b      	bne.n	8001d86 <HAL_TIM_Base_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001d6e:	4b09      	ldr	r3, [pc, #36]	@ (8001d94 <HAL_TIM_Base_MspInit+0x38>)
 8001d70:	699b      	ldr	r3, [r3, #24]
 8001d72:	4a08      	ldr	r2, [pc, #32]	@ (8001d94 <HAL_TIM_Base_MspInit+0x38>)
 8001d74:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001d78:	6193      	str	r3, [r2, #24]
 8001d7a:	4b06      	ldr	r3, [pc, #24]	@ (8001d94 <HAL_TIM_Base_MspInit+0x38>)
 8001d7c:	699b      	ldr	r3, [r3, #24]
 8001d7e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001d82:	60fb      	str	r3, [r7, #12]
 8001d84:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8001d86:	bf00      	nop
 8001d88:	3714      	adds	r7, #20
 8001d8a:	46bd      	mov	sp, r7
 8001d8c:	bc80      	pop	{r7}
 8001d8e:	4770      	bx	lr
 8001d90:	40012c00 	.word	0x40012c00
 8001d94:	40021000 	.word	0x40021000

08001d98 <Reset_Handler>:
 8001d98:	f7ff ff8a 	bl	8001cb0 <SystemInit>
 8001d9c:	480b      	ldr	r0, [pc, #44]	@ (8001dcc <LoopFillZerobss+0xe>)
 8001d9e:	490c      	ldr	r1, [pc, #48]	@ (8001dd0 <LoopFillZerobss+0x12>)
 8001da0:	4a0c      	ldr	r2, [pc, #48]	@ (8001dd4 <LoopFillZerobss+0x16>)
 8001da2:	2300      	movs	r3, #0
 8001da4:	e002      	b.n	8001dac <LoopCopyDataInit>

08001da6 <CopyDataInit>:
 8001da6:	58d4      	ldr	r4, [r2, r3]
 8001da8:	50c4      	str	r4, [r0, r3]
 8001daa:	3304      	adds	r3, #4

08001dac <LoopCopyDataInit>:
 8001dac:	18c4      	adds	r4, r0, r3
 8001dae:	428c      	cmp	r4, r1
 8001db0:	d3f9      	bcc.n	8001da6 <CopyDataInit>
 8001db2:	4a09      	ldr	r2, [pc, #36]	@ (8001dd8 <LoopFillZerobss+0x1a>)
 8001db4:	4c09      	ldr	r4, [pc, #36]	@ (8001ddc <LoopFillZerobss+0x1e>)
 8001db6:	2300      	movs	r3, #0
 8001db8:	e001      	b.n	8001dbe <LoopFillZerobss>

08001dba <FillZerobss>:
 8001dba:	6013      	str	r3, [r2, #0]
 8001dbc:	3204      	adds	r2, #4

08001dbe <LoopFillZerobss>:
 8001dbe:	42a2      	cmp	r2, r4
 8001dc0:	d3fb      	bcc.n	8001dba <FillZerobss>
 8001dc2:	f005 f98f 	bl	80070e4 <__libc_init_array>
 8001dc6:	f7ff fc65 	bl	8001694 <main>
 8001dca:	4770      	bx	lr
 8001dcc:	20000000 	.word	0x20000000
 8001dd0:	20000064 	.word	0x20000064
 8001dd4:	08007ae4 	.word	0x08007ae4
 8001dd8:	20000064 	.word	0x20000064
 8001ddc:	20001d98 	.word	0x20001d98

08001de0 <ADC1_2_IRQHandler>:
 8001de0:	e7fe      	b.n	8001de0 <ADC1_2_IRQHandler>
	...

08001de4 <HAL_Init>:
 8001de4:	b580      	push	{r7, lr}
 8001de6:	af00      	add	r7, sp, #0
 8001de8:	4b08      	ldr	r3, [pc, #32]	@ (8001e0c <HAL_Init+0x28>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	4a07      	ldr	r2, [pc, #28]	@ (8001e0c <HAL_Init+0x28>)
 8001dee:	f043 0310 	orr.w	r3, r3, #16
 8001df2:	6013      	str	r3, [r2, #0]
 8001df4:	2003      	movs	r0, #3
 8001df6:	f000 ff59 	bl	8002cac <HAL_NVIC_SetPriorityGrouping>
 8001dfa:	200f      	movs	r0, #15
 8001dfc:	f7ff fe80 	bl	8001b00 <HAL_InitTick>
 8001e00:	f7ff fe46 	bl	8001a90 <HAL_MspInit>
 8001e04:	2300      	movs	r3, #0
 8001e06:	4618      	mov	r0, r3
 8001e08:	bd80      	pop	{r7, pc}
 8001e0a:	bf00      	nop
 8001e0c:	40022000 	.word	0x40022000

08001e10 <HAL_IncTick>:
 8001e10:	b480      	push	{r7}
 8001e12:	af00      	add	r7, sp, #0
 8001e14:	4b05      	ldr	r3, [pc, #20]	@ (8001e2c <HAL_IncTick+0x1c>)
 8001e16:	781b      	ldrb	r3, [r3, #0]
 8001e18:	461a      	mov	r2, r3
 8001e1a:	4b05      	ldr	r3, [pc, #20]	@ (8001e30 <HAL_IncTick+0x20>)
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	4413      	add	r3, r2
 8001e20:	4a03      	ldr	r2, [pc, #12]	@ (8001e30 <HAL_IncTick+0x20>)
 8001e22:	6013      	str	r3, [r2, #0]
 8001e24:	bf00      	nop
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bc80      	pop	{r7}
 8001e2a:	4770      	bx	lr
 8001e2c:	2000000c 	.word	0x2000000c
 8001e30:	20000264 	.word	0x20000264

08001e34 <HAL_GetTick>:
 8001e34:	b480      	push	{r7}
 8001e36:	af00      	add	r7, sp, #0
 8001e38:	4b02      	ldr	r3, [pc, #8]	@ (8001e44 <HAL_GetTick+0x10>)
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	4618      	mov	r0, r3
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	bc80      	pop	{r7}
 8001e42:	4770      	bx	lr
 8001e44:	20000264 	.word	0x20000264

08001e48 <HAL_ADC_Init>:
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	b086      	sub	sp, #24
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
 8001e50:	2300      	movs	r3, #0
 8001e52:	75fb      	strb	r3, [r7, #23]
 8001e54:	2300      	movs	r3, #0
 8001e56:	613b      	str	r3, [r7, #16]
 8001e58:	2300      	movs	r3, #0
 8001e5a:	60bb      	str	r3, [r7, #8]
 8001e5c:	2300      	movs	r3, #0
 8001e5e:	60fb      	str	r3, [r7, #12]
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d101      	bne.n	8001e6a <HAL_ADC_Init+0x22>
 8001e66:	2301      	movs	r3, #1
 8001e68:	e0be      	b.n	8001fe8 <HAL_ADC_Init+0x1a0>
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	689b      	ldr	r3, [r3, #8]
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001e74:	2b00      	cmp	r3, #0
 8001e76:	d109      	bne.n	8001e8c <HAL_ADC_Init+0x44>
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	2200      	movs	r2, #0
 8001e7c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	2200      	movs	r2, #0
 8001e82:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001e86:	6878      	ldr	r0, [r7, #4]
 8001e88:	f7fe fc5c 	bl	8000744 <HAL_ADC_MspInit>
 8001e8c:	6878      	ldr	r0, [r7, #4]
 8001e8e:	f000 fbf1 	bl	8002674 <ADC_ConversionStop_Disable>
 8001e92:	4603      	mov	r3, r0
 8001e94:	75fb      	strb	r3, [r7, #23]
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001e9a:	f003 0310 	and.w	r3, r3, #16
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	f040 8099 	bne.w	8001fd6 <HAL_ADC_Init+0x18e>
 8001ea4:	7dfb      	ldrb	r3, [r7, #23]
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	f040 8095 	bne.w	8001fd6 <HAL_ADC_Init+0x18e>
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001eb0:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8001eb4:	f023 0302 	bic.w	r3, r3, #2
 8001eb8:	f043 0202 	orr.w	r2, r3, #2
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	629a      	str	r2, [r3, #40]	@ 0x28
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	685a      	ldr	r2, [r3, #4]
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	69db      	ldr	r3, [r3, #28]
 8001ec8:	431a      	orrs	r2, r3
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	7b1b      	ldrb	r3, [r3, #12]
 8001ece:	005b      	lsls	r3, r3, #1
 8001ed0:	4313      	orrs	r3, r2
 8001ed2:	68ba      	ldr	r2, [r7, #8]
 8001ed4:	4313      	orrs	r3, r2
 8001ed6:	60bb      	str	r3, [r7, #8]
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	689b      	ldr	r3, [r3, #8]
 8001edc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001ee0:	d003      	beq.n	8001eea <HAL_ADC_Init+0xa2>
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	689b      	ldr	r3, [r3, #8]
 8001ee6:	2b01      	cmp	r3, #1
 8001ee8:	d102      	bne.n	8001ef0 <HAL_ADC_Init+0xa8>
 8001eea:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001eee:	e000      	b.n	8001ef2 <HAL_ADC_Init+0xaa>
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	693a      	ldr	r2, [r7, #16]
 8001ef4:	4313      	orrs	r3, r2
 8001ef6:	613b      	str	r3, [r7, #16]
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	7d1b      	ldrb	r3, [r3, #20]
 8001efc:	2b01      	cmp	r3, #1
 8001efe:	d119      	bne.n	8001f34 <HAL_ADC_Init+0xec>
 8001f00:	687b      	ldr	r3, [r7, #4]
 8001f02:	7b1b      	ldrb	r3, [r3, #12]
 8001f04:	2b00      	cmp	r3, #0
 8001f06:	d109      	bne.n	8001f1c <HAL_ADC_Init+0xd4>
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	699b      	ldr	r3, [r3, #24]
 8001f0c:	3b01      	subs	r3, #1
 8001f0e:	035a      	lsls	r2, r3, #13
 8001f10:	693b      	ldr	r3, [r7, #16]
 8001f12:	4313      	orrs	r3, r2
 8001f14:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001f18:	613b      	str	r3, [r7, #16]
 8001f1a:	e00b      	b.n	8001f34 <HAL_ADC_Init+0xec>
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001f20:	f043 0220 	orr.w	r2, r3, #32
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	629a      	str	r2, [r3, #40]	@ 0x28
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f2c:	f043 0201 	orr.w	r2, r3, #1
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	685b      	ldr	r3, [r3, #4]
 8001f3a:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	693a      	ldr	r2, [r7, #16]
 8001f44:	430a      	orrs	r2, r1
 8001f46:	605a      	str	r2, [r3, #4]
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	689a      	ldr	r2, [r3, #8]
 8001f4e:	4b28      	ldr	r3, [pc, #160]	@ (8001ff0 <HAL_ADC_Init+0x1a8>)
 8001f50:	4013      	ands	r3, r2
 8001f52:	687a      	ldr	r2, [r7, #4]
 8001f54:	6812      	ldr	r2, [r2, #0]
 8001f56:	68b9      	ldr	r1, [r7, #8]
 8001f58:	430b      	orrs	r3, r1
 8001f5a:	6093      	str	r3, [r2, #8]
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	689b      	ldr	r3, [r3, #8]
 8001f60:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001f64:	d003      	beq.n	8001f6e <HAL_ADC_Init+0x126>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	689b      	ldr	r3, [r3, #8]
 8001f6a:	2b01      	cmp	r3, #1
 8001f6c:	d104      	bne.n	8001f78 <HAL_ADC_Init+0x130>
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	691b      	ldr	r3, [r3, #16]
 8001f72:	3b01      	subs	r3, #1
 8001f74:	051b      	lsls	r3, r3, #20
 8001f76:	60fb      	str	r3, [r7, #12]
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f7e:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	68fa      	ldr	r2, [r7, #12]
 8001f88:	430a      	orrs	r2, r1
 8001f8a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	689a      	ldr	r2, [r3, #8]
 8001f92:	4b18      	ldr	r3, [pc, #96]	@ (8001ff4 <HAL_ADC_Init+0x1ac>)
 8001f94:	4013      	ands	r3, r2
 8001f96:	68ba      	ldr	r2, [r7, #8]
 8001f98:	429a      	cmp	r2, r3
 8001f9a:	d10b      	bne.n	8001fb4 <HAL_ADC_Init+0x16c>
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001fa6:	f023 0303 	bic.w	r3, r3, #3
 8001faa:	f043 0201 	orr.w	r2, r3, #1
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	629a      	str	r2, [r3, #40]	@ 0x28
 8001fb2:	e018      	b.n	8001fe6 <HAL_ADC_Init+0x19e>
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001fb8:	f023 0312 	bic.w	r3, r3, #18
 8001fbc:	f043 0210 	orr.w	r2, r3, #16
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	629a      	str	r2, [r3, #40]	@ 0x28
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001fc8:	f043 0201 	orr.w	r2, r3, #1
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001fd0:	2301      	movs	r3, #1
 8001fd2:	75fb      	strb	r3, [r7, #23]
 8001fd4:	e007      	b.n	8001fe6 <HAL_ADC_Init+0x19e>
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001fda:	f043 0210 	orr.w	r2, r3, #16
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	629a      	str	r2, [r3, #40]	@ 0x28
 8001fe2:	2301      	movs	r3, #1
 8001fe4:	75fb      	strb	r3, [r7, #23]
 8001fe6:	7dfb      	ldrb	r3, [r7, #23]
 8001fe8:	4618      	mov	r0, r3
 8001fea:	3718      	adds	r7, #24
 8001fec:	46bd      	mov	sp, r7
 8001fee:	bd80      	pop	{r7, pc}
 8001ff0:	ffe1f7fd 	.word	0xffe1f7fd
 8001ff4:	ff1f0efe 	.word	0xff1f0efe

08001ff8 <HAL_ADC_Start>:
 8001ff8:	b580      	push	{r7, lr}
 8001ffa:	b084      	sub	sp, #16
 8001ffc:	af00      	add	r7, sp, #0
 8001ffe:	6078      	str	r0, [r7, #4]
 8002000:	2300      	movs	r3, #0
 8002002:	73fb      	strb	r3, [r7, #15]
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800200a:	2b01      	cmp	r3, #1
 800200c:	d101      	bne.n	8002012 <HAL_ADC_Start+0x1a>
 800200e:	2302      	movs	r3, #2
 8002010:	e098      	b.n	8002144 <HAL_ADC_Start+0x14c>
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	2201      	movs	r2, #1
 8002016:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800201a:	6878      	ldr	r0, [r7, #4]
 800201c:	f000 fad0 	bl	80025c0 <ADC_Enable>
 8002020:	4603      	mov	r3, r0
 8002022:	73fb      	strb	r3, [r7, #15]
 8002024:	7bfb      	ldrb	r3, [r7, #15]
 8002026:	2b00      	cmp	r3, #0
 8002028:	f040 8087 	bne.w	800213a <HAL_ADC_Start+0x142>
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002030:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002034:	f023 0301 	bic.w	r3, r3, #1
 8002038:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	4a41      	ldr	r2, [pc, #260]	@ (800214c <HAL_ADC_Start+0x154>)
 8002046:	4293      	cmp	r3, r2
 8002048:	d105      	bne.n	8002056 <HAL_ADC_Start+0x5e>
 800204a:	4b41      	ldr	r3, [pc, #260]	@ (8002150 <HAL_ADC_Start+0x158>)
 800204c:	685b      	ldr	r3, [r3, #4]
 800204e:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002052:	2b00      	cmp	r3, #0
 8002054:	d115      	bne.n	8002082 <HAL_ADC_Start+0x8a>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800205a:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	629a      	str	r2, [r3, #40]	@ 0x28
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	685b      	ldr	r3, [r3, #4]
 8002068:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800206c:	2b00      	cmp	r3, #0
 800206e:	d026      	beq.n	80020be <HAL_ADC_Start+0xc6>
 8002070:	687b      	ldr	r3, [r7, #4]
 8002072:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002074:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002078:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002080:	e01d      	b.n	80020be <HAL_ADC_Start+0xc6>
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002086:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	629a      	str	r2, [r3, #40]	@ 0x28
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	4a2f      	ldr	r2, [pc, #188]	@ (8002150 <HAL_ADC_Start+0x158>)
 8002094:	4293      	cmp	r3, r2
 8002096:	d004      	beq.n	80020a2 <HAL_ADC_Start+0xaa>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	4a2b      	ldr	r2, [pc, #172]	@ (800214c <HAL_ADC_Start+0x154>)
 800209e:	4293      	cmp	r3, r2
 80020a0:	d10d      	bne.n	80020be <HAL_ADC_Start+0xc6>
 80020a2:	4b2b      	ldr	r3, [pc, #172]	@ (8002150 <HAL_ADC_Start+0x158>)
 80020a4:	685b      	ldr	r3, [r3, #4]
 80020a6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d007      	beq.n	80020be <HAL_ADC_Start+0xc6>
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020b2:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80020b6:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	629a      	str	r2, [r3, #40]	@ 0x28
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020c2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d006      	beq.n	80020d8 <HAL_ADC_Start+0xe0>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020ce:	f023 0206 	bic.w	r2, r3, #6
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80020d6:	e002      	b.n	80020de <HAL_ADC_Start+0xe6>
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	2200      	movs	r2, #0
 80020dc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	2200      	movs	r2, #0
 80020e2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	f06f 0202 	mvn.w	r2, #2
 80020ee:	601a      	str	r2, [r3, #0]
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	689b      	ldr	r3, [r3, #8]
 80020f6:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 80020fa:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 80020fe:	d113      	bne.n	8002128 <HAL_ADC_Start+0x130>
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	681b      	ldr	r3, [r3, #0]
 8002104:	4a11      	ldr	r2, [pc, #68]	@ (800214c <HAL_ADC_Start+0x154>)
 8002106:	4293      	cmp	r3, r2
 8002108:	d105      	bne.n	8002116 <HAL_ADC_Start+0x11e>
 800210a:	4b11      	ldr	r3, [pc, #68]	@ (8002150 <HAL_ADC_Start+0x158>)
 800210c:	685b      	ldr	r3, [r3, #4]
 800210e:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8002112:	2b00      	cmp	r3, #0
 8002114:	d108      	bne.n	8002128 <HAL_ADC_Start+0x130>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	689a      	ldr	r2, [r3, #8]
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8002124:	609a      	str	r2, [r3, #8]
 8002126:	e00c      	b.n	8002142 <HAL_ADC_Start+0x14a>
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	689a      	ldr	r2, [r3, #8]
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002136:	609a      	str	r2, [r3, #8]
 8002138:	e003      	b.n	8002142 <HAL_ADC_Start+0x14a>
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	2200      	movs	r2, #0
 800213e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002142:	7bfb      	ldrb	r3, [r7, #15]
 8002144:	4618      	mov	r0, r3
 8002146:	3710      	adds	r7, #16
 8002148:	46bd      	mov	sp, r7
 800214a:	bd80      	pop	{r7, pc}
 800214c:	40012800 	.word	0x40012800
 8002150:	40012400 	.word	0x40012400

08002154 <HAL_ADC_Stop>:
 8002154:	b580      	push	{r7, lr}
 8002156:	b084      	sub	sp, #16
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	2300      	movs	r3, #0
 800215e:	73fb      	strb	r3, [r7, #15]
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002166:	2b01      	cmp	r3, #1
 8002168:	d101      	bne.n	800216e <HAL_ADC_Stop+0x1a>
 800216a:	2302      	movs	r3, #2
 800216c:	e01a      	b.n	80021a4 <HAL_ADC_Stop+0x50>
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2201      	movs	r2, #1
 8002172:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002176:	6878      	ldr	r0, [r7, #4]
 8002178:	f000 fa7c 	bl	8002674 <ADC_ConversionStop_Disable>
 800217c:	4603      	mov	r3, r0
 800217e:	73fb      	strb	r3, [r7, #15]
 8002180:	7bfb      	ldrb	r3, [r7, #15]
 8002182:	2b00      	cmp	r3, #0
 8002184:	d109      	bne.n	800219a <HAL_ADC_Stop+0x46>
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800218a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800218e:	f023 0301 	bic.w	r3, r3, #1
 8002192:	f043 0201 	orr.w	r2, r3, #1
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	629a      	str	r2, [r3, #40]	@ 0x28
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	2200      	movs	r2, #0
 800219e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80021a2:	7bfb      	ldrb	r3, [r7, #15]
 80021a4:	4618      	mov	r0, r3
 80021a6:	3710      	adds	r7, #16
 80021a8:	46bd      	mov	sp, r7
 80021aa:	bd80      	pop	{r7, pc}

080021ac <HAL_ADC_PollForConversion>:
 80021ac:	b590      	push	{r4, r7, lr}
 80021ae:	b087      	sub	sp, #28
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	6078      	str	r0, [r7, #4]
 80021b4:	6039      	str	r1, [r7, #0]
 80021b6:	2300      	movs	r3, #0
 80021b8:	617b      	str	r3, [r7, #20]
 80021ba:	2300      	movs	r3, #0
 80021bc:	60fb      	str	r3, [r7, #12]
 80021be:	2300      	movs	r3, #0
 80021c0:	613b      	str	r3, [r7, #16]
 80021c2:	f7ff fe37 	bl	8001e34 <HAL_GetTick>
 80021c6:	6178      	str	r0, [r7, #20]
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	689b      	ldr	r3, [r3, #8]
 80021ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d00b      	beq.n	80021ee <HAL_ADC_PollForConversion+0x42>
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80021da:	f043 0220 	orr.w	r2, r3, #32
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	629a      	str	r2, [r3, #40]	@ 0x28
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	2200      	movs	r2, #0
 80021e6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80021ea:	2301      	movs	r3, #1
 80021ec:	e0d3      	b.n	8002396 <HAL_ADC_PollForConversion+0x1ea>
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	685b      	ldr	r3, [r3, #4]
 80021f4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80021f8:	2b00      	cmp	r3, #0
 80021fa:	d131      	bne.n	8002260 <HAL_ADC_PollForConversion+0xb4>
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002202:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8002206:	2b00      	cmp	r3, #0
 8002208:	d12a      	bne.n	8002260 <HAL_ADC_PollForConversion+0xb4>
 800220a:	e021      	b.n	8002250 <HAL_ADC_PollForConversion+0xa4>
 800220c:	683b      	ldr	r3, [r7, #0]
 800220e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002212:	d01d      	beq.n	8002250 <HAL_ADC_PollForConversion+0xa4>
 8002214:	683b      	ldr	r3, [r7, #0]
 8002216:	2b00      	cmp	r3, #0
 8002218:	d007      	beq.n	800222a <HAL_ADC_PollForConversion+0x7e>
 800221a:	f7ff fe0b 	bl	8001e34 <HAL_GetTick>
 800221e:	4602      	mov	r2, r0
 8002220:	697b      	ldr	r3, [r7, #20]
 8002222:	1ad3      	subs	r3, r2, r3
 8002224:	683a      	ldr	r2, [r7, #0]
 8002226:	429a      	cmp	r2, r3
 8002228:	d212      	bcs.n	8002250 <HAL_ADC_PollForConversion+0xa4>
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	f003 0302 	and.w	r3, r3, #2
 8002234:	2b00      	cmp	r3, #0
 8002236:	d10b      	bne.n	8002250 <HAL_ADC_PollForConversion+0xa4>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800223c:	f043 0204 	orr.w	r2, r3, #4
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	629a      	str	r2, [r3, #40]	@ 0x28
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2200      	movs	r2, #0
 8002248:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800224c:	2303      	movs	r3, #3
 800224e:	e0a2      	b.n	8002396 <HAL_ADC_PollForConversion+0x1ea>
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	f003 0302 	and.w	r3, r3, #2
 800225a:	2b00      	cmp	r3, #0
 800225c:	d0d6      	beq.n	800220c <HAL_ADC_PollForConversion+0x60>
 800225e:	e070      	b.n	8002342 <HAL_ADC_PollForConversion+0x196>
 8002260:	4b4f      	ldr	r3, [pc, #316]	@ (80023a0 <HAL_ADC_PollForConversion+0x1f4>)
 8002262:	681c      	ldr	r4, [r3, #0]
 8002264:	2002      	movs	r0, #2
 8002266:	f001 fbe9 	bl	8003a3c <HAL_RCCEx_GetPeriphCLKFreq>
 800226a:	4603      	mov	r3, r0
 800226c:	fbb4 f2f3 	udiv	r2, r4, r3
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	6919      	ldr	r1, [r3, #16]
 8002276:	4b4b      	ldr	r3, [pc, #300]	@ (80023a4 <HAL_ADC_PollForConversion+0x1f8>)
 8002278:	400b      	ands	r3, r1
 800227a:	2b00      	cmp	r3, #0
 800227c:	d118      	bne.n	80022b0 <HAL_ADC_PollForConversion+0x104>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	68d9      	ldr	r1, [r3, #12]
 8002284:	4b48      	ldr	r3, [pc, #288]	@ (80023a8 <HAL_ADC_PollForConversion+0x1fc>)
 8002286:	400b      	ands	r3, r1
 8002288:	2b00      	cmp	r3, #0
 800228a:	d111      	bne.n	80022b0 <HAL_ADC_PollForConversion+0x104>
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	681b      	ldr	r3, [r3, #0]
 8002290:	6919      	ldr	r1, [r3, #16]
 8002292:	4b46      	ldr	r3, [pc, #280]	@ (80023ac <HAL_ADC_PollForConversion+0x200>)
 8002294:	400b      	ands	r3, r1
 8002296:	2b00      	cmp	r3, #0
 8002298:	d108      	bne.n	80022ac <HAL_ADC_PollForConversion+0x100>
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	68d9      	ldr	r1, [r3, #12]
 80022a0:	4b43      	ldr	r3, [pc, #268]	@ (80023b0 <HAL_ADC_PollForConversion+0x204>)
 80022a2:	400b      	ands	r3, r1
 80022a4:	2b00      	cmp	r3, #0
 80022a6:	d101      	bne.n	80022ac <HAL_ADC_PollForConversion+0x100>
 80022a8:	2314      	movs	r3, #20
 80022aa:	e020      	b.n	80022ee <HAL_ADC_PollForConversion+0x142>
 80022ac:	2329      	movs	r3, #41	@ 0x29
 80022ae:	e01e      	b.n	80022ee <HAL_ADC_PollForConversion+0x142>
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	6919      	ldr	r1, [r3, #16]
 80022b6:	4b3d      	ldr	r3, [pc, #244]	@ (80023ac <HAL_ADC_PollForConversion+0x200>)
 80022b8:	400b      	ands	r3, r1
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d106      	bne.n	80022cc <HAL_ADC_PollForConversion+0x120>
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	68d9      	ldr	r1, [r3, #12]
 80022c4:	4b3a      	ldr	r3, [pc, #232]	@ (80023b0 <HAL_ADC_PollForConversion+0x204>)
 80022c6:	400b      	ands	r3, r1
 80022c8:	2b00      	cmp	r3, #0
 80022ca:	d00d      	beq.n	80022e8 <HAL_ADC_PollForConversion+0x13c>
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	6919      	ldr	r1, [r3, #16]
 80022d2:	4b38      	ldr	r3, [pc, #224]	@ (80023b4 <HAL_ADC_PollForConversion+0x208>)
 80022d4:	400b      	ands	r3, r1
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d108      	bne.n	80022ec <HAL_ADC_PollForConversion+0x140>
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	68d9      	ldr	r1, [r3, #12]
 80022e0:	4b34      	ldr	r3, [pc, #208]	@ (80023b4 <HAL_ADC_PollForConversion+0x208>)
 80022e2:	400b      	ands	r3, r1
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	d101      	bne.n	80022ec <HAL_ADC_PollForConversion+0x140>
 80022e8:	2354      	movs	r3, #84	@ 0x54
 80022ea:	e000      	b.n	80022ee <HAL_ADC_PollForConversion+0x142>
 80022ec:	23fc      	movs	r3, #252	@ 0xfc
 80022ee:	fb02 f303 	mul.w	r3, r2, r3
 80022f2:	613b      	str	r3, [r7, #16]
 80022f4:	e021      	b.n	800233a <HAL_ADC_PollForConversion+0x18e>
 80022f6:	683b      	ldr	r3, [r7, #0]
 80022f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80022fc:	d01a      	beq.n	8002334 <HAL_ADC_PollForConversion+0x188>
 80022fe:	683b      	ldr	r3, [r7, #0]
 8002300:	2b00      	cmp	r3, #0
 8002302:	d007      	beq.n	8002314 <HAL_ADC_PollForConversion+0x168>
 8002304:	f7ff fd96 	bl	8001e34 <HAL_GetTick>
 8002308:	4602      	mov	r2, r0
 800230a:	697b      	ldr	r3, [r7, #20]
 800230c:	1ad3      	subs	r3, r2, r3
 800230e:	683a      	ldr	r2, [r7, #0]
 8002310:	429a      	cmp	r2, r3
 8002312:	d20f      	bcs.n	8002334 <HAL_ADC_PollForConversion+0x188>
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	693a      	ldr	r2, [r7, #16]
 8002318:	429a      	cmp	r2, r3
 800231a:	d90b      	bls.n	8002334 <HAL_ADC_PollForConversion+0x188>
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002320:	f043 0204 	orr.w	r2, r3, #4
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	629a      	str	r2, [r3, #40]	@ 0x28
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	2200      	movs	r2, #0
 800232c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002330:	2303      	movs	r3, #3
 8002332:	e030      	b.n	8002396 <HAL_ADC_PollForConversion+0x1ea>
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	3301      	adds	r3, #1
 8002338:	60fb      	str	r3, [r7, #12]
 800233a:	68fb      	ldr	r3, [r7, #12]
 800233c:	693a      	ldr	r2, [r7, #16]
 800233e:	429a      	cmp	r2, r3
 8002340:	d8d9      	bhi.n	80022f6 <HAL_ADC_PollForConversion+0x14a>
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	f06f 0212 	mvn.w	r2, #18
 800234a:	601a      	str	r2, [r3, #0]
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002350:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	629a      	str	r2, [r3, #40]	@ 0x28
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	681b      	ldr	r3, [r3, #0]
 800235c:	689b      	ldr	r3, [r3, #8]
 800235e:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8002362:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8002366:	d115      	bne.n	8002394 <HAL_ADC_PollForConversion+0x1e8>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	7b1b      	ldrb	r3, [r3, #12]
 800236c:	2b00      	cmp	r3, #0
 800236e:	d111      	bne.n	8002394 <HAL_ADC_PollForConversion+0x1e8>
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002374:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	629a      	str	r2, [r3, #40]	@ 0x28
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002380:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002384:	2b00      	cmp	r3, #0
 8002386:	d105      	bne.n	8002394 <HAL_ADC_PollForConversion+0x1e8>
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800238c:	f043 0201 	orr.w	r2, r3, #1
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	629a      	str	r2, [r3, #40]	@ 0x28
 8002394:	2300      	movs	r3, #0
 8002396:	4618      	mov	r0, r3
 8002398:	371c      	adds	r7, #28
 800239a:	46bd      	mov	sp, r7
 800239c:	bd90      	pop	{r4, r7, pc}
 800239e:	bf00      	nop
 80023a0:	20000004 	.word	0x20000004
 80023a4:	24924924 	.word	0x24924924
 80023a8:	00924924 	.word	0x00924924
 80023ac:	12492492 	.word	0x12492492
 80023b0:	00492492 	.word	0x00492492
 80023b4:	00249249 	.word	0x00249249

080023b8 <HAL_ADC_GetValue>:
 80023b8:	b480      	push	{r7}
 80023ba:	b083      	sub	sp, #12
 80023bc:	af00      	add	r7, sp, #0
 80023be:	6078      	str	r0, [r7, #4]
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80023c6:	4618      	mov	r0, r3
 80023c8:	370c      	adds	r7, #12
 80023ca:	46bd      	mov	sp, r7
 80023cc:	bc80      	pop	{r7}
 80023ce:	4770      	bx	lr

080023d0 <HAL_ADC_ConfigChannel>:
 80023d0:	b480      	push	{r7}
 80023d2:	b085      	sub	sp, #20
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
 80023d8:	6039      	str	r1, [r7, #0]
 80023da:	2300      	movs	r3, #0
 80023dc:	73fb      	strb	r3, [r7, #15]
 80023de:	2300      	movs	r3, #0
 80023e0:	60bb      	str	r3, [r7, #8]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80023e8:	2b01      	cmp	r3, #1
 80023ea:	d101      	bne.n	80023f0 <HAL_ADC_ConfigChannel+0x20>
 80023ec:	2302      	movs	r3, #2
 80023ee:	e0dc      	b.n	80025aa <HAL_ADC_ConfigChannel+0x1da>
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	2201      	movs	r2, #1
 80023f4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	685b      	ldr	r3, [r3, #4]
 80023fc:	2b06      	cmp	r3, #6
 80023fe:	d81c      	bhi.n	800243a <HAL_ADC_ConfigChannel+0x6a>
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002406:	683b      	ldr	r3, [r7, #0]
 8002408:	685a      	ldr	r2, [r3, #4]
 800240a:	4613      	mov	r3, r2
 800240c:	009b      	lsls	r3, r3, #2
 800240e:	4413      	add	r3, r2
 8002410:	3b05      	subs	r3, #5
 8002412:	221f      	movs	r2, #31
 8002414:	fa02 f303 	lsl.w	r3, r2, r3
 8002418:	43db      	mvns	r3, r3
 800241a:	4019      	ands	r1, r3
 800241c:	683b      	ldr	r3, [r7, #0]
 800241e:	6818      	ldr	r0, [r3, #0]
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	685a      	ldr	r2, [r3, #4]
 8002424:	4613      	mov	r3, r2
 8002426:	009b      	lsls	r3, r3, #2
 8002428:	4413      	add	r3, r2
 800242a:	3b05      	subs	r3, #5
 800242c:	fa00 f203 	lsl.w	r2, r0, r3
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	430a      	orrs	r2, r1
 8002436:	635a      	str	r2, [r3, #52]	@ 0x34
 8002438:	e03c      	b.n	80024b4 <HAL_ADC_ConfigChannel+0xe4>
 800243a:	683b      	ldr	r3, [r7, #0]
 800243c:	685b      	ldr	r3, [r3, #4]
 800243e:	2b0c      	cmp	r3, #12
 8002440:	d81c      	bhi.n	800247c <HAL_ADC_ConfigChannel+0xac>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002448:	683b      	ldr	r3, [r7, #0]
 800244a:	685a      	ldr	r2, [r3, #4]
 800244c:	4613      	mov	r3, r2
 800244e:	009b      	lsls	r3, r3, #2
 8002450:	4413      	add	r3, r2
 8002452:	3b23      	subs	r3, #35	@ 0x23
 8002454:	221f      	movs	r2, #31
 8002456:	fa02 f303 	lsl.w	r3, r2, r3
 800245a:	43db      	mvns	r3, r3
 800245c:	4019      	ands	r1, r3
 800245e:	683b      	ldr	r3, [r7, #0]
 8002460:	6818      	ldr	r0, [r3, #0]
 8002462:	683b      	ldr	r3, [r7, #0]
 8002464:	685a      	ldr	r2, [r3, #4]
 8002466:	4613      	mov	r3, r2
 8002468:	009b      	lsls	r3, r3, #2
 800246a:	4413      	add	r3, r2
 800246c:	3b23      	subs	r3, #35	@ 0x23
 800246e:	fa00 f203 	lsl.w	r2, r0, r3
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	430a      	orrs	r2, r1
 8002478:	631a      	str	r2, [r3, #48]	@ 0x30
 800247a:	e01b      	b.n	80024b4 <HAL_ADC_ConfigChannel+0xe4>
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002482:	683b      	ldr	r3, [r7, #0]
 8002484:	685a      	ldr	r2, [r3, #4]
 8002486:	4613      	mov	r3, r2
 8002488:	009b      	lsls	r3, r3, #2
 800248a:	4413      	add	r3, r2
 800248c:	3b41      	subs	r3, #65	@ 0x41
 800248e:	221f      	movs	r2, #31
 8002490:	fa02 f303 	lsl.w	r3, r2, r3
 8002494:	43db      	mvns	r3, r3
 8002496:	4019      	ands	r1, r3
 8002498:	683b      	ldr	r3, [r7, #0]
 800249a:	6818      	ldr	r0, [r3, #0]
 800249c:	683b      	ldr	r3, [r7, #0]
 800249e:	685a      	ldr	r2, [r3, #4]
 80024a0:	4613      	mov	r3, r2
 80024a2:	009b      	lsls	r3, r3, #2
 80024a4:	4413      	add	r3, r2
 80024a6:	3b41      	subs	r3, #65	@ 0x41
 80024a8:	fa00 f203 	lsl.w	r2, r0, r3
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	430a      	orrs	r2, r1
 80024b2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80024b4:	683b      	ldr	r3, [r7, #0]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	2b09      	cmp	r3, #9
 80024ba:	d91c      	bls.n	80024f6 <HAL_ADC_ConfigChannel+0x126>
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	68d9      	ldr	r1, [r3, #12]
 80024c2:	683b      	ldr	r3, [r7, #0]
 80024c4:	681a      	ldr	r2, [r3, #0]
 80024c6:	4613      	mov	r3, r2
 80024c8:	005b      	lsls	r3, r3, #1
 80024ca:	4413      	add	r3, r2
 80024cc:	3b1e      	subs	r3, #30
 80024ce:	2207      	movs	r2, #7
 80024d0:	fa02 f303 	lsl.w	r3, r2, r3
 80024d4:	43db      	mvns	r3, r3
 80024d6:	4019      	ands	r1, r3
 80024d8:	683b      	ldr	r3, [r7, #0]
 80024da:	6898      	ldr	r0, [r3, #8]
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	681a      	ldr	r2, [r3, #0]
 80024e0:	4613      	mov	r3, r2
 80024e2:	005b      	lsls	r3, r3, #1
 80024e4:	4413      	add	r3, r2
 80024e6:	3b1e      	subs	r3, #30
 80024e8:	fa00 f203 	lsl.w	r2, r0, r3
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	430a      	orrs	r2, r1
 80024f2:	60da      	str	r2, [r3, #12]
 80024f4:	e019      	b.n	800252a <HAL_ADC_ConfigChannel+0x15a>
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	681b      	ldr	r3, [r3, #0]
 80024fa:	6919      	ldr	r1, [r3, #16]
 80024fc:	683b      	ldr	r3, [r7, #0]
 80024fe:	681a      	ldr	r2, [r3, #0]
 8002500:	4613      	mov	r3, r2
 8002502:	005b      	lsls	r3, r3, #1
 8002504:	4413      	add	r3, r2
 8002506:	2207      	movs	r2, #7
 8002508:	fa02 f303 	lsl.w	r3, r2, r3
 800250c:	43db      	mvns	r3, r3
 800250e:	4019      	ands	r1, r3
 8002510:	683b      	ldr	r3, [r7, #0]
 8002512:	6898      	ldr	r0, [r3, #8]
 8002514:	683b      	ldr	r3, [r7, #0]
 8002516:	681a      	ldr	r2, [r3, #0]
 8002518:	4613      	mov	r3, r2
 800251a:	005b      	lsls	r3, r3, #1
 800251c:	4413      	add	r3, r2
 800251e:	fa00 f203 	lsl.w	r2, r0, r3
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	430a      	orrs	r2, r1
 8002528:	611a      	str	r2, [r3, #16]
 800252a:	683b      	ldr	r3, [r7, #0]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	2b10      	cmp	r3, #16
 8002530:	d003      	beq.n	800253a <HAL_ADC_ConfigChannel+0x16a>
 8002532:	683b      	ldr	r3, [r7, #0]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	2b11      	cmp	r3, #17
 8002538:	d132      	bne.n	80025a0 <HAL_ADC_ConfigChannel+0x1d0>
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	4a1d      	ldr	r2, [pc, #116]	@ (80025b4 <HAL_ADC_ConfigChannel+0x1e4>)
 8002540:	4293      	cmp	r3, r2
 8002542:	d125      	bne.n	8002590 <HAL_ADC_ConfigChannel+0x1c0>
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	689b      	ldr	r3, [r3, #8]
 800254a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800254e:	2b00      	cmp	r3, #0
 8002550:	d126      	bne.n	80025a0 <HAL_ADC_ConfigChannel+0x1d0>
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	689a      	ldr	r2, [r3, #8]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8002560:	609a      	str	r2, [r3, #8]
 8002562:	683b      	ldr	r3, [r7, #0]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	2b10      	cmp	r3, #16
 8002568:	d11a      	bne.n	80025a0 <HAL_ADC_ConfigChannel+0x1d0>
 800256a:	4b13      	ldr	r3, [pc, #76]	@ (80025b8 <HAL_ADC_ConfigChannel+0x1e8>)
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	4a13      	ldr	r2, [pc, #76]	@ (80025bc <HAL_ADC_ConfigChannel+0x1ec>)
 8002570:	fba2 2303 	umull	r2, r3, r2, r3
 8002574:	0c9a      	lsrs	r2, r3, #18
 8002576:	4613      	mov	r3, r2
 8002578:	009b      	lsls	r3, r3, #2
 800257a:	4413      	add	r3, r2
 800257c:	005b      	lsls	r3, r3, #1
 800257e:	60bb      	str	r3, [r7, #8]
 8002580:	e002      	b.n	8002588 <HAL_ADC_ConfigChannel+0x1b8>
 8002582:	68bb      	ldr	r3, [r7, #8]
 8002584:	3b01      	subs	r3, #1
 8002586:	60bb      	str	r3, [r7, #8]
 8002588:	68bb      	ldr	r3, [r7, #8]
 800258a:	2b00      	cmp	r3, #0
 800258c:	d1f9      	bne.n	8002582 <HAL_ADC_ConfigChannel+0x1b2>
 800258e:	e007      	b.n	80025a0 <HAL_ADC_ConfigChannel+0x1d0>
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002594:	f043 0220 	orr.w	r2, r3, #32
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	629a      	str	r2, [r3, #40]	@ 0x28
 800259c:	2301      	movs	r3, #1
 800259e:	73fb      	strb	r3, [r7, #15]
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	2200      	movs	r2, #0
 80025a4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80025a8:	7bfb      	ldrb	r3, [r7, #15]
 80025aa:	4618      	mov	r0, r3
 80025ac:	3714      	adds	r7, #20
 80025ae:	46bd      	mov	sp, r7
 80025b0:	bc80      	pop	{r7}
 80025b2:	4770      	bx	lr
 80025b4:	40012400 	.word	0x40012400
 80025b8:	20000004 	.word	0x20000004
 80025bc:	431bde83 	.word	0x431bde83

080025c0 <ADC_Enable>:
 80025c0:	b580      	push	{r7, lr}
 80025c2:	b084      	sub	sp, #16
 80025c4:	af00      	add	r7, sp, #0
 80025c6:	6078      	str	r0, [r7, #4]
 80025c8:	2300      	movs	r3, #0
 80025ca:	60fb      	str	r3, [r7, #12]
 80025cc:	2300      	movs	r3, #0
 80025ce:	60bb      	str	r3, [r7, #8]
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	689b      	ldr	r3, [r3, #8]
 80025d6:	f003 0301 	and.w	r3, r3, #1
 80025da:	2b01      	cmp	r3, #1
 80025dc:	d040      	beq.n	8002660 <ADC_Enable+0xa0>
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	689a      	ldr	r2, [r3, #8]
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	f042 0201 	orr.w	r2, r2, #1
 80025ec:	609a      	str	r2, [r3, #8]
 80025ee:	4b1f      	ldr	r3, [pc, #124]	@ (800266c <ADC_Enable+0xac>)
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	4a1f      	ldr	r2, [pc, #124]	@ (8002670 <ADC_Enable+0xb0>)
 80025f4:	fba2 2303 	umull	r2, r3, r2, r3
 80025f8:	0c9b      	lsrs	r3, r3, #18
 80025fa:	60bb      	str	r3, [r7, #8]
 80025fc:	e002      	b.n	8002604 <ADC_Enable+0x44>
 80025fe:	68bb      	ldr	r3, [r7, #8]
 8002600:	3b01      	subs	r3, #1
 8002602:	60bb      	str	r3, [r7, #8]
 8002604:	68bb      	ldr	r3, [r7, #8]
 8002606:	2b00      	cmp	r3, #0
 8002608:	d1f9      	bne.n	80025fe <ADC_Enable+0x3e>
 800260a:	f7ff fc13 	bl	8001e34 <HAL_GetTick>
 800260e:	60f8      	str	r0, [r7, #12]
 8002610:	e01f      	b.n	8002652 <ADC_Enable+0x92>
 8002612:	f7ff fc0f 	bl	8001e34 <HAL_GetTick>
 8002616:	4602      	mov	r2, r0
 8002618:	68fb      	ldr	r3, [r7, #12]
 800261a:	1ad3      	subs	r3, r2, r3
 800261c:	2b02      	cmp	r3, #2
 800261e:	d918      	bls.n	8002652 <ADC_Enable+0x92>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	689b      	ldr	r3, [r3, #8]
 8002626:	f003 0301 	and.w	r3, r3, #1
 800262a:	2b01      	cmp	r3, #1
 800262c:	d011      	beq.n	8002652 <ADC_Enable+0x92>
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002632:	f043 0210 	orr.w	r2, r3, #16
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	629a      	str	r2, [r3, #40]	@ 0x28
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800263e:	f043 0201 	orr.w	r2, r3, #1
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	2200      	movs	r2, #0
 800264a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800264e:	2301      	movs	r3, #1
 8002650:	e007      	b.n	8002662 <ADC_Enable+0xa2>
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	689b      	ldr	r3, [r3, #8]
 8002658:	f003 0301 	and.w	r3, r3, #1
 800265c:	2b01      	cmp	r3, #1
 800265e:	d1d8      	bne.n	8002612 <ADC_Enable+0x52>
 8002660:	2300      	movs	r3, #0
 8002662:	4618      	mov	r0, r3
 8002664:	3710      	adds	r7, #16
 8002666:	46bd      	mov	sp, r7
 8002668:	bd80      	pop	{r7, pc}
 800266a:	bf00      	nop
 800266c:	20000004 	.word	0x20000004
 8002670:	431bde83 	.word	0x431bde83

08002674 <ADC_ConversionStop_Disable>:
 8002674:	b580      	push	{r7, lr}
 8002676:	b084      	sub	sp, #16
 8002678:	af00      	add	r7, sp, #0
 800267a:	6078      	str	r0, [r7, #4]
 800267c:	2300      	movs	r3, #0
 800267e:	60fb      	str	r3, [r7, #12]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	689b      	ldr	r3, [r3, #8]
 8002686:	f003 0301 	and.w	r3, r3, #1
 800268a:	2b01      	cmp	r3, #1
 800268c:	d12e      	bne.n	80026ec <ADC_ConversionStop_Disable+0x78>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	689a      	ldr	r2, [r3, #8]
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	f022 0201 	bic.w	r2, r2, #1
 800269c:	609a      	str	r2, [r3, #8]
 800269e:	f7ff fbc9 	bl	8001e34 <HAL_GetTick>
 80026a2:	60f8      	str	r0, [r7, #12]
 80026a4:	e01b      	b.n	80026de <ADC_ConversionStop_Disable+0x6a>
 80026a6:	f7ff fbc5 	bl	8001e34 <HAL_GetTick>
 80026aa:	4602      	mov	r2, r0
 80026ac:	68fb      	ldr	r3, [r7, #12]
 80026ae:	1ad3      	subs	r3, r2, r3
 80026b0:	2b02      	cmp	r3, #2
 80026b2:	d914      	bls.n	80026de <ADC_ConversionStop_Disable+0x6a>
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	689b      	ldr	r3, [r3, #8]
 80026ba:	f003 0301 	and.w	r3, r3, #1
 80026be:	2b01      	cmp	r3, #1
 80026c0:	d10d      	bne.n	80026de <ADC_ConversionStop_Disable+0x6a>
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80026c6:	f043 0210 	orr.w	r2, r3, #16
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	629a      	str	r2, [r3, #40]	@ 0x28
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80026d2:	f043 0201 	orr.w	r2, r3, #1
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80026da:	2301      	movs	r3, #1
 80026dc:	e007      	b.n	80026ee <ADC_ConversionStop_Disable+0x7a>
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	681b      	ldr	r3, [r3, #0]
 80026e2:	689b      	ldr	r3, [r3, #8]
 80026e4:	f003 0301 	and.w	r3, r3, #1
 80026e8:	2b01      	cmp	r3, #1
 80026ea:	d0dc      	beq.n	80026a6 <ADC_ConversionStop_Disable+0x32>
 80026ec:	2300      	movs	r3, #0
 80026ee:	4618      	mov	r0, r3
 80026f0:	3710      	adds	r7, #16
 80026f2:	46bd      	mov	sp, r7
 80026f4:	bd80      	pop	{r7, pc}

080026f6 <HAL_CAN_Init>:
 80026f6:	b580      	push	{r7, lr}
 80026f8:	b084      	sub	sp, #16
 80026fa:	af00      	add	r7, sp, #0
 80026fc:	6078      	str	r0, [r7, #4]
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	2b00      	cmp	r3, #0
 8002702:	d101      	bne.n	8002708 <HAL_CAN_Init+0x12>
 8002704:	2301      	movs	r3, #1
 8002706:	e0ed      	b.n	80028e4 <HAL_CAN_Init+0x1ee>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800270e:	b2db      	uxtb	r3, r3
 8002710:	2b00      	cmp	r3, #0
 8002712:	d102      	bne.n	800271a <HAL_CAN_Init+0x24>
 8002714:	6878      	ldr	r0, [r7, #4]
 8002716:	f7fe fb0b 	bl	8000d30 <HAL_CAN_MspInit>
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	681b      	ldr	r3, [r3, #0]
 800271e:	681a      	ldr	r2, [r3, #0]
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	f042 0201 	orr.w	r2, r2, #1
 8002728:	601a      	str	r2, [r3, #0]
 800272a:	f7ff fb83 	bl	8001e34 <HAL_GetTick>
 800272e:	60f8      	str	r0, [r7, #12]
 8002730:	e012      	b.n	8002758 <HAL_CAN_Init+0x62>
 8002732:	f7ff fb7f 	bl	8001e34 <HAL_GetTick>
 8002736:	4602      	mov	r2, r0
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	1ad3      	subs	r3, r2, r3
 800273c:	2b0a      	cmp	r3, #10
 800273e:	d90b      	bls.n	8002758 <HAL_CAN_Init+0x62>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002744:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	625a      	str	r2, [r3, #36]	@ 0x24
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	2205      	movs	r2, #5
 8002750:	f883 2020 	strb.w	r2, [r3, #32]
 8002754:	2301      	movs	r3, #1
 8002756:	e0c5      	b.n	80028e4 <HAL_CAN_Init+0x1ee>
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	685b      	ldr	r3, [r3, #4]
 800275e:	f003 0301 	and.w	r3, r3, #1
 8002762:	2b00      	cmp	r3, #0
 8002764:	d0e5      	beq.n	8002732 <HAL_CAN_Init+0x3c>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	681a      	ldr	r2, [r3, #0]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	f022 0202 	bic.w	r2, r2, #2
 8002774:	601a      	str	r2, [r3, #0]
 8002776:	f7ff fb5d 	bl	8001e34 <HAL_GetTick>
 800277a:	60f8      	str	r0, [r7, #12]
 800277c:	e012      	b.n	80027a4 <HAL_CAN_Init+0xae>
 800277e:	f7ff fb59 	bl	8001e34 <HAL_GetTick>
 8002782:	4602      	mov	r2, r0
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	1ad3      	subs	r3, r2, r3
 8002788:	2b0a      	cmp	r3, #10
 800278a:	d90b      	bls.n	80027a4 <HAL_CAN_Init+0xae>
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002790:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	625a      	str	r2, [r3, #36]	@ 0x24
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	2205      	movs	r2, #5
 800279c:	f883 2020 	strb.w	r2, [r3, #32]
 80027a0:	2301      	movs	r3, #1
 80027a2:	e09f      	b.n	80028e4 <HAL_CAN_Init+0x1ee>
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	681b      	ldr	r3, [r3, #0]
 80027a8:	685b      	ldr	r3, [r3, #4]
 80027aa:	f003 0302 	and.w	r3, r3, #2
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d1e5      	bne.n	800277e <HAL_CAN_Init+0x88>
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	7e1b      	ldrb	r3, [r3, #24]
 80027b6:	2b01      	cmp	r3, #1
 80027b8:	d108      	bne.n	80027cc <HAL_CAN_Init+0xd6>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	681a      	ldr	r2, [r3, #0]
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80027c8:	601a      	str	r2, [r3, #0]
 80027ca:	e007      	b.n	80027dc <HAL_CAN_Init+0xe6>
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	681a      	ldr	r2, [r3, #0]
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80027da:	601a      	str	r2, [r3, #0]
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	7e5b      	ldrb	r3, [r3, #25]
 80027e0:	2b01      	cmp	r3, #1
 80027e2:	d108      	bne.n	80027f6 <HAL_CAN_Init+0x100>
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	681a      	ldr	r2, [r3, #0]
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80027f2:	601a      	str	r2, [r3, #0]
 80027f4:	e007      	b.n	8002806 <HAL_CAN_Init+0x110>
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	681a      	ldr	r2, [r3, #0]
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002804:	601a      	str	r2, [r3, #0]
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	7e9b      	ldrb	r3, [r3, #26]
 800280a:	2b01      	cmp	r3, #1
 800280c:	d108      	bne.n	8002820 <HAL_CAN_Init+0x12a>
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	681a      	ldr	r2, [r3, #0]
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	f042 0220 	orr.w	r2, r2, #32
 800281c:	601a      	str	r2, [r3, #0]
 800281e:	e007      	b.n	8002830 <HAL_CAN_Init+0x13a>
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	681a      	ldr	r2, [r3, #0]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	f022 0220 	bic.w	r2, r2, #32
 800282e:	601a      	str	r2, [r3, #0]
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	7edb      	ldrb	r3, [r3, #27]
 8002834:	2b01      	cmp	r3, #1
 8002836:	d108      	bne.n	800284a <HAL_CAN_Init+0x154>
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	681a      	ldr	r2, [r3, #0]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	f022 0210 	bic.w	r2, r2, #16
 8002846:	601a      	str	r2, [r3, #0]
 8002848:	e007      	b.n	800285a <HAL_CAN_Init+0x164>
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	681b      	ldr	r3, [r3, #0]
 800284e:	681a      	ldr	r2, [r3, #0]
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	f042 0210 	orr.w	r2, r2, #16
 8002858:	601a      	str	r2, [r3, #0]
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	7f1b      	ldrb	r3, [r3, #28]
 800285e:	2b01      	cmp	r3, #1
 8002860:	d108      	bne.n	8002874 <HAL_CAN_Init+0x17e>
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	681a      	ldr	r2, [r3, #0]
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	f042 0208 	orr.w	r2, r2, #8
 8002870:	601a      	str	r2, [r3, #0]
 8002872:	e007      	b.n	8002884 <HAL_CAN_Init+0x18e>
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	681a      	ldr	r2, [r3, #0]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	f022 0208 	bic.w	r2, r2, #8
 8002882:	601a      	str	r2, [r3, #0]
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	7f5b      	ldrb	r3, [r3, #29]
 8002888:	2b01      	cmp	r3, #1
 800288a:	d108      	bne.n	800289e <HAL_CAN_Init+0x1a8>
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	681a      	ldr	r2, [r3, #0]
 8002892:	687b      	ldr	r3, [r7, #4]
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	f042 0204 	orr.w	r2, r2, #4
 800289a:	601a      	str	r2, [r3, #0]
 800289c:	e007      	b.n	80028ae <HAL_CAN_Init+0x1b8>
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	681a      	ldr	r2, [r3, #0]
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	f022 0204 	bic.w	r2, r2, #4
 80028ac:	601a      	str	r2, [r3, #0]
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	689a      	ldr	r2, [r3, #8]
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	68db      	ldr	r3, [r3, #12]
 80028b6:	431a      	orrs	r2, r3
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	691b      	ldr	r3, [r3, #16]
 80028bc:	431a      	orrs	r2, r3
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	695b      	ldr	r3, [r3, #20]
 80028c2:	ea42 0103 	orr.w	r1, r2, r3
 80028c6:	687b      	ldr	r3, [r7, #4]
 80028c8:	685b      	ldr	r3, [r3, #4]
 80028ca:	1e5a      	subs	r2, r3, #1
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	430a      	orrs	r2, r1
 80028d2:	61da      	str	r2, [r3, #28]
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	2200      	movs	r2, #0
 80028d8:	625a      	str	r2, [r3, #36]	@ 0x24
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	2201      	movs	r2, #1
 80028de:	f883 2020 	strb.w	r2, [r3, #32]
 80028e2:	2300      	movs	r3, #0
 80028e4:	4618      	mov	r0, r3
 80028e6:	3710      	adds	r7, #16
 80028e8:	46bd      	mov	sp, r7
 80028ea:	bd80      	pop	{r7, pc}

080028ec <HAL_CAN_Start>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b084      	sub	sp, #16
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	6078      	str	r0, [r7, #4]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	f893 3020 	ldrb.w	r3, [r3, #32]
 80028fa:	b2db      	uxtb	r3, r3
 80028fc:	2b01      	cmp	r3, #1
 80028fe:	d12e      	bne.n	800295e <HAL_CAN_Start+0x72>
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	2202      	movs	r2, #2
 8002904:	f883 2020 	strb.w	r2, [r3, #32]
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	681a      	ldr	r2, [r3, #0]
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	f022 0201 	bic.w	r2, r2, #1
 8002916:	601a      	str	r2, [r3, #0]
 8002918:	f7ff fa8c 	bl	8001e34 <HAL_GetTick>
 800291c:	60f8      	str	r0, [r7, #12]
 800291e:	e012      	b.n	8002946 <HAL_CAN_Start+0x5a>
 8002920:	f7ff fa88 	bl	8001e34 <HAL_GetTick>
 8002924:	4602      	mov	r2, r0
 8002926:	68fb      	ldr	r3, [r7, #12]
 8002928:	1ad3      	subs	r3, r2, r3
 800292a:	2b0a      	cmp	r3, #10
 800292c:	d90b      	bls.n	8002946 <HAL_CAN_Start+0x5a>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002932:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	625a      	str	r2, [r3, #36]	@ 0x24
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	2205      	movs	r2, #5
 800293e:	f883 2020 	strb.w	r2, [r3, #32]
 8002942:	2301      	movs	r3, #1
 8002944:	e012      	b.n	800296c <HAL_CAN_Start+0x80>
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	685b      	ldr	r3, [r3, #4]
 800294c:	f003 0301 	and.w	r3, r3, #1
 8002950:	2b00      	cmp	r3, #0
 8002952:	d1e5      	bne.n	8002920 <HAL_CAN_Start+0x34>
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2200      	movs	r2, #0
 8002958:	625a      	str	r2, [r3, #36]	@ 0x24
 800295a:	2300      	movs	r3, #0
 800295c:	e006      	b.n	800296c <HAL_CAN_Start+0x80>
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002962:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	625a      	str	r2, [r3, #36]	@ 0x24
 800296a:	2301      	movs	r3, #1
 800296c:	4618      	mov	r0, r3
 800296e:	3710      	adds	r7, #16
 8002970:	46bd      	mov	sp, r7
 8002972:	bd80      	pop	{r7, pc}

08002974 <HAL_CAN_AddTxMessage>:
 8002974:	b480      	push	{r7}
 8002976:	b089      	sub	sp, #36	@ 0x24
 8002978:	af00      	add	r7, sp, #0
 800297a:	60f8      	str	r0, [r7, #12]
 800297c:	60b9      	str	r1, [r7, #8]
 800297e:	607a      	str	r2, [r7, #4]
 8002980:	603b      	str	r3, [r7, #0]
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002988:	77fb      	strb	r3, [r7, #31]
 800298a:	68fb      	ldr	r3, [r7, #12]
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	689b      	ldr	r3, [r3, #8]
 8002990:	61bb      	str	r3, [r7, #24]
 8002992:	7ffb      	ldrb	r3, [r7, #31]
 8002994:	2b01      	cmp	r3, #1
 8002996:	d003      	beq.n	80029a0 <HAL_CAN_AddTxMessage+0x2c>
 8002998:	7ffb      	ldrb	r3, [r7, #31]
 800299a:	2b02      	cmp	r3, #2
 800299c:	f040 80ad 	bne.w	8002afa <HAL_CAN_AddTxMessage+0x186>
 80029a0:	69bb      	ldr	r3, [r7, #24]
 80029a2:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	d10a      	bne.n	80029c0 <HAL_CAN_AddTxMessage+0x4c>
 80029aa:	69bb      	ldr	r3, [r7, #24]
 80029ac:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	d105      	bne.n	80029c0 <HAL_CAN_AddTxMessage+0x4c>
 80029b4:	69bb      	ldr	r3, [r7, #24]
 80029b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	f000 8095 	beq.w	8002aea <HAL_CAN_AddTxMessage+0x176>
 80029c0:	69bb      	ldr	r3, [r7, #24]
 80029c2:	0e1b      	lsrs	r3, r3, #24
 80029c4:	f003 0303 	and.w	r3, r3, #3
 80029c8:	617b      	str	r3, [r7, #20]
 80029ca:	2201      	movs	r2, #1
 80029cc:	697b      	ldr	r3, [r7, #20]
 80029ce:	409a      	lsls	r2, r3
 80029d0:	683b      	ldr	r3, [r7, #0]
 80029d2:	601a      	str	r2, [r3, #0]
 80029d4:	68bb      	ldr	r3, [r7, #8]
 80029d6:	689b      	ldr	r3, [r3, #8]
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d10d      	bne.n	80029f8 <HAL_CAN_AddTxMessage+0x84>
 80029dc:	68bb      	ldr	r3, [r7, #8]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	055a      	lsls	r2, r3, #21
 80029e2:	68bb      	ldr	r3, [r7, #8]
 80029e4:	68db      	ldr	r3, [r3, #12]
 80029e6:	68f9      	ldr	r1, [r7, #12]
 80029e8:	6809      	ldr	r1, [r1, #0]
 80029ea:	431a      	orrs	r2, r3
 80029ec:	697b      	ldr	r3, [r7, #20]
 80029ee:	3318      	adds	r3, #24
 80029f0:	011b      	lsls	r3, r3, #4
 80029f2:	440b      	add	r3, r1
 80029f4:	601a      	str	r2, [r3, #0]
 80029f6:	e00f      	b.n	8002a18 <HAL_CAN_AddTxMessage+0xa4>
 80029f8:	68bb      	ldr	r3, [r7, #8]
 80029fa:	685b      	ldr	r3, [r3, #4]
 80029fc:	00da      	lsls	r2, r3, #3
 80029fe:	68bb      	ldr	r3, [r7, #8]
 8002a00:	689b      	ldr	r3, [r3, #8]
 8002a02:	431a      	orrs	r2, r3
 8002a04:	68bb      	ldr	r3, [r7, #8]
 8002a06:	68db      	ldr	r3, [r3, #12]
 8002a08:	68f9      	ldr	r1, [r7, #12]
 8002a0a:	6809      	ldr	r1, [r1, #0]
 8002a0c:	431a      	orrs	r2, r3
 8002a0e:	697b      	ldr	r3, [r7, #20]
 8002a10:	3318      	adds	r3, #24
 8002a12:	011b      	lsls	r3, r3, #4
 8002a14:	440b      	add	r3, r1
 8002a16:	601a      	str	r2, [r3, #0]
 8002a18:	68fb      	ldr	r3, [r7, #12]
 8002a1a:	6819      	ldr	r1, [r3, #0]
 8002a1c:	68bb      	ldr	r3, [r7, #8]
 8002a1e:	691a      	ldr	r2, [r3, #16]
 8002a20:	697b      	ldr	r3, [r7, #20]
 8002a22:	3318      	adds	r3, #24
 8002a24:	011b      	lsls	r3, r3, #4
 8002a26:	440b      	add	r3, r1
 8002a28:	3304      	adds	r3, #4
 8002a2a:	601a      	str	r2, [r3, #0]
 8002a2c:	68bb      	ldr	r3, [r7, #8]
 8002a2e:	7d1b      	ldrb	r3, [r3, #20]
 8002a30:	2b01      	cmp	r3, #1
 8002a32:	d111      	bne.n	8002a58 <HAL_CAN_AddTxMessage+0xe4>
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	681a      	ldr	r2, [r3, #0]
 8002a38:	697b      	ldr	r3, [r7, #20]
 8002a3a:	3318      	adds	r3, #24
 8002a3c:	011b      	lsls	r3, r3, #4
 8002a3e:	4413      	add	r3, r2
 8002a40:	3304      	adds	r3, #4
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	68fa      	ldr	r2, [r7, #12]
 8002a46:	6811      	ldr	r1, [r2, #0]
 8002a48:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002a4c:	697b      	ldr	r3, [r7, #20]
 8002a4e:	3318      	adds	r3, #24
 8002a50:	011b      	lsls	r3, r3, #4
 8002a52:	440b      	add	r3, r1
 8002a54:	3304      	adds	r3, #4
 8002a56:	601a      	str	r2, [r3, #0]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	3307      	adds	r3, #7
 8002a5c:	781b      	ldrb	r3, [r3, #0]
 8002a5e:	061a      	lsls	r2, r3, #24
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	3306      	adds	r3, #6
 8002a64:	781b      	ldrb	r3, [r3, #0]
 8002a66:	041b      	lsls	r3, r3, #16
 8002a68:	431a      	orrs	r2, r3
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	3305      	adds	r3, #5
 8002a6e:	781b      	ldrb	r3, [r3, #0]
 8002a70:	021b      	lsls	r3, r3, #8
 8002a72:	4313      	orrs	r3, r2
 8002a74:	687a      	ldr	r2, [r7, #4]
 8002a76:	3204      	adds	r2, #4
 8002a78:	7812      	ldrb	r2, [r2, #0]
 8002a7a:	4610      	mov	r0, r2
 8002a7c:	68fa      	ldr	r2, [r7, #12]
 8002a7e:	6811      	ldr	r1, [r2, #0]
 8002a80:	ea43 0200 	orr.w	r2, r3, r0
 8002a84:	697b      	ldr	r3, [r7, #20]
 8002a86:	011b      	lsls	r3, r3, #4
 8002a88:	440b      	add	r3, r1
 8002a8a:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8002a8e:	601a      	str	r2, [r3, #0]
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	3303      	adds	r3, #3
 8002a94:	781b      	ldrb	r3, [r3, #0]
 8002a96:	061a      	lsls	r2, r3, #24
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	3302      	adds	r3, #2
 8002a9c:	781b      	ldrb	r3, [r3, #0]
 8002a9e:	041b      	lsls	r3, r3, #16
 8002aa0:	431a      	orrs	r2, r3
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	3301      	adds	r3, #1
 8002aa6:	781b      	ldrb	r3, [r3, #0]
 8002aa8:	021b      	lsls	r3, r3, #8
 8002aaa:	4313      	orrs	r3, r2
 8002aac:	687a      	ldr	r2, [r7, #4]
 8002aae:	7812      	ldrb	r2, [r2, #0]
 8002ab0:	4610      	mov	r0, r2
 8002ab2:	68fa      	ldr	r2, [r7, #12]
 8002ab4:	6811      	ldr	r1, [r2, #0]
 8002ab6:	ea43 0200 	orr.w	r2, r3, r0
 8002aba:	697b      	ldr	r3, [r7, #20]
 8002abc:	011b      	lsls	r3, r3, #4
 8002abe:	440b      	add	r3, r1
 8002ac0:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8002ac4:	601a      	str	r2, [r3, #0]
 8002ac6:	68fb      	ldr	r3, [r7, #12]
 8002ac8:	681a      	ldr	r2, [r3, #0]
 8002aca:	697b      	ldr	r3, [r7, #20]
 8002acc:	3318      	adds	r3, #24
 8002ace:	011b      	lsls	r3, r3, #4
 8002ad0:	4413      	add	r3, r2
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	68fa      	ldr	r2, [r7, #12]
 8002ad6:	6811      	ldr	r1, [r2, #0]
 8002ad8:	f043 0201 	orr.w	r2, r3, #1
 8002adc:	697b      	ldr	r3, [r7, #20]
 8002ade:	3318      	adds	r3, #24
 8002ae0:	011b      	lsls	r3, r3, #4
 8002ae2:	440b      	add	r3, r1
 8002ae4:	601a      	str	r2, [r3, #0]
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	e00e      	b.n	8002b08 <HAL_CAN_AddTxMessage+0x194>
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002aee:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	625a      	str	r2, [r3, #36]	@ 0x24
 8002af6:	2301      	movs	r3, #1
 8002af8:	e006      	b.n	8002b08 <HAL_CAN_AddTxMessage+0x194>
 8002afa:	68fb      	ldr	r3, [r7, #12]
 8002afc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002afe:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8002b02:	68fb      	ldr	r3, [r7, #12]
 8002b04:	625a      	str	r2, [r3, #36]	@ 0x24
 8002b06:	2301      	movs	r3, #1
 8002b08:	4618      	mov	r0, r3
 8002b0a:	3724      	adds	r7, #36	@ 0x24
 8002b0c:	46bd      	mov	sp, r7
 8002b0e:	bc80      	pop	{r7}
 8002b10:	4770      	bx	lr

08002b12 <HAL_CAN_IsTxMessagePending>:
 8002b12:	b480      	push	{r7}
 8002b14:	b085      	sub	sp, #20
 8002b16:	af00      	add	r7, sp, #0
 8002b18:	6078      	str	r0, [r7, #4]
 8002b1a:	6039      	str	r1, [r7, #0]
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	60fb      	str	r3, [r7, #12]
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002b26:	72fb      	strb	r3, [r7, #11]
 8002b28:	7afb      	ldrb	r3, [r7, #11]
 8002b2a:	2b01      	cmp	r3, #1
 8002b2c:	d002      	beq.n	8002b34 <HAL_CAN_IsTxMessagePending+0x22>
 8002b2e:	7afb      	ldrb	r3, [r7, #11]
 8002b30:	2b02      	cmp	r3, #2
 8002b32:	d10b      	bne.n	8002b4c <HAL_CAN_IsTxMessagePending+0x3a>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	689a      	ldr	r2, [r3, #8]
 8002b3a:	683b      	ldr	r3, [r7, #0]
 8002b3c:	069b      	lsls	r3, r3, #26
 8002b3e:	401a      	ands	r2, r3
 8002b40:	683b      	ldr	r3, [r7, #0]
 8002b42:	069b      	lsls	r3, r3, #26
 8002b44:	429a      	cmp	r2, r3
 8002b46:	d001      	beq.n	8002b4c <HAL_CAN_IsTxMessagePending+0x3a>
 8002b48:	2301      	movs	r3, #1
 8002b4a:	60fb      	str	r3, [r7, #12]
 8002b4c:	68fb      	ldr	r3, [r7, #12]
 8002b4e:	4618      	mov	r0, r3
 8002b50:	3714      	adds	r7, #20
 8002b52:	46bd      	mov	sp, r7
 8002b54:	bc80      	pop	{r7}
 8002b56:	4770      	bx	lr

08002b58 <__NVIC_SetPriorityGrouping>:
 8002b58:	b480      	push	{r7}
 8002b5a:	b085      	sub	sp, #20
 8002b5c:	af00      	add	r7, sp, #0
 8002b5e:	6078      	str	r0, [r7, #4]
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	f003 0307 	and.w	r3, r3, #7
 8002b66:	60fb      	str	r3, [r7, #12]
 8002b68:	4b0c      	ldr	r3, [pc, #48]	@ (8002b9c <__NVIC_SetPriorityGrouping+0x44>)
 8002b6a:	68db      	ldr	r3, [r3, #12]
 8002b6c:	60bb      	str	r3, [r7, #8]
 8002b6e:	68ba      	ldr	r2, [r7, #8]
 8002b70:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002b74:	4013      	ands	r3, r2
 8002b76:	60bb      	str	r3, [r7, #8]
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	021a      	lsls	r2, r3, #8
 8002b7c:	68bb      	ldr	r3, [r7, #8]
 8002b7e:	4313      	orrs	r3, r2
 8002b80:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002b84:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002b88:	60bb      	str	r3, [r7, #8]
 8002b8a:	4a04      	ldr	r2, [pc, #16]	@ (8002b9c <__NVIC_SetPriorityGrouping+0x44>)
 8002b8c:	68bb      	ldr	r3, [r7, #8]
 8002b8e:	60d3      	str	r3, [r2, #12]
 8002b90:	bf00      	nop
 8002b92:	3714      	adds	r7, #20
 8002b94:	46bd      	mov	sp, r7
 8002b96:	bc80      	pop	{r7}
 8002b98:	4770      	bx	lr
 8002b9a:	bf00      	nop
 8002b9c:	e000ed00 	.word	0xe000ed00

08002ba0 <__NVIC_GetPriorityGrouping>:
 8002ba0:	b480      	push	{r7}
 8002ba2:	af00      	add	r7, sp, #0
 8002ba4:	4b04      	ldr	r3, [pc, #16]	@ (8002bb8 <__NVIC_GetPriorityGrouping+0x18>)
 8002ba6:	68db      	ldr	r3, [r3, #12]
 8002ba8:	0a1b      	lsrs	r3, r3, #8
 8002baa:	f003 0307 	and.w	r3, r3, #7
 8002bae:	4618      	mov	r0, r3
 8002bb0:	46bd      	mov	sp, r7
 8002bb2:	bc80      	pop	{r7}
 8002bb4:	4770      	bx	lr
 8002bb6:	bf00      	nop
 8002bb8:	e000ed00 	.word	0xe000ed00

08002bbc <__NVIC_EnableIRQ>:
 8002bbc:	b480      	push	{r7}
 8002bbe:	b083      	sub	sp, #12
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	4603      	mov	r3, r0
 8002bc4:	71fb      	strb	r3, [r7, #7]
 8002bc6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002bca:	2b00      	cmp	r3, #0
 8002bcc:	db0b      	blt.n	8002be6 <__NVIC_EnableIRQ+0x2a>
 8002bce:	79fb      	ldrb	r3, [r7, #7]
 8002bd0:	f003 021f 	and.w	r2, r3, #31
 8002bd4:	4906      	ldr	r1, [pc, #24]	@ (8002bf0 <__NVIC_EnableIRQ+0x34>)
 8002bd6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002bda:	095b      	lsrs	r3, r3, #5
 8002bdc:	2001      	movs	r0, #1
 8002bde:	fa00 f202 	lsl.w	r2, r0, r2
 8002be2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002be6:	bf00      	nop
 8002be8:	370c      	adds	r7, #12
 8002bea:	46bd      	mov	sp, r7
 8002bec:	bc80      	pop	{r7}
 8002bee:	4770      	bx	lr
 8002bf0:	e000e100 	.word	0xe000e100

08002bf4 <__NVIC_SetPriority>:
 8002bf4:	b480      	push	{r7}
 8002bf6:	b083      	sub	sp, #12
 8002bf8:	af00      	add	r7, sp, #0
 8002bfa:	4603      	mov	r3, r0
 8002bfc:	6039      	str	r1, [r7, #0]
 8002bfe:	71fb      	strb	r3, [r7, #7]
 8002c00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	db0a      	blt.n	8002c1e <__NVIC_SetPriority+0x2a>
 8002c08:	683b      	ldr	r3, [r7, #0]
 8002c0a:	b2da      	uxtb	r2, r3
 8002c0c:	490c      	ldr	r1, [pc, #48]	@ (8002c40 <__NVIC_SetPriority+0x4c>)
 8002c0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c12:	0112      	lsls	r2, r2, #4
 8002c14:	b2d2      	uxtb	r2, r2
 8002c16:	440b      	add	r3, r1
 8002c18:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002c1c:	e00a      	b.n	8002c34 <__NVIC_SetPriority+0x40>
 8002c1e:	683b      	ldr	r3, [r7, #0]
 8002c20:	b2da      	uxtb	r2, r3
 8002c22:	4908      	ldr	r1, [pc, #32]	@ (8002c44 <__NVIC_SetPriority+0x50>)
 8002c24:	79fb      	ldrb	r3, [r7, #7]
 8002c26:	f003 030f 	and.w	r3, r3, #15
 8002c2a:	3b04      	subs	r3, #4
 8002c2c:	0112      	lsls	r2, r2, #4
 8002c2e:	b2d2      	uxtb	r2, r2
 8002c30:	440b      	add	r3, r1
 8002c32:	761a      	strb	r2, [r3, #24]
 8002c34:	bf00      	nop
 8002c36:	370c      	adds	r7, #12
 8002c38:	46bd      	mov	sp, r7
 8002c3a:	bc80      	pop	{r7}
 8002c3c:	4770      	bx	lr
 8002c3e:	bf00      	nop
 8002c40:	e000e100 	.word	0xe000e100
 8002c44:	e000ed00 	.word	0xe000ed00

08002c48 <NVIC_EncodePriority>:
 8002c48:	b480      	push	{r7}
 8002c4a:	b089      	sub	sp, #36	@ 0x24
 8002c4c:	af00      	add	r7, sp, #0
 8002c4e:	60f8      	str	r0, [r7, #12]
 8002c50:	60b9      	str	r1, [r7, #8]
 8002c52:	607a      	str	r2, [r7, #4]
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	f003 0307 	and.w	r3, r3, #7
 8002c5a:	61fb      	str	r3, [r7, #28]
 8002c5c:	69fb      	ldr	r3, [r7, #28]
 8002c5e:	f1c3 0307 	rsb	r3, r3, #7
 8002c62:	2b04      	cmp	r3, #4
 8002c64:	bf28      	it	cs
 8002c66:	2304      	movcs	r3, #4
 8002c68:	61bb      	str	r3, [r7, #24]
 8002c6a:	69fb      	ldr	r3, [r7, #28]
 8002c6c:	3304      	adds	r3, #4
 8002c6e:	2b06      	cmp	r3, #6
 8002c70:	d902      	bls.n	8002c78 <NVIC_EncodePriority+0x30>
 8002c72:	69fb      	ldr	r3, [r7, #28]
 8002c74:	3b03      	subs	r3, #3
 8002c76:	e000      	b.n	8002c7a <NVIC_EncodePriority+0x32>
 8002c78:	2300      	movs	r3, #0
 8002c7a:	617b      	str	r3, [r7, #20]
 8002c7c:	f04f 32ff 	mov.w	r2, #4294967295
 8002c80:	69bb      	ldr	r3, [r7, #24]
 8002c82:	fa02 f303 	lsl.w	r3, r2, r3
 8002c86:	43da      	mvns	r2, r3
 8002c88:	68bb      	ldr	r3, [r7, #8]
 8002c8a:	401a      	ands	r2, r3
 8002c8c:	697b      	ldr	r3, [r7, #20]
 8002c8e:	409a      	lsls	r2, r3
 8002c90:	f04f 31ff 	mov.w	r1, #4294967295
 8002c94:	697b      	ldr	r3, [r7, #20]
 8002c96:	fa01 f303 	lsl.w	r3, r1, r3
 8002c9a:	43d9      	mvns	r1, r3
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	400b      	ands	r3, r1
 8002ca0:	4313      	orrs	r3, r2
 8002ca2:	4618      	mov	r0, r3
 8002ca4:	3724      	adds	r7, #36	@ 0x24
 8002ca6:	46bd      	mov	sp, r7
 8002ca8:	bc80      	pop	{r7}
 8002caa:	4770      	bx	lr

08002cac <HAL_NVIC_SetPriorityGrouping>:
 8002cac:	b580      	push	{r7, lr}
 8002cae:	b082      	sub	sp, #8
 8002cb0:	af00      	add	r7, sp, #0
 8002cb2:	6078      	str	r0, [r7, #4]
 8002cb4:	6878      	ldr	r0, [r7, #4]
 8002cb6:	f7ff ff4f 	bl	8002b58 <__NVIC_SetPriorityGrouping>
 8002cba:	bf00      	nop
 8002cbc:	3708      	adds	r7, #8
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	bd80      	pop	{r7, pc}

08002cc2 <HAL_NVIC_SetPriority>:
 8002cc2:	b580      	push	{r7, lr}
 8002cc4:	b086      	sub	sp, #24
 8002cc6:	af00      	add	r7, sp, #0
 8002cc8:	4603      	mov	r3, r0
 8002cca:	60b9      	str	r1, [r7, #8]
 8002ccc:	607a      	str	r2, [r7, #4]
 8002cce:	73fb      	strb	r3, [r7, #15]
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	617b      	str	r3, [r7, #20]
 8002cd4:	f7ff ff64 	bl	8002ba0 <__NVIC_GetPriorityGrouping>
 8002cd8:	6178      	str	r0, [r7, #20]
 8002cda:	687a      	ldr	r2, [r7, #4]
 8002cdc:	68b9      	ldr	r1, [r7, #8]
 8002cde:	6978      	ldr	r0, [r7, #20]
 8002ce0:	f7ff ffb2 	bl	8002c48 <NVIC_EncodePriority>
 8002ce4:	4602      	mov	r2, r0
 8002ce6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002cea:	4611      	mov	r1, r2
 8002cec:	4618      	mov	r0, r3
 8002cee:	f7ff ff81 	bl	8002bf4 <__NVIC_SetPriority>
 8002cf2:	bf00      	nop
 8002cf4:	3718      	adds	r7, #24
 8002cf6:	46bd      	mov	sp, r7
 8002cf8:	bd80      	pop	{r7, pc}

08002cfa <HAL_NVIC_EnableIRQ>:
 8002cfa:	b580      	push	{r7, lr}
 8002cfc:	b082      	sub	sp, #8
 8002cfe:	af00      	add	r7, sp, #0
 8002d00:	4603      	mov	r3, r0
 8002d02:	71fb      	strb	r3, [r7, #7]
 8002d04:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d08:	4618      	mov	r0, r3
 8002d0a:	f7ff ff57 	bl	8002bbc <__NVIC_EnableIRQ>
 8002d0e:	bf00      	nop
 8002d10:	3708      	adds	r7, #8
 8002d12:	46bd      	mov	sp, r7
 8002d14:	bd80      	pop	{r7, pc}
	...

08002d18 <HAL_GPIO_Init>:
 8002d18:	b480      	push	{r7}
 8002d1a:	b08b      	sub	sp, #44	@ 0x2c
 8002d1c:	af00      	add	r7, sp, #0
 8002d1e:	6078      	str	r0, [r7, #4]
 8002d20:	6039      	str	r1, [r7, #0]
 8002d22:	2300      	movs	r3, #0
 8002d24:	627b      	str	r3, [r7, #36]	@ 0x24
 8002d26:	2300      	movs	r3, #0
 8002d28:	623b      	str	r3, [r7, #32]
 8002d2a:	e169      	b.n	8003000 <HAL_GPIO_Init+0x2e8>
 8002d2c:	2201      	movs	r2, #1
 8002d2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002d30:	fa02 f303 	lsl.w	r3, r2, r3
 8002d34:	61fb      	str	r3, [r7, #28]
 8002d36:	683b      	ldr	r3, [r7, #0]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	69fa      	ldr	r2, [r7, #28]
 8002d3c:	4013      	ands	r3, r2
 8002d3e:	61bb      	str	r3, [r7, #24]
 8002d40:	69ba      	ldr	r2, [r7, #24]
 8002d42:	69fb      	ldr	r3, [r7, #28]
 8002d44:	429a      	cmp	r2, r3
 8002d46:	f040 8158 	bne.w	8002ffa <HAL_GPIO_Init+0x2e2>
 8002d4a:	683b      	ldr	r3, [r7, #0]
 8002d4c:	685b      	ldr	r3, [r3, #4]
 8002d4e:	4a9a      	ldr	r2, [pc, #616]	@ (8002fb8 <HAL_GPIO_Init+0x2a0>)
 8002d50:	4293      	cmp	r3, r2
 8002d52:	d05e      	beq.n	8002e12 <HAL_GPIO_Init+0xfa>
 8002d54:	4a98      	ldr	r2, [pc, #608]	@ (8002fb8 <HAL_GPIO_Init+0x2a0>)
 8002d56:	4293      	cmp	r3, r2
 8002d58:	d875      	bhi.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002d5a:	4a98      	ldr	r2, [pc, #608]	@ (8002fbc <HAL_GPIO_Init+0x2a4>)
 8002d5c:	4293      	cmp	r3, r2
 8002d5e:	d058      	beq.n	8002e12 <HAL_GPIO_Init+0xfa>
 8002d60:	4a96      	ldr	r2, [pc, #600]	@ (8002fbc <HAL_GPIO_Init+0x2a4>)
 8002d62:	4293      	cmp	r3, r2
 8002d64:	d86f      	bhi.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002d66:	4a96      	ldr	r2, [pc, #600]	@ (8002fc0 <HAL_GPIO_Init+0x2a8>)
 8002d68:	4293      	cmp	r3, r2
 8002d6a:	d052      	beq.n	8002e12 <HAL_GPIO_Init+0xfa>
 8002d6c:	4a94      	ldr	r2, [pc, #592]	@ (8002fc0 <HAL_GPIO_Init+0x2a8>)
 8002d6e:	4293      	cmp	r3, r2
 8002d70:	d869      	bhi.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002d72:	4a94      	ldr	r2, [pc, #592]	@ (8002fc4 <HAL_GPIO_Init+0x2ac>)
 8002d74:	4293      	cmp	r3, r2
 8002d76:	d04c      	beq.n	8002e12 <HAL_GPIO_Init+0xfa>
 8002d78:	4a92      	ldr	r2, [pc, #584]	@ (8002fc4 <HAL_GPIO_Init+0x2ac>)
 8002d7a:	4293      	cmp	r3, r2
 8002d7c:	d863      	bhi.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002d7e:	4a92      	ldr	r2, [pc, #584]	@ (8002fc8 <HAL_GPIO_Init+0x2b0>)
 8002d80:	4293      	cmp	r3, r2
 8002d82:	d046      	beq.n	8002e12 <HAL_GPIO_Init+0xfa>
 8002d84:	4a90      	ldr	r2, [pc, #576]	@ (8002fc8 <HAL_GPIO_Init+0x2b0>)
 8002d86:	4293      	cmp	r3, r2
 8002d88:	d85d      	bhi.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002d8a:	2b12      	cmp	r3, #18
 8002d8c:	d82a      	bhi.n	8002de4 <HAL_GPIO_Init+0xcc>
 8002d8e:	2b12      	cmp	r3, #18
 8002d90:	d859      	bhi.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002d92:	a201      	add	r2, pc, #4	@ (adr r2, 8002d98 <HAL_GPIO_Init+0x80>)
 8002d94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d98:	08002e13 	.word	0x08002e13
 8002d9c:	08002ded 	.word	0x08002ded
 8002da0:	08002dff 	.word	0x08002dff
 8002da4:	08002e41 	.word	0x08002e41
 8002da8:	08002e47 	.word	0x08002e47
 8002dac:	08002e47 	.word	0x08002e47
 8002db0:	08002e47 	.word	0x08002e47
 8002db4:	08002e47 	.word	0x08002e47
 8002db8:	08002e47 	.word	0x08002e47
 8002dbc:	08002e47 	.word	0x08002e47
 8002dc0:	08002e47 	.word	0x08002e47
 8002dc4:	08002e47 	.word	0x08002e47
 8002dc8:	08002e47 	.word	0x08002e47
 8002dcc:	08002e47 	.word	0x08002e47
 8002dd0:	08002e47 	.word	0x08002e47
 8002dd4:	08002e47 	.word	0x08002e47
 8002dd8:	08002e47 	.word	0x08002e47
 8002ddc:	08002df5 	.word	0x08002df5
 8002de0:	08002e09 	.word	0x08002e09
 8002de4:	4a79      	ldr	r2, [pc, #484]	@ (8002fcc <HAL_GPIO_Init+0x2b4>)
 8002de6:	4293      	cmp	r3, r2
 8002de8:	d013      	beq.n	8002e12 <HAL_GPIO_Init+0xfa>
 8002dea:	e02c      	b.n	8002e46 <HAL_GPIO_Init+0x12e>
 8002dec:	683b      	ldr	r3, [r7, #0]
 8002dee:	68db      	ldr	r3, [r3, #12]
 8002df0:	623b      	str	r3, [r7, #32]
 8002df2:	e029      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002df4:	683b      	ldr	r3, [r7, #0]
 8002df6:	68db      	ldr	r3, [r3, #12]
 8002df8:	3304      	adds	r3, #4
 8002dfa:	623b      	str	r3, [r7, #32]
 8002dfc:	e024      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002dfe:	683b      	ldr	r3, [r7, #0]
 8002e00:	68db      	ldr	r3, [r3, #12]
 8002e02:	3308      	adds	r3, #8
 8002e04:	623b      	str	r3, [r7, #32]
 8002e06:	e01f      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002e08:	683b      	ldr	r3, [r7, #0]
 8002e0a:	68db      	ldr	r3, [r3, #12]
 8002e0c:	330c      	adds	r3, #12
 8002e0e:	623b      	str	r3, [r7, #32]
 8002e10:	e01a      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002e12:	683b      	ldr	r3, [r7, #0]
 8002e14:	689b      	ldr	r3, [r3, #8]
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d102      	bne.n	8002e20 <HAL_GPIO_Init+0x108>
 8002e1a:	2304      	movs	r3, #4
 8002e1c:	623b      	str	r3, [r7, #32]
 8002e1e:	e013      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002e20:	683b      	ldr	r3, [r7, #0]
 8002e22:	689b      	ldr	r3, [r3, #8]
 8002e24:	2b01      	cmp	r3, #1
 8002e26:	d105      	bne.n	8002e34 <HAL_GPIO_Init+0x11c>
 8002e28:	2308      	movs	r3, #8
 8002e2a:	623b      	str	r3, [r7, #32]
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	69fa      	ldr	r2, [r7, #28]
 8002e30:	611a      	str	r2, [r3, #16]
 8002e32:	e009      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002e34:	2308      	movs	r3, #8
 8002e36:	623b      	str	r3, [r7, #32]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	69fa      	ldr	r2, [r7, #28]
 8002e3c:	615a      	str	r2, [r3, #20]
 8002e3e:	e003      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002e40:	2300      	movs	r3, #0
 8002e42:	623b      	str	r3, [r7, #32]
 8002e44:	e000      	b.n	8002e48 <HAL_GPIO_Init+0x130>
 8002e46:	bf00      	nop
 8002e48:	69bb      	ldr	r3, [r7, #24]
 8002e4a:	2bff      	cmp	r3, #255	@ 0xff
 8002e4c:	d801      	bhi.n	8002e52 <HAL_GPIO_Init+0x13a>
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	e001      	b.n	8002e56 <HAL_GPIO_Init+0x13e>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	3304      	adds	r3, #4
 8002e56:	617b      	str	r3, [r7, #20]
 8002e58:	69bb      	ldr	r3, [r7, #24]
 8002e5a:	2bff      	cmp	r3, #255	@ 0xff
 8002e5c:	d802      	bhi.n	8002e64 <HAL_GPIO_Init+0x14c>
 8002e5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e60:	009b      	lsls	r3, r3, #2
 8002e62:	e002      	b.n	8002e6a <HAL_GPIO_Init+0x152>
 8002e64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e66:	3b08      	subs	r3, #8
 8002e68:	009b      	lsls	r3, r3, #2
 8002e6a:	613b      	str	r3, [r7, #16]
 8002e6c:	697b      	ldr	r3, [r7, #20]
 8002e6e:	681a      	ldr	r2, [r3, #0]
 8002e70:	210f      	movs	r1, #15
 8002e72:	693b      	ldr	r3, [r7, #16]
 8002e74:	fa01 f303 	lsl.w	r3, r1, r3
 8002e78:	43db      	mvns	r3, r3
 8002e7a:	401a      	ands	r2, r3
 8002e7c:	6a39      	ldr	r1, [r7, #32]
 8002e7e:	693b      	ldr	r3, [r7, #16]
 8002e80:	fa01 f303 	lsl.w	r3, r1, r3
 8002e84:	431a      	orrs	r2, r3
 8002e86:	697b      	ldr	r3, [r7, #20]
 8002e88:	601a      	str	r2, [r3, #0]
 8002e8a:	683b      	ldr	r3, [r7, #0]
 8002e8c:	685b      	ldr	r3, [r3, #4]
 8002e8e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	f000 80b1 	beq.w	8002ffa <HAL_GPIO_Init+0x2e2>
 8002e98:	4b4d      	ldr	r3, [pc, #308]	@ (8002fd0 <HAL_GPIO_Init+0x2b8>)
 8002e9a:	699b      	ldr	r3, [r3, #24]
 8002e9c:	4a4c      	ldr	r2, [pc, #304]	@ (8002fd0 <HAL_GPIO_Init+0x2b8>)
 8002e9e:	f043 0301 	orr.w	r3, r3, #1
 8002ea2:	6193      	str	r3, [r2, #24]
 8002ea4:	4b4a      	ldr	r3, [pc, #296]	@ (8002fd0 <HAL_GPIO_Init+0x2b8>)
 8002ea6:	699b      	ldr	r3, [r3, #24]
 8002ea8:	f003 0301 	and.w	r3, r3, #1
 8002eac:	60bb      	str	r3, [r7, #8]
 8002eae:	68bb      	ldr	r3, [r7, #8]
 8002eb0:	4a48      	ldr	r2, [pc, #288]	@ (8002fd4 <HAL_GPIO_Init+0x2bc>)
 8002eb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002eb4:	089b      	lsrs	r3, r3, #2
 8002eb6:	3302      	adds	r3, #2
 8002eb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ebc:	60fb      	str	r3, [r7, #12]
 8002ebe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ec0:	f003 0303 	and.w	r3, r3, #3
 8002ec4:	009b      	lsls	r3, r3, #2
 8002ec6:	220f      	movs	r2, #15
 8002ec8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ecc:	43db      	mvns	r3, r3
 8002ece:	68fa      	ldr	r2, [r7, #12]
 8002ed0:	4013      	ands	r3, r2
 8002ed2:	60fb      	str	r3, [r7, #12]
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	4a40      	ldr	r2, [pc, #256]	@ (8002fd8 <HAL_GPIO_Init+0x2c0>)
 8002ed8:	4293      	cmp	r3, r2
 8002eda:	d013      	beq.n	8002f04 <HAL_GPIO_Init+0x1ec>
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	4a3f      	ldr	r2, [pc, #252]	@ (8002fdc <HAL_GPIO_Init+0x2c4>)
 8002ee0:	4293      	cmp	r3, r2
 8002ee2:	d00d      	beq.n	8002f00 <HAL_GPIO_Init+0x1e8>
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	4a3e      	ldr	r2, [pc, #248]	@ (8002fe0 <HAL_GPIO_Init+0x2c8>)
 8002ee8:	4293      	cmp	r3, r2
 8002eea:	d007      	beq.n	8002efc <HAL_GPIO_Init+0x1e4>
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	4a3d      	ldr	r2, [pc, #244]	@ (8002fe4 <HAL_GPIO_Init+0x2cc>)
 8002ef0:	4293      	cmp	r3, r2
 8002ef2:	d101      	bne.n	8002ef8 <HAL_GPIO_Init+0x1e0>
 8002ef4:	2303      	movs	r3, #3
 8002ef6:	e006      	b.n	8002f06 <HAL_GPIO_Init+0x1ee>
 8002ef8:	2304      	movs	r3, #4
 8002efa:	e004      	b.n	8002f06 <HAL_GPIO_Init+0x1ee>
 8002efc:	2302      	movs	r3, #2
 8002efe:	e002      	b.n	8002f06 <HAL_GPIO_Init+0x1ee>
 8002f00:	2301      	movs	r3, #1
 8002f02:	e000      	b.n	8002f06 <HAL_GPIO_Init+0x1ee>
 8002f04:	2300      	movs	r3, #0
 8002f06:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002f08:	f002 0203 	and.w	r2, r2, #3
 8002f0c:	0092      	lsls	r2, r2, #2
 8002f0e:	4093      	lsls	r3, r2
 8002f10:	68fa      	ldr	r2, [r7, #12]
 8002f12:	4313      	orrs	r3, r2
 8002f14:	60fb      	str	r3, [r7, #12]
 8002f16:	492f      	ldr	r1, [pc, #188]	@ (8002fd4 <HAL_GPIO_Init+0x2bc>)
 8002f18:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002f1a:	089b      	lsrs	r3, r3, #2
 8002f1c:	3302      	adds	r3, #2
 8002f1e:	68fa      	ldr	r2, [r7, #12]
 8002f20:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002f24:	683b      	ldr	r3, [r7, #0]
 8002f26:	685b      	ldr	r3, [r3, #4]
 8002f28:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d006      	beq.n	8002f3e <HAL_GPIO_Init+0x226>
 8002f30:	4b2d      	ldr	r3, [pc, #180]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f32:	689a      	ldr	r2, [r3, #8]
 8002f34:	492c      	ldr	r1, [pc, #176]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f36:	69bb      	ldr	r3, [r7, #24]
 8002f38:	4313      	orrs	r3, r2
 8002f3a:	608b      	str	r3, [r1, #8]
 8002f3c:	e006      	b.n	8002f4c <HAL_GPIO_Init+0x234>
 8002f3e:	4b2a      	ldr	r3, [pc, #168]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f40:	689a      	ldr	r2, [r3, #8]
 8002f42:	69bb      	ldr	r3, [r7, #24]
 8002f44:	43db      	mvns	r3, r3
 8002f46:	4928      	ldr	r1, [pc, #160]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f48:	4013      	ands	r3, r2
 8002f4a:	608b      	str	r3, [r1, #8]
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	685b      	ldr	r3, [r3, #4]
 8002f50:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d006      	beq.n	8002f66 <HAL_GPIO_Init+0x24e>
 8002f58:	4b23      	ldr	r3, [pc, #140]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f5a:	68da      	ldr	r2, [r3, #12]
 8002f5c:	4922      	ldr	r1, [pc, #136]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f5e:	69bb      	ldr	r3, [r7, #24]
 8002f60:	4313      	orrs	r3, r2
 8002f62:	60cb      	str	r3, [r1, #12]
 8002f64:	e006      	b.n	8002f74 <HAL_GPIO_Init+0x25c>
 8002f66:	4b20      	ldr	r3, [pc, #128]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f68:	68da      	ldr	r2, [r3, #12]
 8002f6a:	69bb      	ldr	r3, [r7, #24]
 8002f6c:	43db      	mvns	r3, r3
 8002f6e:	491e      	ldr	r1, [pc, #120]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f70:	4013      	ands	r3, r2
 8002f72:	60cb      	str	r3, [r1, #12]
 8002f74:	683b      	ldr	r3, [r7, #0]
 8002f76:	685b      	ldr	r3, [r3, #4]
 8002f78:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f7c:	2b00      	cmp	r3, #0
 8002f7e:	d006      	beq.n	8002f8e <HAL_GPIO_Init+0x276>
 8002f80:	4b19      	ldr	r3, [pc, #100]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f82:	685a      	ldr	r2, [r3, #4]
 8002f84:	4918      	ldr	r1, [pc, #96]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f86:	69bb      	ldr	r3, [r7, #24]
 8002f88:	4313      	orrs	r3, r2
 8002f8a:	604b      	str	r3, [r1, #4]
 8002f8c:	e006      	b.n	8002f9c <HAL_GPIO_Init+0x284>
 8002f8e:	4b16      	ldr	r3, [pc, #88]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f90:	685a      	ldr	r2, [r3, #4]
 8002f92:	69bb      	ldr	r3, [r7, #24]
 8002f94:	43db      	mvns	r3, r3
 8002f96:	4914      	ldr	r1, [pc, #80]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002f98:	4013      	ands	r3, r2
 8002f9a:	604b      	str	r3, [r1, #4]
 8002f9c:	683b      	ldr	r3, [r7, #0]
 8002f9e:	685b      	ldr	r3, [r3, #4]
 8002fa0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d021      	beq.n	8002fec <HAL_GPIO_Init+0x2d4>
 8002fa8:	4b0f      	ldr	r3, [pc, #60]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002faa:	681a      	ldr	r2, [r3, #0]
 8002fac:	490e      	ldr	r1, [pc, #56]	@ (8002fe8 <HAL_GPIO_Init+0x2d0>)
 8002fae:	69bb      	ldr	r3, [r7, #24]
 8002fb0:	4313      	orrs	r3, r2
 8002fb2:	600b      	str	r3, [r1, #0]
 8002fb4:	e021      	b.n	8002ffa <HAL_GPIO_Init+0x2e2>
 8002fb6:	bf00      	nop
 8002fb8:	10320000 	.word	0x10320000
 8002fbc:	10310000 	.word	0x10310000
 8002fc0:	10220000 	.word	0x10220000
 8002fc4:	10210000 	.word	0x10210000
 8002fc8:	10120000 	.word	0x10120000
 8002fcc:	10110000 	.word	0x10110000
 8002fd0:	40021000 	.word	0x40021000
 8002fd4:	40010000 	.word	0x40010000
 8002fd8:	40010800 	.word	0x40010800
 8002fdc:	40010c00 	.word	0x40010c00
 8002fe0:	40011000 	.word	0x40011000
 8002fe4:	40011400 	.word	0x40011400
 8002fe8:	40010400 	.word	0x40010400
 8002fec:	4b0b      	ldr	r3, [pc, #44]	@ (800301c <HAL_GPIO_Init+0x304>)
 8002fee:	681a      	ldr	r2, [r3, #0]
 8002ff0:	69bb      	ldr	r3, [r7, #24]
 8002ff2:	43db      	mvns	r3, r3
 8002ff4:	4909      	ldr	r1, [pc, #36]	@ (800301c <HAL_GPIO_Init+0x304>)
 8002ff6:	4013      	ands	r3, r2
 8002ff8:	600b      	str	r3, [r1, #0]
 8002ffa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ffc:	3301      	adds	r3, #1
 8002ffe:	627b      	str	r3, [r7, #36]	@ 0x24
 8003000:	683b      	ldr	r3, [r7, #0]
 8003002:	681a      	ldr	r2, [r3, #0]
 8003004:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003006:	fa22 f303 	lsr.w	r3, r2, r3
 800300a:	2b00      	cmp	r3, #0
 800300c:	f47f ae8e 	bne.w	8002d2c <HAL_GPIO_Init+0x14>
 8003010:	bf00      	nop
 8003012:	bf00      	nop
 8003014:	372c      	adds	r7, #44	@ 0x2c
 8003016:	46bd      	mov	sp, r7
 8003018:	bc80      	pop	{r7}
 800301a:	4770      	bx	lr
 800301c:	40010400 	.word	0x40010400

08003020 <HAL_GPIO_WritePin>:
 8003020:	b480      	push	{r7}
 8003022:	b083      	sub	sp, #12
 8003024:	af00      	add	r7, sp, #0
 8003026:	6078      	str	r0, [r7, #4]
 8003028:	460b      	mov	r3, r1
 800302a:	807b      	strh	r3, [r7, #2]
 800302c:	4613      	mov	r3, r2
 800302e:	707b      	strb	r3, [r7, #1]
 8003030:	787b      	ldrb	r3, [r7, #1]
 8003032:	2b00      	cmp	r3, #0
 8003034:	d003      	beq.n	800303e <HAL_GPIO_WritePin+0x1e>
 8003036:	887a      	ldrh	r2, [r7, #2]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	611a      	str	r2, [r3, #16]
 800303c:	e003      	b.n	8003046 <HAL_GPIO_WritePin+0x26>
 800303e:	887b      	ldrh	r3, [r7, #2]
 8003040:	041a      	lsls	r2, r3, #16
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	611a      	str	r2, [r3, #16]
 8003046:	bf00      	nop
 8003048:	370c      	adds	r7, #12
 800304a:	46bd      	mov	sp, r7
 800304c:	bc80      	pop	{r7}
 800304e:	4770      	bx	lr

08003050 <HAL_RCC_OscConfig>:
 8003050:	b580      	push	{r7, lr}
 8003052:	b086      	sub	sp, #24
 8003054:	af00      	add	r7, sp, #0
 8003056:	6078      	str	r0, [r7, #4]
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	2b00      	cmp	r3, #0
 800305c:	d101      	bne.n	8003062 <HAL_RCC_OscConfig+0x12>
 800305e:	2301      	movs	r3, #1
 8003060:	e272      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	f003 0301 	and.w	r3, r3, #1
 800306a:	2b00      	cmp	r3, #0
 800306c:	f000 8087 	beq.w	800317e <HAL_RCC_OscConfig+0x12e>
 8003070:	4b92      	ldr	r3, [pc, #584]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003072:	685b      	ldr	r3, [r3, #4]
 8003074:	f003 030c 	and.w	r3, r3, #12
 8003078:	2b04      	cmp	r3, #4
 800307a:	d00c      	beq.n	8003096 <HAL_RCC_OscConfig+0x46>
 800307c:	4b8f      	ldr	r3, [pc, #572]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 800307e:	685b      	ldr	r3, [r3, #4]
 8003080:	f003 030c 	and.w	r3, r3, #12
 8003084:	2b08      	cmp	r3, #8
 8003086:	d112      	bne.n	80030ae <HAL_RCC_OscConfig+0x5e>
 8003088:	4b8c      	ldr	r3, [pc, #560]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 800308a:	685b      	ldr	r3, [r3, #4]
 800308c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003090:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003094:	d10b      	bne.n	80030ae <HAL_RCC_OscConfig+0x5e>
 8003096:	4b89      	ldr	r3, [pc, #548]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d06c      	beq.n	800317c <HAL_RCC_OscConfig+0x12c>
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	685b      	ldr	r3, [r3, #4]
 80030a6:	2b00      	cmp	r3, #0
 80030a8:	d168      	bne.n	800317c <HAL_RCC_OscConfig+0x12c>
 80030aa:	2301      	movs	r3, #1
 80030ac:	e24c      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	685b      	ldr	r3, [r3, #4]
 80030b2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80030b6:	d106      	bne.n	80030c6 <HAL_RCC_OscConfig+0x76>
 80030b8:	4b80      	ldr	r3, [pc, #512]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	4a7f      	ldr	r2, [pc, #508]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030be:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80030c2:	6013      	str	r3, [r2, #0]
 80030c4:	e02e      	b.n	8003124 <HAL_RCC_OscConfig+0xd4>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	685b      	ldr	r3, [r3, #4]
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d10c      	bne.n	80030e8 <HAL_RCC_OscConfig+0x98>
 80030ce:	4b7b      	ldr	r3, [pc, #492]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	4a7a      	ldr	r2, [pc, #488]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030d4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80030d8:	6013      	str	r3, [r2, #0]
 80030da:	4b78      	ldr	r3, [pc, #480]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	4a77      	ldr	r2, [pc, #476]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030e0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80030e4:	6013      	str	r3, [r2, #0]
 80030e6:	e01d      	b.n	8003124 <HAL_RCC_OscConfig+0xd4>
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	685b      	ldr	r3, [r3, #4]
 80030ec:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80030f0:	d10c      	bne.n	800310c <HAL_RCC_OscConfig+0xbc>
 80030f2:	4b72      	ldr	r3, [pc, #456]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	4a71      	ldr	r2, [pc, #452]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80030f8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80030fc:	6013      	str	r3, [r2, #0]
 80030fe:	4b6f      	ldr	r3, [pc, #444]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	4a6e      	ldr	r2, [pc, #440]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003104:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003108:	6013      	str	r3, [r2, #0]
 800310a:	e00b      	b.n	8003124 <HAL_RCC_OscConfig+0xd4>
 800310c:	4b6b      	ldr	r3, [pc, #428]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	4a6a      	ldr	r2, [pc, #424]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003112:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003116:	6013      	str	r3, [r2, #0]
 8003118:	4b68      	ldr	r3, [pc, #416]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	4a67      	ldr	r2, [pc, #412]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 800311e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003122:	6013      	str	r3, [r2, #0]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	685b      	ldr	r3, [r3, #4]
 8003128:	2b00      	cmp	r3, #0
 800312a:	d013      	beq.n	8003154 <HAL_RCC_OscConfig+0x104>
 800312c:	f7fe fe82 	bl	8001e34 <HAL_GetTick>
 8003130:	6138      	str	r0, [r7, #16]
 8003132:	e008      	b.n	8003146 <HAL_RCC_OscConfig+0xf6>
 8003134:	f7fe fe7e 	bl	8001e34 <HAL_GetTick>
 8003138:	4602      	mov	r2, r0
 800313a:	693b      	ldr	r3, [r7, #16]
 800313c:	1ad3      	subs	r3, r2, r3
 800313e:	2b64      	cmp	r3, #100	@ 0x64
 8003140:	d901      	bls.n	8003146 <HAL_RCC_OscConfig+0xf6>
 8003142:	2303      	movs	r3, #3
 8003144:	e200      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003146:	4b5d      	ldr	r3, [pc, #372]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800314e:	2b00      	cmp	r3, #0
 8003150:	d0f0      	beq.n	8003134 <HAL_RCC_OscConfig+0xe4>
 8003152:	e014      	b.n	800317e <HAL_RCC_OscConfig+0x12e>
 8003154:	f7fe fe6e 	bl	8001e34 <HAL_GetTick>
 8003158:	6138      	str	r0, [r7, #16]
 800315a:	e008      	b.n	800316e <HAL_RCC_OscConfig+0x11e>
 800315c:	f7fe fe6a 	bl	8001e34 <HAL_GetTick>
 8003160:	4602      	mov	r2, r0
 8003162:	693b      	ldr	r3, [r7, #16]
 8003164:	1ad3      	subs	r3, r2, r3
 8003166:	2b64      	cmp	r3, #100	@ 0x64
 8003168:	d901      	bls.n	800316e <HAL_RCC_OscConfig+0x11e>
 800316a:	2303      	movs	r3, #3
 800316c:	e1ec      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 800316e:	4b53      	ldr	r3, [pc, #332]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003176:	2b00      	cmp	r3, #0
 8003178:	d1f0      	bne.n	800315c <HAL_RCC_OscConfig+0x10c>
 800317a:	e000      	b.n	800317e <HAL_RCC_OscConfig+0x12e>
 800317c:	bf00      	nop
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	f003 0302 	and.w	r3, r3, #2
 8003186:	2b00      	cmp	r3, #0
 8003188:	d063      	beq.n	8003252 <HAL_RCC_OscConfig+0x202>
 800318a:	4b4c      	ldr	r3, [pc, #304]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 800318c:	685b      	ldr	r3, [r3, #4]
 800318e:	f003 030c 	and.w	r3, r3, #12
 8003192:	2b00      	cmp	r3, #0
 8003194:	d00b      	beq.n	80031ae <HAL_RCC_OscConfig+0x15e>
 8003196:	4b49      	ldr	r3, [pc, #292]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003198:	685b      	ldr	r3, [r3, #4]
 800319a:	f003 030c 	and.w	r3, r3, #12
 800319e:	2b08      	cmp	r3, #8
 80031a0:	d11c      	bne.n	80031dc <HAL_RCC_OscConfig+0x18c>
 80031a2:	4b46      	ldr	r3, [pc, #280]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80031a4:	685b      	ldr	r3, [r3, #4]
 80031a6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	d116      	bne.n	80031dc <HAL_RCC_OscConfig+0x18c>
 80031ae:	4b43      	ldr	r3, [pc, #268]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	f003 0302 	and.w	r3, r3, #2
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d005      	beq.n	80031c6 <HAL_RCC_OscConfig+0x176>
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	691b      	ldr	r3, [r3, #16]
 80031be:	2b01      	cmp	r3, #1
 80031c0:	d001      	beq.n	80031c6 <HAL_RCC_OscConfig+0x176>
 80031c2:	2301      	movs	r3, #1
 80031c4:	e1c0      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 80031c6:	4b3d      	ldr	r3, [pc, #244]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	695b      	ldr	r3, [r3, #20]
 80031d2:	00db      	lsls	r3, r3, #3
 80031d4:	4939      	ldr	r1, [pc, #228]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 80031d6:	4313      	orrs	r3, r2
 80031d8:	600b      	str	r3, [r1, #0]
 80031da:	e03a      	b.n	8003252 <HAL_RCC_OscConfig+0x202>
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	691b      	ldr	r3, [r3, #16]
 80031e0:	2b00      	cmp	r3, #0
 80031e2:	d020      	beq.n	8003226 <HAL_RCC_OscConfig+0x1d6>
 80031e4:	4b36      	ldr	r3, [pc, #216]	@ (80032c0 <HAL_RCC_OscConfig+0x270>)
 80031e6:	2201      	movs	r2, #1
 80031e8:	601a      	str	r2, [r3, #0]
 80031ea:	f7fe fe23 	bl	8001e34 <HAL_GetTick>
 80031ee:	6138      	str	r0, [r7, #16]
 80031f0:	e008      	b.n	8003204 <HAL_RCC_OscConfig+0x1b4>
 80031f2:	f7fe fe1f 	bl	8001e34 <HAL_GetTick>
 80031f6:	4602      	mov	r2, r0
 80031f8:	693b      	ldr	r3, [r7, #16]
 80031fa:	1ad3      	subs	r3, r2, r3
 80031fc:	2b02      	cmp	r3, #2
 80031fe:	d901      	bls.n	8003204 <HAL_RCC_OscConfig+0x1b4>
 8003200:	2303      	movs	r3, #3
 8003202:	e1a1      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003204:	4b2d      	ldr	r3, [pc, #180]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	f003 0302 	and.w	r3, r3, #2
 800320c:	2b00      	cmp	r3, #0
 800320e:	d0f0      	beq.n	80031f2 <HAL_RCC_OscConfig+0x1a2>
 8003210:	4b2a      	ldr	r3, [pc, #168]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	695b      	ldr	r3, [r3, #20]
 800321c:	00db      	lsls	r3, r3, #3
 800321e:	4927      	ldr	r1, [pc, #156]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003220:	4313      	orrs	r3, r2
 8003222:	600b      	str	r3, [r1, #0]
 8003224:	e015      	b.n	8003252 <HAL_RCC_OscConfig+0x202>
 8003226:	4b26      	ldr	r3, [pc, #152]	@ (80032c0 <HAL_RCC_OscConfig+0x270>)
 8003228:	2200      	movs	r2, #0
 800322a:	601a      	str	r2, [r3, #0]
 800322c:	f7fe fe02 	bl	8001e34 <HAL_GetTick>
 8003230:	6138      	str	r0, [r7, #16]
 8003232:	e008      	b.n	8003246 <HAL_RCC_OscConfig+0x1f6>
 8003234:	f7fe fdfe 	bl	8001e34 <HAL_GetTick>
 8003238:	4602      	mov	r2, r0
 800323a:	693b      	ldr	r3, [r7, #16]
 800323c:	1ad3      	subs	r3, r2, r3
 800323e:	2b02      	cmp	r3, #2
 8003240:	d901      	bls.n	8003246 <HAL_RCC_OscConfig+0x1f6>
 8003242:	2303      	movs	r3, #3
 8003244:	e180      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003246:	4b1d      	ldr	r3, [pc, #116]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	f003 0302 	and.w	r3, r3, #2
 800324e:	2b00      	cmp	r3, #0
 8003250:	d1f0      	bne.n	8003234 <HAL_RCC_OscConfig+0x1e4>
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	f003 0308 	and.w	r3, r3, #8
 800325a:	2b00      	cmp	r3, #0
 800325c:	d03a      	beq.n	80032d4 <HAL_RCC_OscConfig+0x284>
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	699b      	ldr	r3, [r3, #24]
 8003262:	2b00      	cmp	r3, #0
 8003264:	d019      	beq.n	800329a <HAL_RCC_OscConfig+0x24a>
 8003266:	4b17      	ldr	r3, [pc, #92]	@ (80032c4 <HAL_RCC_OscConfig+0x274>)
 8003268:	2201      	movs	r2, #1
 800326a:	601a      	str	r2, [r3, #0]
 800326c:	f7fe fde2 	bl	8001e34 <HAL_GetTick>
 8003270:	6138      	str	r0, [r7, #16]
 8003272:	e008      	b.n	8003286 <HAL_RCC_OscConfig+0x236>
 8003274:	f7fe fdde 	bl	8001e34 <HAL_GetTick>
 8003278:	4602      	mov	r2, r0
 800327a:	693b      	ldr	r3, [r7, #16]
 800327c:	1ad3      	subs	r3, r2, r3
 800327e:	2b02      	cmp	r3, #2
 8003280:	d901      	bls.n	8003286 <HAL_RCC_OscConfig+0x236>
 8003282:	2303      	movs	r3, #3
 8003284:	e160      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003286:	4b0d      	ldr	r3, [pc, #52]	@ (80032bc <HAL_RCC_OscConfig+0x26c>)
 8003288:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800328a:	f003 0302 	and.w	r3, r3, #2
 800328e:	2b00      	cmp	r3, #0
 8003290:	d0f0      	beq.n	8003274 <HAL_RCC_OscConfig+0x224>
 8003292:	2001      	movs	r0, #1
 8003294:	f000 fafe 	bl	8003894 <RCC_Delay>
 8003298:	e01c      	b.n	80032d4 <HAL_RCC_OscConfig+0x284>
 800329a:	4b0a      	ldr	r3, [pc, #40]	@ (80032c4 <HAL_RCC_OscConfig+0x274>)
 800329c:	2200      	movs	r2, #0
 800329e:	601a      	str	r2, [r3, #0]
 80032a0:	f7fe fdc8 	bl	8001e34 <HAL_GetTick>
 80032a4:	6138      	str	r0, [r7, #16]
 80032a6:	e00f      	b.n	80032c8 <HAL_RCC_OscConfig+0x278>
 80032a8:	f7fe fdc4 	bl	8001e34 <HAL_GetTick>
 80032ac:	4602      	mov	r2, r0
 80032ae:	693b      	ldr	r3, [r7, #16]
 80032b0:	1ad3      	subs	r3, r2, r3
 80032b2:	2b02      	cmp	r3, #2
 80032b4:	d908      	bls.n	80032c8 <HAL_RCC_OscConfig+0x278>
 80032b6:	2303      	movs	r3, #3
 80032b8:	e146      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 80032ba:	bf00      	nop
 80032bc:	40021000 	.word	0x40021000
 80032c0:	42420000 	.word	0x42420000
 80032c4:	42420480 	.word	0x42420480
 80032c8:	4b92      	ldr	r3, [pc, #584]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80032ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032cc:	f003 0302 	and.w	r3, r3, #2
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	d1e9      	bne.n	80032a8 <HAL_RCC_OscConfig+0x258>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	f003 0304 	and.w	r3, r3, #4
 80032dc:	2b00      	cmp	r3, #0
 80032de:	f000 80a6 	beq.w	800342e <HAL_RCC_OscConfig+0x3de>
 80032e2:	2300      	movs	r3, #0
 80032e4:	75fb      	strb	r3, [r7, #23]
 80032e6:	4b8b      	ldr	r3, [pc, #556]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80032e8:	69db      	ldr	r3, [r3, #28]
 80032ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	d10d      	bne.n	800330e <HAL_RCC_OscConfig+0x2be>
 80032f2:	4b88      	ldr	r3, [pc, #544]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80032f4:	69db      	ldr	r3, [r3, #28]
 80032f6:	4a87      	ldr	r2, [pc, #540]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80032f8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80032fc:	61d3      	str	r3, [r2, #28]
 80032fe:	4b85      	ldr	r3, [pc, #532]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003300:	69db      	ldr	r3, [r3, #28]
 8003302:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003306:	60bb      	str	r3, [r7, #8]
 8003308:	68bb      	ldr	r3, [r7, #8]
 800330a:	2301      	movs	r3, #1
 800330c:	75fb      	strb	r3, [r7, #23]
 800330e:	4b82      	ldr	r3, [pc, #520]	@ (8003518 <HAL_RCC_OscConfig+0x4c8>)
 8003310:	681b      	ldr	r3, [r3, #0]
 8003312:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003316:	2b00      	cmp	r3, #0
 8003318:	d118      	bne.n	800334c <HAL_RCC_OscConfig+0x2fc>
 800331a:	4b7f      	ldr	r3, [pc, #508]	@ (8003518 <HAL_RCC_OscConfig+0x4c8>)
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	4a7e      	ldr	r2, [pc, #504]	@ (8003518 <HAL_RCC_OscConfig+0x4c8>)
 8003320:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003324:	6013      	str	r3, [r2, #0]
 8003326:	f7fe fd85 	bl	8001e34 <HAL_GetTick>
 800332a:	6138      	str	r0, [r7, #16]
 800332c:	e008      	b.n	8003340 <HAL_RCC_OscConfig+0x2f0>
 800332e:	f7fe fd81 	bl	8001e34 <HAL_GetTick>
 8003332:	4602      	mov	r2, r0
 8003334:	693b      	ldr	r3, [r7, #16]
 8003336:	1ad3      	subs	r3, r2, r3
 8003338:	2b64      	cmp	r3, #100	@ 0x64
 800333a:	d901      	bls.n	8003340 <HAL_RCC_OscConfig+0x2f0>
 800333c:	2303      	movs	r3, #3
 800333e:	e103      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003340:	4b75      	ldr	r3, [pc, #468]	@ (8003518 <HAL_RCC_OscConfig+0x4c8>)
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003348:	2b00      	cmp	r3, #0
 800334a:	d0f0      	beq.n	800332e <HAL_RCC_OscConfig+0x2de>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	68db      	ldr	r3, [r3, #12]
 8003350:	2b01      	cmp	r3, #1
 8003352:	d106      	bne.n	8003362 <HAL_RCC_OscConfig+0x312>
 8003354:	4b6f      	ldr	r3, [pc, #444]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003356:	6a1b      	ldr	r3, [r3, #32]
 8003358:	4a6e      	ldr	r2, [pc, #440]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800335a:	f043 0301 	orr.w	r3, r3, #1
 800335e:	6213      	str	r3, [r2, #32]
 8003360:	e02d      	b.n	80033be <HAL_RCC_OscConfig+0x36e>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	68db      	ldr	r3, [r3, #12]
 8003366:	2b00      	cmp	r3, #0
 8003368:	d10c      	bne.n	8003384 <HAL_RCC_OscConfig+0x334>
 800336a:	4b6a      	ldr	r3, [pc, #424]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800336c:	6a1b      	ldr	r3, [r3, #32]
 800336e:	4a69      	ldr	r2, [pc, #420]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003370:	f023 0301 	bic.w	r3, r3, #1
 8003374:	6213      	str	r3, [r2, #32]
 8003376:	4b67      	ldr	r3, [pc, #412]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003378:	6a1b      	ldr	r3, [r3, #32]
 800337a:	4a66      	ldr	r2, [pc, #408]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800337c:	f023 0304 	bic.w	r3, r3, #4
 8003380:	6213      	str	r3, [r2, #32]
 8003382:	e01c      	b.n	80033be <HAL_RCC_OscConfig+0x36e>
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	68db      	ldr	r3, [r3, #12]
 8003388:	2b05      	cmp	r3, #5
 800338a:	d10c      	bne.n	80033a6 <HAL_RCC_OscConfig+0x356>
 800338c:	4b61      	ldr	r3, [pc, #388]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800338e:	6a1b      	ldr	r3, [r3, #32]
 8003390:	4a60      	ldr	r2, [pc, #384]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003392:	f043 0304 	orr.w	r3, r3, #4
 8003396:	6213      	str	r3, [r2, #32]
 8003398:	4b5e      	ldr	r3, [pc, #376]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800339a:	6a1b      	ldr	r3, [r3, #32]
 800339c:	4a5d      	ldr	r2, [pc, #372]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800339e:	f043 0301 	orr.w	r3, r3, #1
 80033a2:	6213      	str	r3, [r2, #32]
 80033a4:	e00b      	b.n	80033be <HAL_RCC_OscConfig+0x36e>
 80033a6:	4b5b      	ldr	r3, [pc, #364]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80033a8:	6a1b      	ldr	r3, [r3, #32]
 80033aa:	4a5a      	ldr	r2, [pc, #360]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80033ac:	f023 0301 	bic.w	r3, r3, #1
 80033b0:	6213      	str	r3, [r2, #32]
 80033b2:	4b58      	ldr	r3, [pc, #352]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80033b4:	6a1b      	ldr	r3, [r3, #32]
 80033b6:	4a57      	ldr	r2, [pc, #348]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80033b8:	f023 0304 	bic.w	r3, r3, #4
 80033bc:	6213      	str	r3, [r2, #32]
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	68db      	ldr	r3, [r3, #12]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d015      	beq.n	80033f2 <HAL_RCC_OscConfig+0x3a2>
 80033c6:	f7fe fd35 	bl	8001e34 <HAL_GetTick>
 80033ca:	6138      	str	r0, [r7, #16]
 80033cc:	e00a      	b.n	80033e4 <HAL_RCC_OscConfig+0x394>
 80033ce:	f7fe fd31 	bl	8001e34 <HAL_GetTick>
 80033d2:	4602      	mov	r2, r0
 80033d4:	693b      	ldr	r3, [r7, #16]
 80033d6:	1ad3      	subs	r3, r2, r3
 80033d8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80033dc:	4293      	cmp	r3, r2
 80033de:	d901      	bls.n	80033e4 <HAL_RCC_OscConfig+0x394>
 80033e0:	2303      	movs	r3, #3
 80033e2:	e0b1      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 80033e4:	4b4b      	ldr	r3, [pc, #300]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80033e6:	6a1b      	ldr	r3, [r3, #32]
 80033e8:	f003 0302 	and.w	r3, r3, #2
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d0ee      	beq.n	80033ce <HAL_RCC_OscConfig+0x37e>
 80033f0:	e014      	b.n	800341c <HAL_RCC_OscConfig+0x3cc>
 80033f2:	f7fe fd1f 	bl	8001e34 <HAL_GetTick>
 80033f6:	6138      	str	r0, [r7, #16]
 80033f8:	e00a      	b.n	8003410 <HAL_RCC_OscConfig+0x3c0>
 80033fa:	f7fe fd1b 	bl	8001e34 <HAL_GetTick>
 80033fe:	4602      	mov	r2, r0
 8003400:	693b      	ldr	r3, [r7, #16]
 8003402:	1ad3      	subs	r3, r2, r3
 8003404:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003408:	4293      	cmp	r3, r2
 800340a:	d901      	bls.n	8003410 <HAL_RCC_OscConfig+0x3c0>
 800340c:	2303      	movs	r3, #3
 800340e:	e09b      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003410:	4b40      	ldr	r3, [pc, #256]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003412:	6a1b      	ldr	r3, [r3, #32]
 8003414:	f003 0302 	and.w	r3, r3, #2
 8003418:	2b00      	cmp	r3, #0
 800341a:	d1ee      	bne.n	80033fa <HAL_RCC_OscConfig+0x3aa>
 800341c:	7dfb      	ldrb	r3, [r7, #23]
 800341e:	2b01      	cmp	r3, #1
 8003420:	d105      	bne.n	800342e <HAL_RCC_OscConfig+0x3de>
 8003422:	4b3c      	ldr	r3, [pc, #240]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003424:	69db      	ldr	r3, [r3, #28]
 8003426:	4a3b      	ldr	r2, [pc, #236]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003428:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800342c:	61d3      	str	r3, [r2, #28]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	69db      	ldr	r3, [r3, #28]
 8003432:	2b00      	cmp	r3, #0
 8003434:	f000 8087 	beq.w	8003546 <HAL_RCC_OscConfig+0x4f6>
 8003438:	4b36      	ldr	r3, [pc, #216]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800343a:	685b      	ldr	r3, [r3, #4]
 800343c:	f003 030c 	and.w	r3, r3, #12
 8003440:	2b08      	cmp	r3, #8
 8003442:	d061      	beq.n	8003508 <HAL_RCC_OscConfig+0x4b8>
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	69db      	ldr	r3, [r3, #28]
 8003448:	2b02      	cmp	r3, #2
 800344a:	d146      	bne.n	80034da <HAL_RCC_OscConfig+0x48a>
 800344c:	4b33      	ldr	r3, [pc, #204]	@ (800351c <HAL_RCC_OscConfig+0x4cc>)
 800344e:	2200      	movs	r2, #0
 8003450:	601a      	str	r2, [r3, #0]
 8003452:	f7fe fcef 	bl	8001e34 <HAL_GetTick>
 8003456:	6138      	str	r0, [r7, #16]
 8003458:	e008      	b.n	800346c <HAL_RCC_OscConfig+0x41c>
 800345a:	f7fe fceb 	bl	8001e34 <HAL_GetTick>
 800345e:	4602      	mov	r2, r0
 8003460:	693b      	ldr	r3, [r7, #16]
 8003462:	1ad3      	subs	r3, r2, r3
 8003464:	2b02      	cmp	r3, #2
 8003466:	d901      	bls.n	800346c <HAL_RCC_OscConfig+0x41c>
 8003468:	2303      	movs	r3, #3
 800346a:	e06d      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 800346c:	4b29      	ldr	r3, [pc, #164]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003474:	2b00      	cmp	r3, #0
 8003476:	d1f0      	bne.n	800345a <HAL_RCC_OscConfig+0x40a>
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	6a1b      	ldr	r3, [r3, #32]
 800347c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003480:	d108      	bne.n	8003494 <HAL_RCC_OscConfig+0x444>
 8003482:	4b24      	ldr	r3, [pc, #144]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003484:	685b      	ldr	r3, [r3, #4]
 8003486:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	689b      	ldr	r3, [r3, #8]
 800348e:	4921      	ldr	r1, [pc, #132]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003490:	4313      	orrs	r3, r2
 8003492:	604b      	str	r3, [r1, #4]
 8003494:	4b1f      	ldr	r3, [pc, #124]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 8003496:	685b      	ldr	r3, [r3, #4]
 8003498:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	6a19      	ldr	r1, [r3, #32]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034a4:	430b      	orrs	r3, r1
 80034a6:	491b      	ldr	r1, [pc, #108]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80034a8:	4313      	orrs	r3, r2
 80034aa:	604b      	str	r3, [r1, #4]
 80034ac:	4b1b      	ldr	r3, [pc, #108]	@ (800351c <HAL_RCC_OscConfig+0x4cc>)
 80034ae:	2201      	movs	r2, #1
 80034b0:	601a      	str	r2, [r3, #0]
 80034b2:	f7fe fcbf 	bl	8001e34 <HAL_GetTick>
 80034b6:	6138      	str	r0, [r7, #16]
 80034b8:	e008      	b.n	80034cc <HAL_RCC_OscConfig+0x47c>
 80034ba:	f7fe fcbb 	bl	8001e34 <HAL_GetTick>
 80034be:	4602      	mov	r2, r0
 80034c0:	693b      	ldr	r3, [r7, #16]
 80034c2:	1ad3      	subs	r3, r2, r3
 80034c4:	2b02      	cmp	r3, #2
 80034c6:	d901      	bls.n	80034cc <HAL_RCC_OscConfig+0x47c>
 80034c8:	2303      	movs	r3, #3
 80034ca:	e03d      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 80034cc:	4b11      	ldr	r3, [pc, #68]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	d0f0      	beq.n	80034ba <HAL_RCC_OscConfig+0x46a>
 80034d8:	e035      	b.n	8003546 <HAL_RCC_OscConfig+0x4f6>
 80034da:	4b10      	ldr	r3, [pc, #64]	@ (800351c <HAL_RCC_OscConfig+0x4cc>)
 80034dc:	2200      	movs	r2, #0
 80034de:	601a      	str	r2, [r3, #0]
 80034e0:	f7fe fca8 	bl	8001e34 <HAL_GetTick>
 80034e4:	6138      	str	r0, [r7, #16]
 80034e6:	e008      	b.n	80034fa <HAL_RCC_OscConfig+0x4aa>
 80034e8:	f7fe fca4 	bl	8001e34 <HAL_GetTick>
 80034ec:	4602      	mov	r2, r0
 80034ee:	693b      	ldr	r3, [r7, #16]
 80034f0:	1ad3      	subs	r3, r2, r3
 80034f2:	2b02      	cmp	r3, #2
 80034f4:	d901      	bls.n	80034fa <HAL_RCC_OscConfig+0x4aa>
 80034f6:	2303      	movs	r3, #3
 80034f8:	e026      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 80034fa:	4b06      	ldr	r3, [pc, #24]	@ (8003514 <HAL_RCC_OscConfig+0x4c4>)
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003502:	2b00      	cmp	r3, #0
 8003504:	d1f0      	bne.n	80034e8 <HAL_RCC_OscConfig+0x498>
 8003506:	e01e      	b.n	8003546 <HAL_RCC_OscConfig+0x4f6>
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	69db      	ldr	r3, [r3, #28]
 800350c:	2b01      	cmp	r3, #1
 800350e:	d107      	bne.n	8003520 <HAL_RCC_OscConfig+0x4d0>
 8003510:	2301      	movs	r3, #1
 8003512:	e019      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003514:	40021000 	.word	0x40021000
 8003518:	40007000 	.word	0x40007000
 800351c:	42420060 	.word	0x42420060
 8003520:	4b0b      	ldr	r3, [pc, #44]	@ (8003550 <HAL_RCC_OscConfig+0x500>)
 8003522:	685b      	ldr	r3, [r3, #4]
 8003524:	60fb      	str	r3, [r7, #12]
 8003526:	68fb      	ldr	r3, [r7, #12]
 8003528:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	6a1b      	ldr	r3, [r3, #32]
 8003530:	429a      	cmp	r2, r3
 8003532:	d106      	bne.n	8003542 <HAL_RCC_OscConfig+0x4f2>
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800353e:	429a      	cmp	r2, r3
 8003540:	d001      	beq.n	8003546 <HAL_RCC_OscConfig+0x4f6>
 8003542:	2301      	movs	r3, #1
 8003544:	e000      	b.n	8003548 <HAL_RCC_OscConfig+0x4f8>
 8003546:	2300      	movs	r3, #0
 8003548:	4618      	mov	r0, r3
 800354a:	3718      	adds	r7, #24
 800354c:	46bd      	mov	sp, r7
 800354e:	bd80      	pop	{r7, pc}
 8003550:	40021000 	.word	0x40021000

08003554 <HAL_RCC_ClockConfig>:
 8003554:	b580      	push	{r7, lr}
 8003556:	b084      	sub	sp, #16
 8003558:	af00      	add	r7, sp, #0
 800355a:	6078      	str	r0, [r7, #4]
 800355c:	6039      	str	r1, [r7, #0]
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	2b00      	cmp	r3, #0
 8003562:	d101      	bne.n	8003568 <HAL_RCC_ClockConfig+0x14>
 8003564:	2301      	movs	r3, #1
 8003566:	e0d0      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 8003568:	4b6a      	ldr	r3, [pc, #424]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	f003 0307 	and.w	r3, r3, #7
 8003570:	683a      	ldr	r2, [r7, #0]
 8003572:	429a      	cmp	r2, r3
 8003574:	d910      	bls.n	8003598 <HAL_RCC_ClockConfig+0x44>
 8003576:	4b67      	ldr	r3, [pc, #412]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	f023 0207 	bic.w	r2, r3, #7
 800357e:	4965      	ldr	r1, [pc, #404]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 8003580:	683b      	ldr	r3, [r7, #0]
 8003582:	4313      	orrs	r3, r2
 8003584:	600b      	str	r3, [r1, #0]
 8003586:	4b63      	ldr	r3, [pc, #396]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	f003 0307 	and.w	r3, r3, #7
 800358e:	683a      	ldr	r2, [r7, #0]
 8003590:	429a      	cmp	r2, r3
 8003592:	d001      	beq.n	8003598 <HAL_RCC_ClockConfig+0x44>
 8003594:	2301      	movs	r3, #1
 8003596:	e0b8      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	f003 0302 	and.w	r3, r3, #2
 80035a0:	2b00      	cmp	r3, #0
 80035a2:	d020      	beq.n	80035e6 <HAL_RCC_ClockConfig+0x92>
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	f003 0304 	and.w	r3, r3, #4
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d005      	beq.n	80035bc <HAL_RCC_ClockConfig+0x68>
 80035b0:	4b59      	ldr	r3, [pc, #356]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035b2:	685b      	ldr	r3, [r3, #4]
 80035b4:	4a58      	ldr	r2, [pc, #352]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035b6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80035ba:	6053      	str	r3, [r2, #4]
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	f003 0308 	and.w	r3, r3, #8
 80035c4:	2b00      	cmp	r3, #0
 80035c6:	d005      	beq.n	80035d4 <HAL_RCC_ClockConfig+0x80>
 80035c8:	4b53      	ldr	r3, [pc, #332]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035ca:	685b      	ldr	r3, [r3, #4]
 80035cc:	4a52      	ldr	r2, [pc, #328]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035ce:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80035d2:	6053      	str	r3, [r2, #4]
 80035d4:	4b50      	ldr	r3, [pc, #320]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035d6:	685b      	ldr	r3, [r3, #4]
 80035d8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	689b      	ldr	r3, [r3, #8]
 80035e0:	494d      	ldr	r1, [pc, #308]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035e2:	4313      	orrs	r3, r2
 80035e4:	604b      	str	r3, [r1, #4]
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	f003 0301 	and.w	r3, r3, #1
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d040      	beq.n	8003674 <HAL_RCC_ClockConfig+0x120>
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	685b      	ldr	r3, [r3, #4]
 80035f6:	2b01      	cmp	r3, #1
 80035f8:	d107      	bne.n	800360a <HAL_RCC_ClockConfig+0xb6>
 80035fa:	4b47      	ldr	r3, [pc, #284]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003602:	2b00      	cmp	r3, #0
 8003604:	d115      	bne.n	8003632 <HAL_RCC_ClockConfig+0xde>
 8003606:	2301      	movs	r3, #1
 8003608:	e07f      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	685b      	ldr	r3, [r3, #4]
 800360e:	2b02      	cmp	r3, #2
 8003610:	d107      	bne.n	8003622 <HAL_RCC_ClockConfig+0xce>
 8003612:	4b41      	ldr	r3, [pc, #260]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800361a:	2b00      	cmp	r3, #0
 800361c:	d109      	bne.n	8003632 <HAL_RCC_ClockConfig+0xde>
 800361e:	2301      	movs	r3, #1
 8003620:	e073      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 8003622:	4b3d      	ldr	r3, [pc, #244]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	f003 0302 	and.w	r3, r3, #2
 800362a:	2b00      	cmp	r3, #0
 800362c:	d101      	bne.n	8003632 <HAL_RCC_ClockConfig+0xde>
 800362e:	2301      	movs	r3, #1
 8003630:	e06b      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 8003632:	4b39      	ldr	r3, [pc, #228]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 8003634:	685b      	ldr	r3, [r3, #4]
 8003636:	f023 0203 	bic.w	r2, r3, #3
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	685b      	ldr	r3, [r3, #4]
 800363e:	4936      	ldr	r1, [pc, #216]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 8003640:	4313      	orrs	r3, r2
 8003642:	604b      	str	r3, [r1, #4]
 8003644:	f7fe fbf6 	bl	8001e34 <HAL_GetTick>
 8003648:	60f8      	str	r0, [r7, #12]
 800364a:	e00a      	b.n	8003662 <HAL_RCC_ClockConfig+0x10e>
 800364c:	f7fe fbf2 	bl	8001e34 <HAL_GetTick>
 8003650:	4602      	mov	r2, r0
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	1ad3      	subs	r3, r2, r3
 8003656:	f241 3288 	movw	r2, #5000	@ 0x1388
 800365a:	4293      	cmp	r3, r2
 800365c:	d901      	bls.n	8003662 <HAL_RCC_ClockConfig+0x10e>
 800365e:	2303      	movs	r3, #3
 8003660:	e053      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 8003662:	4b2d      	ldr	r3, [pc, #180]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 8003664:	685b      	ldr	r3, [r3, #4]
 8003666:	f003 020c 	and.w	r2, r3, #12
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	685b      	ldr	r3, [r3, #4]
 800366e:	009b      	lsls	r3, r3, #2
 8003670:	429a      	cmp	r2, r3
 8003672:	d1eb      	bne.n	800364c <HAL_RCC_ClockConfig+0xf8>
 8003674:	4b27      	ldr	r3, [pc, #156]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	f003 0307 	and.w	r3, r3, #7
 800367c:	683a      	ldr	r2, [r7, #0]
 800367e:	429a      	cmp	r2, r3
 8003680:	d210      	bcs.n	80036a4 <HAL_RCC_ClockConfig+0x150>
 8003682:	4b24      	ldr	r3, [pc, #144]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	f023 0207 	bic.w	r2, r3, #7
 800368a:	4922      	ldr	r1, [pc, #136]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 800368c:	683b      	ldr	r3, [r7, #0]
 800368e:	4313      	orrs	r3, r2
 8003690:	600b      	str	r3, [r1, #0]
 8003692:	4b20      	ldr	r3, [pc, #128]	@ (8003714 <HAL_RCC_ClockConfig+0x1c0>)
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	f003 0307 	and.w	r3, r3, #7
 800369a:	683a      	ldr	r2, [r7, #0]
 800369c:	429a      	cmp	r2, r3
 800369e:	d001      	beq.n	80036a4 <HAL_RCC_ClockConfig+0x150>
 80036a0:	2301      	movs	r3, #1
 80036a2:	e032      	b.n	800370a <HAL_RCC_ClockConfig+0x1b6>
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	f003 0304 	and.w	r3, r3, #4
 80036ac:	2b00      	cmp	r3, #0
 80036ae:	d008      	beq.n	80036c2 <HAL_RCC_ClockConfig+0x16e>
 80036b0:	4b19      	ldr	r3, [pc, #100]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80036b2:	685b      	ldr	r3, [r3, #4]
 80036b4:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	68db      	ldr	r3, [r3, #12]
 80036bc:	4916      	ldr	r1, [pc, #88]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80036be:	4313      	orrs	r3, r2
 80036c0:	604b      	str	r3, [r1, #4]
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	f003 0308 	and.w	r3, r3, #8
 80036ca:	2b00      	cmp	r3, #0
 80036cc:	d009      	beq.n	80036e2 <HAL_RCC_ClockConfig+0x18e>
 80036ce:	4b12      	ldr	r3, [pc, #72]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80036d0:	685b      	ldr	r3, [r3, #4]
 80036d2:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	691b      	ldr	r3, [r3, #16]
 80036da:	00db      	lsls	r3, r3, #3
 80036dc:	490e      	ldr	r1, [pc, #56]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80036de:	4313      	orrs	r3, r2
 80036e0:	604b      	str	r3, [r1, #4]
 80036e2:	f000 f821 	bl	8003728 <HAL_RCC_GetSysClockFreq>
 80036e6:	4602      	mov	r2, r0
 80036e8:	4b0b      	ldr	r3, [pc, #44]	@ (8003718 <HAL_RCC_ClockConfig+0x1c4>)
 80036ea:	685b      	ldr	r3, [r3, #4]
 80036ec:	091b      	lsrs	r3, r3, #4
 80036ee:	f003 030f 	and.w	r3, r3, #15
 80036f2:	490a      	ldr	r1, [pc, #40]	@ (800371c <HAL_RCC_ClockConfig+0x1c8>)
 80036f4:	5ccb      	ldrb	r3, [r1, r3]
 80036f6:	fa22 f303 	lsr.w	r3, r2, r3
 80036fa:	4a09      	ldr	r2, [pc, #36]	@ (8003720 <HAL_RCC_ClockConfig+0x1cc>)
 80036fc:	6013      	str	r3, [r2, #0]
 80036fe:	4b09      	ldr	r3, [pc, #36]	@ (8003724 <HAL_RCC_ClockConfig+0x1d0>)
 8003700:	681b      	ldr	r3, [r3, #0]
 8003702:	4618      	mov	r0, r3
 8003704:	f7fe f9fc 	bl	8001b00 <HAL_InitTick>
 8003708:	2300      	movs	r3, #0
 800370a:	4618      	mov	r0, r3
 800370c:	3710      	adds	r7, #16
 800370e:	46bd      	mov	sp, r7
 8003710:	bd80      	pop	{r7, pc}
 8003712:	bf00      	nop
 8003714:	40022000 	.word	0x40022000
 8003718:	40021000 	.word	0x40021000
 800371c:	08007a68 	.word	0x08007a68
 8003720:	20000004 	.word	0x20000004
 8003724:	20000008 	.word	0x20000008

08003728 <HAL_RCC_GetSysClockFreq>:
 8003728:	b480      	push	{r7}
 800372a:	b087      	sub	sp, #28
 800372c:	af00      	add	r7, sp, #0
 800372e:	2300      	movs	r3, #0
 8003730:	60fb      	str	r3, [r7, #12]
 8003732:	2300      	movs	r3, #0
 8003734:	60bb      	str	r3, [r7, #8]
 8003736:	2300      	movs	r3, #0
 8003738:	617b      	str	r3, [r7, #20]
 800373a:	2300      	movs	r3, #0
 800373c:	607b      	str	r3, [r7, #4]
 800373e:	2300      	movs	r3, #0
 8003740:	613b      	str	r3, [r7, #16]
 8003742:	4b1e      	ldr	r3, [pc, #120]	@ (80037bc <HAL_RCC_GetSysClockFreq+0x94>)
 8003744:	685b      	ldr	r3, [r3, #4]
 8003746:	60fb      	str	r3, [r7, #12]
 8003748:	68fb      	ldr	r3, [r7, #12]
 800374a:	f003 030c 	and.w	r3, r3, #12
 800374e:	2b04      	cmp	r3, #4
 8003750:	d002      	beq.n	8003758 <HAL_RCC_GetSysClockFreq+0x30>
 8003752:	2b08      	cmp	r3, #8
 8003754:	d003      	beq.n	800375e <HAL_RCC_GetSysClockFreq+0x36>
 8003756:	e027      	b.n	80037a8 <HAL_RCC_GetSysClockFreq+0x80>
 8003758:	4b19      	ldr	r3, [pc, #100]	@ (80037c0 <HAL_RCC_GetSysClockFreq+0x98>)
 800375a:	613b      	str	r3, [r7, #16]
 800375c:	e027      	b.n	80037ae <HAL_RCC_GetSysClockFreq+0x86>
 800375e:	68fb      	ldr	r3, [r7, #12]
 8003760:	0c9b      	lsrs	r3, r3, #18
 8003762:	f003 030f 	and.w	r3, r3, #15
 8003766:	4a17      	ldr	r2, [pc, #92]	@ (80037c4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003768:	5cd3      	ldrb	r3, [r2, r3]
 800376a:	607b      	str	r3, [r7, #4]
 800376c:	68fb      	ldr	r3, [r7, #12]
 800376e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003772:	2b00      	cmp	r3, #0
 8003774:	d010      	beq.n	8003798 <HAL_RCC_GetSysClockFreq+0x70>
 8003776:	4b11      	ldr	r3, [pc, #68]	@ (80037bc <HAL_RCC_GetSysClockFreq+0x94>)
 8003778:	685b      	ldr	r3, [r3, #4]
 800377a:	0c5b      	lsrs	r3, r3, #17
 800377c:	f003 0301 	and.w	r3, r3, #1
 8003780:	4a11      	ldr	r2, [pc, #68]	@ (80037c8 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003782:	5cd3      	ldrb	r3, [r2, r3]
 8003784:	60bb      	str	r3, [r7, #8]
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	4a0d      	ldr	r2, [pc, #52]	@ (80037c0 <HAL_RCC_GetSysClockFreq+0x98>)
 800378a:	fb03 f202 	mul.w	r2, r3, r2
 800378e:	68bb      	ldr	r3, [r7, #8]
 8003790:	fbb2 f3f3 	udiv	r3, r2, r3
 8003794:	617b      	str	r3, [r7, #20]
 8003796:	e004      	b.n	80037a2 <HAL_RCC_GetSysClockFreq+0x7a>
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	4a0c      	ldr	r2, [pc, #48]	@ (80037cc <HAL_RCC_GetSysClockFreq+0xa4>)
 800379c:	fb02 f303 	mul.w	r3, r2, r3
 80037a0:	617b      	str	r3, [r7, #20]
 80037a2:	697b      	ldr	r3, [r7, #20]
 80037a4:	613b      	str	r3, [r7, #16]
 80037a6:	e002      	b.n	80037ae <HAL_RCC_GetSysClockFreq+0x86>
 80037a8:	4b05      	ldr	r3, [pc, #20]	@ (80037c0 <HAL_RCC_GetSysClockFreq+0x98>)
 80037aa:	613b      	str	r3, [r7, #16]
 80037ac:	bf00      	nop
 80037ae:	693b      	ldr	r3, [r7, #16]
 80037b0:	4618      	mov	r0, r3
 80037b2:	371c      	adds	r7, #28
 80037b4:	46bd      	mov	sp, r7
 80037b6:	bc80      	pop	{r7}
 80037b8:	4770      	bx	lr
 80037ba:	bf00      	nop
 80037bc:	40021000 	.word	0x40021000
 80037c0:	007a1200 	.word	0x007a1200
 80037c4:	08007a80 	.word	0x08007a80
 80037c8:	08007a90 	.word	0x08007a90
 80037cc:	003d0900 	.word	0x003d0900

080037d0 <HAL_RCC_GetHCLKFreq>:
 80037d0:	b480      	push	{r7}
 80037d2:	af00      	add	r7, sp, #0
 80037d4:	4b02      	ldr	r3, [pc, #8]	@ (80037e0 <HAL_RCC_GetHCLKFreq+0x10>)
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	4618      	mov	r0, r3
 80037da:	46bd      	mov	sp, r7
 80037dc:	bc80      	pop	{r7}
 80037de:	4770      	bx	lr
 80037e0:	20000004 	.word	0x20000004

080037e4 <HAL_RCC_GetPCLK1Freq>:
 80037e4:	b580      	push	{r7, lr}
 80037e6:	af00      	add	r7, sp, #0
 80037e8:	f7ff fff2 	bl	80037d0 <HAL_RCC_GetHCLKFreq>
 80037ec:	4602      	mov	r2, r0
 80037ee:	4b05      	ldr	r3, [pc, #20]	@ (8003804 <HAL_RCC_GetPCLK1Freq+0x20>)
 80037f0:	685b      	ldr	r3, [r3, #4]
 80037f2:	0a1b      	lsrs	r3, r3, #8
 80037f4:	f003 0307 	and.w	r3, r3, #7
 80037f8:	4903      	ldr	r1, [pc, #12]	@ (8003808 <HAL_RCC_GetPCLK1Freq+0x24>)
 80037fa:	5ccb      	ldrb	r3, [r1, r3]
 80037fc:	fa22 f303 	lsr.w	r3, r2, r3
 8003800:	4618      	mov	r0, r3
 8003802:	bd80      	pop	{r7, pc}
 8003804:	40021000 	.word	0x40021000
 8003808:	08007a78 	.word	0x08007a78

0800380c <HAL_RCC_GetPCLK2Freq>:
 800380c:	b580      	push	{r7, lr}
 800380e:	af00      	add	r7, sp, #0
 8003810:	f7ff ffde 	bl	80037d0 <HAL_RCC_GetHCLKFreq>
 8003814:	4602      	mov	r2, r0
 8003816:	4b05      	ldr	r3, [pc, #20]	@ (800382c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003818:	685b      	ldr	r3, [r3, #4]
 800381a:	0adb      	lsrs	r3, r3, #11
 800381c:	f003 0307 	and.w	r3, r3, #7
 8003820:	4903      	ldr	r1, [pc, #12]	@ (8003830 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003822:	5ccb      	ldrb	r3, [r1, r3]
 8003824:	fa22 f303 	lsr.w	r3, r2, r3
 8003828:	4618      	mov	r0, r3
 800382a:	bd80      	pop	{r7, pc}
 800382c:	40021000 	.word	0x40021000
 8003830:	08007a78 	.word	0x08007a78

08003834 <HAL_RCC_GetClockConfig>:
 8003834:	b480      	push	{r7}
 8003836:	b083      	sub	sp, #12
 8003838:	af00      	add	r7, sp, #0
 800383a:	6078      	str	r0, [r7, #4]
 800383c:	6039      	str	r1, [r7, #0]
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	220f      	movs	r2, #15
 8003842:	601a      	str	r2, [r3, #0]
 8003844:	4b11      	ldr	r3, [pc, #68]	@ (800388c <HAL_RCC_GetClockConfig+0x58>)
 8003846:	685b      	ldr	r3, [r3, #4]
 8003848:	f003 0203 	and.w	r2, r3, #3
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	605a      	str	r2, [r3, #4]
 8003850:	4b0e      	ldr	r3, [pc, #56]	@ (800388c <HAL_RCC_GetClockConfig+0x58>)
 8003852:	685b      	ldr	r3, [r3, #4]
 8003854:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	609a      	str	r2, [r3, #8]
 800385c:	4b0b      	ldr	r3, [pc, #44]	@ (800388c <HAL_RCC_GetClockConfig+0x58>)
 800385e:	685b      	ldr	r3, [r3, #4]
 8003860:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	60da      	str	r2, [r3, #12]
 8003868:	4b08      	ldr	r3, [pc, #32]	@ (800388c <HAL_RCC_GetClockConfig+0x58>)
 800386a:	685b      	ldr	r3, [r3, #4]
 800386c:	08db      	lsrs	r3, r3, #3
 800386e:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	611a      	str	r2, [r3, #16]
 8003876:	4b06      	ldr	r3, [pc, #24]	@ (8003890 <HAL_RCC_GetClockConfig+0x5c>)
 8003878:	681b      	ldr	r3, [r3, #0]
 800387a:	f003 0207 	and.w	r2, r3, #7
 800387e:	683b      	ldr	r3, [r7, #0]
 8003880:	601a      	str	r2, [r3, #0]
 8003882:	bf00      	nop
 8003884:	370c      	adds	r7, #12
 8003886:	46bd      	mov	sp, r7
 8003888:	bc80      	pop	{r7}
 800388a:	4770      	bx	lr
 800388c:	40021000 	.word	0x40021000
 8003890:	40022000 	.word	0x40022000

08003894 <RCC_Delay>:
 8003894:	b480      	push	{r7}
 8003896:	b085      	sub	sp, #20
 8003898:	af00      	add	r7, sp, #0
 800389a:	6078      	str	r0, [r7, #4]
 800389c:	4b0a      	ldr	r3, [pc, #40]	@ (80038c8 <RCC_Delay+0x34>)
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	4a0a      	ldr	r2, [pc, #40]	@ (80038cc <RCC_Delay+0x38>)
 80038a2:	fba2 2303 	umull	r2, r3, r2, r3
 80038a6:	0a5b      	lsrs	r3, r3, #9
 80038a8:	687a      	ldr	r2, [r7, #4]
 80038aa:	fb02 f303 	mul.w	r3, r2, r3
 80038ae:	60fb      	str	r3, [r7, #12]
 80038b0:	bf00      	nop
 80038b2:	68fb      	ldr	r3, [r7, #12]
 80038b4:	1e5a      	subs	r2, r3, #1
 80038b6:	60fa      	str	r2, [r7, #12]
 80038b8:	2b00      	cmp	r3, #0
 80038ba:	d1f9      	bne.n	80038b0 <RCC_Delay+0x1c>
 80038bc:	bf00      	nop
 80038be:	bf00      	nop
 80038c0:	3714      	adds	r7, #20
 80038c2:	46bd      	mov	sp, r7
 80038c4:	bc80      	pop	{r7}
 80038c6:	4770      	bx	lr
 80038c8:	20000004 	.word	0x20000004
 80038cc:	10624dd3 	.word	0x10624dd3

080038d0 <HAL_RCCEx_PeriphCLKConfig>:
 80038d0:	b580      	push	{r7, lr}
 80038d2:	b086      	sub	sp, #24
 80038d4:	af00      	add	r7, sp, #0
 80038d6:	6078      	str	r0, [r7, #4]
 80038d8:	2300      	movs	r3, #0
 80038da:	613b      	str	r3, [r7, #16]
 80038dc:	2300      	movs	r3, #0
 80038de:	60fb      	str	r3, [r7, #12]
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	f003 0301 	and.w	r3, r3, #1
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d07d      	beq.n	80039e8 <HAL_RCCEx_PeriphCLKConfig+0x118>
 80038ec:	2300      	movs	r3, #0
 80038ee:	75fb      	strb	r3, [r7, #23]
 80038f0:	4b4f      	ldr	r3, [pc, #316]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80038f2:	69db      	ldr	r3, [r3, #28]
 80038f4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d10d      	bne.n	8003918 <HAL_RCCEx_PeriphCLKConfig+0x48>
 80038fc:	4b4c      	ldr	r3, [pc, #304]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80038fe:	69db      	ldr	r3, [r3, #28]
 8003900:	4a4b      	ldr	r2, [pc, #300]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003902:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003906:	61d3      	str	r3, [r2, #28]
 8003908:	4b49      	ldr	r3, [pc, #292]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800390a:	69db      	ldr	r3, [r3, #28]
 800390c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003910:	60bb      	str	r3, [r7, #8]
 8003912:	68bb      	ldr	r3, [r7, #8]
 8003914:	2301      	movs	r3, #1
 8003916:	75fb      	strb	r3, [r7, #23]
 8003918:	4b46      	ldr	r3, [pc, #280]	@ (8003a34 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003920:	2b00      	cmp	r3, #0
 8003922:	d118      	bne.n	8003956 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8003924:	4b43      	ldr	r3, [pc, #268]	@ (8003a34 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	4a42      	ldr	r2, [pc, #264]	@ (8003a34 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 800392a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800392e:	6013      	str	r3, [r2, #0]
 8003930:	f7fe fa80 	bl	8001e34 <HAL_GetTick>
 8003934:	6138      	str	r0, [r7, #16]
 8003936:	e008      	b.n	800394a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003938:	f7fe fa7c 	bl	8001e34 <HAL_GetTick>
 800393c:	4602      	mov	r2, r0
 800393e:	693b      	ldr	r3, [r7, #16]
 8003940:	1ad3      	subs	r3, r2, r3
 8003942:	2b64      	cmp	r3, #100	@ 0x64
 8003944:	d901      	bls.n	800394a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003946:	2303      	movs	r3, #3
 8003948:	e06d      	b.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x156>
 800394a:	4b3a      	ldr	r3, [pc, #232]	@ (8003a34 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003952:	2b00      	cmp	r3, #0
 8003954:	d0f0      	beq.n	8003938 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8003956:	4b36      	ldr	r3, [pc, #216]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003958:	6a1b      	ldr	r3, [r3, #32]
 800395a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800395e:	60fb      	str	r3, [r7, #12]
 8003960:	68fb      	ldr	r3, [r7, #12]
 8003962:	2b00      	cmp	r3, #0
 8003964:	d02e      	beq.n	80039c4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	685b      	ldr	r3, [r3, #4]
 800396a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800396e:	68fa      	ldr	r2, [r7, #12]
 8003970:	429a      	cmp	r2, r3
 8003972:	d027      	beq.n	80039c4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003974:	4b2e      	ldr	r3, [pc, #184]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003976:	6a1b      	ldr	r3, [r3, #32]
 8003978:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800397c:	60fb      	str	r3, [r7, #12]
 800397e:	4b2e      	ldr	r3, [pc, #184]	@ (8003a38 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003980:	2201      	movs	r2, #1
 8003982:	601a      	str	r2, [r3, #0]
 8003984:	4b2c      	ldr	r3, [pc, #176]	@ (8003a38 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003986:	2200      	movs	r2, #0
 8003988:	601a      	str	r2, [r3, #0]
 800398a:	4a29      	ldr	r2, [pc, #164]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	6213      	str	r3, [r2, #32]
 8003990:	68fb      	ldr	r3, [r7, #12]
 8003992:	f003 0301 	and.w	r3, r3, #1
 8003996:	2b00      	cmp	r3, #0
 8003998:	d014      	beq.n	80039c4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800399a:	f7fe fa4b 	bl	8001e34 <HAL_GetTick>
 800399e:	6138      	str	r0, [r7, #16]
 80039a0:	e00a      	b.n	80039b8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80039a2:	f7fe fa47 	bl	8001e34 <HAL_GetTick>
 80039a6:	4602      	mov	r2, r0
 80039a8:	693b      	ldr	r3, [r7, #16]
 80039aa:	1ad3      	subs	r3, r2, r3
 80039ac:	f241 3288 	movw	r2, #5000	@ 0x1388
 80039b0:	4293      	cmp	r3, r2
 80039b2:	d901      	bls.n	80039b8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 80039b4:	2303      	movs	r3, #3
 80039b6:	e036      	b.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x156>
 80039b8:	4b1d      	ldr	r3, [pc, #116]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80039ba:	6a1b      	ldr	r3, [r3, #32]
 80039bc:	f003 0302 	and.w	r3, r3, #2
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	d0ee      	beq.n	80039a2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 80039c4:	4b1a      	ldr	r3, [pc, #104]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80039c6:	6a1b      	ldr	r3, [r3, #32]
 80039c8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	685b      	ldr	r3, [r3, #4]
 80039d0:	4917      	ldr	r1, [pc, #92]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80039d2:	4313      	orrs	r3, r2
 80039d4:	620b      	str	r3, [r1, #32]
 80039d6:	7dfb      	ldrb	r3, [r7, #23]
 80039d8:	2b01      	cmp	r3, #1
 80039da:	d105      	bne.n	80039e8 <HAL_RCCEx_PeriphCLKConfig+0x118>
 80039dc:	4b14      	ldr	r3, [pc, #80]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80039de:	69db      	ldr	r3, [r3, #28]
 80039e0:	4a13      	ldr	r2, [pc, #76]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80039e2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80039e6:	61d3      	str	r3, [r2, #28]
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	f003 0302 	and.w	r3, r3, #2
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	d008      	beq.n	8003a06 <HAL_RCCEx_PeriphCLKConfig+0x136>
 80039f4:	4b0e      	ldr	r3, [pc, #56]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80039f6:	685b      	ldr	r3, [r3, #4]
 80039f8:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	689b      	ldr	r3, [r3, #8]
 8003a00:	490b      	ldr	r1, [pc, #44]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a02:	4313      	orrs	r3, r2
 8003a04:	604b      	str	r3, [r1, #4]
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	f003 0310 	and.w	r3, r3, #16
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d008      	beq.n	8003a24 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8003a12:	4b07      	ldr	r3, [pc, #28]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a14:	685b      	ldr	r3, [r3, #4]
 8003a16:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	68db      	ldr	r3, [r3, #12]
 8003a1e:	4904      	ldr	r1, [pc, #16]	@ (8003a30 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003a20:	4313      	orrs	r3, r2
 8003a22:	604b      	str	r3, [r1, #4]
 8003a24:	2300      	movs	r3, #0
 8003a26:	4618      	mov	r0, r3
 8003a28:	3718      	adds	r7, #24
 8003a2a:	46bd      	mov	sp, r7
 8003a2c:	bd80      	pop	{r7, pc}
 8003a2e:	bf00      	nop
 8003a30:	40021000 	.word	0x40021000
 8003a34:	40007000 	.word	0x40007000
 8003a38:	42420440 	.word	0x42420440

08003a3c <HAL_RCCEx_GetPeriphCLKFreq>:
 8003a3c:	b580      	push	{r7, lr}
 8003a3e:	b088      	sub	sp, #32
 8003a40:	af00      	add	r7, sp, #0
 8003a42:	6078      	str	r0, [r7, #4]
 8003a44:	2300      	movs	r3, #0
 8003a46:	617b      	str	r3, [r7, #20]
 8003a48:	2300      	movs	r3, #0
 8003a4a:	61fb      	str	r3, [r7, #28]
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	613b      	str	r3, [r7, #16]
 8003a50:	2300      	movs	r3, #0
 8003a52:	60fb      	str	r3, [r7, #12]
 8003a54:	2300      	movs	r3, #0
 8003a56:	61bb      	str	r3, [r7, #24]
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	2b10      	cmp	r3, #16
 8003a5c:	d00a      	beq.n	8003a74 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	2b10      	cmp	r3, #16
 8003a62:	f200 808a 	bhi.w	8003b7a <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	2b01      	cmp	r3, #1
 8003a6a:	d045      	beq.n	8003af8 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	2b02      	cmp	r3, #2
 8003a70:	d075      	beq.n	8003b5e <HAL_RCCEx_GetPeriphCLKFreq+0x122>
 8003a72:	e082      	b.n	8003b7a <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8003a74:	4b46      	ldr	r3, [pc, #280]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003a76:	685b      	ldr	r3, [r3, #4]
 8003a78:	60fb      	str	r3, [r7, #12]
 8003a7a:	4b45      	ldr	r3, [pc, #276]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d07b      	beq.n	8003b7e <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	0c9b      	lsrs	r3, r3, #18
 8003a8a:	f003 030f 	and.w	r3, r3, #15
 8003a8e:	4a41      	ldr	r2, [pc, #260]	@ (8003b94 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 8003a90:	5cd3      	ldrb	r3, [r2, r3]
 8003a92:	613b      	str	r3, [r7, #16]
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d015      	beq.n	8003aca <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 8003a9e:	4b3c      	ldr	r3, [pc, #240]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003aa0:	685b      	ldr	r3, [r3, #4]
 8003aa2:	0c5b      	lsrs	r3, r3, #17
 8003aa4:	f003 0301 	and.w	r3, r3, #1
 8003aa8:	4a3b      	ldr	r2, [pc, #236]	@ (8003b98 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8003aaa:	5cd3      	ldrb	r3, [r2, r3]
 8003aac:	617b      	str	r3, [r7, #20]
 8003aae:	68fb      	ldr	r3, [r7, #12]
 8003ab0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d00d      	beq.n	8003ad4 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003ab8:	4a38      	ldr	r2, [pc, #224]	@ (8003b9c <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 8003aba:	697b      	ldr	r3, [r7, #20]
 8003abc:	fbb2 f2f3 	udiv	r2, r2, r3
 8003ac0:	693b      	ldr	r3, [r7, #16]
 8003ac2:	fb02 f303 	mul.w	r3, r2, r3
 8003ac6:	61fb      	str	r3, [r7, #28]
 8003ac8:	e004      	b.n	8003ad4 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003aca:	693b      	ldr	r3, [r7, #16]
 8003acc:	4a34      	ldr	r2, [pc, #208]	@ (8003ba0 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 8003ace:	fb02 f303 	mul.w	r3, r2, r3
 8003ad2:	61fb      	str	r3, [r7, #28]
 8003ad4:	4b2e      	ldr	r3, [pc, #184]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003ad6:	685b      	ldr	r3, [r3, #4]
 8003ad8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003adc:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003ae0:	d102      	bne.n	8003ae8 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 8003ae2:	69fb      	ldr	r3, [r7, #28]
 8003ae4:	61bb      	str	r3, [r7, #24]
 8003ae6:	e04a      	b.n	8003b7e <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003ae8:	69fb      	ldr	r3, [r7, #28]
 8003aea:	005b      	lsls	r3, r3, #1
 8003aec:	4a2d      	ldr	r2, [pc, #180]	@ (8003ba4 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 8003aee:	fba2 2303 	umull	r2, r3, r2, r3
 8003af2:	085b      	lsrs	r3, r3, #1
 8003af4:	61bb      	str	r3, [r7, #24]
 8003af6:	e042      	b.n	8003b7e <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003af8:	4b25      	ldr	r3, [pc, #148]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003afa:	6a1b      	ldr	r3, [r3, #32]
 8003afc:	60fb      	str	r3, [r7, #12]
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003b04:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003b08:	d108      	bne.n	8003b1c <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	f003 0302 	and.w	r3, r3, #2
 8003b10:	2b00      	cmp	r3, #0
 8003b12:	d003      	beq.n	8003b1c <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003b14:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8003b18:	61bb      	str	r3, [r7, #24]
 8003b1a:	e01f      	b.n	8003b5c <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8003b1c:	68fb      	ldr	r3, [r7, #12]
 8003b1e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003b22:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003b26:	d109      	bne.n	8003b3c <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8003b28:	4b19      	ldr	r3, [pc, #100]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003b2a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b2c:	f003 0302 	and.w	r3, r3, #2
 8003b30:	2b00      	cmp	r3, #0
 8003b32:	d003      	beq.n	8003b3c <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8003b34:	f649 4340 	movw	r3, #40000	@ 0x9c40
 8003b38:	61bb      	str	r3, [r7, #24]
 8003b3a:	e00f      	b.n	8003b5c <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003b42:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8003b46:	d11c      	bne.n	8003b82 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003b48:	4b11      	ldr	r3, [pc, #68]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d016      	beq.n	8003b82 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003b54:	f24f 4324 	movw	r3, #62500	@ 0xf424
 8003b58:	61bb      	str	r3, [r7, #24]
 8003b5a:	e012      	b.n	8003b82 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003b5c:	e011      	b.n	8003b82 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003b5e:	f7ff fe55 	bl	800380c <HAL_RCC_GetPCLK2Freq>
 8003b62:	4602      	mov	r2, r0
 8003b64:	4b0a      	ldr	r3, [pc, #40]	@ (8003b90 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003b66:	685b      	ldr	r3, [r3, #4]
 8003b68:	0b9b      	lsrs	r3, r3, #14
 8003b6a:	f003 0303 	and.w	r3, r3, #3
 8003b6e:	3301      	adds	r3, #1
 8003b70:	005b      	lsls	r3, r3, #1
 8003b72:	fbb2 f3f3 	udiv	r3, r2, r3
 8003b76:	61bb      	str	r3, [r7, #24]
 8003b78:	e004      	b.n	8003b84 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8003b7a:	bf00      	nop
 8003b7c:	e002      	b.n	8003b84 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8003b7e:	bf00      	nop
 8003b80:	e000      	b.n	8003b84 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8003b82:	bf00      	nop
 8003b84:	69bb      	ldr	r3, [r7, #24]
 8003b86:	4618      	mov	r0, r3
 8003b88:	3720      	adds	r7, #32
 8003b8a:	46bd      	mov	sp, r7
 8003b8c:	bd80      	pop	{r7, pc}
 8003b8e:	bf00      	nop
 8003b90:	40021000 	.word	0x40021000
 8003b94:	08007a94 	.word	0x08007a94
 8003b98:	08007aa4 	.word	0x08007aa4
 8003b9c:	007a1200 	.word	0x007a1200
 8003ba0:	003d0900 	.word	0x003d0900
 8003ba4:	aaaaaaab 	.word	0xaaaaaaab

08003ba8 <HAL_TIM_Base_Init>:
 8003ba8:	b580      	push	{r7, lr}
 8003baa:	b082      	sub	sp, #8
 8003bac:	af00      	add	r7, sp, #0
 8003bae:	6078      	str	r0, [r7, #4]
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d101      	bne.n	8003bba <HAL_TIM_Base_Init+0x12>
 8003bb6:	2301      	movs	r3, #1
 8003bb8:	e041      	b.n	8003c3e <HAL_TIM_Base_Init+0x96>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003bc0:	b2db      	uxtb	r3, r3
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d106      	bne.n	8003bd4 <HAL_TIM_Base_Init+0x2c>
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	2200      	movs	r2, #0
 8003bca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003bce:	6878      	ldr	r0, [r7, #4]
 8003bd0:	f7fe f8c4 	bl	8001d5c <HAL_TIM_Base_MspInit>
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	2202      	movs	r2, #2
 8003bd8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681a      	ldr	r2, [r3, #0]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	3304      	adds	r3, #4
 8003be4:	4619      	mov	r1, r3
 8003be6:	4610      	mov	r0, r2
 8003be8:	f000 facc 	bl	8004184 <TIM_Base_SetConfig>
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	2201      	movs	r2, #1
 8003bf0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	2201      	movs	r2, #1
 8003bf8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	2201      	movs	r2, #1
 8003c00:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	2201      	movs	r2, #1
 8003c08:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	2201      	movs	r2, #1
 8003c10:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	2201      	movs	r2, #1
 8003c18:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	2201      	movs	r2, #1
 8003c20:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	2201      	movs	r2, #1
 8003c28:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	2201      	movs	r2, #1
 8003c30:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	2201      	movs	r2, #1
 8003c38:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c3c:	2300      	movs	r3, #0
 8003c3e:	4618      	mov	r0, r3
 8003c40:	3708      	adds	r7, #8
 8003c42:	46bd      	mov	sp, r7
 8003c44:	bd80      	pop	{r7, pc}
	...

08003c48 <HAL_TIM_Base_Start>:
 8003c48:	b480      	push	{r7}
 8003c4a:	b085      	sub	sp, #20
 8003c4c:	af00      	add	r7, sp, #0
 8003c4e:	6078      	str	r0, [r7, #4]
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003c56:	b2db      	uxtb	r3, r3
 8003c58:	2b01      	cmp	r3, #1
 8003c5a:	d001      	beq.n	8003c60 <HAL_TIM_Base_Start+0x18>
 8003c5c:	2301      	movs	r3, #1
 8003c5e:	e032      	b.n	8003cc6 <HAL_TIM_Base_Start+0x7e>
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	2202      	movs	r2, #2
 8003c64:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	4a18      	ldr	r2, [pc, #96]	@ (8003cd0 <HAL_TIM_Base_Start+0x88>)
 8003c6e:	4293      	cmp	r3, r2
 8003c70:	d00e      	beq.n	8003c90 <HAL_TIM_Base_Start+0x48>
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	681b      	ldr	r3, [r3, #0]
 8003c76:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003c7a:	d009      	beq.n	8003c90 <HAL_TIM_Base_Start+0x48>
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	4a14      	ldr	r2, [pc, #80]	@ (8003cd4 <HAL_TIM_Base_Start+0x8c>)
 8003c82:	4293      	cmp	r3, r2
 8003c84:	d004      	beq.n	8003c90 <HAL_TIM_Base_Start+0x48>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	4a13      	ldr	r2, [pc, #76]	@ (8003cd8 <HAL_TIM_Base_Start+0x90>)
 8003c8c:	4293      	cmp	r3, r2
 8003c8e:	d111      	bne.n	8003cb4 <HAL_TIM_Base_Start+0x6c>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	689b      	ldr	r3, [r3, #8]
 8003c96:	f003 0307 	and.w	r3, r3, #7
 8003c9a:	60fb      	str	r3, [r7, #12]
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	2b06      	cmp	r3, #6
 8003ca0:	d010      	beq.n	8003cc4 <HAL_TIM_Base_Start+0x7c>
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	681a      	ldr	r2, [r3, #0]
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	f042 0201 	orr.w	r2, r2, #1
 8003cb0:	601a      	str	r2, [r3, #0]
 8003cb2:	e007      	b.n	8003cc4 <HAL_TIM_Base_Start+0x7c>
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	681a      	ldr	r2, [r3, #0]
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	f042 0201 	orr.w	r2, r2, #1
 8003cc2:	601a      	str	r2, [r3, #0]
 8003cc4:	2300      	movs	r3, #0
 8003cc6:	4618      	mov	r0, r3
 8003cc8:	3714      	adds	r7, #20
 8003cca:	46bd      	mov	sp, r7
 8003ccc:	bc80      	pop	{r7}
 8003cce:	4770      	bx	lr
 8003cd0:	40012c00 	.word	0x40012c00
 8003cd4:	40000400 	.word	0x40000400
 8003cd8:	40000800 	.word	0x40000800

08003cdc <HAL_TIM_Base_Stop>:
 8003cdc:	b480      	push	{r7}
 8003cde:	b083      	sub	sp, #12
 8003ce0:	af00      	add	r7, sp, #0
 8003ce2:	6078      	str	r0, [r7, #4]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	6a1a      	ldr	r2, [r3, #32]
 8003cea:	f241 1311 	movw	r3, #4369	@ 0x1111
 8003cee:	4013      	ands	r3, r2
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d10f      	bne.n	8003d14 <HAL_TIM_Base_Stop+0x38>
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	6a1a      	ldr	r2, [r3, #32]
 8003cfa:	f240 4344 	movw	r3, #1092	@ 0x444
 8003cfe:	4013      	ands	r3, r2
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d107      	bne.n	8003d14 <HAL_TIM_Base_Stop+0x38>
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	681a      	ldr	r2, [r3, #0]
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	f022 0201 	bic.w	r2, r2, #1
 8003d12:	601a      	str	r2, [r3, #0]
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	2201      	movs	r2, #1
 8003d18:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d1c:	2300      	movs	r3, #0
 8003d1e:	4618      	mov	r0, r3
 8003d20:	370c      	adds	r7, #12
 8003d22:	46bd      	mov	sp, r7
 8003d24:	bc80      	pop	{r7}
 8003d26:	4770      	bx	lr

08003d28 <HAL_TIM_Base_Start_IT>:
 8003d28:	b480      	push	{r7}
 8003d2a:	b085      	sub	sp, #20
 8003d2c:	af00      	add	r7, sp, #0
 8003d2e:	6078      	str	r0, [r7, #4]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003d36:	b2db      	uxtb	r3, r3
 8003d38:	2b01      	cmp	r3, #1
 8003d3a:	d001      	beq.n	8003d40 <HAL_TIM_Base_Start_IT+0x18>
 8003d3c:	2301      	movs	r3, #1
 8003d3e:	e03a      	b.n	8003db6 <HAL_TIM_Base_Start_IT+0x8e>
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	2202      	movs	r2, #2
 8003d44:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	68da      	ldr	r2, [r3, #12]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	f042 0201 	orr.w	r2, r2, #1
 8003d56:	60da      	str	r2, [r3, #12]
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	4a18      	ldr	r2, [pc, #96]	@ (8003dc0 <HAL_TIM_Base_Start_IT+0x98>)
 8003d5e:	4293      	cmp	r3, r2
 8003d60:	d00e      	beq.n	8003d80 <HAL_TIM_Base_Start_IT+0x58>
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003d6a:	d009      	beq.n	8003d80 <HAL_TIM_Base_Start_IT+0x58>
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	4a14      	ldr	r2, [pc, #80]	@ (8003dc4 <HAL_TIM_Base_Start_IT+0x9c>)
 8003d72:	4293      	cmp	r3, r2
 8003d74:	d004      	beq.n	8003d80 <HAL_TIM_Base_Start_IT+0x58>
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	4a13      	ldr	r2, [pc, #76]	@ (8003dc8 <HAL_TIM_Base_Start_IT+0xa0>)
 8003d7c:	4293      	cmp	r3, r2
 8003d7e:	d111      	bne.n	8003da4 <HAL_TIM_Base_Start_IT+0x7c>
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	689b      	ldr	r3, [r3, #8]
 8003d86:	f003 0307 	and.w	r3, r3, #7
 8003d8a:	60fb      	str	r3, [r7, #12]
 8003d8c:	68fb      	ldr	r3, [r7, #12]
 8003d8e:	2b06      	cmp	r3, #6
 8003d90:	d010      	beq.n	8003db4 <HAL_TIM_Base_Start_IT+0x8c>
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	681b      	ldr	r3, [r3, #0]
 8003d96:	681a      	ldr	r2, [r3, #0]
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	f042 0201 	orr.w	r2, r2, #1
 8003da0:	601a      	str	r2, [r3, #0]
 8003da2:	e007      	b.n	8003db4 <HAL_TIM_Base_Start_IT+0x8c>
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	681a      	ldr	r2, [r3, #0]
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	f042 0201 	orr.w	r2, r2, #1
 8003db2:	601a      	str	r2, [r3, #0]
 8003db4:	2300      	movs	r3, #0
 8003db6:	4618      	mov	r0, r3
 8003db8:	3714      	adds	r7, #20
 8003dba:	46bd      	mov	sp, r7
 8003dbc:	bc80      	pop	{r7}
 8003dbe:	4770      	bx	lr
 8003dc0:	40012c00 	.word	0x40012c00
 8003dc4:	40000400 	.word	0x40000400
 8003dc8:	40000800 	.word	0x40000800

08003dcc <HAL_TIM_IRQHandler>:
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b084      	sub	sp, #16
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	68db      	ldr	r3, [r3, #12]
 8003dda:	60fb      	str	r3, [r7, #12]
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	691b      	ldr	r3, [r3, #16]
 8003de2:	60bb      	str	r3, [r7, #8]
 8003de4:	68bb      	ldr	r3, [r7, #8]
 8003de6:	f003 0302 	and.w	r3, r3, #2
 8003dea:	2b00      	cmp	r3, #0
 8003dec:	d020      	beq.n	8003e30 <HAL_TIM_IRQHandler+0x64>
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	f003 0302 	and.w	r3, r3, #2
 8003df4:	2b00      	cmp	r3, #0
 8003df6:	d01b      	beq.n	8003e30 <HAL_TIM_IRQHandler+0x64>
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	f06f 0202 	mvn.w	r2, #2
 8003e00:	611a      	str	r2, [r3, #16]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	2201      	movs	r2, #1
 8003e06:	771a      	strb	r2, [r3, #28]
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	699b      	ldr	r3, [r3, #24]
 8003e0e:	f003 0303 	and.w	r3, r3, #3
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d003      	beq.n	8003e1e <HAL_TIM_IRQHandler+0x52>
 8003e16:	6878      	ldr	r0, [r7, #4]
 8003e18:	f000 f998 	bl	800414c <HAL_TIM_IC_CaptureCallback>
 8003e1c:	e005      	b.n	8003e2a <HAL_TIM_IRQHandler+0x5e>
 8003e1e:	6878      	ldr	r0, [r7, #4]
 8003e20:	f000 f98b 	bl	800413a <HAL_TIM_OC_DelayElapsedCallback>
 8003e24:	6878      	ldr	r0, [r7, #4]
 8003e26:	f000 f99a 	bl	800415e <HAL_TIM_PWM_PulseFinishedCallback>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	771a      	strb	r2, [r3, #28]
 8003e30:	68bb      	ldr	r3, [r7, #8]
 8003e32:	f003 0304 	and.w	r3, r3, #4
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	d020      	beq.n	8003e7c <HAL_TIM_IRQHandler+0xb0>
 8003e3a:	68fb      	ldr	r3, [r7, #12]
 8003e3c:	f003 0304 	and.w	r3, r3, #4
 8003e40:	2b00      	cmp	r3, #0
 8003e42:	d01b      	beq.n	8003e7c <HAL_TIM_IRQHandler+0xb0>
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	f06f 0204 	mvn.w	r2, #4
 8003e4c:	611a      	str	r2, [r3, #16]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	2202      	movs	r2, #2
 8003e52:	771a      	strb	r2, [r3, #28]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	699b      	ldr	r3, [r3, #24]
 8003e5a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003e5e:	2b00      	cmp	r3, #0
 8003e60:	d003      	beq.n	8003e6a <HAL_TIM_IRQHandler+0x9e>
 8003e62:	6878      	ldr	r0, [r7, #4]
 8003e64:	f000 f972 	bl	800414c <HAL_TIM_IC_CaptureCallback>
 8003e68:	e005      	b.n	8003e76 <HAL_TIM_IRQHandler+0xaa>
 8003e6a:	6878      	ldr	r0, [r7, #4]
 8003e6c:	f000 f965 	bl	800413a <HAL_TIM_OC_DelayElapsedCallback>
 8003e70:	6878      	ldr	r0, [r7, #4]
 8003e72:	f000 f974 	bl	800415e <HAL_TIM_PWM_PulseFinishedCallback>
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	2200      	movs	r2, #0
 8003e7a:	771a      	strb	r2, [r3, #28]
 8003e7c:	68bb      	ldr	r3, [r7, #8]
 8003e7e:	f003 0308 	and.w	r3, r3, #8
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d020      	beq.n	8003ec8 <HAL_TIM_IRQHandler+0xfc>
 8003e86:	68fb      	ldr	r3, [r7, #12]
 8003e88:	f003 0308 	and.w	r3, r3, #8
 8003e8c:	2b00      	cmp	r3, #0
 8003e8e:	d01b      	beq.n	8003ec8 <HAL_TIM_IRQHandler+0xfc>
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	f06f 0208 	mvn.w	r2, #8
 8003e98:	611a      	str	r2, [r3, #16]
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	2204      	movs	r2, #4
 8003e9e:	771a      	strb	r2, [r3, #28]
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	69db      	ldr	r3, [r3, #28]
 8003ea6:	f003 0303 	and.w	r3, r3, #3
 8003eaa:	2b00      	cmp	r3, #0
 8003eac:	d003      	beq.n	8003eb6 <HAL_TIM_IRQHandler+0xea>
 8003eae:	6878      	ldr	r0, [r7, #4]
 8003eb0:	f000 f94c 	bl	800414c <HAL_TIM_IC_CaptureCallback>
 8003eb4:	e005      	b.n	8003ec2 <HAL_TIM_IRQHandler+0xf6>
 8003eb6:	6878      	ldr	r0, [r7, #4]
 8003eb8:	f000 f93f 	bl	800413a <HAL_TIM_OC_DelayElapsedCallback>
 8003ebc:	6878      	ldr	r0, [r7, #4]
 8003ebe:	f000 f94e 	bl	800415e <HAL_TIM_PWM_PulseFinishedCallback>
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	2200      	movs	r2, #0
 8003ec6:	771a      	strb	r2, [r3, #28]
 8003ec8:	68bb      	ldr	r3, [r7, #8]
 8003eca:	f003 0310 	and.w	r3, r3, #16
 8003ece:	2b00      	cmp	r3, #0
 8003ed0:	d020      	beq.n	8003f14 <HAL_TIM_IRQHandler+0x148>
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	f003 0310 	and.w	r3, r3, #16
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d01b      	beq.n	8003f14 <HAL_TIM_IRQHandler+0x148>
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	f06f 0210 	mvn.w	r2, #16
 8003ee4:	611a      	str	r2, [r3, #16]
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	2208      	movs	r2, #8
 8003eea:	771a      	strb	r2, [r3, #28]
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	69db      	ldr	r3, [r3, #28]
 8003ef2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d003      	beq.n	8003f02 <HAL_TIM_IRQHandler+0x136>
 8003efa:	6878      	ldr	r0, [r7, #4]
 8003efc:	f000 f926 	bl	800414c <HAL_TIM_IC_CaptureCallback>
 8003f00:	e005      	b.n	8003f0e <HAL_TIM_IRQHandler+0x142>
 8003f02:	6878      	ldr	r0, [r7, #4]
 8003f04:	f000 f919 	bl	800413a <HAL_TIM_OC_DelayElapsedCallback>
 8003f08:	6878      	ldr	r0, [r7, #4]
 8003f0a:	f000 f928 	bl	800415e <HAL_TIM_PWM_PulseFinishedCallback>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	2200      	movs	r2, #0
 8003f12:	771a      	strb	r2, [r3, #28]
 8003f14:	68bb      	ldr	r3, [r7, #8]
 8003f16:	f003 0301 	and.w	r3, r3, #1
 8003f1a:	2b00      	cmp	r3, #0
 8003f1c:	d00c      	beq.n	8003f38 <HAL_TIM_IRQHandler+0x16c>
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	f003 0301 	and.w	r3, r3, #1
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d007      	beq.n	8003f38 <HAL_TIM_IRQHandler+0x16c>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	f06f 0201 	mvn.w	r2, #1
 8003f30:	611a      	str	r2, [r3, #16]
 8003f32:	6878      	ldr	r0, [r7, #4]
 8003f34:	f7fd fc32 	bl	800179c <HAL_TIM_PeriodElapsedCallback>
 8003f38:	68bb      	ldr	r3, [r7, #8]
 8003f3a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	d00c      	beq.n	8003f5c <HAL_TIM_IRQHandler+0x190>
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d007      	beq.n	8003f5c <HAL_TIM_IRQHandler+0x190>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003f54:	611a      	str	r2, [r3, #16]
 8003f56:	6878      	ldr	r0, [r7, #4]
 8003f58:	f000 fa7f 	bl	800445a <HAL_TIMEx_BreakCallback>
 8003f5c:	68bb      	ldr	r3, [r7, #8]
 8003f5e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d00c      	beq.n	8003f80 <HAL_TIM_IRQHandler+0x1b4>
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f6c:	2b00      	cmp	r3, #0
 8003f6e:	d007      	beq.n	8003f80 <HAL_TIM_IRQHandler+0x1b4>
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003f78:	611a      	str	r2, [r3, #16]
 8003f7a:	6878      	ldr	r0, [r7, #4]
 8003f7c:	f000 f8f8 	bl	8004170 <HAL_TIM_TriggerCallback>
 8003f80:	68bb      	ldr	r3, [r7, #8]
 8003f82:	f003 0320 	and.w	r3, r3, #32
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d00c      	beq.n	8003fa4 <HAL_TIM_IRQHandler+0x1d8>
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	f003 0320 	and.w	r3, r3, #32
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d007      	beq.n	8003fa4 <HAL_TIM_IRQHandler+0x1d8>
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	f06f 0220 	mvn.w	r2, #32
 8003f9c:	611a      	str	r2, [r3, #16]
 8003f9e:	6878      	ldr	r0, [r7, #4]
 8003fa0:	f000 fa52 	bl	8004448 <HAL_TIMEx_CommutCallback>
 8003fa4:	bf00      	nop
 8003fa6:	3710      	adds	r7, #16
 8003fa8:	46bd      	mov	sp, r7
 8003faa:	bd80      	pop	{r7, pc}

08003fac <HAL_TIM_ConfigClockSource>:
 8003fac:	b580      	push	{r7, lr}
 8003fae:	b084      	sub	sp, #16
 8003fb0:	af00      	add	r7, sp, #0
 8003fb2:	6078      	str	r0, [r7, #4]
 8003fb4:	6039      	str	r1, [r7, #0]
 8003fb6:	2300      	movs	r3, #0
 8003fb8:	73fb      	strb	r3, [r7, #15]
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003fc0:	2b01      	cmp	r3, #1
 8003fc2:	d101      	bne.n	8003fc8 <HAL_TIM_ConfigClockSource+0x1c>
 8003fc4:	2302      	movs	r3, #2
 8003fc6:	e0b4      	b.n	8004132 <HAL_TIM_ConfigClockSource+0x186>
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	2201      	movs	r2, #1
 8003fcc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	2202      	movs	r2, #2
 8003fd4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	689b      	ldr	r3, [r3, #8]
 8003fde:	60bb      	str	r3, [r7, #8]
 8003fe0:	68bb      	ldr	r3, [r7, #8]
 8003fe2:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003fe6:	60bb      	str	r3, [r7, #8]
 8003fe8:	68bb      	ldr	r3, [r7, #8]
 8003fea:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003fee:	60bb      	str	r3, [r7, #8]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	68ba      	ldr	r2, [r7, #8]
 8003ff6:	609a      	str	r2, [r3, #8]
 8003ff8:	683b      	ldr	r3, [r7, #0]
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004000:	d03e      	beq.n	8004080 <HAL_TIM_ConfigClockSource+0xd4>
 8004002:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004006:	f200 8087 	bhi.w	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 800400a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800400e:	f000 8086 	beq.w	800411e <HAL_TIM_ConfigClockSource+0x172>
 8004012:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004016:	d87f      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004018:	2b70      	cmp	r3, #112	@ 0x70
 800401a:	d01a      	beq.n	8004052 <HAL_TIM_ConfigClockSource+0xa6>
 800401c:	2b70      	cmp	r3, #112	@ 0x70
 800401e:	d87b      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004020:	2b60      	cmp	r3, #96	@ 0x60
 8004022:	d050      	beq.n	80040c6 <HAL_TIM_ConfigClockSource+0x11a>
 8004024:	2b60      	cmp	r3, #96	@ 0x60
 8004026:	d877      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004028:	2b50      	cmp	r3, #80	@ 0x50
 800402a:	d03c      	beq.n	80040a6 <HAL_TIM_ConfigClockSource+0xfa>
 800402c:	2b50      	cmp	r3, #80	@ 0x50
 800402e:	d873      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004030:	2b40      	cmp	r3, #64	@ 0x40
 8004032:	d058      	beq.n	80040e6 <HAL_TIM_ConfigClockSource+0x13a>
 8004034:	2b40      	cmp	r3, #64	@ 0x40
 8004036:	d86f      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004038:	2b30      	cmp	r3, #48	@ 0x30
 800403a:	d064      	beq.n	8004106 <HAL_TIM_ConfigClockSource+0x15a>
 800403c:	2b30      	cmp	r3, #48	@ 0x30
 800403e:	d86b      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004040:	2b20      	cmp	r3, #32
 8004042:	d060      	beq.n	8004106 <HAL_TIM_ConfigClockSource+0x15a>
 8004044:	2b20      	cmp	r3, #32
 8004046:	d867      	bhi.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004048:	2b00      	cmp	r3, #0
 800404a:	d05c      	beq.n	8004106 <HAL_TIM_ConfigClockSource+0x15a>
 800404c:	2b10      	cmp	r3, #16
 800404e:	d05a      	beq.n	8004106 <HAL_TIM_ConfigClockSource+0x15a>
 8004050:	e062      	b.n	8004118 <HAL_TIM_ConfigClockSource+0x16c>
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	6818      	ldr	r0, [r3, #0]
 8004056:	683b      	ldr	r3, [r7, #0]
 8004058:	6899      	ldr	r1, [r3, #8]
 800405a:	683b      	ldr	r3, [r7, #0]
 800405c:	685a      	ldr	r2, [r3, #4]
 800405e:	683b      	ldr	r3, [r7, #0]
 8004060:	68db      	ldr	r3, [r3, #12]
 8004062:	f000 f974 	bl	800434e <TIM_ETR_SetConfig>
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	689b      	ldr	r3, [r3, #8]
 800406c:	60bb      	str	r3, [r7, #8]
 800406e:	68bb      	ldr	r3, [r7, #8]
 8004070:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8004074:	60bb      	str	r3, [r7, #8]
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	68ba      	ldr	r2, [r7, #8]
 800407c:	609a      	str	r2, [r3, #8]
 800407e:	e04f      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	6818      	ldr	r0, [r3, #0]
 8004084:	683b      	ldr	r3, [r7, #0]
 8004086:	6899      	ldr	r1, [r3, #8]
 8004088:	683b      	ldr	r3, [r7, #0]
 800408a:	685a      	ldr	r2, [r3, #4]
 800408c:	683b      	ldr	r3, [r7, #0]
 800408e:	68db      	ldr	r3, [r3, #12]
 8004090:	f000 f95d 	bl	800434e <TIM_ETR_SetConfig>
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	689a      	ldr	r2, [r3, #8]
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80040a2:	609a      	str	r2, [r3, #8]
 80040a4:	e03c      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	6818      	ldr	r0, [r3, #0]
 80040aa:	683b      	ldr	r3, [r7, #0]
 80040ac:	6859      	ldr	r1, [r3, #4]
 80040ae:	683b      	ldr	r3, [r7, #0]
 80040b0:	68db      	ldr	r3, [r3, #12]
 80040b2:	461a      	mov	r2, r3
 80040b4:	f000 f8d4 	bl	8004260 <TIM_TI1_ConfigInputStage>
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	2150      	movs	r1, #80	@ 0x50
 80040be:	4618      	mov	r0, r3
 80040c0:	f000 f92b 	bl	800431a <TIM_ITRx_SetConfig>
 80040c4:	e02c      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	6818      	ldr	r0, [r3, #0]
 80040ca:	683b      	ldr	r3, [r7, #0]
 80040cc:	6859      	ldr	r1, [r3, #4]
 80040ce:	683b      	ldr	r3, [r7, #0]
 80040d0:	68db      	ldr	r3, [r3, #12]
 80040d2:	461a      	mov	r2, r3
 80040d4:	f000 f8f2 	bl	80042bc <TIM_TI2_ConfigInputStage>
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	681b      	ldr	r3, [r3, #0]
 80040dc:	2160      	movs	r1, #96	@ 0x60
 80040de:	4618      	mov	r0, r3
 80040e0:	f000 f91b 	bl	800431a <TIM_ITRx_SetConfig>
 80040e4:	e01c      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	6818      	ldr	r0, [r3, #0]
 80040ea:	683b      	ldr	r3, [r7, #0]
 80040ec:	6859      	ldr	r1, [r3, #4]
 80040ee:	683b      	ldr	r3, [r7, #0]
 80040f0:	68db      	ldr	r3, [r3, #12]
 80040f2:	461a      	mov	r2, r3
 80040f4:	f000 f8b4 	bl	8004260 <TIM_TI1_ConfigInputStage>
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	2140      	movs	r1, #64	@ 0x40
 80040fe:	4618      	mov	r0, r3
 8004100:	f000 f90b 	bl	800431a <TIM_ITRx_SetConfig>
 8004104:	e00c      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681a      	ldr	r2, [r3, #0]
 800410a:	683b      	ldr	r3, [r7, #0]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	4619      	mov	r1, r3
 8004110:	4610      	mov	r0, r2
 8004112:	f000 f902 	bl	800431a <TIM_ITRx_SetConfig>
 8004116:	e003      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 8004118:	2301      	movs	r3, #1
 800411a:	73fb      	strb	r3, [r7, #15]
 800411c:	e000      	b.n	8004120 <HAL_TIM_ConfigClockSource+0x174>
 800411e:	bf00      	nop
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	2201      	movs	r2, #1
 8004124:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	2200      	movs	r2, #0
 800412c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004130:	7bfb      	ldrb	r3, [r7, #15]
 8004132:	4618      	mov	r0, r3
 8004134:	3710      	adds	r7, #16
 8004136:	46bd      	mov	sp, r7
 8004138:	bd80      	pop	{r7, pc}

0800413a <HAL_TIM_OC_DelayElapsedCallback>:
 800413a:	b480      	push	{r7}
 800413c:	b083      	sub	sp, #12
 800413e:	af00      	add	r7, sp, #0
 8004140:	6078      	str	r0, [r7, #4]
 8004142:	bf00      	nop
 8004144:	370c      	adds	r7, #12
 8004146:	46bd      	mov	sp, r7
 8004148:	bc80      	pop	{r7}
 800414a:	4770      	bx	lr

0800414c <HAL_TIM_IC_CaptureCallback>:
 800414c:	b480      	push	{r7}
 800414e:	b083      	sub	sp, #12
 8004150:	af00      	add	r7, sp, #0
 8004152:	6078      	str	r0, [r7, #4]
 8004154:	bf00      	nop
 8004156:	370c      	adds	r7, #12
 8004158:	46bd      	mov	sp, r7
 800415a:	bc80      	pop	{r7}
 800415c:	4770      	bx	lr

0800415e <HAL_TIM_PWM_PulseFinishedCallback>:
 800415e:	b480      	push	{r7}
 8004160:	b083      	sub	sp, #12
 8004162:	af00      	add	r7, sp, #0
 8004164:	6078      	str	r0, [r7, #4]
 8004166:	bf00      	nop
 8004168:	370c      	adds	r7, #12
 800416a:	46bd      	mov	sp, r7
 800416c:	bc80      	pop	{r7}
 800416e:	4770      	bx	lr

08004170 <HAL_TIM_TriggerCallback>:
 8004170:	b480      	push	{r7}
 8004172:	b083      	sub	sp, #12
 8004174:	af00      	add	r7, sp, #0
 8004176:	6078      	str	r0, [r7, #4]
 8004178:	bf00      	nop
 800417a:	370c      	adds	r7, #12
 800417c:	46bd      	mov	sp, r7
 800417e:	bc80      	pop	{r7}
 8004180:	4770      	bx	lr
	...

08004184 <TIM_Base_SetConfig>:
 8004184:	b480      	push	{r7}
 8004186:	b085      	sub	sp, #20
 8004188:	af00      	add	r7, sp, #0
 800418a:	6078      	str	r0, [r7, #4]
 800418c:	6039      	str	r1, [r7, #0]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	60fb      	str	r3, [r7, #12]
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	4a2f      	ldr	r2, [pc, #188]	@ (8004254 <TIM_Base_SetConfig+0xd0>)
 8004198:	4293      	cmp	r3, r2
 800419a:	d00b      	beq.n	80041b4 <TIM_Base_SetConfig+0x30>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80041a2:	d007      	beq.n	80041b4 <TIM_Base_SetConfig+0x30>
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	4a2c      	ldr	r2, [pc, #176]	@ (8004258 <TIM_Base_SetConfig+0xd4>)
 80041a8:	4293      	cmp	r3, r2
 80041aa:	d003      	beq.n	80041b4 <TIM_Base_SetConfig+0x30>
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	4a2b      	ldr	r2, [pc, #172]	@ (800425c <TIM_Base_SetConfig+0xd8>)
 80041b0:	4293      	cmp	r3, r2
 80041b2:	d108      	bne.n	80041c6 <TIM_Base_SetConfig+0x42>
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80041ba:	60fb      	str	r3, [r7, #12]
 80041bc:	683b      	ldr	r3, [r7, #0]
 80041be:	685b      	ldr	r3, [r3, #4]
 80041c0:	68fa      	ldr	r2, [r7, #12]
 80041c2:	4313      	orrs	r3, r2
 80041c4:	60fb      	str	r3, [r7, #12]
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	4a22      	ldr	r2, [pc, #136]	@ (8004254 <TIM_Base_SetConfig+0xd0>)
 80041ca:	4293      	cmp	r3, r2
 80041cc:	d00b      	beq.n	80041e6 <TIM_Base_SetConfig+0x62>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80041d4:	d007      	beq.n	80041e6 <TIM_Base_SetConfig+0x62>
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	4a1f      	ldr	r2, [pc, #124]	@ (8004258 <TIM_Base_SetConfig+0xd4>)
 80041da:	4293      	cmp	r3, r2
 80041dc:	d003      	beq.n	80041e6 <TIM_Base_SetConfig+0x62>
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	4a1e      	ldr	r2, [pc, #120]	@ (800425c <TIM_Base_SetConfig+0xd8>)
 80041e2:	4293      	cmp	r3, r2
 80041e4:	d108      	bne.n	80041f8 <TIM_Base_SetConfig+0x74>
 80041e6:	68fb      	ldr	r3, [r7, #12]
 80041e8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80041ec:	60fb      	str	r3, [r7, #12]
 80041ee:	683b      	ldr	r3, [r7, #0]
 80041f0:	68db      	ldr	r3, [r3, #12]
 80041f2:	68fa      	ldr	r2, [r7, #12]
 80041f4:	4313      	orrs	r3, r2
 80041f6:	60fb      	str	r3, [r7, #12]
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80041fe:	683b      	ldr	r3, [r7, #0]
 8004200:	695b      	ldr	r3, [r3, #20]
 8004202:	4313      	orrs	r3, r2
 8004204:	60fb      	str	r3, [r7, #12]
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	68fa      	ldr	r2, [r7, #12]
 800420a:	601a      	str	r2, [r3, #0]
 800420c:	683b      	ldr	r3, [r7, #0]
 800420e:	689a      	ldr	r2, [r3, #8]
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004214:	683b      	ldr	r3, [r7, #0]
 8004216:	681a      	ldr	r2, [r3, #0]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	629a      	str	r2, [r3, #40]	@ 0x28
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	4a0d      	ldr	r2, [pc, #52]	@ (8004254 <TIM_Base_SetConfig+0xd0>)
 8004220:	4293      	cmp	r3, r2
 8004222:	d103      	bne.n	800422c <TIM_Base_SetConfig+0xa8>
 8004224:	683b      	ldr	r3, [r7, #0]
 8004226:	691a      	ldr	r2, [r3, #16]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	631a      	str	r2, [r3, #48]	@ 0x30
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	2201      	movs	r2, #1
 8004230:	615a      	str	r2, [r3, #20]
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	691b      	ldr	r3, [r3, #16]
 8004236:	f003 0301 	and.w	r3, r3, #1
 800423a:	2b00      	cmp	r3, #0
 800423c:	d005      	beq.n	800424a <TIM_Base_SetConfig+0xc6>
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	691b      	ldr	r3, [r3, #16]
 8004242:	f023 0201 	bic.w	r2, r3, #1
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	611a      	str	r2, [r3, #16]
 800424a:	bf00      	nop
 800424c:	3714      	adds	r7, #20
 800424e:	46bd      	mov	sp, r7
 8004250:	bc80      	pop	{r7}
 8004252:	4770      	bx	lr
 8004254:	40012c00 	.word	0x40012c00
 8004258:	40000400 	.word	0x40000400
 800425c:	40000800 	.word	0x40000800

08004260 <TIM_TI1_ConfigInputStage>:
 8004260:	b480      	push	{r7}
 8004262:	b087      	sub	sp, #28
 8004264:	af00      	add	r7, sp, #0
 8004266:	60f8      	str	r0, [r7, #12]
 8004268:	60b9      	str	r1, [r7, #8]
 800426a:	607a      	str	r2, [r7, #4]
 800426c:	68fb      	ldr	r3, [r7, #12]
 800426e:	6a1b      	ldr	r3, [r3, #32]
 8004270:	617b      	str	r3, [r7, #20]
 8004272:	68fb      	ldr	r3, [r7, #12]
 8004274:	6a1b      	ldr	r3, [r3, #32]
 8004276:	f023 0201 	bic.w	r2, r3, #1
 800427a:	68fb      	ldr	r3, [r7, #12]
 800427c:	621a      	str	r2, [r3, #32]
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	699b      	ldr	r3, [r3, #24]
 8004282:	613b      	str	r3, [r7, #16]
 8004284:	693b      	ldr	r3, [r7, #16]
 8004286:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800428a:	613b      	str	r3, [r7, #16]
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	011b      	lsls	r3, r3, #4
 8004290:	693a      	ldr	r2, [r7, #16]
 8004292:	4313      	orrs	r3, r2
 8004294:	613b      	str	r3, [r7, #16]
 8004296:	697b      	ldr	r3, [r7, #20]
 8004298:	f023 030a 	bic.w	r3, r3, #10
 800429c:	617b      	str	r3, [r7, #20]
 800429e:	697a      	ldr	r2, [r7, #20]
 80042a0:	68bb      	ldr	r3, [r7, #8]
 80042a2:	4313      	orrs	r3, r2
 80042a4:	617b      	str	r3, [r7, #20]
 80042a6:	68fb      	ldr	r3, [r7, #12]
 80042a8:	693a      	ldr	r2, [r7, #16]
 80042aa:	619a      	str	r2, [r3, #24]
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	697a      	ldr	r2, [r7, #20]
 80042b0:	621a      	str	r2, [r3, #32]
 80042b2:	bf00      	nop
 80042b4:	371c      	adds	r7, #28
 80042b6:	46bd      	mov	sp, r7
 80042b8:	bc80      	pop	{r7}
 80042ba:	4770      	bx	lr

080042bc <TIM_TI2_ConfigInputStage>:
 80042bc:	b480      	push	{r7}
 80042be:	b087      	sub	sp, #28
 80042c0:	af00      	add	r7, sp, #0
 80042c2:	60f8      	str	r0, [r7, #12]
 80042c4:	60b9      	str	r1, [r7, #8]
 80042c6:	607a      	str	r2, [r7, #4]
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	6a1b      	ldr	r3, [r3, #32]
 80042cc:	617b      	str	r3, [r7, #20]
 80042ce:	68fb      	ldr	r3, [r7, #12]
 80042d0:	6a1b      	ldr	r3, [r3, #32]
 80042d2:	f023 0210 	bic.w	r2, r3, #16
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	621a      	str	r2, [r3, #32]
 80042da:	68fb      	ldr	r3, [r7, #12]
 80042dc:	699b      	ldr	r3, [r3, #24]
 80042de:	613b      	str	r3, [r7, #16]
 80042e0:	693b      	ldr	r3, [r7, #16]
 80042e2:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80042e6:	613b      	str	r3, [r7, #16]
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	031b      	lsls	r3, r3, #12
 80042ec:	693a      	ldr	r2, [r7, #16]
 80042ee:	4313      	orrs	r3, r2
 80042f0:	613b      	str	r3, [r7, #16]
 80042f2:	697b      	ldr	r3, [r7, #20]
 80042f4:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80042f8:	617b      	str	r3, [r7, #20]
 80042fa:	68bb      	ldr	r3, [r7, #8]
 80042fc:	011b      	lsls	r3, r3, #4
 80042fe:	697a      	ldr	r2, [r7, #20]
 8004300:	4313      	orrs	r3, r2
 8004302:	617b      	str	r3, [r7, #20]
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	693a      	ldr	r2, [r7, #16]
 8004308:	619a      	str	r2, [r3, #24]
 800430a:	68fb      	ldr	r3, [r7, #12]
 800430c:	697a      	ldr	r2, [r7, #20]
 800430e:	621a      	str	r2, [r3, #32]
 8004310:	bf00      	nop
 8004312:	371c      	adds	r7, #28
 8004314:	46bd      	mov	sp, r7
 8004316:	bc80      	pop	{r7}
 8004318:	4770      	bx	lr

0800431a <TIM_ITRx_SetConfig>:
 800431a:	b480      	push	{r7}
 800431c:	b085      	sub	sp, #20
 800431e:	af00      	add	r7, sp, #0
 8004320:	6078      	str	r0, [r7, #4]
 8004322:	6039      	str	r1, [r7, #0]
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	689b      	ldr	r3, [r3, #8]
 8004328:	60fb      	str	r3, [r7, #12]
 800432a:	68fb      	ldr	r3, [r7, #12]
 800432c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004330:	60fb      	str	r3, [r7, #12]
 8004332:	683a      	ldr	r2, [r7, #0]
 8004334:	68fb      	ldr	r3, [r7, #12]
 8004336:	4313      	orrs	r3, r2
 8004338:	f043 0307 	orr.w	r3, r3, #7
 800433c:	60fb      	str	r3, [r7, #12]
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	68fa      	ldr	r2, [r7, #12]
 8004342:	609a      	str	r2, [r3, #8]
 8004344:	bf00      	nop
 8004346:	3714      	adds	r7, #20
 8004348:	46bd      	mov	sp, r7
 800434a:	bc80      	pop	{r7}
 800434c:	4770      	bx	lr

0800434e <TIM_ETR_SetConfig>:
 800434e:	b480      	push	{r7}
 8004350:	b087      	sub	sp, #28
 8004352:	af00      	add	r7, sp, #0
 8004354:	60f8      	str	r0, [r7, #12]
 8004356:	60b9      	str	r1, [r7, #8]
 8004358:	607a      	str	r2, [r7, #4]
 800435a:	603b      	str	r3, [r7, #0]
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	689b      	ldr	r3, [r3, #8]
 8004360:	617b      	str	r3, [r7, #20]
 8004362:	697b      	ldr	r3, [r7, #20]
 8004364:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004368:	617b      	str	r3, [r7, #20]
 800436a:	683b      	ldr	r3, [r7, #0]
 800436c:	021a      	lsls	r2, r3, #8
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	431a      	orrs	r2, r3
 8004372:	68bb      	ldr	r3, [r7, #8]
 8004374:	4313      	orrs	r3, r2
 8004376:	697a      	ldr	r2, [r7, #20]
 8004378:	4313      	orrs	r3, r2
 800437a:	617b      	str	r3, [r7, #20]
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	697a      	ldr	r2, [r7, #20]
 8004380:	609a      	str	r2, [r3, #8]
 8004382:	bf00      	nop
 8004384:	371c      	adds	r7, #28
 8004386:	46bd      	mov	sp, r7
 8004388:	bc80      	pop	{r7}
 800438a:	4770      	bx	lr

0800438c <HAL_TIMEx_MasterConfigSynchronization>:
 800438c:	b480      	push	{r7}
 800438e:	b085      	sub	sp, #20
 8004390:	af00      	add	r7, sp, #0
 8004392:	6078      	str	r0, [r7, #4]
 8004394:	6039      	str	r1, [r7, #0]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800439c:	2b01      	cmp	r3, #1
 800439e:	d101      	bne.n	80043a4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80043a0:	2302      	movs	r3, #2
 80043a2:	e046      	b.n	8004432 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	2201      	movs	r2, #1
 80043a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	2202      	movs	r2, #2
 80043b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	685b      	ldr	r3, [r3, #4]
 80043ba:	60fb      	str	r3, [r7, #12]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	689b      	ldr	r3, [r3, #8]
 80043c2:	60bb      	str	r3, [r7, #8]
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80043ca:	60fb      	str	r3, [r7, #12]
 80043cc:	683b      	ldr	r3, [r7, #0]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	68fa      	ldr	r2, [r7, #12]
 80043d2:	4313      	orrs	r3, r2
 80043d4:	60fb      	str	r3, [r7, #12]
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	68fa      	ldr	r2, [r7, #12]
 80043dc:	605a      	str	r2, [r3, #4]
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	4a16      	ldr	r2, [pc, #88]	@ (800443c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80043e4:	4293      	cmp	r3, r2
 80043e6:	d00e      	beq.n	8004406 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80043f0:	d009      	beq.n	8004406 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	4a12      	ldr	r2, [pc, #72]	@ (8004440 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80043f8:	4293      	cmp	r3, r2
 80043fa:	d004      	beq.n	8004406 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	4a10      	ldr	r2, [pc, #64]	@ (8004444 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004402:	4293      	cmp	r3, r2
 8004404:	d10c      	bne.n	8004420 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004406:	68bb      	ldr	r3, [r7, #8]
 8004408:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800440c:	60bb      	str	r3, [r7, #8]
 800440e:	683b      	ldr	r3, [r7, #0]
 8004410:	685b      	ldr	r3, [r3, #4]
 8004412:	68ba      	ldr	r2, [r7, #8]
 8004414:	4313      	orrs	r3, r2
 8004416:	60bb      	str	r3, [r7, #8]
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	68ba      	ldr	r2, [r7, #8]
 800441e:	609a      	str	r2, [r3, #8]
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	2201      	movs	r2, #1
 8004424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	2200      	movs	r2, #0
 800442c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004430:	2300      	movs	r3, #0
 8004432:	4618      	mov	r0, r3
 8004434:	3714      	adds	r7, #20
 8004436:	46bd      	mov	sp, r7
 8004438:	bc80      	pop	{r7}
 800443a:	4770      	bx	lr
 800443c:	40012c00 	.word	0x40012c00
 8004440:	40000400 	.word	0x40000400
 8004444:	40000800 	.word	0x40000800

08004448 <HAL_TIMEx_CommutCallback>:
 8004448:	b480      	push	{r7}
 800444a:	b083      	sub	sp, #12
 800444c:	af00      	add	r7, sp, #0
 800444e:	6078      	str	r0, [r7, #4]
 8004450:	bf00      	nop
 8004452:	370c      	adds	r7, #12
 8004454:	46bd      	mov	sp, r7
 8004456:	bc80      	pop	{r7}
 8004458:	4770      	bx	lr

0800445a <HAL_TIMEx_BreakCallback>:
 800445a:	b480      	push	{r7}
 800445c:	b083      	sub	sp, #12
 800445e:	af00      	add	r7, sp, #0
 8004460:	6078      	str	r0, [r7, #4]
 8004462:	bf00      	nop
 8004464:	370c      	adds	r7, #12
 8004466:	46bd      	mov	sp, r7
 8004468:	bc80      	pop	{r7}
 800446a:	4770      	bx	lr

0800446c <__NVIC_SetPriority>:
 800446c:	b480      	push	{r7}
 800446e:	b083      	sub	sp, #12
 8004470:	af00      	add	r7, sp, #0
 8004472:	4603      	mov	r3, r0
 8004474:	6039      	str	r1, [r7, #0]
 8004476:	71fb      	strb	r3, [r7, #7]
 8004478:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800447c:	2b00      	cmp	r3, #0
 800447e:	db0a      	blt.n	8004496 <__NVIC_SetPriority+0x2a>
 8004480:	683b      	ldr	r3, [r7, #0]
 8004482:	b2da      	uxtb	r2, r3
 8004484:	490c      	ldr	r1, [pc, #48]	@ (80044b8 <__NVIC_SetPriority+0x4c>)
 8004486:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800448a:	0112      	lsls	r2, r2, #4
 800448c:	b2d2      	uxtb	r2, r2
 800448e:	440b      	add	r3, r1
 8004490:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004494:	e00a      	b.n	80044ac <__NVIC_SetPriority+0x40>
 8004496:	683b      	ldr	r3, [r7, #0]
 8004498:	b2da      	uxtb	r2, r3
 800449a:	4908      	ldr	r1, [pc, #32]	@ (80044bc <__NVIC_SetPriority+0x50>)
 800449c:	79fb      	ldrb	r3, [r7, #7]
 800449e:	f003 030f 	and.w	r3, r3, #15
 80044a2:	3b04      	subs	r3, #4
 80044a4:	0112      	lsls	r2, r2, #4
 80044a6:	b2d2      	uxtb	r2, r2
 80044a8:	440b      	add	r3, r1
 80044aa:	761a      	strb	r2, [r3, #24]
 80044ac:	bf00      	nop
 80044ae:	370c      	adds	r7, #12
 80044b0:	46bd      	mov	sp, r7
 80044b2:	bc80      	pop	{r7}
 80044b4:	4770      	bx	lr
 80044b6:	bf00      	nop
 80044b8:	e000e100 	.word	0xe000e100
 80044bc:	e000ed00 	.word	0xe000ed00

080044c0 <SysTick_Handler>:
 80044c0:	b580      	push	{r7, lr}
 80044c2:	af00      	add	r7, sp, #0
 80044c4:	4b05      	ldr	r3, [pc, #20]	@ (80044dc <SysTick_Handler+0x1c>)
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	f001 fd66 	bl	8005f98 <xTaskGetSchedulerState>
 80044cc:	4603      	mov	r3, r0
 80044ce:	2b01      	cmp	r3, #1
 80044d0:	d001      	beq.n	80044d6 <SysTick_Handler+0x16>
 80044d2:	f002 fb09 	bl	8006ae8 <xPortSysTickHandler>
 80044d6:	bf00      	nop
 80044d8:	bd80      	pop	{r7, pc}
 80044da:	bf00      	nop
 80044dc:	e000e010 	.word	0xe000e010

080044e0 <SVC_Setup>:
 80044e0:	b580      	push	{r7, lr}
 80044e2:	af00      	add	r7, sp, #0
 80044e4:	2100      	movs	r1, #0
 80044e6:	f06f 0004 	mvn.w	r0, #4
 80044ea:	f7ff ffbf 	bl	800446c <__NVIC_SetPriority>
 80044ee:	bf00      	nop
 80044f0:	bd80      	pop	{r7, pc}
	...

080044f4 <osKernelInitialize>:
 80044f4:	b480      	push	{r7}
 80044f6:	b083      	sub	sp, #12
 80044f8:	af00      	add	r7, sp, #0
 80044fa:	f3ef 8305 	mrs	r3, IPSR
 80044fe:	603b      	str	r3, [r7, #0]
 8004500:	683b      	ldr	r3, [r7, #0]
 8004502:	2b00      	cmp	r3, #0
 8004504:	d003      	beq.n	800450e <osKernelInitialize+0x1a>
 8004506:	f06f 0305 	mvn.w	r3, #5
 800450a:	607b      	str	r3, [r7, #4]
 800450c:	e00c      	b.n	8004528 <osKernelInitialize+0x34>
 800450e:	4b09      	ldr	r3, [pc, #36]	@ (8004534 <osKernelInitialize+0x40>)
 8004510:	681b      	ldr	r3, [r3, #0]
 8004512:	2b00      	cmp	r3, #0
 8004514:	d105      	bne.n	8004522 <osKernelInitialize+0x2e>
 8004516:	4b07      	ldr	r3, [pc, #28]	@ (8004534 <osKernelInitialize+0x40>)
 8004518:	2201      	movs	r2, #1
 800451a:	601a      	str	r2, [r3, #0]
 800451c:	2300      	movs	r3, #0
 800451e:	607b      	str	r3, [r7, #4]
 8004520:	e002      	b.n	8004528 <osKernelInitialize+0x34>
 8004522:	f04f 33ff 	mov.w	r3, #4294967295
 8004526:	607b      	str	r3, [r7, #4]
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	4618      	mov	r0, r3
 800452c:	370c      	adds	r7, #12
 800452e:	46bd      	mov	sp, r7
 8004530:	bc80      	pop	{r7}
 8004532:	4770      	bx	lr
 8004534:	20000268 	.word	0x20000268

08004538 <osKernelStart>:
 8004538:	b580      	push	{r7, lr}
 800453a:	b082      	sub	sp, #8
 800453c:	af00      	add	r7, sp, #0
 800453e:	f3ef 8305 	mrs	r3, IPSR
 8004542:	603b      	str	r3, [r7, #0]
 8004544:	683b      	ldr	r3, [r7, #0]
 8004546:	2b00      	cmp	r3, #0
 8004548:	d003      	beq.n	8004552 <osKernelStart+0x1a>
 800454a:	f06f 0305 	mvn.w	r3, #5
 800454e:	607b      	str	r3, [r7, #4]
 8004550:	e010      	b.n	8004574 <osKernelStart+0x3c>
 8004552:	4b0b      	ldr	r3, [pc, #44]	@ (8004580 <osKernelStart+0x48>)
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	2b01      	cmp	r3, #1
 8004558:	d109      	bne.n	800456e <osKernelStart+0x36>
 800455a:	f7ff ffc1 	bl	80044e0 <SVC_Setup>
 800455e:	4b08      	ldr	r3, [pc, #32]	@ (8004580 <osKernelStart+0x48>)
 8004560:	2202      	movs	r2, #2
 8004562:	601a      	str	r2, [r3, #0]
 8004564:	f001 f8b8 	bl	80056d8 <vTaskStartScheduler>
 8004568:	2300      	movs	r3, #0
 800456a:	607b      	str	r3, [r7, #4]
 800456c:	e002      	b.n	8004574 <osKernelStart+0x3c>
 800456e:	f04f 33ff 	mov.w	r3, #4294967295
 8004572:	607b      	str	r3, [r7, #4]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	4618      	mov	r0, r3
 8004578:	3708      	adds	r7, #8
 800457a:	46bd      	mov	sp, r7
 800457c:	bd80      	pop	{r7, pc}
 800457e:	bf00      	nop
 8004580:	20000268 	.word	0x20000268

08004584 <osThreadNew>:
 8004584:	b580      	push	{r7, lr}
 8004586:	b08e      	sub	sp, #56	@ 0x38
 8004588:	af04      	add	r7, sp, #16
 800458a:	60f8      	str	r0, [r7, #12]
 800458c:	60b9      	str	r1, [r7, #8]
 800458e:	607a      	str	r2, [r7, #4]
 8004590:	2300      	movs	r3, #0
 8004592:	613b      	str	r3, [r7, #16]
 8004594:	f3ef 8305 	mrs	r3, IPSR
 8004598:	617b      	str	r3, [r7, #20]
 800459a:	697b      	ldr	r3, [r7, #20]
 800459c:	2b00      	cmp	r3, #0
 800459e:	d17e      	bne.n	800469e <osThreadNew+0x11a>
 80045a0:	68fb      	ldr	r3, [r7, #12]
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d07b      	beq.n	800469e <osThreadNew+0x11a>
 80045a6:	2380      	movs	r3, #128	@ 0x80
 80045a8:	623b      	str	r3, [r7, #32]
 80045aa:	2318      	movs	r3, #24
 80045ac:	61fb      	str	r3, [r7, #28]
 80045ae:	2300      	movs	r3, #0
 80045b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80045b2:	f04f 33ff 	mov.w	r3, #4294967295
 80045b6:	61bb      	str	r3, [r7, #24]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d045      	beq.n	800464a <osThreadNew+0xc6>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	2b00      	cmp	r3, #0
 80045c4:	d002      	beq.n	80045cc <osThreadNew+0x48>
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	699b      	ldr	r3, [r3, #24]
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d002      	beq.n	80045da <osThreadNew+0x56>
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	699b      	ldr	r3, [r3, #24]
 80045d8:	61fb      	str	r3, [r7, #28]
 80045da:	69fb      	ldr	r3, [r7, #28]
 80045dc:	2b00      	cmp	r3, #0
 80045de:	d008      	beq.n	80045f2 <osThreadNew+0x6e>
 80045e0:	69fb      	ldr	r3, [r7, #28]
 80045e2:	2b38      	cmp	r3, #56	@ 0x38
 80045e4:	d805      	bhi.n	80045f2 <osThreadNew+0x6e>
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	685b      	ldr	r3, [r3, #4]
 80045ea:	f003 0301 	and.w	r3, r3, #1
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d001      	beq.n	80045f6 <osThreadNew+0x72>
 80045f2:	2300      	movs	r3, #0
 80045f4:	e054      	b.n	80046a0 <osThreadNew+0x11c>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	695b      	ldr	r3, [r3, #20]
 80045fa:	2b00      	cmp	r3, #0
 80045fc:	d003      	beq.n	8004606 <osThreadNew+0x82>
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	695b      	ldr	r3, [r3, #20]
 8004602:	089b      	lsrs	r3, r3, #2
 8004604:	623b      	str	r3, [r7, #32]
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	689b      	ldr	r3, [r3, #8]
 800460a:	2b00      	cmp	r3, #0
 800460c:	d00e      	beq.n	800462c <osThreadNew+0xa8>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	68db      	ldr	r3, [r3, #12]
 8004612:	2ba7      	cmp	r3, #167	@ 0xa7
 8004614:	d90a      	bls.n	800462c <osThreadNew+0xa8>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	691b      	ldr	r3, [r3, #16]
 800461a:	2b00      	cmp	r3, #0
 800461c:	d006      	beq.n	800462c <osThreadNew+0xa8>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	695b      	ldr	r3, [r3, #20]
 8004622:	2b00      	cmp	r3, #0
 8004624:	d002      	beq.n	800462c <osThreadNew+0xa8>
 8004626:	2301      	movs	r3, #1
 8004628:	61bb      	str	r3, [r7, #24]
 800462a:	e010      	b.n	800464e <osThreadNew+0xca>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	689b      	ldr	r3, [r3, #8]
 8004630:	2b00      	cmp	r3, #0
 8004632:	d10c      	bne.n	800464e <osThreadNew+0xca>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	68db      	ldr	r3, [r3, #12]
 8004638:	2b00      	cmp	r3, #0
 800463a:	d108      	bne.n	800464e <osThreadNew+0xca>
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	691b      	ldr	r3, [r3, #16]
 8004640:	2b00      	cmp	r3, #0
 8004642:	d104      	bne.n	800464e <osThreadNew+0xca>
 8004644:	2300      	movs	r3, #0
 8004646:	61bb      	str	r3, [r7, #24]
 8004648:	e001      	b.n	800464e <osThreadNew+0xca>
 800464a:	2300      	movs	r3, #0
 800464c:	61bb      	str	r3, [r7, #24]
 800464e:	69bb      	ldr	r3, [r7, #24]
 8004650:	2b01      	cmp	r3, #1
 8004652:	d110      	bne.n	8004676 <osThreadNew+0xf2>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	691b      	ldr	r3, [r3, #16]
 8004658:	687a      	ldr	r2, [r7, #4]
 800465a:	6892      	ldr	r2, [r2, #8]
 800465c:	9202      	str	r2, [sp, #8]
 800465e:	9301      	str	r3, [sp, #4]
 8004660:	69fb      	ldr	r3, [r7, #28]
 8004662:	9300      	str	r3, [sp, #0]
 8004664:	68bb      	ldr	r3, [r7, #8]
 8004666:	6a3a      	ldr	r2, [r7, #32]
 8004668:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800466a:	68f8      	ldr	r0, [r7, #12]
 800466c:	f000 fdf6 	bl	800525c <xTaskCreateStatic>
 8004670:	4603      	mov	r3, r0
 8004672:	613b      	str	r3, [r7, #16]
 8004674:	e013      	b.n	800469e <osThreadNew+0x11a>
 8004676:	69bb      	ldr	r3, [r7, #24]
 8004678:	2b00      	cmp	r3, #0
 800467a:	d110      	bne.n	800469e <osThreadNew+0x11a>
 800467c:	6a3b      	ldr	r3, [r7, #32]
 800467e:	b29a      	uxth	r2, r3
 8004680:	f107 0310 	add.w	r3, r7, #16
 8004684:	9301      	str	r3, [sp, #4]
 8004686:	69fb      	ldr	r3, [r7, #28]
 8004688:	9300      	str	r3, [sp, #0]
 800468a:	68bb      	ldr	r3, [r7, #8]
 800468c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800468e:	68f8      	ldr	r0, [r7, #12]
 8004690:	f000 fe44 	bl	800531c <xTaskCreate>
 8004694:	4603      	mov	r3, r0
 8004696:	2b01      	cmp	r3, #1
 8004698:	d001      	beq.n	800469e <osThreadNew+0x11a>
 800469a:	2300      	movs	r3, #0
 800469c:	613b      	str	r3, [r7, #16]
 800469e:	693b      	ldr	r3, [r7, #16]
 80046a0:	4618      	mov	r0, r3
 80046a2:	3728      	adds	r7, #40	@ 0x28
 80046a4:	46bd      	mov	sp, r7
 80046a6:	bd80      	pop	{r7, pc}

080046a8 <vApplicationGetIdleTaskMemory>:
 80046a8:	b480      	push	{r7}
 80046aa:	b085      	sub	sp, #20
 80046ac:	af00      	add	r7, sp, #0
 80046ae:	60f8      	str	r0, [r7, #12]
 80046b0:	60b9      	str	r1, [r7, #8]
 80046b2:	607a      	str	r2, [r7, #4]
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	4a06      	ldr	r2, [pc, #24]	@ (80046d0 <vApplicationGetIdleTaskMemory+0x28>)
 80046b8:	601a      	str	r2, [r3, #0]
 80046ba:	68bb      	ldr	r3, [r7, #8]
 80046bc:	4a05      	ldr	r2, [pc, #20]	@ (80046d4 <vApplicationGetIdleTaskMemory+0x2c>)
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	2280      	movs	r2, #128	@ 0x80
 80046c4:	601a      	str	r2, [r3, #0]
 80046c6:	bf00      	nop
 80046c8:	3714      	adds	r7, #20
 80046ca:	46bd      	mov	sp, r7
 80046cc:	bc80      	pop	{r7}
 80046ce:	4770      	bx	lr
 80046d0:	2000026c 	.word	0x2000026c
 80046d4:	20000314 	.word	0x20000314

080046d8 <vApplicationGetTimerTaskMemory>:
 80046d8:	b480      	push	{r7}
 80046da:	b085      	sub	sp, #20
 80046dc:	af00      	add	r7, sp, #0
 80046de:	60f8      	str	r0, [r7, #12]
 80046e0:	60b9      	str	r1, [r7, #8]
 80046e2:	607a      	str	r2, [r7, #4]
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	4a07      	ldr	r2, [pc, #28]	@ (8004704 <vApplicationGetTimerTaskMemory+0x2c>)
 80046e8:	601a      	str	r2, [r3, #0]
 80046ea:	68bb      	ldr	r3, [r7, #8]
 80046ec:	4a06      	ldr	r2, [pc, #24]	@ (8004708 <vApplicationGetTimerTaskMemory+0x30>)
 80046ee:	601a      	str	r2, [r3, #0]
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80046f6:	601a      	str	r2, [r3, #0]
 80046f8:	bf00      	nop
 80046fa:	3714      	adds	r7, #20
 80046fc:	46bd      	mov	sp, r7
 80046fe:	bc80      	pop	{r7}
 8004700:	4770      	bx	lr
 8004702:	bf00      	nop
 8004704:	20000514 	.word	0x20000514
 8004708:	200005bc 	.word	0x200005bc

0800470c <vListInitialise>:
 800470c:	b480      	push	{r7}
 800470e:	b083      	sub	sp, #12
 8004710:	af00      	add	r7, sp, #0
 8004712:	6078      	str	r0, [r7, #4]
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	f103 0208 	add.w	r2, r3, #8
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	605a      	str	r2, [r3, #4]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	f04f 32ff 	mov.w	r2, #4294967295
 8004724:	609a      	str	r2, [r3, #8]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	f103 0208 	add.w	r2, r3, #8
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	60da      	str	r2, [r3, #12]
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	f103 0208 	add.w	r2, r3, #8
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	611a      	str	r2, [r3, #16]
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	2200      	movs	r2, #0
 800473e:	601a      	str	r2, [r3, #0]
 8004740:	bf00      	nop
 8004742:	370c      	adds	r7, #12
 8004744:	46bd      	mov	sp, r7
 8004746:	bc80      	pop	{r7}
 8004748:	4770      	bx	lr

0800474a <vListInitialiseItem>:
 800474a:	b480      	push	{r7}
 800474c:	b083      	sub	sp, #12
 800474e:	af00      	add	r7, sp, #0
 8004750:	6078      	str	r0, [r7, #4]
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	2200      	movs	r2, #0
 8004756:	611a      	str	r2, [r3, #16]
 8004758:	bf00      	nop
 800475a:	370c      	adds	r7, #12
 800475c:	46bd      	mov	sp, r7
 800475e:	bc80      	pop	{r7}
 8004760:	4770      	bx	lr

08004762 <vListInsertEnd>:
 8004762:	b480      	push	{r7}
 8004764:	b085      	sub	sp, #20
 8004766:	af00      	add	r7, sp, #0
 8004768:	6078      	str	r0, [r7, #4]
 800476a:	6039      	str	r1, [r7, #0]
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	685b      	ldr	r3, [r3, #4]
 8004770:	60fb      	str	r3, [r7, #12]
 8004772:	683b      	ldr	r3, [r7, #0]
 8004774:	68fa      	ldr	r2, [r7, #12]
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	689a      	ldr	r2, [r3, #8]
 800477c:	683b      	ldr	r3, [r7, #0]
 800477e:	609a      	str	r2, [r3, #8]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	689b      	ldr	r3, [r3, #8]
 8004784:	683a      	ldr	r2, [r7, #0]
 8004786:	605a      	str	r2, [r3, #4]
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	683a      	ldr	r2, [r7, #0]
 800478c:	609a      	str	r2, [r3, #8]
 800478e:	683b      	ldr	r3, [r7, #0]
 8004790:	687a      	ldr	r2, [r7, #4]
 8004792:	611a      	str	r2, [r3, #16]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	1c5a      	adds	r2, r3, #1
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	601a      	str	r2, [r3, #0]
 800479e:	bf00      	nop
 80047a0:	3714      	adds	r7, #20
 80047a2:	46bd      	mov	sp, r7
 80047a4:	bc80      	pop	{r7}
 80047a6:	4770      	bx	lr

080047a8 <vListInsert>:
 80047a8:	b480      	push	{r7}
 80047aa:	b085      	sub	sp, #20
 80047ac:	af00      	add	r7, sp, #0
 80047ae:	6078      	str	r0, [r7, #4]
 80047b0:	6039      	str	r1, [r7, #0]
 80047b2:	683b      	ldr	r3, [r7, #0]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	60bb      	str	r3, [r7, #8]
 80047b8:	68bb      	ldr	r3, [r7, #8]
 80047ba:	f1b3 3fff 	cmp.w	r3, #4294967295
 80047be:	d103      	bne.n	80047c8 <vListInsert+0x20>
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	691b      	ldr	r3, [r3, #16]
 80047c4:	60fb      	str	r3, [r7, #12]
 80047c6:	e00c      	b.n	80047e2 <vListInsert+0x3a>
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	3308      	adds	r3, #8
 80047cc:	60fb      	str	r3, [r7, #12]
 80047ce:	e002      	b.n	80047d6 <vListInsert+0x2e>
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	685b      	ldr	r3, [r3, #4]
 80047d4:	60fb      	str	r3, [r7, #12]
 80047d6:	68fb      	ldr	r3, [r7, #12]
 80047d8:	685b      	ldr	r3, [r3, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	68ba      	ldr	r2, [r7, #8]
 80047de:	429a      	cmp	r2, r3
 80047e0:	d2f6      	bcs.n	80047d0 <vListInsert+0x28>
 80047e2:	68fb      	ldr	r3, [r7, #12]
 80047e4:	685a      	ldr	r2, [r3, #4]
 80047e6:	683b      	ldr	r3, [r7, #0]
 80047e8:	605a      	str	r2, [r3, #4]
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	685b      	ldr	r3, [r3, #4]
 80047ee:	683a      	ldr	r2, [r7, #0]
 80047f0:	609a      	str	r2, [r3, #8]
 80047f2:	683b      	ldr	r3, [r7, #0]
 80047f4:	68fa      	ldr	r2, [r7, #12]
 80047f6:	609a      	str	r2, [r3, #8]
 80047f8:	68fb      	ldr	r3, [r7, #12]
 80047fa:	683a      	ldr	r2, [r7, #0]
 80047fc:	605a      	str	r2, [r3, #4]
 80047fe:	683b      	ldr	r3, [r7, #0]
 8004800:	687a      	ldr	r2, [r7, #4]
 8004802:	611a      	str	r2, [r3, #16]
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	1c5a      	adds	r2, r3, #1
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	601a      	str	r2, [r3, #0]
 800480e:	bf00      	nop
 8004810:	3714      	adds	r7, #20
 8004812:	46bd      	mov	sp, r7
 8004814:	bc80      	pop	{r7}
 8004816:	4770      	bx	lr

08004818 <uxListRemove>:
 8004818:	b480      	push	{r7}
 800481a:	b085      	sub	sp, #20
 800481c:	af00      	add	r7, sp, #0
 800481e:	6078      	str	r0, [r7, #4]
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	691b      	ldr	r3, [r3, #16]
 8004824:	60fb      	str	r3, [r7, #12]
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	685b      	ldr	r3, [r3, #4]
 800482a:	687a      	ldr	r2, [r7, #4]
 800482c:	6892      	ldr	r2, [r2, #8]
 800482e:	609a      	str	r2, [r3, #8]
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	689b      	ldr	r3, [r3, #8]
 8004834:	687a      	ldr	r2, [r7, #4]
 8004836:	6852      	ldr	r2, [r2, #4]
 8004838:	605a      	str	r2, [r3, #4]
 800483a:	68fb      	ldr	r3, [r7, #12]
 800483c:	685b      	ldr	r3, [r3, #4]
 800483e:	687a      	ldr	r2, [r7, #4]
 8004840:	429a      	cmp	r2, r3
 8004842:	d103      	bne.n	800484c <uxListRemove+0x34>
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	689a      	ldr	r2, [r3, #8]
 8004848:	68fb      	ldr	r3, [r7, #12]
 800484a:	605a      	str	r2, [r3, #4]
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	2200      	movs	r2, #0
 8004850:	611a      	str	r2, [r3, #16]
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	1e5a      	subs	r2, r3, #1
 8004858:	68fb      	ldr	r3, [r7, #12]
 800485a:	601a      	str	r2, [r3, #0]
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	4618      	mov	r0, r3
 8004862:	3714      	adds	r7, #20
 8004864:	46bd      	mov	sp, r7
 8004866:	bc80      	pop	{r7}
 8004868:	4770      	bx	lr
	...

0800486c <xQueueGenericReset>:
 800486c:	b580      	push	{r7, lr}
 800486e:	b084      	sub	sp, #16
 8004870:	af00      	add	r7, sp, #0
 8004872:	6078      	str	r0, [r7, #4]
 8004874:	6039      	str	r1, [r7, #0]
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	60fb      	str	r3, [r7, #12]
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	2b00      	cmp	r3, #0
 800487e:	d10b      	bne.n	8004898 <xQueueGenericReset+0x2c>
 8004880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004884:	f383 8811 	msr	BASEPRI, r3
 8004888:	f3bf 8f6f 	isb	sy
 800488c:	f3bf 8f4f 	dsb	sy
 8004890:	60bb      	str	r3, [r7, #8]
 8004892:	bf00      	nop
 8004894:	bf00      	nop
 8004896:	e7fd      	b.n	8004894 <xQueueGenericReset+0x28>
 8004898:	f002 f8a8 	bl	80069ec <vPortEnterCritical>
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	681a      	ldr	r2, [r3, #0]
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80048a4:	68f9      	ldr	r1, [r7, #12]
 80048a6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80048a8:	fb01 f303 	mul.w	r3, r1, r3
 80048ac:	441a      	add	r2, r3
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	609a      	str	r2, [r3, #8]
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	2200      	movs	r2, #0
 80048b6:	639a      	str	r2, [r3, #56]	@ 0x38
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	681a      	ldr	r2, [r3, #0]
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	605a      	str	r2, [r3, #4]
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	681a      	ldr	r2, [r3, #0]
 80048c4:	68fb      	ldr	r3, [r7, #12]
 80048c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80048c8:	3b01      	subs	r3, #1
 80048ca:	68f9      	ldr	r1, [r7, #12]
 80048cc:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80048ce:	fb01 f303 	mul.w	r3, r1, r3
 80048d2:	441a      	add	r2, r3
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	60da      	str	r2, [r3, #12]
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	22ff      	movs	r2, #255	@ 0xff
 80048dc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	22ff      	movs	r2, #255	@ 0xff
 80048e4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80048e8:	683b      	ldr	r3, [r7, #0]
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d114      	bne.n	8004918 <xQueueGenericReset+0xac>
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	691b      	ldr	r3, [r3, #16]
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d01a      	beq.n	800492c <xQueueGenericReset+0xc0>
 80048f6:	68fb      	ldr	r3, [r7, #12]
 80048f8:	3310      	adds	r3, #16
 80048fa:	4618      	mov	r0, r3
 80048fc:	f001 f986 	bl	8005c0c <xTaskRemoveFromEventList>
 8004900:	4603      	mov	r3, r0
 8004902:	2b00      	cmp	r3, #0
 8004904:	d012      	beq.n	800492c <xQueueGenericReset+0xc0>
 8004906:	4b0d      	ldr	r3, [pc, #52]	@ (800493c <xQueueGenericReset+0xd0>)
 8004908:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800490c:	601a      	str	r2, [r3, #0]
 800490e:	f3bf 8f4f 	dsb	sy
 8004912:	f3bf 8f6f 	isb	sy
 8004916:	e009      	b.n	800492c <xQueueGenericReset+0xc0>
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	3310      	adds	r3, #16
 800491c:	4618      	mov	r0, r3
 800491e:	f7ff fef5 	bl	800470c <vListInitialise>
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	3324      	adds	r3, #36	@ 0x24
 8004926:	4618      	mov	r0, r3
 8004928:	f7ff fef0 	bl	800470c <vListInitialise>
 800492c:	f002 f88e 	bl	8006a4c <vPortExitCritical>
 8004930:	2301      	movs	r3, #1
 8004932:	4618      	mov	r0, r3
 8004934:	3710      	adds	r7, #16
 8004936:	46bd      	mov	sp, r7
 8004938:	bd80      	pop	{r7, pc}
 800493a:	bf00      	nop
 800493c:	e000ed04 	.word	0xe000ed04

08004940 <xQueueGenericCreateStatic>:
 8004940:	b580      	push	{r7, lr}
 8004942:	b08e      	sub	sp, #56	@ 0x38
 8004944:	af02      	add	r7, sp, #8
 8004946:	60f8      	str	r0, [r7, #12]
 8004948:	60b9      	str	r1, [r7, #8]
 800494a:	607a      	str	r2, [r7, #4]
 800494c:	603b      	str	r3, [r7, #0]
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	2b00      	cmp	r3, #0
 8004952:	d10b      	bne.n	800496c <xQueueGenericCreateStatic+0x2c>
 8004954:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004958:	f383 8811 	msr	BASEPRI, r3
 800495c:	f3bf 8f6f 	isb	sy
 8004960:	f3bf 8f4f 	dsb	sy
 8004964:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004966:	bf00      	nop
 8004968:	bf00      	nop
 800496a:	e7fd      	b.n	8004968 <xQueueGenericCreateStatic+0x28>
 800496c:	683b      	ldr	r3, [r7, #0]
 800496e:	2b00      	cmp	r3, #0
 8004970:	d10b      	bne.n	800498a <xQueueGenericCreateStatic+0x4a>
 8004972:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004976:	f383 8811 	msr	BASEPRI, r3
 800497a:	f3bf 8f6f 	isb	sy
 800497e:	f3bf 8f4f 	dsb	sy
 8004982:	627b      	str	r3, [r7, #36]	@ 0x24
 8004984:	bf00      	nop
 8004986:	bf00      	nop
 8004988:	e7fd      	b.n	8004986 <xQueueGenericCreateStatic+0x46>
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	2b00      	cmp	r3, #0
 800498e:	d002      	beq.n	8004996 <xQueueGenericCreateStatic+0x56>
 8004990:	68bb      	ldr	r3, [r7, #8]
 8004992:	2b00      	cmp	r3, #0
 8004994:	d001      	beq.n	800499a <xQueueGenericCreateStatic+0x5a>
 8004996:	2301      	movs	r3, #1
 8004998:	e000      	b.n	800499c <xQueueGenericCreateStatic+0x5c>
 800499a:	2300      	movs	r3, #0
 800499c:	2b00      	cmp	r3, #0
 800499e:	d10b      	bne.n	80049b8 <xQueueGenericCreateStatic+0x78>
 80049a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80049a4:	f383 8811 	msr	BASEPRI, r3
 80049a8:	f3bf 8f6f 	isb	sy
 80049ac:	f3bf 8f4f 	dsb	sy
 80049b0:	623b      	str	r3, [r7, #32]
 80049b2:	bf00      	nop
 80049b4:	bf00      	nop
 80049b6:	e7fd      	b.n	80049b4 <xQueueGenericCreateStatic+0x74>
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	2b00      	cmp	r3, #0
 80049bc:	d102      	bne.n	80049c4 <xQueueGenericCreateStatic+0x84>
 80049be:	68bb      	ldr	r3, [r7, #8]
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d101      	bne.n	80049c8 <xQueueGenericCreateStatic+0x88>
 80049c4:	2301      	movs	r3, #1
 80049c6:	e000      	b.n	80049ca <xQueueGenericCreateStatic+0x8a>
 80049c8:	2300      	movs	r3, #0
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d10b      	bne.n	80049e6 <xQueueGenericCreateStatic+0xa6>
 80049ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80049d2:	f383 8811 	msr	BASEPRI, r3
 80049d6:	f3bf 8f6f 	isb	sy
 80049da:	f3bf 8f4f 	dsb	sy
 80049de:	61fb      	str	r3, [r7, #28]
 80049e0:	bf00      	nop
 80049e2:	bf00      	nop
 80049e4:	e7fd      	b.n	80049e2 <xQueueGenericCreateStatic+0xa2>
 80049e6:	2350      	movs	r3, #80	@ 0x50
 80049e8:	617b      	str	r3, [r7, #20]
 80049ea:	697b      	ldr	r3, [r7, #20]
 80049ec:	2b50      	cmp	r3, #80	@ 0x50
 80049ee:	d00b      	beq.n	8004a08 <xQueueGenericCreateStatic+0xc8>
 80049f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80049f4:	f383 8811 	msr	BASEPRI, r3
 80049f8:	f3bf 8f6f 	isb	sy
 80049fc:	f3bf 8f4f 	dsb	sy
 8004a00:	61bb      	str	r3, [r7, #24]
 8004a02:	bf00      	nop
 8004a04:	bf00      	nop
 8004a06:	e7fd      	b.n	8004a04 <xQueueGenericCreateStatic+0xc4>
 8004a08:	697b      	ldr	r3, [r7, #20]
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004a0e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	d00d      	beq.n	8004a30 <xQueueGenericCreateStatic+0xf0>
 8004a14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a16:	2201      	movs	r2, #1
 8004a18:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004a1c:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8004a20:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a22:	9300      	str	r3, [sp, #0]
 8004a24:	4613      	mov	r3, r2
 8004a26:	687a      	ldr	r2, [r7, #4]
 8004a28:	68b9      	ldr	r1, [r7, #8]
 8004a2a:	68f8      	ldr	r0, [r7, #12]
 8004a2c:	f000 f805 	bl	8004a3a <prvInitialiseNewQueue>
 8004a30:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a32:	4618      	mov	r0, r3
 8004a34:	3730      	adds	r7, #48	@ 0x30
 8004a36:	46bd      	mov	sp, r7
 8004a38:	bd80      	pop	{r7, pc}

08004a3a <prvInitialiseNewQueue>:
 8004a3a:	b580      	push	{r7, lr}
 8004a3c:	b084      	sub	sp, #16
 8004a3e:	af00      	add	r7, sp, #0
 8004a40:	60f8      	str	r0, [r7, #12]
 8004a42:	60b9      	str	r1, [r7, #8]
 8004a44:	607a      	str	r2, [r7, #4]
 8004a46:	70fb      	strb	r3, [r7, #3]
 8004a48:	68bb      	ldr	r3, [r7, #8]
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	d103      	bne.n	8004a56 <prvInitialiseNewQueue+0x1c>
 8004a4e:	69bb      	ldr	r3, [r7, #24]
 8004a50:	69ba      	ldr	r2, [r7, #24]
 8004a52:	601a      	str	r2, [r3, #0]
 8004a54:	e002      	b.n	8004a5c <prvInitialiseNewQueue+0x22>
 8004a56:	69bb      	ldr	r3, [r7, #24]
 8004a58:	687a      	ldr	r2, [r7, #4]
 8004a5a:	601a      	str	r2, [r3, #0]
 8004a5c:	69bb      	ldr	r3, [r7, #24]
 8004a5e:	68fa      	ldr	r2, [r7, #12]
 8004a60:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004a62:	69bb      	ldr	r3, [r7, #24]
 8004a64:	68ba      	ldr	r2, [r7, #8]
 8004a66:	641a      	str	r2, [r3, #64]	@ 0x40
 8004a68:	2101      	movs	r1, #1
 8004a6a:	69b8      	ldr	r0, [r7, #24]
 8004a6c:	f7ff fefe 	bl	800486c <xQueueGenericReset>
 8004a70:	69bb      	ldr	r3, [r7, #24]
 8004a72:	78fa      	ldrb	r2, [r7, #3]
 8004a74:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8004a78:	bf00      	nop
 8004a7a:	3710      	adds	r7, #16
 8004a7c:	46bd      	mov	sp, r7
 8004a7e:	bd80      	pop	{r7, pc}

08004a80 <xQueueGenericSend>:
 8004a80:	b580      	push	{r7, lr}
 8004a82:	b08e      	sub	sp, #56	@ 0x38
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	60f8      	str	r0, [r7, #12]
 8004a88:	60b9      	str	r1, [r7, #8]
 8004a8a:	607a      	str	r2, [r7, #4]
 8004a8c:	603b      	str	r3, [r7, #0]
 8004a8e:	2300      	movs	r3, #0
 8004a90:	637b      	str	r3, [r7, #52]	@ 0x34
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	633b      	str	r3, [r7, #48]	@ 0x30
 8004a96:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a98:	2b00      	cmp	r3, #0
 8004a9a:	d10b      	bne.n	8004ab4 <xQueueGenericSend+0x34>
 8004a9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004aa0:	f383 8811 	msr	BASEPRI, r3
 8004aa4:	f3bf 8f6f 	isb	sy
 8004aa8:	f3bf 8f4f 	dsb	sy
 8004aac:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004aae:	bf00      	nop
 8004ab0:	bf00      	nop
 8004ab2:	e7fd      	b.n	8004ab0 <xQueueGenericSend+0x30>
 8004ab4:	68bb      	ldr	r3, [r7, #8]
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d103      	bne.n	8004ac2 <xQueueGenericSend+0x42>
 8004aba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004abc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004abe:	2b00      	cmp	r3, #0
 8004ac0:	d101      	bne.n	8004ac6 <xQueueGenericSend+0x46>
 8004ac2:	2301      	movs	r3, #1
 8004ac4:	e000      	b.n	8004ac8 <xQueueGenericSend+0x48>
 8004ac6:	2300      	movs	r3, #0
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d10b      	bne.n	8004ae4 <xQueueGenericSend+0x64>
 8004acc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004ad0:	f383 8811 	msr	BASEPRI, r3
 8004ad4:	f3bf 8f6f 	isb	sy
 8004ad8:	f3bf 8f4f 	dsb	sy
 8004adc:	627b      	str	r3, [r7, #36]	@ 0x24
 8004ade:	bf00      	nop
 8004ae0:	bf00      	nop
 8004ae2:	e7fd      	b.n	8004ae0 <xQueueGenericSend+0x60>
 8004ae4:	683b      	ldr	r3, [r7, #0]
 8004ae6:	2b02      	cmp	r3, #2
 8004ae8:	d103      	bne.n	8004af2 <xQueueGenericSend+0x72>
 8004aea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004aec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004aee:	2b01      	cmp	r3, #1
 8004af0:	d101      	bne.n	8004af6 <xQueueGenericSend+0x76>
 8004af2:	2301      	movs	r3, #1
 8004af4:	e000      	b.n	8004af8 <xQueueGenericSend+0x78>
 8004af6:	2300      	movs	r3, #0
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	d10b      	bne.n	8004b14 <xQueueGenericSend+0x94>
 8004afc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004b00:	f383 8811 	msr	BASEPRI, r3
 8004b04:	f3bf 8f6f 	isb	sy
 8004b08:	f3bf 8f4f 	dsb	sy
 8004b0c:	623b      	str	r3, [r7, #32]
 8004b0e:	bf00      	nop
 8004b10:	bf00      	nop
 8004b12:	e7fd      	b.n	8004b10 <xQueueGenericSend+0x90>
 8004b14:	f001 fa40 	bl	8005f98 <xTaskGetSchedulerState>
 8004b18:	4603      	mov	r3, r0
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d102      	bne.n	8004b24 <xQueueGenericSend+0xa4>
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d101      	bne.n	8004b28 <xQueueGenericSend+0xa8>
 8004b24:	2301      	movs	r3, #1
 8004b26:	e000      	b.n	8004b2a <xQueueGenericSend+0xaa>
 8004b28:	2300      	movs	r3, #0
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d10b      	bne.n	8004b46 <xQueueGenericSend+0xc6>
 8004b2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004b32:	f383 8811 	msr	BASEPRI, r3
 8004b36:	f3bf 8f6f 	isb	sy
 8004b3a:	f3bf 8f4f 	dsb	sy
 8004b3e:	61fb      	str	r3, [r7, #28]
 8004b40:	bf00      	nop
 8004b42:	bf00      	nop
 8004b44:	e7fd      	b.n	8004b42 <xQueueGenericSend+0xc2>
 8004b46:	f001 ff51 	bl	80069ec <vPortEnterCritical>
 8004b4a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b4c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004b4e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b50:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004b52:	429a      	cmp	r2, r3
 8004b54:	d302      	bcc.n	8004b5c <xQueueGenericSend+0xdc>
 8004b56:	683b      	ldr	r3, [r7, #0]
 8004b58:	2b02      	cmp	r3, #2
 8004b5a:	d129      	bne.n	8004bb0 <xQueueGenericSend+0x130>
 8004b5c:	683a      	ldr	r2, [r7, #0]
 8004b5e:	68b9      	ldr	r1, [r7, #8]
 8004b60:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004b62:	f000 fa0f 	bl	8004f84 <prvCopyDataToQueue>
 8004b66:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004b68:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b6c:	2b00      	cmp	r3, #0
 8004b6e:	d010      	beq.n	8004b92 <xQueueGenericSend+0x112>
 8004b70:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b72:	3324      	adds	r3, #36	@ 0x24
 8004b74:	4618      	mov	r0, r3
 8004b76:	f001 f849 	bl	8005c0c <xTaskRemoveFromEventList>
 8004b7a:	4603      	mov	r3, r0
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	d013      	beq.n	8004ba8 <xQueueGenericSend+0x128>
 8004b80:	4b3f      	ldr	r3, [pc, #252]	@ (8004c80 <xQueueGenericSend+0x200>)
 8004b82:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004b86:	601a      	str	r2, [r3, #0]
 8004b88:	f3bf 8f4f 	dsb	sy
 8004b8c:	f3bf 8f6f 	isb	sy
 8004b90:	e00a      	b.n	8004ba8 <xQueueGenericSend+0x128>
 8004b92:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004b94:	2b00      	cmp	r3, #0
 8004b96:	d007      	beq.n	8004ba8 <xQueueGenericSend+0x128>
 8004b98:	4b39      	ldr	r3, [pc, #228]	@ (8004c80 <xQueueGenericSend+0x200>)
 8004b9a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004b9e:	601a      	str	r2, [r3, #0]
 8004ba0:	f3bf 8f4f 	dsb	sy
 8004ba4:	f3bf 8f6f 	isb	sy
 8004ba8:	f001 ff50 	bl	8006a4c <vPortExitCritical>
 8004bac:	2301      	movs	r3, #1
 8004bae:	e063      	b.n	8004c78 <xQueueGenericSend+0x1f8>
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d103      	bne.n	8004bbe <xQueueGenericSend+0x13e>
 8004bb6:	f001 ff49 	bl	8006a4c <vPortExitCritical>
 8004bba:	2300      	movs	r3, #0
 8004bbc:	e05c      	b.n	8004c78 <xQueueGenericSend+0x1f8>
 8004bbe:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	d106      	bne.n	8004bd2 <xQueueGenericSend+0x152>
 8004bc4:	f107 0314 	add.w	r3, r7, #20
 8004bc8:	4618      	mov	r0, r3
 8004bca:	f001 f883 	bl	8005cd4 <vTaskInternalSetTimeOutState>
 8004bce:	2301      	movs	r3, #1
 8004bd0:	637b      	str	r3, [r7, #52]	@ 0x34
 8004bd2:	f001 ff3b 	bl	8006a4c <vPortExitCritical>
 8004bd6:	f000 fdef 	bl	80057b8 <vTaskSuspendAll>
 8004bda:	f001 ff07 	bl	80069ec <vPortEnterCritical>
 8004bde:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004be0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8004be4:	b25b      	sxtb	r3, r3
 8004be6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004bea:	d103      	bne.n	8004bf4 <xQueueGenericSend+0x174>
 8004bec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004bee:	2200      	movs	r2, #0
 8004bf0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004bf4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004bf6:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004bfa:	b25b      	sxtb	r3, r3
 8004bfc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c00:	d103      	bne.n	8004c0a <xQueueGenericSend+0x18a>
 8004c02:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004c04:	2200      	movs	r2, #0
 8004c06:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004c0a:	f001 ff1f 	bl	8006a4c <vPortExitCritical>
 8004c0e:	1d3a      	adds	r2, r7, #4
 8004c10:	f107 0314 	add.w	r3, r7, #20
 8004c14:	4611      	mov	r1, r2
 8004c16:	4618      	mov	r0, r3
 8004c18:	f001 f872 	bl	8005d00 <xTaskCheckForTimeOut>
 8004c1c:	4603      	mov	r3, r0
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	d124      	bne.n	8004c6c <xQueueGenericSend+0x1ec>
 8004c22:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004c24:	f000 faa6 	bl	8005174 <prvIsQueueFull>
 8004c28:	4603      	mov	r3, r0
 8004c2a:	2b00      	cmp	r3, #0
 8004c2c:	d018      	beq.n	8004c60 <xQueueGenericSend+0x1e0>
 8004c2e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004c30:	3310      	adds	r3, #16
 8004c32:	687a      	ldr	r2, [r7, #4]
 8004c34:	4611      	mov	r1, r2
 8004c36:	4618      	mov	r0, r3
 8004c38:	f000 ff96 	bl	8005b68 <vTaskPlaceOnEventList>
 8004c3c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004c3e:	f000 fa31 	bl	80050a4 <prvUnlockQueue>
 8004c42:	f000 fdc7 	bl	80057d4 <xTaskResumeAll>
 8004c46:	4603      	mov	r3, r0
 8004c48:	2b00      	cmp	r3, #0
 8004c4a:	f47f af7c 	bne.w	8004b46 <xQueueGenericSend+0xc6>
 8004c4e:	4b0c      	ldr	r3, [pc, #48]	@ (8004c80 <xQueueGenericSend+0x200>)
 8004c50:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004c54:	601a      	str	r2, [r3, #0]
 8004c56:	f3bf 8f4f 	dsb	sy
 8004c5a:	f3bf 8f6f 	isb	sy
 8004c5e:	e772      	b.n	8004b46 <xQueueGenericSend+0xc6>
 8004c60:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004c62:	f000 fa1f 	bl	80050a4 <prvUnlockQueue>
 8004c66:	f000 fdb5 	bl	80057d4 <xTaskResumeAll>
 8004c6a:	e76c      	b.n	8004b46 <xQueueGenericSend+0xc6>
 8004c6c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8004c6e:	f000 fa19 	bl	80050a4 <prvUnlockQueue>
 8004c72:	f000 fdaf 	bl	80057d4 <xTaskResumeAll>
 8004c76:	2300      	movs	r3, #0
 8004c78:	4618      	mov	r0, r3
 8004c7a:	3738      	adds	r7, #56	@ 0x38
 8004c7c:	46bd      	mov	sp, r7
 8004c7e:	bd80      	pop	{r7, pc}
 8004c80:	e000ed04 	.word	0xe000ed04

08004c84 <xQueueGenericSendFromISR>:
 8004c84:	b580      	push	{r7, lr}
 8004c86:	b090      	sub	sp, #64	@ 0x40
 8004c88:	af00      	add	r7, sp, #0
 8004c8a:	60f8      	str	r0, [r7, #12]
 8004c8c:	60b9      	str	r1, [r7, #8]
 8004c8e:	607a      	str	r2, [r7, #4]
 8004c90:	603b      	str	r3, [r7, #0]
 8004c92:	68fb      	ldr	r3, [r7, #12]
 8004c94:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004c96:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004c98:	2b00      	cmp	r3, #0
 8004c9a:	d10b      	bne.n	8004cb4 <xQueueGenericSendFromISR+0x30>
 8004c9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004ca0:	f383 8811 	msr	BASEPRI, r3
 8004ca4:	f3bf 8f6f 	isb	sy
 8004ca8:	f3bf 8f4f 	dsb	sy
 8004cac:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004cae:	bf00      	nop
 8004cb0:	bf00      	nop
 8004cb2:	e7fd      	b.n	8004cb0 <xQueueGenericSendFromISR+0x2c>
 8004cb4:	68bb      	ldr	r3, [r7, #8]
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d103      	bne.n	8004cc2 <xQueueGenericSendFromISR+0x3e>
 8004cba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004cbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d101      	bne.n	8004cc6 <xQueueGenericSendFromISR+0x42>
 8004cc2:	2301      	movs	r3, #1
 8004cc4:	e000      	b.n	8004cc8 <xQueueGenericSendFromISR+0x44>
 8004cc6:	2300      	movs	r3, #0
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d10b      	bne.n	8004ce4 <xQueueGenericSendFromISR+0x60>
 8004ccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004cd0:	f383 8811 	msr	BASEPRI, r3
 8004cd4:	f3bf 8f6f 	isb	sy
 8004cd8:	f3bf 8f4f 	dsb	sy
 8004cdc:	627b      	str	r3, [r7, #36]	@ 0x24
 8004cde:	bf00      	nop
 8004ce0:	bf00      	nop
 8004ce2:	e7fd      	b.n	8004ce0 <xQueueGenericSendFromISR+0x5c>
 8004ce4:	683b      	ldr	r3, [r7, #0]
 8004ce6:	2b02      	cmp	r3, #2
 8004ce8:	d103      	bne.n	8004cf2 <xQueueGenericSendFromISR+0x6e>
 8004cea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004cec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004cee:	2b01      	cmp	r3, #1
 8004cf0:	d101      	bne.n	8004cf6 <xQueueGenericSendFromISR+0x72>
 8004cf2:	2301      	movs	r3, #1
 8004cf4:	e000      	b.n	8004cf8 <xQueueGenericSendFromISR+0x74>
 8004cf6:	2300      	movs	r3, #0
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	d10b      	bne.n	8004d14 <xQueueGenericSendFromISR+0x90>
 8004cfc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004d00:	f383 8811 	msr	BASEPRI, r3
 8004d04:	f3bf 8f6f 	isb	sy
 8004d08:	f3bf 8f4f 	dsb	sy
 8004d0c:	623b      	str	r3, [r7, #32]
 8004d0e:	bf00      	nop
 8004d10:	bf00      	nop
 8004d12:	e7fd      	b.n	8004d10 <xQueueGenericSendFromISR+0x8c>
 8004d14:	f001 ff2c 	bl	8006b70 <vPortValidateInterruptPriority>
 8004d18:	f3ef 8211 	mrs	r2, BASEPRI
 8004d1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004d20:	f383 8811 	msr	BASEPRI, r3
 8004d24:	f3bf 8f6f 	isb	sy
 8004d28:	f3bf 8f4f 	dsb	sy
 8004d2c:	61fa      	str	r2, [r7, #28]
 8004d2e:	61bb      	str	r3, [r7, #24]
 8004d30:	69fb      	ldr	r3, [r7, #28]
 8004d32:	637b      	str	r3, [r7, #52]	@ 0x34
 8004d34:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d36:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004d38:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004d3c:	429a      	cmp	r2, r3
 8004d3e:	d302      	bcc.n	8004d46 <xQueueGenericSendFromISR+0xc2>
 8004d40:	683b      	ldr	r3, [r7, #0]
 8004d42:	2b02      	cmp	r3, #2
 8004d44:	d12f      	bne.n	8004da6 <xQueueGenericSendFromISR+0x122>
 8004d46:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d48:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004d4c:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8004d50:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004d54:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004d56:	683a      	ldr	r2, [r7, #0]
 8004d58:	68b9      	ldr	r1, [r7, #8]
 8004d5a:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8004d5c:	f000 f912 	bl	8004f84 <prvCopyDataToQueue>
 8004d60:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 8004d64:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d68:	d112      	bne.n	8004d90 <xQueueGenericSendFromISR+0x10c>
 8004d6a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d6e:	2b00      	cmp	r3, #0
 8004d70:	d016      	beq.n	8004da0 <xQueueGenericSendFromISR+0x11c>
 8004d72:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d74:	3324      	adds	r3, #36	@ 0x24
 8004d76:	4618      	mov	r0, r3
 8004d78:	f000 ff48 	bl	8005c0c <xTaskRemoveFromEventList>
 8004d7c:	4603      	mov	r3, r0
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d00e      	beq.n	8004da0 <xQueueGenericSendFromISR+0x11c>
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	d00b      	beq.n	8004da0 <xQueueGenericSendFromISR+0x11c>
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	2201      	movs	r2, #1
 8004d8c:	601a      	str	r2, [r3, #0]
 8004d8e:	e007      	b.n	8004da0 <xQueueGenericSendFromISR+0x11c>
 8004d90:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8004d94:	3301      	adds	r3, #1
 8004d96:	b2db      	uxtb	r3, r3
 8004d98:	b25a      	sxtb	r2, r3
 8004d9a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004d9c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004da0:	2301      	movs	r3, #1
 8004da2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004da4:	e001      	b.n	8004daa <xQueueGenericSendFromISR+0x126>
 8004da6:	2300      	movs	r3, #0
 8004da8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004daa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004dac:	617b      	str	r3, [r7, #20]
 8004dae:	697b      	ldr	r3, [r7, #20]
 8004db0:	f383 8811 	msr	BASEPRI, r3
 8004db4:	bf00      	nop
 8004db6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004db8:	4618      	mov	r0, r3
 8004dba:	3740      	adds	r7, #64	@ 0x40
 8004dbc:	46bd      	mov	sp, r7
 8004dbe:	bd80      	pop	{r7, pc}

08004dc0 <xQueueReceive>:
 8004dc0:	b580      	push	{r7, lr}
 8004dc2:	b08c      	sub	sp, #48	@ 0x30
 8004dc4:	af00      	add	r7, sp, #0
 8004dc6:	60f8      	str	r0, [r7, #12]
 8004dc8:	60b9      	str	r1, [r7, #8]
 8004dca:	607a      	str	r2, [r7, #4]
 8004dcc:	2300      	movs	r3, #0
 8004dce:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004dd0:	68fb      	ldr	r3, [r7, #12]
 8004dd2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004dd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	d10b      	bne.n	8004df2 <xQueueReceive+0x32>
 8004dda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004dde:	f383 8811 	msr	BASEPRI, r3
 8004de2:	f3bf 8f6f 	isb	sy
 8004de6:	f3bf 8f4f 	dsb	sy
 8004dea:	623b      	str	r3, [r7, #32]
 8004dec:	bf00      	nop
 8004dee:	bf00      	nop
 8004df0:	e7fd      	b.n	8004dee <xQueueReceive+0x2e>
 8004df2:	68bb      	ldr	r3, [r7, #8]
 8004df4:	2b00      	cmp	r3, #0
 8004df6:	d103      	bne.n	8004e00 <xQueueReceive+0x40>
 8004df8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004dfa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d101      	bne.n	8004e04 <xQueueReceive+0x44>
 8004e00:	2301      	movs	r3, #1
 8004e02:	e000      	b.n	8004e06 <xQueueReceive+0x46>
 8004e04:	2300      	movs	r3, #0
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d10b      	bne.n	8004e22 <xQueueReceive+0x62>
 8004e0a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004e0e:	f383 8811 	msr	BASEPRI, r3
 8004e12:	f3bf 8f6f 	isb	sy
 8004e16:	f3bf 8f4f 	dsb	sy
 8004e1a:	61fb      	str	r3, [r7, #28]
 8004e1c:	bf00      	nop
 8004e1e:	bf00      	nop
 8004e20:	e7fd      	b.n	8004e1e <xQueueReceive+0x5e>
 8004e22:	f001 f8b9 	bl	8005f98 <xTaskGetSchedulerState>
 8004e26:	4603      	mov	r3, r0
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d102      	bne.n	8004e32 <xQueueReceive+0x72>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d101      	bne.n	8004e36 <xQueueReceive+0x76>
 8004e32:	2301      	movs	r3, #1
 8004e34:	e000      	b.n	8004e38 <xQueueReceive+0x78>
 8004e36:	2300      	movs	r3, #0
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	d10b      	bne.n	8004e54 <xQueueReceive+0x94>
 8004e3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8004e40:	f383 8811 	msr	BASEPRI, r3
 8004e44:	f3bf 8f6f 	isb	sy
 8004e48:	f3bf 8f4f 	dsb	sy
 8004e4c:	61bb      	str	r3, [r7, #24]
 8004e4e:	bf00      	nop
 8004e50:	bf00      	nop
 8004e52:	e7fd      	b.n	8004e50 <xQueueReceive+0x90>
 8004e54:	f001 fdca 	bl	80069ec <vPortEnterCritical>
 8004e58:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e5a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004e5c:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d01f      	beq.n	8004ea4 <xQueueReceive+0xe4>
 8004e64:	68b9      	ldr	r1, [r7, #8]
 8004e66:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004e68:	f000 f8f6 	bl	8005058 <prvCopyDataFromQueue>
 8004e6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e6e:	1e5a      	subs	r2, r3, #1
 8004e70:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e72:	639a      	str	r2, [r3, #56]	@ 0x38
 8004e74:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e76:	691b      	ldr	r3, [r3, #16]
 8004e78:	2b00      	cmp	r3, #0
 8004e7a:	d00f      	beq.n	8004e9c <xQueueReceive+0xdc>
 8004e7c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e7e:	3310      	adds	r3, #16
 8004e80:	4618      	mov	r0, r3
 8004e82:	f000 fec3 	bl	8005c0c <xTaskRemoveFromEventList>
 8004e86:	4603      	mov	r3, r0
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d007      	beq.n	8004e9c <xQueueReceive+0xdc>
 8004e8c:	4b3c      	ldr	r3, [pc, #240]	@ (8004f80 <xQueueReceive+0x1c0>)
 8004e8e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004e92:	601a      	str	r2, [r3, #0]
 8004e94:	f3bf 8f4f 	dsb	sy
 8004e98:	f3bf 8f6f 	isb	sy
 8004e9c:	f001 fdd6 	bl	8006a4c <vPortExitCritical>
 8004ea0:	2301      	movs	r3, #1
 8004ea2:	e069      	b.n	8004f78 <xQueueReceive+0x1b8>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d103      	bne.n	8004eb2 <xQueueReceive+0xf2>
 8004eaa:	f001 fdcf 	bl	8006a4c <vPortExitCritical>
 8004eae:	2300      	movs	r3, #0
 8004eb0:	e062      	b.n	8004f78 <xQueueReceive+0x1b8>
 8004eb2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004eb4:	2b00      	cmp	r3, #0
 8004eb6:	d106      	bne.n	8004ec6 <xQueueReceive+0x106>
 8004eb8:	f107 0310 	add.w	r3, r7, #16
 8004ebc:	4618      	mov	r0, r3
 8004ebe:	f000 ff09 	bl	8005cd4 <vTaskInternalSetTimeOutState>
 8004ec2:	2301      	movs	r3, #1
 8004ec4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004ec6:	f001 fdc1 	bl	8006a4c <vPortExitCritical>
 8004eca:	f000 fc75 	bl	80057b8 <vTaskSuspendAll>
 8004ece:	f001 fd8d 	bl	80069ec <vPortEnterCritical>
 8004ed2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004ed4:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8004ed8:	b25b      	sxtb	r3, r3
 8004eda:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ede:	d103      	bne.n	8004ee8 <xQueueReceive+0x128>
 8004ee0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004ee2:	2200      	movs	r2, #0
 8004ee4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004ee8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004eea:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8004eee:	b25b      	sxtb	r3, r3
 8004ef0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ef4:	d103      	bne.n	8004efe <xQueueReceive+0x13e>
 8004ef6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004ef8:	2200      	movs	r2, #0
 8004efa:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004efe:	f001 fda5 	bl	8006a4c <vPortExitCritical>
 8004f02:	1d3a      	adds	r2, r7, #4
 8004f04:	f107 0310 	add.w	r3, r7, #16
 8004f08:	4611      	mov	r1, r2
 8004f0a:	4618      	mov	r0, r3
 8004f0c:	f000 fef8 	bl	8005d00 <xTaskCheckForTimeOut>
 8004f10:	4603      	mov	r3, r0
 8004f12:	2b00      	cmp	r3, #0
 8004f14:	d123      	bne.n	8004f5e <xQueueReceive+0x19e>
 8004f16:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004f18:	f000 f916 	bl	8005148 <prvIsQueueEmpty>
 8004f1c:	4603      	mov	r3, r0
 8004f1e:	2b00      	cmp	r3, #0
 8004f20:	d017      	beq.n	8004f52 <xQueueReceive+0x192>
 8004f22:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f24:	3324      	adds	r3, #36	@ 0x24
 8004f26:	687a      	ldr	r2, [r7, #4]
 8004f28:	4611      	mov	r1, r2
 8004f2a:	4618      	mov	r0, r3
 8004f2c:	f000 fe1c 	bl	8005b68 <vTaskPlaceOnEventList>
 8004f30:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004f32:	f000 f8b7 	bl	80050a4 <prvUnlockQueue>
 8004f36:	f000 fc4d 	bl	80057d4 <xTaskResumeAll>
 8004f3a:	4603      	mov	r3, r0
 8004f3c:	2b00      	cmp	r3, #0
 8004f3e:	d189      	bne.n	8004e54 <xQueueReceive+0x94>
 8004f40:	4b0f      	ldr	r3, [pc, #60]	@ (8004f80 <xQueueReceive+0x1c0>)
 8004f42:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8004f46:	601a      	str	r2, [r3, #0]
 8004f48:	f3bf 8f4f 	dsb	sy
 8004f4c:	f3bf 8f6f 	isb	sy
 8004f50:	e780      	b.n	8004e54 <xQueueReceive+0x94>
 8004f52:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004f54:	f000 f8a6 	bl	80050a4 <prvUnlockQueue>
 8004f58:	f000 fc3c 	bl	80057d4 <xTaskResumeAll>
 8004f5c:	e77a      	b.n	8004e54 <xQueueReceive+0x94>
 8004f5e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004f60:	f000 f8a0 	bl	80050a4 <prvUnlockQueue>
 8004f64:	f000 fc36 	bl	80057d4 <xTaskResumeAll>
 8004f68:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8004f6a:	f000 f8ed 	bl	8005148 <prvIsQueueEmpty>
 8004f6e:	4603      	mov	r3, r0
 8004f70:	2b00      	cmp	r3, #0
 8004f72:	f43f af6f 	beq.w	8004e54 <xQueueReceive+0x94>
 8004f76:	2300      	movs	r3, #0
 8004f78:	4618      	mov	r0, r3
 8004f7a:	3730      	adds	r7, #48	@ 0x30
 8004f7c:	46bd      	mov	sp, r7
 8004f7e:	bd80      	pop	{r7, pc}
 8004f80:	e000ed04 	.word	0xe000ed04

08004f84 <prvCopyDataToQueue>:
 8004f84:	b580      	push	{r7, lr}
 8004f86:	b086      	sub	sp, #24
 8004f88:	af00      	add	r7, sp, #0
 8004f8a:	60f8      	str	r0, [r7, #12]
 8004f8c:	60b9      	str	r1, [r7, #8]
 8004f8e:	607a      	str	r2, [r7, #4]
 8004f90:	2300      	movs	r3, #0
 8004f92:	617b      	str	r3, [r7, #20]
 8004f94:	68fb      	ldr	r3, [r7, #12]
 8004f96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004f98:	613b      	str	r3, [r7, #16]
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d10d      	bne.n	8004fbe <prvCopyDataToQueue+0x3a>
 8004fa2:	68fb      	ldr	r3, [r7, #12]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d14d      	bne.n	8005046 <prvCopyDataToQueue+0xc2>
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	689b      	ldr	r3, [r3, #8]
 8004fae:	4618      	mov	r0, r3
 8004fb0:	f001 f810 	bl	8005fd4 <xTaskPriorityDisinherit>
 8004fb4:	6178      	str	r0, [r7, #20]
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	2200      	movs	r2, #0
 8004fba:	609a      	str	r2, [r3, #8]
 8004fbc:	e043      	b.n	8005046 <prvCopyDataToQueue+0xc2>
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	2b00      	cmp	r3, #0
 8004fc2:	d119      	bne.n	8004ff8 <prvCopyDataToQueue+0x74>
 8004fc4:	68fb      	ldr	r3, [r7, #12]
 8004fc6:	6858      	ldr	r0, [r3, #4]
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004fcc:	461a      	mov	r2, r3
 8004fce:	68b9      	ldr	r1, [r7, #8]
 8004fd0:	f002 f8ae 	bl	8007130 <memcpy>
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	685a      	ldr	r2, [r3, #4]
 8004fd8:	68fb      	ldr	r3, [r7, #12]
 8004fda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004fdc:	441a      	add	r2, r3
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	605a      	str	r2, [r3, #4]
 8004fe2:	68fb      	ldr	r3, [r7, #12]
 8004fe4:	685a      	ldr	r2, [r3, #4]
 8004fe6:	68fb      	ldr	r3, [r7, #12]
 8004fe8:	689b      	ldr	r3, [r3, #8]
 8004fea:	429a      	cmp	r2, r3
 8004fec:	d32b      	bcc.n	8005046 <prvCopyDataToQueue+0xc2>
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	681a      	ldr	r2, [r3, #0]
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	605a      	str	r2, [r3, #4]
 8004ff6:	e026      	b.n	8005046 <prvCopyDataToQueue+0xc2>
 8004ff8:	68fb      	ldr	r3, [r7, #12]
 8004ffa:	68d8      	ldr	r0, [r3, #12]
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005000:	461a      	mov	r2, r3
 8005002:	68b9      	ldr	r1, [r7, #8]
 8005004:	f002 f894 	bl	8007130 <memcpy>
 8005008:	68fb      	ldr	r3, [r7, #12]
 800500a:	68da      	ldr	r2, [r3, #12]
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005010:	425b      	negs	r3, r3
 8005012:	441a      	add	r2, r3
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	60da      	str	r2, [r3, #12]
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	68da      	ldr	r2, [r3, #12]
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	429a      	cmp	r2, r3
 8005022:	d207      	bcs.n	8005034 <prvCopyDataToQueue+0xb0>
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	689a      	ldr	r2, [r3, #8]
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800502c:	425b      	negs	r3, r3
 800502e:	441a      	add	r2, r3
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	60da      	str	r2, [r3, #12]
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	2b02      	cmp	r3, #2
 8005038:	d105      	bne.n	8005046 <prvCopyDataToQueue+0xc2>
 800503a:	693b      	ldr	r3, [r7, #16]
 800503c:	2b00      	cmp	r3, #0
 800503e:	d002      	beq.n	8005046 <prvCopyDataToQueue+0xc2>
 8005040:	693b      	ldr	r3, [r7, #16]
 8005042:	3b01      	subs	r3, #1
 8005044:	613b      	str	r3, [r7, #16]
 8005046:	693b      	ldr	r3, [r7, #16]
 8005048:	1c5a      	adds	r2, r3, #1
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	639a      	str	r2, [r3, #56]	@ 0x38
 800504e:	697b      	ldr	r3, [r7, #20]
 8005050:	4618      	mov	r0, r3
 8005052:	3718      	adds	r7, #24
 8005054:	46bd      	mov	sp, r7
 8005056:	bd80      	pop	{r7, pc}

08005058 <prvCopyDataFromQueue>:
 8005058:	b580      	push	{r7, lr}
 800505a:	b082      	sub	sp, #8
 800505c:	af00      	add	r7, sp, #0
 800505e:	6078      	str	r0, [r7, #4]
 8005060:	6039      	str	r1, [r7, #0]
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005066:	2b00      	cmp	r3, #0
 8005068:	d018      	beq.n	800509c <prvCopyDataFromQueue+0x44>
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	68da      	ldr	r2, [r3, #12]
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005072:	441a      	add	r2, r3
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	60da      	str	r2, [r3, #12]
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	68da      	ldr	r2, [r3, #12]
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	689b      	ldr	r3, [r3, #8]
 8005080:	429a      	cmp	r2, r3
 8005082:	d303      	bcc.n	800508c <prvCopyDataFromQueue+0x34>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681a      	ldr	r2, [r3, #0]
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	60da      	str	r2, [r3, #12]
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	68d9      	ldr	r1, [r3, #12]
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005094:	461a      	mov	r2, r3
 8005096:	6838      	ldr	r0, [r7, #0]
 8005098:	f002 f84a 	bl	8007130 <memcpy>
 800509c:	bf00      	nop
 800509e:	3708      	adds	r7, #8
 80050a0:	46bd      	mov	sp, r7
 80050a2:	bd80      	pop	{r7, pc}

080050a4 <prvUnlockQueue>:
 80050a4:	b580      	push	{r7, lr}
 80050a6:	b084      	sub	sp, #16
 80050a8:	af00      	add	r7, sp, #0
 80050aa:	6078      	str	r0, [r7, #4]
 80050ac:	f001 fc9e 	bl	80069ec <vPortEnterCritical>
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80050b6:	73fb      	strb	r3, [r7, #15]
 80050b8:	e011      	b.n	80050de <prvUnlockQueue+0x3a>
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d012      	beq.n	80050e8 <prvUnlockQueue+0x44>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	3324      	adds	r3, #36	@ 0x24
 80050c6:	4618      	mov	r0, r3
 80050c8:	f000 fda0 	bl	8005c0c <xTaskRemoveFromEventList>
 80050cc:	4603      	mov	r3, r0
 80050ce:	2b00      	cmp	r3, #0
 80050d0:	d001      	beq.n	80050d6 <prvUnlockQueue+0x32>
 80050d2:	f000 fe79 	bl	8005dc8 <vTaskMissedYield>
 80050d6:	7bfb      	ldrb	r3, [r7, #15]
 80050d8:	3b01      	subs	r3, #1
 80050da:	b2db      	uxtb	r3, r3
 80050dc:	73fb      	strb	r3, [r7, #15]
 80050de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	dce9      	bgt.n	80050ba <prvUnlockQueue+0x16>
 80050e6:	e000      	b.n	80050ea <prvUnlockQueue+0x46>
 80050e8:	bf00      	nop
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	22ff      	movs	r2, #255	@ 0xff
 80050ee:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80050f2:	f001 fcab 	bl	8006a4c <vPortExitCritical>
 80050f6:	f001 fc79 	bl	80069ec <vPortEnterCritical>
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005100:	73bb      	strb	r3, [r7, #14]
 8005102:	e011      	b.n	8005128 <prvUnlockQueue+0x84>
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	691b      	ldr	r3, [r3, #16]
 8005108:	2b00      	cmp	r3, #0
 800510a:	d012      	beq.n	8005132 <prvUnlockQueue+0x8e>
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	3310      	adds	r3, #16
 8005110:	4618      	mov	r0, r3
 8005112:	f000 fd7b 	bl	8005c0c <xTaskRemoveFromEventList>
 8005116:	4603      	mov	r3, r0
 8005118:	2b00      	cmp	r3, #0
 800511a:	d001      	beq.n	8005120 <prvUnlockQueue+0x7c>
 800511c:	f000 fe54 	bl	8005dc8 <vTaskMissedYield>
 8005120:	7bbb      	ldrb	r3, [r7, #14]
 8005122:	3b01      	subs	r3, #1
 8005124:	b2db      	uxtb	r3, r3
 8005126:	73bb      	strb	r3, [r7, #14]
 8005128:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800512c:	2b00      	cmp	r3, #0
 800512e:	dce9      	bgt.n	8005104 <prvUnlockQueue+0x60>
 8005130:	e000      	b.n	8005134 <prvUnlockQueue+0x90>
 8005132:	bf00      	nop
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	22ff      	movs	r2, #255	@ 0xff
 8005138:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800513c:	f001 fc86 	bl	8006a4c <vPortExitCritical>
 8005140:	bf00      	nop
 8005142:	3710      	adds	r7, #16
 8005144:	46bd      	mov	sp, r7
 8005146:	bd80      	pop	{r7, pc}

08005148 <prvIsQueueEmpty>:
 8005148:	b580      	push	{r7, lr}
 800514a:	b084      	sub	sp, #16
 800514c:	af00      	add	r7, sp, #0
 800514e:	6078      	str	r0, [r7, #4]
 8005150:	f001 fc4c 	bl	80069ec <vPortEnterCritical>
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005158:	2b00      	cmp	r3, #0
 800515a:	d102      	bne.n	8005162 <prvIsQueueEmpty+0x1a>
 800515c:	2301      	movs	r3, #1
 800515e:	60fb      	str	r3, [r7, #12]
 8005160:	e001      	b.n	8005166 <prvIsQueueEmpty+0x1e>
 8005162:	2300      	movs	r3, #0
 8005164:	60fb      	str	r3, [r7, #12]
 8005166:	f001 fc71 	bl	8006a4c <vPortExitCritical>
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	4618      	mov	r0, r3
 800516e:	3710      	adds	r7, #16
 8005170:	46bd      	mov	sp, r7
 8005172:	bd80      	pop	{r7, pc}

08005174 <prvIsQueueFull>:
 8005174:	b580      	push	{r7, lr}
 8005176:	b084      	sub	sp, #16
 8005178:	af00      	add	r7, sp, #0
 800517a:	6078      	str	r0, [r7, #4]
 800517c:	f001 fc36 	bl	80069ec <vPortEnterCritical>
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005188:	429a      	cmp	r2, r3
 800518a:	d102      	bne.n	8005192 <prvIsQueueFull+0x1e>
 800518c:	2301      	movs	r3, #1
 800518e:	60fb      	str	r3, [r7, #12]
 8005190:	e001      	b.n	8005196 <prvIsQueueFull+0x22>
 8005192:	2300      	movs	r3, #0
 8005194:	60fb      	str	r3, [r7, #12]
 8005196:	f001 fc59 	bl	8006a4c <vPortExitCritical>
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	4618      	mov	r0, r3
 800519e:	3710      	adds	r7, #16
 80051a0:	46bd      	mov	sp, r7
 80051a2:	bd80      	pop	{r7, pc}

080051a4 <vQueueAddToRegistry>:
 80051a4:	b480      	push	{r7}
 80051a6:	b085      	sub	sp, #20
 80051a8:	af00      	add	r7, sp, #0
 80051aa:	6078      	str	r0, [r7, #4]
 80051ac:	6039      	str	r1, [r7, #0]
 80051ae:	2300      	movs	r3, #0
 80051b0:	60fb      	str	r3, [r7, #12]
 80051b2:	e014      	b.n	80051de <vQueueAddToRegistry+0x3a>
 80051b4:	4a0e      	ldr	r2, [pc, #56]	@ (80051f0 <vQueueAddToRegistry+0x4c>)
 80051b6:	68fb      	ldr	r3, [r7, #12]
 80051b8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80051bc:	2b00      	cmp	r3, #0
 80051be:	d10b      	bne.n	80051d8 <vQueueAddToRegistry+0x34>
 80051c0:	490b      	ldr	r1, [pc, #44]	@ (80051f0 <vQueueAddToRegistry+0x4c>)
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	683a      	ldr	r2, [r7, #0]
 80051c6:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 80051ca:	4a09      	ldr	r2, [pc, #36]	@ (80051f0 <vQueueAddToRegistry+0x4c>)
 80051cc:	68fb      	ldr	r3, [r7, #12]
 80051ce:	00db      	lsls	r3, r3, #3
 80051d0:	4413      	add	r3, r2
 80051d2:	687a      	ldr	r2, [r7, #4]
 80051d4:	605a      	str	r2, [r3, #4]
 80051d6:	e006      	b.n	80051e6 <vQueueAddToRegistry+0x42>
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	3301      	adds	r3, #1
 80051dc:	60fb      	str	r3, [r7, #12]
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	2b07      	cmp	r3, #7
 80051e2:	d9e7      	bls.n	80051b4 <vQueueAddToRegistry+0x10>
 80051e4:	bf00      	nop
 80051e6:	bf00      	nop
 80051e8:	3714      	adds	r7, #20
 80051ea:	46bd      	mov	sp, r7
 80051ec:	bc80      	pop	{r7}
 80051ee:	4770      	bx	lr
 80051f0:	200009bc 	.word	0x200009bc

080051f4 <vQueueWaitForMessageRestricted>:
 80051f4:	b580      	push	{r7, lr}
 80051f6:	b086      	sub	sp, #24
 80051f8:	af00      	add	r7, sp, #0
 80051fa:	60f8      	str	r0, [r7, #12]
 80051fc:	60b9      	str	r1, [r7, #8]
 80051fe:	607a      	str	r2, [r7, #4]
 8005200:	68fb      	ldr	r3, [r7, #12]
 8005202:	617b      	str	r3, [r7, #20]
 8005204:	f001 fbf2 	bl	80069ec <vPortEnterCritical>
 8005208:	697b      	ldr	r3, [r7, #20]
 800520a:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800520e:	b25b      	sxtb	r3, r3
 8005210:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005214:	d103      	bne.n	800521e <vQueueWaitForMessageRestricted+0x2a>
 8005216:	697b      	ldr	r3, [r7, #20]
 8005218:	2200      	movs	r2, #0
 800521a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800521e:	697b      	ldr	r3, [r7, #20]
 8005220:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005224:	b25b      	sxtb	r3, r3
 8005226:	f1b3 3fff 	cmp.w	r3, #4294967295
 800522a:	d103      	bne.n	8005234 <vQueueWaitForMessageRestricted+0x40>
 800522c:	697b      	ldr	r3, [r7, #20]
 800522e:	2200      	movs	r2, #0
 8005230:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005234:	f001 fc0a 	bl	8006a4c <vPortExitCritical>
 8005238:	697b      	ldr	r3, [r7, #20]
 800523a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800523c:	2b00      	cmp	r3, #0
 800523e:	d106      	bne.n	800524e <vQueueWaitForMessageRestricted+0x5a>
 8005240:	697b      	ldr	r3, [r7, #20]
 8005242:	3324      	adds	r3, #36	@ 0x24
 8005244:	687a      	ldr	r2, [r7, #4]
 8005246:	68b9      	ldr	r1, [r7, #8]
 8005248:	4618      	mov	r0, r3
 800524a:	f000 fcb3 	bl	8005bb4 <vTaskPlaceOnEventListRestricted>
 800524e:	6978      	ldr	r0, [r7, #20]
 8005250:	f7ff ff28 	bl	80050a4 <prvUnlockQueue>
 8005254:	bf00      	nop
 8005256:	3718      	adds	r7, #24
 8005258:	46bd      	mov	sp, r7
 800525a:	bd80      	pop	{r7, pc}

0800525c <xTaskCreateStatic>:
 800525c:	b580      	push	{r7, lr}
 800525e:	b08e      	sub	sp, #56	@ 0x38
 8005260:	af04      	add	r7, sp, #16
 8005262:	60f8      	str	r0, [r7, #12]
 8005264:	60b9      	str	r1, [r7, #8]
 8005266:	607a      	str	r2, [r7, #4]
 8005268:	603b      	str	r3, [r7, #0]
 800526a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800526c:	2b00      	cmp	r3, #0
 800526e:	d10b      	bne.n	8005288 <xTaskCreateStatic+0x2c>
 8005270:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005274:	f383 8811 	msr	BASEPRI, r3
 8005278:	f3bf 8f6f 	isb	sy
 800527c:	f3bf 8f4f 	dsb	sy
 8005280:	623b      	str	r3, [r7, #32]
 8005282:	bf00      	nop
 8005284:	bf00      	nop
 8005286:	e7fd      	b.n	8005284 <xTaskCreateStatic+0x28>
 8005288:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800528a:	2b00      	cmp	r3, #0
 800528c:	d10b      	bne.n	80052a6 <xTaskCreateStatic+0x4a>
 800528e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005292:	f383 8811 	msr	BASEPRI, r3
 8005296:	f3bf 8f6f 	isb	sy
 800529a:	f3bf 8f4f 	dsb	sy
 800529e:	61fb      	str	r3, [r7, #28]
 80052a0:	bf00      	nop
 80052a2:	bf00      	nop
 80052a4:	e7fd      	b.n	80052a2 <xTaskCreateStatic+0x46>
 80052a6:	23a8      	movs	r3, #168	@ 0xa8
 80052a8:	613b      	str	r3, [r7, #16]
 80052aa:	693b      	ldr	r3, [r7, #16]
 80052ac:	2ba8      	cmp	r3, #168	@ 0xa8
 80052ae:	d00b      	beq.n	80052c8 <xTaskCreateStatic+0x6c>
 80052b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80052b4:	f383 8811 	msr	BASEPRI, r3
 80052b8:	f3bf 8f6f 	isb	sy
 80052bc:	f3bf 8f4f 	dsb	sy
 80052c0:	61bb      	str	r3, [r7, #24]
 80052c2:	bf00      	nop
 80052c4:	bf00      	nop
 80052c6:	e7fd      	b.n	80052c4 <xTaskCreateStatic+0x68>
 80052c8:	693b      	ldr	r3, [r7, #16]
 80052ca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	d01e      	beq.n	800530e <xTaskCreateStatic+0xb2>
 80052d0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d01b      	beq.n	800530e <xTaskCreateStatic+0xb2>
 80052d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80052d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80052da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052dc:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80052de:	631a      	str	r2, [r3, #48]	@ 0x30
 80052e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052e2:	2202      	movs	r2, #2
 80052e4:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 80052e8:	2300      	movs	r3, #0
 80052ea:	9303      	str	r3, [sp, #12]
 80052ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80052ee:	9302      	str	r3, [sp, #8]
 80052f0:	f107 0314 	add.w	r3, r7, #20
 80052f4:	9301      	str	r3, [sp, #4]
 80052f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80052f8:	9300      	str	r3, [sp, #0]
 80052fa:	683b      	ldr	r3, [r7, #0]
 80052fc:	687a      	ldr	r2, [r7, #4]
 80052fe:	68b9      	ldr	r1, [r7, #8]
 8005300:	68f8      	ldr	r0, [r7, #12]
 8005302:	f000 f851 	bl	80053a8 <prvInitialiseNewTask>
 8005306:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8005308:	f000 f8f6 	bl	80054f8 <prvAddNewTaskToReadyList>
 800530c:	e001      	b.n	8005312 <xTaskCreateStatic+0xb6>
 800530e:	2300      	movs	r3, #0
 8005310:	617b      	str	r3, [r7, #20]
 8005312:	697b      	ldr	r3, [r7, #20]
 8005314:	4618      	mov	r0, r3
 8005316:	3728      	adds	r7, #40	@ 0x28
 8005318:	46bd      	mov	sp, r7
 800531a:	bd80      	pop	{r7, pc}

0800531c <xTaskCreate>:
 800531c:	b580      	push	{r7, lr}
 800531e:	b08c      	sub	sp, #48	@ 0x30
 8005320:	af04      	add	r7, sp, #16
 8005322:	60f8      	str	r0, [r7, #12]
 8005324:	60b9      	str	r1, [r7, #8]
 8005326:	603b      	str	r3, [r7, #0]
 8005328:	4613      	mov	r3, r2
 800532a:	80fb      	strh	r3, [r7, #6]
 800532c:	88fb      	ldrh	r3, [r7, #6]
 800532e:	009b      	lsls	r3, r3, #2
 8005330:	4618      	mov	r0, r3
 8005332:	f001 fc5d 	bl	8006bf0 <pvPortMalloc>
 8005336:	6178      	str	r0, [r7, #20]
 8005338:	697b      	ldr	r3, [r7, #20]
 800533a:	2b00      	cmp	r3, #0
 800533c:	d00e      	beq.n	800535c <xTaskCreate+0x40>
 800533e:	20a8      	movs	r0, #168	@ 0xa8
 8005340:	f001 fc56 	bl	8006bf0 <pvPortMalloc>
 8005344:	61f8      	str	r0, [r7, #28]
 8005346:	69fb      	ldr	r3, [r7, #28]
 8005348:	2b00      	cmp	r3, #0
 800534a:	d003      	beq.n	8005354 <xTaskCreate+0x38>
 800534c:	69fb      	ldr	r3, [r7, #28]
 800534e:	697a      	ldr	r2, [r7, #20]
 8005350:	631a      	str	r2, [r3, #48]	@ 0x30
 8005352:	e005      	b.n	8005360 <xTaskCreate+0x44>
 8005354:	6978      	ldr	r0, [r7, #20]
 8005356:	f001 fd19 	bl	8006d8c <vPortFree>
 800535a:	e001      	b.n	8005360 <xTaskCreate+0x44>
 800535c:	2300      	movs	r3, #0
 800535e:	61fb      	str	r3, [r7, #28]
 8005360:	69fb      	ldr	r3, [r7, #28]
 8005362:	2b00      	cmp	r3, #0
 8005364:	d017      	beq.n	8005396 <xTaskCreate+0x7a>
 8005366:	69fb      	ldr	r3, [r7, #28]
 8005368:	2200      	movs	r2, #0
 800536a:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 800536e:	88fa      	ldrh	r2, [r7, #6]
 8005370:	2300      	movs	r3, #0
 8005372:	9303      	str	r3, [sp, #12]
 8005374:	69fb      	ldr	r3, [r7, #28]
 8005376:	9302      	str	r3, [sp, #8]
 8005378:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800537a:	9301      	str	r3, [sp, #4]
 800537c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800537e:	9300      	str	r3, [sp, #0]
 8005380:	683b      	ldr	r3, [r7, #0]
 8005382:	68b9      	ldr	r1, [r7, #8]
 8005384:	68f8      	ldr	r0, [r7, #12]
 8005386:	f000 f80f 	bl	80053a8 <prvInitialiseNewTask>
 800538a:	69f8      	ldr	r0, [r7, #28]
 800538c:	f000 f8b4 	bl	80054f8 <prvAddNewTaskToReadyList>
 8005390:	2301      	movs	r3, #1
 8005392:	61bb      	str	r3, [r7, #24]
 8005394:	e002      	b.n	800539c <xTaskCreate+0x80>
 8005396:	f04f 33ff 	mov.w	r3, #4294967295
 800539a:	61bb      	str	r3, [r7, #24]
 800539c:	69bb      	ldr	r3, [r7, #24]
 800539e:	4618      	mov	r0, r3
 80053a0:	3720      	adds	r7, #32
 80053a2:	46bd      	mov	sp, r7
 80053a4:	bd80      	pop	{r7, pc}
	...

080053a8 <prvInitialiseNewTask>:
 80053a8:	b580      	push	{r7, lr}
 80053aa:	b088      	sub	sp, #32
 80053ac:	af00      	add	r7, sp, #0
 80053ae:	60f8      	str	r0, [r7, #12]
 80053b0:	60b9      	str	r1, [r7, #8]
 80053b2:	607a      	str	r2, [r7, #4]
 80053b4:	603b      	str	r3, [r7, #0]
 80053b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80053b8:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	009b      	lsls	r3, r3, #2
 80053be:	461a      	mov	r2, r3
 80053c0:	21a5      	movs	r1, #165	@ 0xa5
 80053c2:	f001 fe23 	bl	800700c <memset>
 80053c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80053c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80053d0:	3b01      	subs	r3, #1
 80053d2:	009b      	lsls	r3, r3, #2
 80053d4:	4413      	add	r3, r2
 80053d6:	61bb      	str	r3, [r7, #24]
 80053d8:	69bb      	ldr	r3, [r7, #24]
 80053da:	f023 0307 	bic.w	r3, r3, #7
 80053de:	61bb      	str	r3, [r7, #24]
 80053e0:	69bb      	ldr	r3, [r7, #24]
 80053e2:	f003 0307 	and.w	r3, r3, #7
 80053e6:	2b00      	cmp	r3, #0
 80053e8:	d00b      	beq.n	8005402 <prvInitialiseNewTask+0x5a>
 80053ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80053ee:	f383 8811 	msr	BASEPRI, r3
 80053f2:	f3bf 8f6f 	isb	sy
 80053f6:	f3bf 8f4f 	dsb	sy
 80053fa:	617b      	str	r3, [r7, #20]
 80053fc:	bf00      	nop
 80053fe:	bf00      	nop
 8005400:	e7fd      	b.n	80053fe <prvInitialiseNewTask+0x56>
 8005402:	68bb      	ldr	r3, [r7, #8]
 8005404:	2b00      	cmp	r3, #0
 8005406:	d01f      	beq.n	8005448 <prvInitialiseNewTask+0xa0>
 8005408:	2300      	movs	r3, #0
 800540a:	61fb      	str	r3, [r7, #28]
 800540c:	e012      	b.n	8005434 <prvInitialiseNewTask+0x8c>
 800540e:	68ba      	ldr	r2, [r7, #8]
 8005410:	69fb      	ldr	r3, [r7, #28]
 8005412:	4413      	add	r3, r2
 8005414:	7819      	ldrb	r1, [r3, #0]
 8005416:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005418:	69fb      	ldr	r3, [r7, #28]
 800541a:	4413      	add	r3, r2
 800541c:	3334      	adds	r3, #52	@ 0x34
 800541e:	460a      	mov	r2, r1
 8005420:	701a      	strb	r2, [r3, #0]
 8005422:	68ba      	ldr	r2, [r7, #8]
 8005424:	69fb      	ldr	r3, [r7, #28]
 8005426:	4413      	add	r3, r2
 8005428:	781b      	ldrb	r3, [r3, #0]
 800542a:	2b00      	cmp	r3, #0
 800542c:	d006      	beq.n	800543c <prvInitialiseNewTask+0x94>
 800542e:	69fb      	ldr	r3, [r7, #28]
 8005430:	3301      	adds	r3, #1
 8005432:	61fb      	str	r3, [r7, #28]
 8005434:	69fb      	ldr	r3, [r7, #28]
 8005436:	2b0f      	cmp	r3, #15
 8005438:	d9e9      	bls.n	800540e <prvInitialiseNewTask+0x66>
 800543a:	e000      	b.n	800543e <prvInitialiseNewTask+0x96>
 800543c:	bf00      	nop
 800543e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005440:	2200      	movs	r2, #0
 8005442:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005446:	e003      	b.n	8005450 <prvInitialiseNewTask+0xa8>
 8005448:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800544a:	2200      	movs	r2, #0
 800544c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8005450:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005452:	2b37      	cmp	r3, #55	@ 0x37
 8005454:	d901      	bls.n	800545a <prvInitialiseNewTask+0xb2>
 8005456:	2337      	movs	r3, #55	@ 0x37
 8005458:	62bb      	str	r3, [r7, #40]	@ 0x28
 800545a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800545c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800545e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005460:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005462:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8005464:	64da      	str	r2, [r3, #76]	@ 0x4c
 8005466:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005468:	2200      	movs	r2, #0
 800546a:	651a      	str	r2, [r3, #80]	@ 0x50
 800546c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800546e:	3304      	adds	r3, #4
 8005470:	4618      	mov	r0, r3
 8005472:	f7ff f96a 	bl	800474a <vListInitialiseItem>
 8005476:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005478:	3318      	adds	r3, #24
 800547a:	4618      	mov	r0, r3
 800547c:	f7ff f965 	bl	800474a <vListInitialiseItem>
 8005480:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005482:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005484:	611a      	str	r2, [r3, #16]
 8005486:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005488:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800548c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800548e:	619a      	str	r2, [r3, #24]
 8005490:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005492:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005494:	625a      	str	r2, [r3, #36]	@ 0x24
 8005496:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005498:	2200      	movs	r2, #0
 800549a:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800549e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80054a0:	2200      	movs	r2, #0
 80054a2:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 80054a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80054a8:	3354      	adds	r3, #84	@ 0x54
 80054aa:	224c      	movs	r2, #76	@ 0x4c
 80054ac:	2100      	movs	r1, #0
 80054ae:	4618      	mov	r0, r3
 80054b0:	f001 fdac 	bl	800700c <memset>
 80054b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80054b6:	4a0d      	ldr	r2, [pc, #52]	@ (80054ec <prvInitialiseNewTask+0x144>)
 80054b8:	659a      	str	r2, [r3, #88]	@ 0x58
 80054ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80054bc:	4a0c      	ldr	r2, [pc, #48]	@ (80054f0 <prvInitialiseNewTask+0x148>)
 80054be:	65da      	str	r2, [r3, #92]	@ 0x5c
 80054c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80054c2:	4a0c      	ldr	r2, [pc, #48]	@ (80054f4 <prvInitialiseNewTask+0x14c>)
 80054c4:	661a      	str	r2, [r3, #96]	@ 0x60
 80054c6:	683a      	ldr	r2, [r7, #0]
 80054c8:	68f9      	ldr	r1, [r7, #12]
 80054ca:	69b8      	ldr	r0, [r7, #24]
 80054cc:	f001 f99e 	bl	800680c <pxPortInitialiseStack>
 80054d0:	4602      	mov	r2, r0
 80054d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80054d4:	601a      	str	r2, [r3, #0]
 80054d6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d002      	beq.n	80054e2 <prvInitialiseNewTask+0x13a>
 80054dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80054de:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80054e0:	601a      	str	r2, [r3, #0]
 80054e2:	bf00      	nop
 80054e4:	3720      	adds	r7, #32
 80054e6:	46bd      	mov	sp, r7
 80054e8:	bd80      	pop	{r7, pc}
 80054ea:	bf00      	nop
 80054ec:	20001c50 	.word	0x20001c50
 80054f0:	20001cb8 	.word	0x20001cb8
 80054f4:	20001d20 	.word	0x20001d20

080054f8 <prvAddNewTaskToReadyList>:
 80054f8:	b580      	push	{r7, lr}
 80054fa:	b082      	sub	sp, #8
 80054fc:	af00      	add	r7, sp, #0
 80054fe:	6078      	str	r0, [r7, #4]
 8005500:	f001 fa74 	bl	80069ec <vPortEnterCritical>
 8005504:	4b2d      	ldr	r3, [pc, #180]	@ (80055bc <prvAddNewTaskToReadyList+0xc4>)
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	3301      	adds	r3, #1
 800550a:	4a2c      	ldr	r2, [pc, #176]	@ (80055bc <prvAddNewTaskToReadyList+0xc4>)
 800550c:	6013      	str	r3, [r2, #0]
 800550e:	4b2c      	ldr	r3, [pc, #176]	@ (80055c0 <prvAddNewTaskToReadyList+0xc8>)
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	2b00      	cmp	r3, #0
 8005514:	d109      	bne.n	800552a <prvAddNewTaskToReadyList+0x32>
 8005516:	4a2a      	ldr	r2, [pc, #168]	@ (80055c0 <prvAddNewTaskToReadyList+0xc8>)
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	6013      	str	r3, [r2, #0]
 800551c:	4b27      	ldr	r3, [pc, #156]	@ (80055bc <prvAddNewTaskToReadyList+0xc4>)
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	2b01      	cmp	r3, #1
 8005522:	d110      	bne.n	8005546 <prvAddNewTaskToReadyList+0x4e>
 8005524:	f000 fc74 	bl	8005e10 <prvInitialiseTaskLists>
 8005528:	e00d      	b.n	8005546 <prvAddNewTaskToReadyList+0x4e>
 800552a:	4b26      	ldr	r3, [pc, #152]	@ (80055c4 <prvAddNewTaskToReadyList+0xcc>)
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	2b00      	cmp	r3, #0
 8005530:	d109      	bne.n	8005546 <prvAddNewTaskToReadyList+0x4e>
 8005532:	4b23      	ldr	r3, [pc, #140]	@ (80055c0 <prvAddNewTaskToReadyList+0xc8>)
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800553c:	429a      	cmp	r2, r3
 800553e:	d802      	bhi.n	8005546 <prvAddNewTaskToReadyList+0x4e>
 8005540:	4a1f      	ldr	r2, [pc, #124]	@ (80055c0 <prvAddNewTaskToReadyList+0xc8>)
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	6013      	str	r3, [r2, #0]
 8005546:	4b20      	ldr	r3, [pc, #128]	@ (80055c8 <prvAddNewTaskToReadyList+0xd0>)
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	3301      	adds	r3, #1
 800554c:	4a1e      	ldr	r2, [pc, #120]	@ (80055c8 <prvAddNewTaskToReadyList+0xd0>)
 800554e:	6013      	str	r3, [r2, #0]
 8005550:	4b1d      	ldr	r3, [pc, #116]	@ (80055c8 <prvAddNewTaskToReadyList+0xd0>)
 8005552:	681a      	ldr	r2, [r3, #0]
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	645a      	str	r2, [r3, #68]	@ 0x44
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800555c:	4b1b      	ldr	r3, [pc, #108]	@ (80055cc <prvAddNewTaskToReadyList+0xd4>)
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	429a      	cmp	r2, r3
 8005562:	d903      	bls.n	800556c <prvAddNewTaskToReadyList+0x74>
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005568:	4a18      	ldr	r2, [pc, #96]	@ (80055cc <prvAddNewTaskToReadyList+0xd4>)
 800556a:	6013      	str	r3, [r2, #0]
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005570:	4613      	mov	r3, r2
 8005572:	009b      	lsls	r3, r3, #2
 8005574:	4413      	add	r3, r2
 8005576:	009b      	lsls	r3, r3, #2
 8005578:	4a15      	ldr	r2, [pc, #84]	@ (80055d0 <prvAddNewTaskToReadyList+0xd8>)
 800557a:	441a      	add	r2, r3
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	3304      	adds	r3, #4
 8005580:	4619      	mov	r1, r3
 8005582:	4610      	mov	r0, r2
 8005584:	f7ff f8ed 	bl	8004762 <vListInsertEnd>
 8005588:	f001 fa60 	bl	8006a4c <vPortExitCritical>
 800558c:	4b0d      	ldr	r3, [pc, #52]	@ (80055c4 <prvAddNewTaskToReadyList+0xcc>)
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	2b00      	cmp	r3, #0
 8005592:	d00e      	beq.n	80055b2 <prvAddNewTaskToReadyList+0xba>
 8005594:	4b0a      	ldr	r3, [pc, #40]	@ (80055c0 <prvAddNewTaskToReadyList+0xc8>)
 8005596:	681b      	ldr	r3, [r3, #0]
 8005598:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800559e:	429a      	cmp	r2, r3
 80055a0:	d207      	bcs.n	80055b2 <prvAddNewTaskToReadyList+0xba>
 80055a2:	4b0c      	ldr	r3, [pc, #48]	@ (80055d4 <prvAddNewTaskToReadyList+0xdc>)
 80055a4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80055a8:	601a      	str	r2, [r3, #0]
 80055aa:	f3bf 8f4f 	dsb	sy
 80055ae:	f3bf 8f6f 	isb	sy
 80055b2:	bf00      	nop
 80055b4:	3708      	adds	r7, #8
 80055b6:	46bd      	mov	sp, r7
 80055b8:	bd80      	pop	{r7, pc}
 80055ba:	bf00      	nop
 80055bc:	20000ed0 	.word	0x20000ed0
 80055c0:	200009fc 	.word	0x200009fc
 80055c4:	20000edc 	.word	0x20000edc
 80055c8:	20000eec 	.word	0x20000eec
 80055cc:	20000ed8 	.word	0x20000ed8
 80055d0:	20000a00 	.word	0x20000a00
 80055d4:	e000ed04 	.word	0xe000ed04

080055d8 <vTaskDelayUntil>:
 80055d8:	b580      	push	{r7, lr}
 80055da:	b08a      	sub	sp, #40	@ 0x28
 80055dc:	af00      	add	r7, sp, #0
 80055de:	6078      	str	r0, [r7, #4]
 80055e0:	6039      	str	r1, [r7, #0]
 80055e2:	2300      	movs	r3, #0
 80055e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	2b00      	cmp	r3, #0
 80055ea:	d10b      	bne.n	8005604 <vTaskDelayUntil+0x2c>
 80055ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80055f0:	f383 8811 	msr	BASEPRI, r3
 80055f4:	f3bf 8f6f 	isb	sy
 80055f8:	f3bf 8f4f 	dsb	sy
 80055fc:	617b      	str	r3, [r7, #20]
 80055fe:	bf00      	nop
 8005600:	bf00      	nop
 8005602:	e7fd      	b.n	8005600 <vTaskDelayUntil+0x28>
 8005604:	683b      	ldr	r3, [r7, #0]
 8005606:	2b00      	cmp	r3, #0
 8005608:	d10b      	bne.n	8005622 <vTaskDelayUntil+0x4a>
 800560a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800560e:	f383 8811 	msr	BASEPRI, r3
 8005612:	f3bf 8f6f 	isb	sy
 8005616:	f3bf 8f4f 	dsb	sy
 800561a:	613b      	str	r3, [r7, #16]
 800561c:	bf00      	nop
 800561e:	bf00      	nop
 8005620:	e7fd      	b.n	800561e <vTaskDelayUntil+0x46>
 8005622:	4b2a      	ldr	r3, [pc, #168]	@ (80056cc <vTaskDelayUntil+0xf4>)
 8005624:	681b      	ldr	r3, [r3, #0]
 8005626:	2b00      	cmp	r3, #0
 8005628:	d00b      	beq.n	8005642 <vTaskDelayUntil+0x6a>
 800562a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800562e:	f383 8811 	msr	BASEPRI, r3
 8005632:	f3bf 8f6f 	isb	sy
 8005636:	f3bf 8f4f 	dsb	sy
 800563a:	60fb      	str	r3, [r7, #12]
 800563c:	bf00      	nop
 800563e:	bf00      	nop
 8005640:	e7fd      	b.n	800563e <vTaskDelayUntil+0x66>
 8005642:	f000 f8b9 	bl	80057b8 <vTaskSuspendAll>
 8005646:	4b22      	ldr	r3, [pc, #136]	@ (80056d0 <vTaskDelayUntil+0xf8>)
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	623b      	str	r3, [r7, #32]
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	683a      	ldr	r2, [r7, #0]
 8005652:	4413      	add	r3, r2
 8005654:	61fb      	str	r3, [r7, #28]
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	681b      	ldr	r3, [r3, #0]
 800565a:	6a3a      	ldr	r2, [r7, #32]
 800565c:	429a      	cmp	r2, r3
 800565e:	d20b      	bcs.n	8005678 <vTaskDelayUntil+0xa0>
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	69fa      	ldr	r2, [r7, #28]
 8005666:	429a      	cmp	r2, r3
 8005668:	d211      	bcs.n	800568e <vTaskDelayUntil+0xb6>
 800566a:	69fa      	ldr	r2, [r7, #28]
 800566c:	6a3b      	ldr	r3, [r7, #32]
 800566e:	429a      	cmp	r2, r3
 8005670:	d90d      	bls.n	800568e <vTaskDelayUntil+0xb6>
 8005672:	2301      	movs	r3, #1
 8005674:	627b      	str	r3, [r7, #36]	@ 0x24
 8005676:	e00a      	b.n	800568e <vTaskDelayUntil+0xb6>
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	69fa      	ldr	r2, [r7, #28]
 800567e:	429a      	cmp	r2, r3
 8005680:	d303      	bcc.n	800568a <vTaskDelayUntil+0xb2>
 8005682:	69fa      	ldr	r2, [r7, #28]
 8005684:	6a3b      	ldr	r3, [r7, #32]
 8005686:	429a      	cmp	r2, r3
 8005688:	d901      	bls.n	800568e <vTaskDelayUntil+0xb6>
 800568a:	2301      	movs	r3, #1
 800568c:	627b      	str	r3, [r7, #36]	@ 0x24
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	69fa      	ldr	r2, [r7, #28]
 8005692:	601a      	str	r2, [r3, #0]
 8005694:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005696:	2b00      	cmp	r3, #0
 8005698:	d006      	beq.n	80056a8 <vTaskDelayUntil+0xd0>
 800569a:	69fa      	ldr	r2, [r7, #28]
 800569c:	6a3b      	ldr	r3, [r7, #32]
 800569e:	1ad3      	subs	r3, r2, r3
 80056a0:	2100      	movs	r1, #0
 80056a2:	4618      	mov	r0, r3
 80056a4:	f000 fd06 	bl	80060b4 <prvAddCurrentTaskToDelayedList>
 80056a8:	f000 f894 	bl	80057d4 <xTaskResumeAll>
 80056ac:	61b8      	str	r0, [r7, #24]
 80056ae:	69bb      	ldr	r3, [r7, #24]
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	d107      	bne.n	80056c4 <vTaskDelayUntil+0xec>
 80056b4:	4b07      	ldr	r3, [pc, #28]	@ (80056d4 <vTaskDelayUntil+0xfc>)
 80056b6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80056ba:	601a      	str	r2, [r3, #0]
 80056bc:	f3bf 8f4f 	dsb	sy
 80056c0:	f3bf 8f6f 	isb	sy
 80056c4:	bf00      	nop
 80056c6:	3728      	adds	r7, #40	@ 0x28
 80056c8:	46bd      	mov	sp, r7
 80056ca:	bd80      	pop	{r7, pc}
 80056cc:	20000ef8 	.word	0x20000ef8
 80056d0:	20000ed4 	.word	0x20000ed4
 80056d4:	e000ed04 	.word	0xe000ed04

080056d8 <vTaskStartScheduler>:
 80056d8:	b580      	push	{r7, lr}
 80056da:	b08a      	sub	sp, #40	@ 0x28
 80056dc:	af04      	add	r7, sp, #16
 80056de:	2300      	movs	r3, #0
 80056e0:	60bb      	str	r3, [r7, #8]
 80056e2:	2300      	movs	r3, #0
 80056e4:	607b      	str	r3, [r7, #4]
 80056e6:	463a      	mov	r2, r7
 80056e8:	1d39      	adds	r1, r7, #4
 80056ea:	f107 0308 	add.w	r3, r7, #8
 80056ee:	4618      	mov	r0, r3
 80056f0:	f7fe ffda 	bl	80046a8 <vApplicationGetIdleTaskMemory>
 80056f4:	6839      	ldr	r1, [r7, #0]
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	68ba      	ldr	r2, [r7, #8]
 80056fa:	9202      	str	r2, [sp, #8]
 80056fc:	9301      	str	r3, [sp, #4]
 80056fe:	2300      	movs	r3, #0
 8005700:	9300      	str	r3, [sp, #0]
 8005702:	2300      	movs	r3, #0
 8005704:	460a      	mov	r2, r1
 8005706:	4924      	ldr	r1, [pc, #144]	@ (8005798 <vTaskStartScheduler+0xc0>)
 8005708:	4824      	ldr	r0, [pc, #144]	@ (800579c <vTaskStartScheduler+0xc4>)
 800570a:	f7ff fda7 	bl	800525c <xTaskCreateStatic>
 800570e:	4603      	mov	r3, r0
 8005710:	4a23      	ldr	r2, [pc, #140]	@ (80057a0 <vTaskStartScheduler+0xc8>)
 8005712:	6013      	str	r3, [r2, #0]
 8005714:	4b22      	ldr	r3, [pc, #136]	@ (80057a0 <vTaskStartScheduler+0xc8>)
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	2b00      	cmp	r3, #0
 800571a:	d002      	beq.n	8005722 <vTaskStartScheduler+0x4a>
 800571c:	2301      	movs	r3, #1
 800571e:	617b      	str	r3, [r7, #20]
 8005720:	e001      	b.n	8005726 <vTaskStartScheduler+0x4e>
 8005722:	2300      	movs	r3, #0
 8005724:	617b      	str	r3, [r7, #20]
 8005726:	697b      	ldr	r3, [r7, #20]
 8005728:	2b01      	cmp	r3, #1
 800572a:	d102      	bne.n	8005732 <vTaskStartScheduler+0x5a>
 800572c:	f000 fd16 	bl	800615c <xTimerCreateTimerTask>
 8005730:	6178      	str	r0, [r7, #20]
 8005732:	697b      	ldr	r3, [r7, #20]
 8005734:	2b01      	cmp	r3, #1
 8005736:	d11b      	bne.n	8005770 <vTaskStartScheduler+0x98>
 8005738:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800573c:	f383 8811 	msr	BASEPRI, r3
 8005740:	f3bf 8f6f 	isb	sy
 8005744:	f3bf 8f4f 	dsb	sy
 8005748:	613b      	str	r3, [r7, #16]
 800574a:	bf00      	nop
 800574c:	4b15      	ldr	r3, [pc, #84]	@ (80057a4 <vTaskStartScheduler+0xcc>)
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	3354      	adds	r3, #84	@ 0x54
 8005752:	4a15      	ldr	r2, [pc, #84]	@ (80057a8 <vTaskStartScheduler+0xd0>)
 8005754:	6013      	str	r3, [r2, #0]
 8005756:	4b15      	ldr	r3, [pc, #84]	@ (80057ac <vTaskStartScheduler+0xd4>)
 8005758:	f04f 32ff 	mov.w	r2, #4294967295
 800575c:	601a      	str	r2, [r3, #0]
 800575e:	4b14      	ldr	r3, [pc, #80]	@ (80057b0 <vTaskStartScheduler+0xd8>)
 8005760:	2201      	movs	r2, #1
 8005762:	601a      	str	r2, [r3, #0]
 8005764:	4b13      	ldr	r3, [pc, #76]	@ (80057b4 <vTaskStartScheduler+0xdc>)
 8005766:	2200      	movs	r2, #0
 8005768:	601a      	str	r2, [r3, #0]
 800576a:	f001 f8cd 	bl	8006908 <xPortStartScheduler>
 800576e:	e00f      	b.n	8005790 <vTaskStartScheduler+0xb8>
 8005770:	697b      	ldr	r3, [r7, #20]
 8005772:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005776:	d10b      	bne.n	8005790 <vTaskStartScheduler+0xb8>
 8005778:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800577c:	f383 8811 	msr	BASEPRI, r3
 8005780:	f3bf 8f6f 	isb	sy
 8005784:	f3bf 8f4f 	dsb	sy
 8005788:	60fb      	str	r3, [r7, #12]
 800578a:	bf00      	nop
 800578c:	bf00      	nop
 800578e:	e7fd      	b.n	800578c <vTaskStartScheduler+0xb4>
 8005790:	bf00      	nop
 8005792:	3718      	adds	r7, #24
 8005794:	46bd      	mov	sp, r7
 8005796:	bd80      	pop	{r7, pc}
 8005798:	08007a18 	.word	0x08007a18
 800579c:	08005de1 	.word	0x08005de1
 80057a0:	20000ef4 	.word	0x20000ef4
 80057a4:	200009fc 	.word	0x200009fc
 80057a8:	20000014 	.word	0x20000014
 80057ac:	20000ef0 	.word	0x20000ef0
 80057b0:	20000edc 	.word	0x20000edc
 80057b4:	20000ed4 	.word	0x20000ed4

080057b8 <vTaskSuspendAll>:
 80057b8:	b480      	push	{r7}
 80057ba:	af00      	add	r7, sp, #0
 80057bc:	4b04      	ldr	r3, [pc, #16]	@ (80057d0 <vTaskSuspendAll+0x18>)
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	3301      	adds	r3, #1
 80057c2:	4a03      	ldr	r2, [pc, #12]	@ (80057d0 <vTaskSuspendAll+0x18>)
 80057c4:	6013      	str	r3, [r2, #0]
 80057c6:	bf00      	nop
 80057c8:	46bd      	mov	sp, r7
 80057ca:	bc80      	pop	{r7}
 80057cc:	4770      	bx	lr
 80057ce:	bf00      	nop
 80057d0:	20000ef8 	.word	0x20000ef8

080057d4 <xTaskResumeAll>:
 80057d4:	b580      	push	{r7, lr}
 80057d6:	b084      	sub	sp, #16
 80057d8:	af00      	add	r7, sp, #0
 80057da:	2300      	movs	r3, #0
 80057dc:	60fb      	str	r3, [r7, #12]
 80057de:	2300      	movs	r3, #0
 80057e0:	60bb      	str	r3, [r7, #8]
 80057e2:	4b42      	ldr	r3, [pc, #264]	@ (80058ec <xTaskResumeAll+0x118>)
 80057e4:	681b      	ldr	r3, [r3, #0]
 80057e6:	2b00      	cmp	r3, #0
 80057e8:	d10b      	bne.n	8005802 <xTaskResumeAll+0x2e>
 80057ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80057ee:	f383 8811 	msr	BASEPRI, r3
 80057f2:	f3bf 8f6f 	isb	sy
 80057f6:	f3bf 8f4f 	dsb	sy
 80057fa:	603b      	str	r3, [r7, #0]
 80057fc:	bf00      	nop
 80057fe:	bf00      	nop
 8005800:	e7fd      	b.n	80057fe <xTaskResumeAll+0x2a>
 8005802:	f001 f8f3 	bl	80069ec <vPortEnterCritical>
 8005806:	4b39      	ldr	r3, [pc, #228]	@ (80058ec <xTaskResumeAll+0x118>)
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	3b01      	subs	r3, #1
 800580c:	4a37      	ldr	r2, [pc, #220]	@ (80058ec <xTaskResumeAll+0x118>)
 800580e:	6013      	str	r3, [r2, #0]
 8005810:	4b36      	ldr	r3, [pc, #216]	@ (80058ec <xTaskResumeAll+0x118>)
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	2b00      	cmp	r3, #0
 8005816:	d162      	bne.n	80058de <xTaskResumeAll+0x10a>
 8005818:	4b35      	ldr	r3, [pc, #212]	@ (80058f0 <xTaskResumeAll+0x11c>)
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	2b00      	cmp	r3, #0
 800581e:	d05e      	beq.n	80058de <xTaskResumeAll+0x10a>
 8005820:	e02f      	b.n	8005882 <xTaskResumeAll+0xae>
 8005822:	4b34      	ldr	r3, [pc, #208]	@ (80058f4 <xTaskResumeAll+0x120>)
 8005824:	68db      	ldr	r3, [r3, #12]
 8005826:	68db      	ldr	r3, [r3, #12]
 8005828:	60fb      	str	r3, [r7, #12]
 800582a:	68fb      	ldr	r3, [r7, #12]
 800582c:	3318      	adds	r3, #24
 800582e:	4618      	mov	r0, r3
 8005830:	f7fe fff2 	bl	8004818 <uxListRemove>
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	3304      	adds	r3, #4
 8005838:	4618      	mov	r0, r3
 800583a:	f7fe ffed 	bl	8004818 <uxListRemove>
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005842:	4b2d      	ldr	r3, [pc, #180]	@ (80058f8 <xTaskResumeAll+0x124>)
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	429a      	cmp	r2, r3
 8005848:	d903      	bls.n	8005852 <xTaskResumeAll+0x7e>
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800584e:	4a2a      	ldr	r2, [pc, #168]	@ (80058f8 <xTaskResumeAll+0x124>)
 8005850:	6013      	str	r3, [r2, #0]
 8005852:	68fb      	ldr	r3, [r7, #12]
 8005854:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005856:	4613      	mov	r3, r2
 8005858:	009b      	lsls	r3, r3, #2
 800585a:	4413      	add	r3, r2
 800585c:	009b      	lsls	r3, r3, #2
 800585e:	4a27      	ldr	r2, [pc, #156]	@ (80058fc <xTaskResumeAll+0x128>)
 8005860:	441a      	add	r2, r3
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	3304      	adds	r3, #4
 8005866:	4619      	mov	r1, r3
 8005868:	4610      	mov	r0, r2
 800586a:	f7fe ff7a 	bl	8004762 <vListInsertEnd>
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005872:	4b23      	ldr	r3, [pc, #140]	@ (8005900 <xTaskResumeAll+0x12c>)
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005878:	429a      	cmp	r2, r3
 800587a:	d302      	bcc.n	8005882 <xTaskResumeAll+0xae>
 800587c:	4b21      	ldr	r3, [pc, #132]	@ (8005904 <xTaskResumeAll+0x130>)
 800587e:	2201      	movs	r2, #1
 8005880:	601a      	str	r2, [r3, #0]
 8005882:	4b1c      	ldr	r3, [pc, #112]	@ (80058f4 <xTaskResumeAll+0x120>)
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	2b00      	cmp	r3, #0
 8005888:	d1cb      	bne.n	8005822 <xTaskResumeAll+0x4e>
 800588a:	68fb      	ldr	r3, [r7, #12]
 800588c:	2b00      	cmp	r3, #0
 800588e:	d001      	beq.n	8005894 <xTaskResumeAll+0xc0>
 8005890:	f000 fb62 	bl	8005f58 <prvResetNextTaskUnblockTime>
 8005894:	4b1c      	ldr	r3, [pc, #112]	@ (8005908 <xTaskResumeAll+0x134>)
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	607b      	str	r3, [r7, #4]
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	2b00      	cmp	r3, #0
 800589e:	d010      	beq.n	80058c2 <xTaskResumeAll+0xee>
 80058a0:	f000 f844 	bl	800592c <xTaskIncrementTick>
 80058a4:	4603      	mov	r3, r0
 80058a6:	2b00      	cmp	r3, #0
 80058a8:	d002      	beq.n	80058b0 <xTaskResumeAll+0xdc>
 80058aa:	4b16      	ldr	r3, [pc, #88]	@ (8005904 <xTaskResumeAll+0x130>)
 80058ac:	2201      	movs	r2, #1
 80058ae:	601a      	str	r2, [r3, #0]
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	3b01      	subs	r3, #1
 80058b4:	607b      	str	r3, [r7, #4]
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	2b00      	cmp	r3, #0
 80058ba:	d1f1      	bne.n	80058a0 <xTaskResumeAll+0xcc>
 80058bc:	4b12      	ldr	r3, [pc, #72]	@ (8005908 <xTaskResumeAll+0x134>)
 80058be:	2200      	movs	r2, #0
 80058c0:	601a      	str	r2, [r3, #0]
 80058c2:	4b10      	ldr	r3, [pc, #64]	@ (8005904 <xTaskResumeAll+0x130>)
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	2b00      	cmp	r3, #0
 80058c8:	d009      	beq.n	80058de <xTaskResumeAll+0x10a>
 80058ca:	2301      	movs	r3, #1
 80058cc:	60bb      	str	r3, [r7, #8]
 80058ce:	4b0f      	ldr	r3, [pc, #60]	@ (800590c <xTaskResumeAll+0x138>)
 80058d0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80058d4:	601a      	str	r2, [r3, #0]
 80058d6:	f3bf 8f4f 	dsb	sy
 80058da:	f3bf 8f6f 	isb	sy
 80058de:	f001 f8b5 	bl	8006a4c <vPortExitCritical>
 80058e2:	68bb      	ldr	r3, [r7, #8]
 80058e4:	4618      	mov	r0, r3
 80058e6:	3710      	adds	r7, #16
 80058e8:	46bd      	mov	sp, r7
 80058ea:	bd80      	pop	{r7, pc}
 80058ec:	20000ef8 	.word	0x20000ef8
 80058f0:	20000ed0 	.word	0x20000ed0
 80058f4:	20000e90 	.word	0x20000e90
 80058f8:	20000ed8 	.word	0x20000ed8
 80058fc:	20000a00 	.word	0x20000a00
 8005900:	200009fc 	.word	0x200009fc
 8005904:	20000ee4 	.word	0x20000ee4
 8005908:	20000ee0 	.word	0x20000ee0
 800590c:	e000ed04 	.word	0xe000ed04

08005910 <xTaskGetTickCount>:
 8005910:	b480      	push	{r7}
 8005912:	b083      	sub	sp, #12
 8005914:	af00      	add	r7, sp, #0
 8005916:	4b04      	ldr	r3, [pc, #16]	@ (8005928 <xTaskGetTickCount+0x18>)
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	607b      	str	r3, [r7, #4]
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	4618      	mov	r0, r3
 8005920:	370c      	adds	r7, #12
 8005922:	46bd      	mov	sp, r7
 8005924:	bc80      	pop	{r7}
 8005926:	4770      	bx	lr
 8005928:	20000ed4 	.word	0x20000ed4

0800592c <xTaskIncrementTick>:
 800592c:	b580      	push	{r7, lr}
 800592e:	b086      	sub	sp, #24
 8005930:	af00      	add	r7, sp, #0
 8005932:	2300      	movs	r3, #0
 8005934:	617b      	str	r3, [r7, #20]
 8005936:	4b4f      	ldr	r3, [pc, #316]	@ (8005a74 <xTaskIncrementTick+0x148>)
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	2b00      	cmp	r3, #0
 800593c:	f040 8090 	bne.w	8005a60 <xTaskIncrementTick+0x134>
 8005940:	4b4d      	ldr	r3, [pc, #308]	@ (8005a78 <xTaskIncrementTick+0x14c>)
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	3301      	adds	r3, #1
 8005946:	613b      	str	r3, [r7, #16]
 8005948:	4a4b      	ldr	r2, [pc, #300]	@ (8005a78 <xTaskIncrementTick+0x14c>)
 800594a:	693b      	ldr	r3, [r7, #16]
 800594c:	6013      	str	r3, [r2, #0]
 800594e:	693b      	ldr	r3, [r7, #16]
 8005950:	2b00      	cmp	r3, #0
 8005952:	d121      	bne.n	8005998 <xTaskIncrementTick+0x6c>
 8005954:	4b49      	ldr	r3, [pc, #292]	@ (8005a7c <xTaskIncrementTick+0x150>)
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	2b00      	cmp	r3, #0
 800595c:	d00b      	beq.n	8005976 <xTaskIncrementTick+0x4a>
 800595e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005962:	f383 8811 	msr	BASEPRI, r3
 8005966:	f3bf 8f6f 	isb	sy
 800596a:	f3bf 8f4f 	dsb	sy
 800596e:	603b      	str	r3, [r7, #0]
 8005970:	bf00      	nop
 8005972:	bf00      	nop
 8005974:	e7fd      	b.n	8005972 <xTaskIncrementTick+0x46>
 8005976:	4b41      	ldr	r3, [pc, #260]	@ (8005a7c <xTaskIncrementTick+0x150>)
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	60fb      	str	r3, [r7, #12]
 800597c:	4b40      	ldr	r3, [pc, #256]	@ (8005a80 <xTaskIncrementTick+0x154>)
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	4a3e      	ldr	r2, [pc, #248]	@ (8005a7c <xTaskIncrementTick+0x150>)
 8005982:	6013      	str	r3, [r2, #0]
 8005984:	4a3e      	ldr	r2, [pc, #248]	@ (8005a80 <xTaskIncrementTick+0x154>)
 8005986:	68fb      	ldr	r3, [r7, #12]
 8005988:	6013      	str	r3, [r2, #0]
 800598a:	4b3e      	ldr	r3, [pc, #248]	@ (8005a84 <xTaskIncrementTick+0x158>)
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	3301      	adds	r3, #1
 8005990:	4a3c      	ldr	r2, [pc, #240]	@ (8005a84 <xTaskIncrementTick+0x158>)
 8005992:	6013      	str	r3, [r2, #0]
 8005994:	f000 fae0 	bl	8005f58 <prvResetNextTaskUnblockTime>
 8005998:	4b3b      	ldr	r3, [pc, #236]	@ (8005a88 <xTaskIncrementTick+0x15c>)
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	693a      	ldr	r2, [r7, #16]
 800599e:	429a      	cmp	r2, r3
 80059a0:	d349      	bcc.n	8005a36 <xTaskIncrementTick+0x10a>
 80059a2:	4b36      	ldr	r3, [pc, #216]	@ (8005a7c <xTaskIncrementTick+0x150>)
 80059a4:	681b      	ldr	r3, [r3, #0]
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	2b00      	cmp	r3, #0
 80059aa:	d104      	bne.n	80059b6 <xTaskIncrementTick+0x8a>
 80059ac:	4b36      	ldr	r3, [pc, #216]	@ (8005a88 <xTaskIncrementTick+0x15c>)
 80059ae:	f04f 32ff 	mov.w	r2, #4294967295
 80059b2:	601a      	str	r2, [r3, #0]
 80059b4:	e03f      	b.n	8005a36 <xTaskIncrementTick+0x10a>
 80059b6:	4b31      	ldr	r3, [pc, #196]	@ (8005a7c <xTaskIncrementTick+0x150>)
 80059b8:	681b      	ldr	r3, [r3, #0]
 80059ba:	68db      	ldr	r3, [r3, #12]
 80059bc:	68db      	ldr	r3, [r3, #12]
 80059be:	60bb      	str	r3, [r7, #8]
 80059c0:	68bb      	ldr	r3, [r7, #8]
 80059c2:	685b      	ldr	r3, [r3, #4]
 80059c4:	607b      	str	r3, [r7, #4]
 80059c6:	693a      	ldr	r2, [r7, #16]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	429a      	cmp	r2, r3
 80059cc:	d203      	bcs.n	80059d6 <xTaskIncrementTick+0xaa>
 80059ce:	4a2e      	ldr	r2, [pc, #184]	@ (8005a88 <xTaskIncrementTick+0x15c>)
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	6013      	str	r3, [r2, #0]
 80059d4:	e02f      	b.n	8005a36 <xTaskIncrementTick+0x10a>
 80059d6:	68bb      	ldr	r3, [r7, #8]
 80059d8:	3304      	adds	r3, #4
 80059da:	4618      	mov	r0, r3
 80059dc:	f7fe ff1c 	bl	8004818 <uxListRemove>
 80059e0:	68bb      	ldr	r3, [r7, #8]
 80059e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80059e4:	2b00      	cmp	r3, #0
 80059e6:	d004      	beq.n	80059f2 <xTaskIncrementTick+0xc6>
 80059e8:	68bb      	ldr	r3, [r7, #8]
 80059ea:	3318      	adds	r3, #24
 80059ec:	4618      	mov	r0, r3
 80059ee:	f7fe ff13 	bl	8004818 <uxListRemove>
 80059f2:	68bb      	ldr	r3, [r7, #8]
 80059f4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80059f6:	4b25      	ldr	r3, [pc, #148]	@ (8005a8c <xTaskIncrementTick+0x160>)
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	429a      	cmp	r2, r3
 80059fc:	d903      	bls.n	8005a06 <xTaskIncrementTick+0xda>
 80059fe:	68bb      	ldr	r3, [r7, #8]
 8005a00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a02:	4a22      	ldr	r2, [pc, #136]	@ (8005a8c <xTaskIncrementTick+0x160>)
 8005a04:	6013      	str	r3, [r2, #0]
 8005a06:	68bb      	ldr	r3, [r7, #8]
 8005a08:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005a0a:	4613      	mov	r3, r2
 8005a0c:	009b      	lsls	r3, r3, #2
 8005a0e:	4413      	add	r3, r2
 8005a10:	009b      	lsls	r3, r3, #2
 8005a12:	4a1f      	ldr	r2, [pc, #124]	@ (8005a90 <xTaskIncrementTick+0x164>)
 8005a14:	441a      	add	r2, r3
 8005a16:	68bb      	ldr	r3, [r7, #8]
 8005a18:	3304      	adds	r3, #4
 8005a1a:	4619      	mov	r1, r3
 8005a1c:	4610      	mov	r0, r2
 8005a1e:	f7fe fea0 	bl	8004762 <vListInsertEnd>
 8005a22:	68bb      	ldr	r3, [r7, #8]
 8005a24:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005a26:	4b1b      	ldr	r3, [pc, #108]	@ (8005a94 <xTaskIncrementTick+0x168>)
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a2c:	429a      	cmp	r2, r3
 8005a2e:	d3b8      	bcc.n	80059a2 <xTaskIncrementTick+0x76>
 8005a30:	2301      	movs	r3, #1
 8005a32:	617b      	str	r3, [r7, #20]
 8005a34:	e7b5      	b.n	80059a2 <xTaskIncrementTick+0x76>
 8005a36:	4b17      	ldr	r3, [pc, #92]	@ (8005a94 <xTaskIncrementTick+0x168>)
 8005a38:	681b      	ldr	r3, [r3, #0]
 8005a3a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005a3c:	4914      	ldr	r1, [pc, #80]	@ (8005a90 <xTaskIncrementTick+0x164>)
 8005a3e:	4613      	mov	r3, r2
 8005a40:	009b      	lsls	r3, r3, #2
 8005a42:	4413      	add	r3, r2
 8005a44:	009b      	lsls	r3, r3, #2
 8005a46:	440b      	add	r3, r1
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	2b01      	cmp	r3, #1
 8005a4c:	d901      	bls.n	8005a52 <xTaskIncrementTick+0x126>
 8005a4e:	2301      	movs	r3, #1
 8005a50:	617b      	str	r3, [r7, #20]
 8005a52:	4b11      	ldr	r3, [pc, #68]	@ (8005a98 <xTaskIncrementTick+0x16c>)
 8005a54:	681b      	ldr	r3, [r3, #0]
 8005a56:	2b00      	cmp	r3, #0
 8005a58:	d007      	beq.n	8005a6a <xTaskIncrementTick+0x13e>
 8005a5a:	2301      	movs	r3, #1
 8005a5c:	617b      	str	r3, [r7, #20]
 8005a5e:	e004      	b.n	8005a6a <xTaskIncrementTick+0x13e>
 8005a60:	4b0e      	ldr	r3, [pc, #56]	@ (8005a9c <xTaskIncrementTick+0x170>)
 8005a62:	681b      	ldr	r3, [r3, #0]
 8005a64:	3301      	adds	r3, #1
 8005a66:	4a0d      	ldr	r2, [pc, #52]	@ (8005a9c <xTaskIncrementTick+0x170>)
 8005a68:	6013      	str	r3, [r2, #0]
 8005a6a:	697b      	ldr	r3, [r7, #20]
 8005a6c:	4618      	mov	r0, r3
 8005a6e:	3718      	adds	r7, #24
 8005a70:	46bd      	mov	sp, r7
 8005a72:	bd80      	pop	{r7, pc}
 8005a74:	20000ef8 	.word	0x20000ef8
 8005a78:	20000ed4 	.word	0x20000ed4
 8005a7c:	20000e88 	.word	0x20000e88
 8005a80:	20000e8c 	.word	0x20000e8c
 8005a84:	20000ee8 	.word	0x20000ee8
 8005a88:	20000ef0 	.word	0x20000ef0
 8005a8c:	20000ed8 	.word	0x20000ed8
 8005a90:	20000a00 	.word	0x20000a00
 8005a94:	200009fc 	.word	0x200009fc
 8005a98:	20000ee4 	.word	0x20000ee4
 8005a9c:	20000ee0 	.word	0x20000ee0

08005aa0 <vTaskSwitchContext>:
 8005aa0:	b480      	push	{r7}
 8005aa2:	b085      	sub	sp, #20
 8005aa4:	af00      	add	r7, sp, #0
 8005aa6:	4b2a      	ldr	r3, [pc, #168]	@ (8005b50 <vTaskSwitchContext+0xb0>)
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	2b00      	cmp	r3, #0
 8005aac:	d003      	beq.n	8005ab6 <vTaskSwitchContext+0x16>
 8005aae:	4b29      	ldr	r3, [pc, #164]	@ (8005b54 <vTaskSwitchContext+0xb4>)
 8005ab0:	2201      	movs	r2, #1
 8005ab2:	601a      	str	r2, [r3, #0]
 8005ab4:	e047      	b.n	8005b46 <vTaskSwitchContext+0xa6>
 8005ab6:	4b27      	ldr	r3, [pc, #156]	@ (8005b54 <vTaskSwitchContext+0xb4>)
 8005ab8:	2200      	movs	r2, #0
 8005aba:	601a      	str	r2, [r3, #0]
 8005abc:	4b26      	ldr	r3, [pc, #152]	@ (8005b58 <vTaskSwitchContext+0xb8>)
 8005abe:	681b      	ldr	r3, [r3, #0]
 8005ac0:	60fb      	str	r3, [r7, #12]
 8005ac2:	e011      	b.n	8005ae8 <vTaskSwitchContext+0x48>
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d10b      	bne.n	8005ae2 <vTaskSwitchContext+0x42>
 8005aca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005ace:	f383 8811 	msr	BASEPRI, r3
 8005ad2:	f3bf 8f6f 	isb	sy
 8005ad6:	f3bf 8f4f 	dsb	sy
 8005ada:	607b      	str	r3, [r7, #4]
 8005adc:	bf00      	nop
 8005ade:	bf00      	nop
 8005ae0:	e7fd      	b.n	8005ade <vTaskSwitchContext+0x3e>
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	3b01      	subs	r3, #1
 8005ae6:	60fb      	str	r3, [r7, #12]
 8005ae8:	491c      	ldr	r1, [pc, #112]	@ (8005b5c <vTaskSwitchContext+0xbc>)
 8005aea:	68fa      	ldr	r2, [r7, #12]
 8005aec:	4613      	mov	r3, r2
 8005aee:	009b      	lsls	r3, r3, #2
 8005af0:	4413      	add	r3, r2
 8005af2:	009b      	lsls	r3, r3, #2
 8005af4:	440b      	add	r3, r1
 8005af6:	681b      	ldr	r3, [r3, #0]
 8005af8:	2b00      	cmp	r3, #0
 8005afa:	d0e3      	beq.n	8005ac4 <vTaskSwitchContext+0x24>
 8005afc:	68fa      	ldr	r2, [r7, #12]
 8005afe:	4613      	mov	r3, r2
 8005b00:	009b      	lsls	r3, r3, #2
 8005b02:	4413      	add	r3, r2
 8005b04:	009b      	lsls	r3, r3, #2
 8005b06:	4a15      	ldr	r2, [pc, #84]	@ (8005b5c <vTaskSwitchContext+0xbc>)
 8005b08:	4413      	add	r3, r2
 8005b0a:	60bb      	str	r3, [r7, #8]
 8005b0c:	68bb      	ldr	r3, [r7, #8]
 8005b0e:	685b      	ldr	r3, [r3, #4]
 8005b10:	685a      	ldr	r2, [r3, #4]
 8005b12:	68bb      	ldr	r3, [r7, #8]
 8005b14:	605a      	str	r2, [r3, #4]
 8005b16:	68bb      	ldr	r3, [r7, #8]
 8005b18:	685a      	ldr	r2, [r3, #4]
 8005b1a:	68bb      	ldr	r3, [r7, #8]
 8005b1c:	3308      	adds	r3, #8
 8005b1e:	429a      	cmp	r2, r3
 8005b20:	d104      	bne.n	8005b2c <vTaskSwitchContext+0x8c>
 8005b22:	68bb      	ldr	r3, [r7, #8]
 8005b24:	685b      	ldr	r3, [r3, #4]
 8005b26:	685a      	ldr	r2, [r3, #4]
 8005b28:	68bb      	ldr	r3, [r7, #8]
 8005b2a:	605a      	str	r2, [r3, #4]
 8005b2c:	68bb      	ldr	r3, [r7, #8]
 8005b2e:	685b      	ldr	r3, [r3, #4]
 8005b30:	68db      	ldr	r3, [r3, #12]
 8005b32:	4a0b      	ldr	r2, [pc, #44]	@ (8005b60 <vTaskSwitchContext+0xc0>)
 8005b34:	6013      	str	r3, [r2, #0]
 8005b36:	4a08      	ldr	r2, [pc, #32]	@ (8005b58 <vTaskSwitchContext+0xb8>)
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	6013      	str	r3, [r2, #0]
 8005b3c:	4b08      	ldr	r3, [pc, #32]	@ (8005b60 <vTaskSwitchContext+0xc0>)
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	3354      	adds	r3, #84	@ 0x54
 8005b42:	4a08      	ldr	r2, [pc, #32]	@ (8005b64 <vTaskSwitchContext+0xc4>)
 8005b44:	6013      	str	r3, [r2, #0]
 8005b46:	bf00      	nop
 8005b48:	3714      	adds	r7, #20
 8005b4a:	46bd      	mov	sp, r7
 8005b4c:	bc80      	pop	{r7}
 8005b4e:	4770      	bx	lr
 8005b50:	20000ef8 	.word	0x20000ef8
 8005b54:	20000ee4 	.word	0x20000ee4
 8005b58:	20000ed8 	.word	0x20000ed8
 8005b5c:	20000a00 	.word	0x20000a00
 8005b60:	200009fc 	.word	0x200009fc
 8005b64:	20000014 	.word	0x20000014

08005b68 <vTaskPlaceOnEventList>:
 8005b68:	b580      	push	{r7, lr}
 8005b6a:	b084      	sub	sp, #16
 8005b6c:	af00      	add	r7, sp, #0
 8005b6e:	6078      	str	r0, [r7, #4]
 8005b70:	6039      	str	r1, [r7, #0]
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	2b00      	cmp	r3, #0
 8005b76:	d10b      	bne.n	8005b90 <vTaskPlaceOnEventList+0x28>
 8005b78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005b7c:	f383 8811 	msr	BASEPRI, r3
 8005b80:	f3bf 8f6f 	isb	sy
 8005b84:	f3bf 8f4f 	dsb	sy
 8005b88:	60fb      	str	r3, [r7, #12]
 8005b8a:	bf00      	nop
 8005b8c:	bf00      	nop
 8005b8e:	e7fd      	b.n	8005b8c <vTaskPlaceOnEventList+0x24>
 8005b90:	4b07      	ldr	r3, [pc, #28]	@ (8005bb0 <vTaskPlaceOnEventList+0x48>)
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	3318      	adds	r3, #24
 8005b96:	4619      	mov	r1, r3
 8005b98:	6878      	ldr	r0, [r7, #4]
 8005b9a:	f7fe fe05 	bl	80047a8 <vListInsert>
 8005b9e:	2101      	movs	r1, #1
 8005ba0:	6838      	ldr	r0, [r7, #0]
 8005ba2:	f000 fa87 	bl	80060b4 <prvAddCurrentTaskToDelayedList>
 8005ba6:	bf00      	nop
 8005ba8:	3710      	adds	r7, #16
 8005baa:	46bd      	mov	sp, r7
 8005bac:	bd80      	pop	{r7, pc}
 8005bae:	bf00      	nop
 8005bb0:	200009fc 	.word	0x200009fc

08005bb4 <vTaskPlaceOnEventListRestricted>:
 8005bb4:	b580      	push	{r7, lr}
 8005bb6:	b086      	sub	sp, #24
 8005bb8:	af00      	add	r7, sp, #0
 8005bba:	60f8      	str	r0, [r7, #12]
 8005bbc:	60b9      	str	r1, [r7, #8]
 8005bbe:	607a      	str	r2, [r7, #4]
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d10b      	bne.n	8005bde <vTaskPlaceOnEventListRestricted+0x2a>
 8005bc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005bca:	f383 8811 	msr	BASEPRI, r3
 8005bce:	f3bf 8f6f 	isb	sy
 8005bd2:	f3bf 8f4f 	dsb	sy
 8005bd6:	617b      	str	r3, [r7, #20]
 8005bd8:	bf00      	nop
 8005bda:	bf00      	nop
 8005bdc:	e7fd      	b.n	8005bda <vTaskPlaceOnEventListRestricted+0x26>
 8005bde:	4b0a      	ldr	r3, [pc, #40]	@ (8005c08 <vTaskPlaceOnEventListRestricted+0x54>)
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	3318      	adds	r3, #24
 8005be4:	4619      	mov	r1, r3
 8005be6:	68f8      	ldr	r0, [r7, #12]
 8005be8:	f7fe fdbb 	bl	8004762 <vListInsertEnd>
 8005bec:	687b      	ldr	r3, [r7, #4]
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d002      	beq.n	8005bf8 <vTaskPlaceOnEventListRestricted+0x44>
 8005bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8005bf6:	60bb      	str	r3, [r7, #8]
 8005bf8:	6879      	ldr	r1, [r7, #4]
 8005bfa:	68b8      	ldr	r0, [r7, #8]
 8005bfc:	f000 fa5a 	bl	80060b4 <prvAddCurrentTaskToDelayedList>
 8005c00:	bf00      	nop
 8005c02:	3718      	adds	r7, #24
 8005c04:	46bd      	mov	sp, r7
 8005c06:	bd80      	pop	{r7, pc}
 8005c08:	200009fc 	.word	0x200009fc

08005c0c <xTaskRemoveFromEventList>:
 8005c0c:	b580      	push	{r7, lr}
 8005c0e:	b086      	sub	sp, #24
 8005c10:	af00      	add	r7, sp, #0
 8005c12:	6078      	str	r0, [r7, #4]
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	68db      	ldr	r3, [r3, #12]
 8005c18:	68db      	ldr	r3, [r3, #12]
 8005c1a:	613b      	str	r3, [r7, #16]
 8005c1c:	693b      	ldr	r3, [r7, #16]
 8005c1e:	2b00      	cmp	r3, #0
 8005c20:	d10b      	bne.n	8005c3a <xTaskRemoveFromEventList+0x2e>
 8005c22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005c26:	f383 8811 	msr	BASEPRI, r3
 8005c2a:	f3bf 8f6f 	isb	sy
 8005c2e:	f3bf 8f4f 	dsb	sy
 8005c32:	60fb      	str	r3, [r7, #12]
 8005c34:	bf00      	nop
 8005c36:	bf00      	nop
 8005c38:	e7fd      	b.n	8005c36 <xTaskRemoveFromEventList+0x2a>
 8005c3a:	693b      	ldr	r3, [r7, #16]
 8005c3c:	3318      	adds	r3, #24
 8005c3e:	4618      	mov	r0, r3
 8005c40:	f7fe fdea 	bl	8004818 <uxListRemove>
 8005c44:	4b1d      	ldr	r3, [pc, #116]	@ (8005cbc <xTaskRemoveFromEventList+0xb0>)
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	2b00      	cmp	r3, #0
 8005c4a:	d11d      	bne.n	8005c88 <xTaskRemoveFromEventList+0x7c>
 8005c4c:	693b      	ldr	r3, [r7, #16]
 8005c4e:	3304      	adds	r3, #4
 8005c50:	4618      	mov	r0, r3
 8005c52:	f7fe fde1 	bl	8004818 <uxListRemove>
 8005c56:	693b      	ldr	r3, [r7, #16]
 8005c58:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005c5a:	4b19      	ldr	r3, [pc, #100]	@ (8005cc0 <xTaskRemoveFromEventList+0xb4>)
 8005c5c:	681b      	ldr	r3, [r3, #0]
 8005c5e:	429a      	cmp	r2, r3
 8005c60:	d903      	bls.n	8005c6a <xTaskRemoveFromEventList+0x5e>
 8005c62:	693b      	ldr	r3, [r7, #16]
 8005c64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005c66:	4a16      	ldr	r2, [pc, #88]	@ (8005cc0 <xTaskRemoveFromEventList+0xb4>)
 8005c68:	6013      	str	r3, [r2, #0]
 8005c6a:	693b      	ldr	r3, [r7, #16]
 8005c6c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005c6e:	4613      	mov	r3, r2
 8005c70:	009b      	lsls	r3, r3, #2
 8005c72:	4413      	add	r3, r2
 8005c74:	009b      	lsls	r3, r3, #2
 8005c76:	4a13      	ldr	r2, [pc, #76]	@ (8005cc4 <xTaskRemoveFromEventList+0xb8>)
 8005c78:	441a      	add	r2, r3
 8005c7a:	693b      	ldr	r3, [r7, #16]
 8005c7c:	3304      	adds	r3, #4
 8005c7e:	4619      	mov	r1, r3
 8005c80:	4610      	mov	r0, r2
 8005c82:	f7fe fd6e 	bl	8004762 <vListInsertEnd>
 8005c86:	e005      	b.n	8005c94 <xTaskRemoveFromEventList+0x88>
 8005c88:	693b      	ldr	r3, [r7, #16]
 8005c8a:	3318      	adds	r3, #24
 8005c8c:	4619      	mov	r1, r3
 8005c8e:	480e      	ldr	r0, [pc, #56]	@ (8005cc8 <xTaskRemoveFromEventList+0xbc>)
 8005c90:	f7fe fd67 	bl	8004762 <vListInsertEnd>
 8005c94:	693b      	ldr	r3, [r7, #16]
 8005c96:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005c98:	4b0c      	ldr	r3, [pc, #48]	@ (8005ccc <xTaskRemoveFromEventList+0xc0>)
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005c9e:	429a      	cmp	r2, r3
 8005ca0:	d905      	bls.n	8005cae <xTaskRemoveFromEventList+0xa2>
 8005ca2:	2301      	movs	r3, #1
 8005ca4:	617b      	str	r3, [r7, #20]
 8005ca6:	4b0a      	ldr	r3, [pc, #40]	@ (8005cd0 <xTaskRemoveFromEventList+0xc4>)
 8005ca8:	2201      	movs	r2, #1
 8005caa:	601a      	str	r2, [r3, #0]
 8005cac:	e001      	b.n	8005cb2 <xTaskRemoveFromEventList+0xa6>
 8005cae:	2300      	movs	r3, #0
 8005cb0:	617b      	str	r3, [r7, #20]
 8005cb2:	697b      	ldr	r3, [r7, #20]
 8005cb4:	4618      	mov	r0, r3
 8005cb6:	3718      	adds	r7, #24
 8005cb8:	46bd      	mov	sp, r7
 8005cba:	bd80      	pop	{r7, pc}
 8005cbc:	20000ef8 	.word	0x20000ef8
 8005cc0:	20000ed8 	.word	0x20000ed8
 8005cc4:	20000a00 	.word	0x20000a00
 8005cc8:	20000e90 	.word	0x20000e90
 8005ccc:	200009fc 	.word	0x200009fc
 8005cd0:	20000ee4 	.word	0x20000ee4

08005cd4 <vTaskInternalSetTimeOutState>:
 8005cd4:	b480      	push	{r7}
 8005cd6:	b083      	sub	sp, #12
 8005cd8:	af00      	add	r7, sp, #0
 8005cda:	6078      	str	r0, [r7, #4]
 8005cdc:	4b06      	ldr	r3, [pc, #24]	@ (8005cf8 <vTaskInternalSetTimeOutState+0x24>)
 8005cde:	681a      	ldr	r2, [r3, #0]
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	601a      	str	r2, [r3, #0]
 8005ce4:	4b05      	ldr	r3, [pc, #20]	@ (8005cfc <vTaskInternalSetTimeOutState+0x28>)
 8005ce6:	681a      	ldr	r2, [r3, #0]
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	605a      	str	r2, [r3, #4]
 8005cec:	bf00      	nop
 8005cee:	370c      	adds	r7, #12
 8005cf0:	46bd      	mov	sp, r7
 8005cf2:	bc80      	pop	{r7}
 8005cf4:	4770      	bx	lr
 8005cf6:	bf00      	nop
 8005cf8:	20000ee8 	.word	0x20000ee8
 8005cfc:	20000ed4 	.word	0x20000ed4

08005d00 <xTaskCheckForTimeOut>:
 8005d00:	b580      	push	{r7, lr}
 8005d02:	b088      	sub	sp, #32
 8005d04:	af00      	add	r7, sp, #0
 8005d06:	6078      	str	r0, [r7, #4]
 8005d08:	6039      	str	r1, [r7, #0]
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	2b00      	cmp	r3, #0
 8005d0e:	d10b      	bne.n	8005d28 <xTaskCheckForTimeOut+0x28>
 8005d10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005d14:	f383 8811 	msr	BASEPRI, r3
 8005d18:	f3bf 8f6f 	isb	sy
 8005d1c:	f3bf 8f4f 	dsb	sy
 8005d20:	613b      	str	r3, [r7, #16]
 8005d22:	bf00      	nop
 8005d24:	bf00      	nop
 8005d26:	e7fd      	b.n	8005d24 <xTaskCheckForTimeOut+0x24>
 8005d28:	683b      	ldr	r3, [r7, #0]
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d10b      	bne.n	8005d46 <xTaskCheckForTimeOut+0x46>
 8005d2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005d32:	f383 8811 	msr	BASEPRI, r3
 8005d36:	f3bf 8f6f 	isb	sy
 8005d3a:	f3bf 8f4f 	dsb	sy
 8005d3e:	60fb      	str	r3, [r7, #12]
 8005d40:	bf00      	nop
 8005d42:	bf00      	nop
 8005d44:	e7fd      	b.n	8005d42 <xTaskCheckForTimeOut+0x42>
 8005d46:	f000 fe51 	bl	80069ec <vPortEnterCritical>
 8005d4a:	4b1d      	ldr	r3, [pc, #116]	@ (8005dc0 <xTaskCheckForTimeOut+0xc0>)
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	61bb      	str	r3, [r7, #24]
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	685b      	ldr	r3, [r3, #4]
 8005d54:	69ba      	ldr	r2, [r7, #24]
 8005d56:	1ad3      	subs	r3, r2, r3
 8005d58:	617b      	str	r3, [r7, #20]
 8005d5a:	683b      	ldr	r3, [r7, #0]
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005d62:	d102      	bne.n	8005d6a <xTaskCheckForTimeOut+0x6a>
 8005d64:	2300      	movs	r3, #0
 8005d66:	61fb      	str	r3, [r7, #28]
 8005d68:	e023      	b.n	8005db2 <xTaskCheckForTimeOut+0xb2>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	681a      	ldr	r2, [r3, #0]
 8005d6e:	4b15      	ldr	r3, [pc, #84]	@ (8005dc4 <xTaskCheckForTimeOut+0xc4>)
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	429a      	cmp	r2, r3
 8005d74:	d007      	beq.n	8005d86 <xTaskCheckForTimeOut+0x86>
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	685b      	ldr	r3, [r3, #4]
 8005d7a:	69ba      	ldr	r2, [r7, #24]
 8005d7c:	429a      	cmp	r2, r3
 8005d7e:	d302      	bcc.n	8005d86 <xTaskCheckForTimeOut+0x86>
 8005d80:	2301      	movs	r3, #1
 8005d82:	61fb      	str	r3, [r7, #28]
 8005d84:	e015      	b.n	8005db2 <xTaskCheckForTimeOut+0xb2>
 8005d86:	683b      	ldr	r3, [r7, #0]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	697a      	ldr	r2, [r7, #20]
 8005d8c:	429a      	cmp	r2, r3
 8005d8e:	d20b      	bcs.n	8005da8 <xTaskCheckForTimeOut+0xa8>
 8005d90:	683b      	ldr	r3, [r7, #0]
 8005d92:	681a      	ldr	r2, [r3, #0]
 8005d94:	697b      	ldr	r3, [r7, #20]
 8005d96:	1ad2      	subs	r2, r2, r3
 8005d98:	683b      	ldr	r3, [r7, #0]
 8005d9a:	601a      	str	r2, [r3, #0]
 8005d9c:	6878      	ldr	r0, [r7, #4]
 8005d9e:	f7ff ff99 	bl	8005cd4 <vTaskInternalSetTimeOutState>
 8005da2:	2300      	movs	r3, #0
 8005da4:	61fb      	str	r3, [r7, #28]
 8005da6:	e004      	b.n	8005db2 <xTaskCheckForTimeOut+0xb2>
 8005da8:	683b      	ldr	r3, [r7, #0]
 8005daa:	2200      	movs	r2, #0
 8005dac:	601a      	str	r2, [r3, #0]
 8005dae:	2301      	movs	r3, #1
 8005db0:	61fb      	str	r3, [r7, #28]
 8005db2:	f000 fe4b 	bl	8006a4c <vPortExitCritical>
 8005db6:	69fb      	ldr	r3, [r7, #28]
 8005db8:	4618      	mov	r0, r3
 8005dba:	3720      	adds	r7, #32
 8005dbc:	46bd      	mov	sp, r7
 8005dbe:	bd80      	pop	{r7, pc}
 8005dc0:	20000ed4 	.word	0x20000ed4
 8005dc4:	20000ee8 	.word	0x20000ee8

08005dc8 <vTaskMissedYield>:
 8005dc8:	b480      	push	{r7}
 8005dca:	af00      	add	r7, sp, #0
 8005dcc:	4b03      	ldr	r3, [pc, #12]	@ (8005ddc <vTaskMissedYield+0x14>)
 8005dce:	2201      	movs	r2, #1
 8005dd0:	601a      	str	r2, [r3, #0]
 8005dd2:	bf00      	nop
 8005dd4:	46bd      	mov	sp, r7
 8005dd6:	bc80      	pop	{r7}
 8005dd8:	4770      	bx	lr
 8005dda:	bf00      	nop
 8005ddc:	20000ee4 	.word	0x20000ee4

08005de0 <prvIdleTask>:
 8005de0:	b580      	push	{r7, lr}
 8005de2:	b082      	sub	sp, #8
 8005de4:	af00      	add	r7, sp, #0
 8005de6:	6078      	str	r0, [r7, #4]
 8005de8:	f000 f852 	bl	8005e90 <prvCheckTasksWaitingTermination>
 8005dec:	4b06      	ldr	r3, [pc, #24]	@ (8005e08 <prvIdleTask+0x28>)
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	2b01      	cmp	r3, #1
 8005df2:	d9f9      	bls.n	8005de8 <prvIdleTask+0x8>
 8005df4:	4b05      	ldr	r3, [pc, #20]	@ (8005e0c <prvIdleTask+0x2c>)
 8005df6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005dfa:	601a      	str	r2, [r3, #0]
 8005dfc:	f3bf 8f4f 	dsb	sy
 8005e00:	f3bf 8f6f 	isb	sy
 8005e04:	e7f0      	b.n	8005de8 <prvIdleTask+0x8>
 8005e06:	bf00      	nop
 8005e08:	20000a00 	.word	0x20000a00
 8005e0c:	e000ed04 	.word	0xe000ed04

08005e10 <prvInitialiseTaskLists>:
 8005e10:	b580      	push	{r7, lr}
 8005e12:	b082      	sub	sp, #8
 8005e14:	af00      	add	r7, sp, #0
 8005e16:	2300      	movs	r3, #0
 8005e18:	607b      	str	r3, [r7, #4]
 8005e1a:	e00c      	b.n	8005e36 <prvInitialiseTaskLists+0x26>
 8005e1c:	687a      	ldr	r2, [r7, #4]
 8005e1e:	4613      	mov	r3, r2
 8005e20:	009b      	lsls	r3, r3, #2
 8005e22:	4413      	add	r3, r2
 8005e24:	009b      	lsls	r3, r3, #2
 8005e26:	4a12      	ldr	r2, [pc, #72]	@ (8005e70 <prvInitialiseTaskLists+0x60>)
 8005e28:	4413      	add	r3, r2
 8005e2a:	4618      	mov	r0, r3
 8005e2c:	f7fe fc6e 	bl	800470c <vListInitialise>
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	3301      	adds	r3, #1
 8005e34:	607b      	str	r3, [r7, #4]
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	2b37      	cmp	r3, #55	@ 0x37
 8005e3a:	d9ef      	bls.n	8005e1c <prvInitialiseTaskLists+0xc>
 8005e3c:	480d      	ldr	r0, [pc, #52]	@ (8005e74 <prvInitialiseTaskLists+0x64>)
 8005e3e:	f7fe fc65 	bl	800470c <vListInitialise>
 8005e42:	480d      	ldr	r0, [pc, #52]	@ (8005e78 <prvInitialiseTaskLists+0x68>)
 8005e44:	f7fe fc62 	bl	800470c <vListInitialise>
 8005e48:	480c      	ldr	r0, [pc, #48]	@ (8005e7c <prvInitialiseTaskLists+0x6c>)
 8005e4a:	f7fe fc5f 	bl	800470c <vListInitialise>
 8005e4e:	480c      	ldr	r0, [pc, #48]	@ (8005e80 <prvInitialiseTaskLists+0x70>)
 8005e50:	f7fe fc5c 	bl	800470c <vListInitialise>
 8005e54:	480b      	ldr	r0, [pc, #44]	@ (8005e84 <prvInitialiseTaskLists+0x74>)
 8005e56:	f7fe fc59 	bl	800470c <vListInitialise>
 8005e5a:	4b0b      	ldr	r3, [pc, #44]	@ (8005e88 <prvInitialiseTaskLists+0x78>)
 8005e5c:	4a05      	ldr	r2, [pc, #20]	@ (8005e74 <prvInitialiseTaskLists+0x64>)
 8005e5e:	601a      	str	r2, [r3, #0]
 8005e60:	4b0a      	ldr	r3, [pc, #40]	@ (8005e8c <prvInitialiseTaskLists+0x7c>)
 8005e62:	4a05      	ldr	r2, [pc, #20]	@ (8005e78 <prvInitialiseTaskLists+0x68>)
 8005e64:	601a      	str	r2, [r3, #0]
 8005e66:	bf00      	nop
 8005e68:	3708      	adds	r7, #8
 8005e6a:	46bd      	mov	sp, r7
 8005e6c:	bd80      	pop	{r7, pc}
 8005e6e:	bf00      	nop
 8005e70:	20000a00 	.word	0x20000a00
 8005e74:	20000e60 	.word	0x20000e60
 8005e78:	20000e74 	.word	0x20000e74
 8005e7c:	20000e90 	.word	0x20000e90
 8005e80:	20000ea4 	.word	0x20000ea4
 8005e84:	20000ebc 	.word	0x20000ebc
 8005e88:	20000e88 	.word	0x20000e88
 8005e8c:	20000e8c 	.word	0x20000e8c

08005e90 <prvCheckTasksWaitingTermination>:
 8005e90:	b580      	push	{r7, lr}
 8005e92:	b082      	sub	sp, #8
 8005e94:	af00      	add	r7, sp, #0
 8005e96:	e019      	b.n	8005ecc <prvCheckTasksWaitingTermination+0x3c>
 8005e98:	f000 fda8 	bl	80069ec <vPortEnterCritical>
 8005e9c:	4b10      	ldr	r3, [pc, #64]	@ (8005ee0 <prvCheckTasksWaitingTermination+0x50>)
 8005e9e:	68db      	ldr	r3, [r3, #12]
 8005ea0:	68db      	ldr	r3, [r3, #12]
 8005ea2:	607b      	str	r3, [r7, #4]
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	3304      	adds	r3, #4
 8005ea8:	4618      	mov	r0, r3
 8005eaa:	f7fe fcb5 	bl	8004818 <uxListRemove>
 8005eae:	4b0d      	ldr	r3, [pc, #52]	@ (8005ee4 <prvCheckTasksWaitingTermination+0x54>)
 8005eb0:	681b      	ldr	r3, [r3, #0]
 8005eb2:	3b01      	subs	r3, #1
 8005eb4:	4a0b      	ldr	r2, [pc, #44]	@ (8005ee4 <prvCheckTasksWaitingTermination+0x54>)
 8005eb6:	6013      	str	r3, [r2, #0]
 8005eb8:	4b0b      	ldr	r3, [pc, #44]	@ (8005ee8 <prvCheckTasksWaitingTermination+0x58>)
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	3b01      	subs	r3, #1
 8005ebe:	4a0a      	ldr	r2, [pc, #40]	@ (8005ee8 <prvCheckTasksWaitingTermination+0x58>)
 8005ec0:	6013      	str	r3, [r2, #0]
 8005ec2:	f000 fdc3 	bl	8006a4c <vPortExitCritical>
 8005ec6:	6878      	ldr	r0, [r7, #4]
 8005ec8:	f000 f810 	bl	8005eec <prvDeleteTCB>
 8005ecc:	4b06      	ldr	r3, [pc, #24]	@ (8005ee8 <prvCheckTasksWaitingTermination+0x58>)
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	2b00      	cmp	r3, #0
 8005ed2:	d1e1      	bne.n	8005e98 <prvCheckTasksWaitingTermination+0x8>
 8005ed4:	bf00      	nop
 8005ed6:	bf00      	nop
 8005ed8:	3708      	adds	r7, #8
 8005eda:	46bd      	mov	sp, r7
 8005edc:	bd80      	pop	{r7, pc}
 8005ede:	bf00      	nop
 8005ee0:	20000ea4 	.word	0x20000ea4
 8005ee4:	20000ed0 	.word	0x20000ed0
 8005ee8:	20000eb8 	.word	0x20000eb8

08005eec <prvDeleteTCB>:
 8005eec:	b580      	push	{r7, lr}
 8005eee:	b084      	sub	sp, #16
 8005ef0:	af00      	add	r7, sp, #0
 8005ef2:	6078      	str	r0, [r7, #4]
 8005ef4:	687b      	ldr	r3, [r7, #4]
 8005ef6:	3354      	adds	r3, #84	@ 0x54
 8005ef8:	4618      	mov	r0, r3
 8005efa:	f001 f88f 	bl	800701c <_reclaim_reent>
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8005f04:	2b00      	cmp	r3, #0
 8005f06:	d108      	bne.n	8005f1a <prvDeleteTCB+0x2e>
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f0c:	4618      	mov	r0, r3
 8005f0e:	f000 ff3d 	bl	8006d8c <vPortFree>
 8005f12:	6878      	ldr	r0, [r7, #4]
 8005f14:	f000 ff3a 	bl	8006d8c <vPortFree>
 8005f18:	e019      	b.n	8005f4e <prvDeleteTCB+0x62>
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8005f20:	2b01      	cmp	r3, #1
 8005f22:	d103      	bne.n	8005f2c <prvDeleteTCB+0x40>
 8005f24:	6878      	ldr	r0, [r7, #4]
 8005f26:	f000 ff31 	bl	8006d8c <vPortFree>
 8005f2a:	e010      	b.n	8005f4e <prvDeleteTCB+0x62>
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8005f32:	2b02      	cmp	r3, #2
 8005f34:	d00b      	beq.n	8005f4e <prvDeleteTCB+0x62>
 8005f36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005f3a:	f383 8811 	msr	BASEPRI, r3
 8005f3e:	f3bf 8f6f 	isb	sy
 8005f42:	f3bf 8f4f 	dsb	sy
 8005f46:	60fb      	str	r3, [r7, #12]
 8005f48:	bf00      	nop
 8005f4a:	bf00      	nop
 8005f4c:	e7fd      	b.n	8005f4a <prvDeleteTCB+0x5e>
 8005f4e:	bf00      	nop
 8005f50:	3710      	adds	r7, #16
 8005f52:	46bd      	mov	sp, r7
 8005f54:	bd80      	pop	{r7, pc}
	...

08005f58 <prvResetNextTaskUnblockTime>:
 8005f58:	b480      	push	{r7}
 8005f5a:	b083      	sub	sp, #12
 8005f5c:	af00      	add	r7, sp, #0
 8005f5e:	4b0c      	ldr	r3, [pc, #48]	@ (8005f90 <prvResetNextTaskUnblockTime+0x38>)
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	d104      	bne.n	8005f72 <prvResetNextTaskUnblockTime+0x1a>
 8005f68:	4b0a      	ldr	r3, [pc, #40]	@ (8005f94 <prvResetNextTaskUnblockTime+0x3c>)
 8005f6a:	f04f 32ff 	mov.w	r2, #4294967295
 8005f6e:	601a      	str	r2, [r3, #0]
 8005f70:	e008      	b.n	8005f84 <prvResetNextTaskUnblockTime+0x2c>
 8005f72:	4b07      	ldr	r3, [pc, #28]	@ (8005f90 <prvResetNextTaskUnblockTime+0x38>)
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	68db      	ldr	r3, [r3, #12]
 8005f78:	68db      	ldr	r3, [r3, #12]
 8005f7a:	607b      	str	r3, [r7, #4]
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	685b      	ldr	r3, [r3, #4]
 8005f80:	4a04      	ldr	r2, [pc, #16]	@ (8005f94 <prvResetNextTaskUnblockTime+0x3c>)
 8005f82:	6013      	str	r3, [r2, #0]
 8005f84:	bf00      	nop
 8005f86:	370c      	adds	r7, #12
 8005f88:	46bd      	mov	sp, r7
 8005f8a:	bc80      	pop	{r7}
 8005f8c:	4770      	bx	lr
 8005f8e:	bf00      	nop
 8005f90:	20000e88 	.word	0x20000e88
 8005f94:	20000ef0 	.word	0x20000ef0

08005f98 <xTaskGetSchedulerState>:
 8005f98:	b480      	push	{r7}
 8005f9a:	b083      	sub	sp, #12
 8005f9c:	af00      	add	r7, sp, #0
 8005f9e:	4b0b      	ldr	r3, [pc, #44]	@ (8005fcc <xTaskGetSchedulerState+0x34>)
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	2b00      	cmp	r3, #0
 8005fa4:	d102      	bne.n	8005fac <xTaskGetSchedulerState+0x14>
 8005fa6:	2301      	movs	r3, #1
 8005fa8:	607b      	str	r3, [r7, #4]
 8005faa:	e008      	b.n	8005fbe <xTaskGetSchedulerState+0x26>
 8005fac:	4b08      	ldr	r3, [pc, #32]	@ (8005fd0 <xTaskGetSchedulerState+0x38>)
 8005fae:	681b      	ldr	r3, [r3, #0]
 8005fb0:	2b00      	cmp	r3, #0
 8005fb2:	d102      	bne.n	8005fba <xTaskGetSchedulerState+0x22>
 8005fb4:	2302      	movs	r3, #2
 8005fb6:	607b      	str	r3, [r7, #4]
 8005fb8:	e001      	b.n	8005fbe <xTaskGetSchedulerState+0x26>
 8005fba:	2300      	movs	r3, #0
 8005fbc:	607b      	str	r3, [r7, #4]
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	4618      	mov	r0, r3
 8005fc2:	370c      	adds	r7, #12
 8005fc4:	46bd      	mov	sp, r7
 8005fc6:	bc80      	pop	{r7}
 8005fc8:	4770      	bx	lr
 8005fca:	bf00      	nop
 8005fcc:	20000edc 	.word	0x20000edc
 8005fd0:	20000ef8 	.word	0x20000ef8

08005fd4 <xTaskPriorityDisinherit>:
 8005fd4:	b580      	push	{r7, lr}
 8005fd6:	b086      	sub	sp, #24
 8005fd8:	af00      	add	r7, sp, #0
 8005fda:	6078      	str	r0, [r7, #4]
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	613b      	str	r3, [r7, #16]
 8005fe0:	2300      	movs	r3, #0
 8005fe2:	617b      	str	r3, [r7, #20]
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d058      	beq.n	800609c <xTaskPriorityDisinherit+0xc8>
 8005fea:	4b2f      	ldr	r3, [pc, #188]	@ (80060a8 <xTaskPriorityDisinherit+0xd4>)
 8005fec:	681b      	ldr	r3, [r3, #0]
 8005fee:	693a      	ldr	r2, [r7, #16]
 8005ff0:	429a      	cmp	r2, r3
 8005ff2:	d00b      	beq.n	800600c <xTaskPriorityDisinherit+0x38>
 8005ff4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8005ff8:	f383 8811 	msr	BASEPRI, r3
 8005ffc:	f3bf 8f6f 	isb	sy
 8006000:	f3bf 8f4f 	dsb	sy
 8006004:	60fb      	str	r3, [r7, #12]
 8006006:	bf00      	nop
 8006008:	bf00      	nop
 800600a:	e7fd      	b.n	8006008 <xTaskPriorityDisinherit+0x34>
 800600c:	693b      	ldr	r3, [r7, #16]
 800600e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006010:	2b00      	cmp	r3, #0
 8006012:	d10b      	bne.n	800602c <xTaskPriorityDisinherit+0x58>
 8006014:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006018:	f383 8811 	msr	BASEPRI, r3
 800601c:	f3bf 8f6f 	isb	sy
 8006020:	f3bf 8f4f 	dsb	sy
 8006024:	60bb      	str	r3, [r7, #8]
 8006026:	bf00      	nop
 8006028:	bf00      	nop
 800602a:	e7fd      	b.n	8006028 <xTaskPriorityDisinherit+0x54>
 800602c:	693b      	ldr	r3, [r7, #16]
 800602e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006030:	1e5a      	subs	r2, r3, #1
 8006032:	693b      	ldr	r3, [r7, #16]
 8006034:	651a      	str	r2, [r3, #80]	@ 0x50
 8006036:	693b      	ldr	r3, [r7, #16]
 8006038:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800603a:	693b      	ldr	r3, [r7, #16]
 800603c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800603e:	429a      	cmp	r2, r3
 8006040:	d02c      	beq.n	800609c <xTaskPriorityDisinherit+0xc8>
 8006042:	693b      	ldr	r3, [r7, #16]
 8006044:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006046:	2b00      	cmp	r3, #0
 8006048:	d128      	bne.n	800609c <xTaskPriorityDisinherit+0xc8>
 800604a:	693b      	ldr	r3, [r7, #16]
 800604c:	3304      	adds	r3, #4
 800604e:	4618      	mov	r0, r3
 8006050:	f7fe fbe2 	bl	8004818 <uxListRemove>
 8006054:	693b      	ldr	r3, [r7, #16]
 8006056:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8006058:	693b      	ldr	r3, [r7, #16]
 800605a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800605c:	693b      	ldr	r3, [r7, #16]
 800605e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006060:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8006064:	693b      	ldr	r3, [r7, #16]
 8006066:	619a      	str	r2, [r3, #24]
 8006068:	693b      	ldr	r3, [r7, #16]
 800606a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800606c:	4b0f      	ldr	r3, [pc, #60]	@ (80060ac <xTaskPriorityDisinherit+0xd8>)
 800606e:	681b      	ldr	r3, [r3, #0]
 8006070:	429a      	cmp	r2, r3
 8006072:	d903      	bls.n	800607c <xTaskPriorityDisinherit+0xa8>
 8006074:	693b      	ldr	r3, [r7, #16]
 8006076:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006078:	4a0c      	ldr	r2, [pc, #48]	@ (80060ac <xTaskPriorityDisinherit+0xd8>)
 800607a:	6013      	str	r3, [r2, #0]
 800607c:	693b      	ldr	r3, [r7, #16]
 800607e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8006080:	4613      	mov	r3, r2
 8006082:	009b      	lsls	r3, r3, #2
 8006084:	4413      	add	r3, r2
 8006086:	009b      	lsls	r3, r3, #2
 8006088:	4a09      	ldr	r2, [pc, #36]	@ (80060b0 <xTaskPriorityDisinherit+0xdc>)
 800608a:	441a      	add	r2, r3
 800608c:	693b      	ldr	r3, [r7, #16]
 800608e:	3304      	adds	r3, #4
 8006090:	4619      	mov	r1, r3
 8006092:	4610      	mov	r0, r2
 8006094:	f7fe fb65 	bl	8004762 <vListInsertEnd>
 8006098:	2301      	movs	r3, #1
 800609a:	617b      	str	r3, [r7, #20]
 800609c:	697b      	ldr	r3, [r7, #20]
 800609e:	4618      	mov	r0, r3
 80060a0:	3718      	adds	r7, #24
 80060a2:	46bd      	mov	sp, r7
 80060a4:	bd80      	pop	{r7, pc}
 80060a6:	bf00      	nop
 80060a8:	200009fc 	.word	0x200009fc
 80060ac:	20000ed8 	.word	0x20000ed8
 80060b0:	20000a00 	.word	0x20000a00

080060b4 <prvAddCurrentTaskToDelayedList>:
 80060b4:	b580      	push	{r7, lr}
 80060b6:	b084      	sub	sp, #16
 80060b8:	af00      	add	r7, sp, #0
 80060ba:	6078      	str	r0, [r7, #4]
 80060bc:	6039      	str	r1, [r7, #0]
 80060be:	4b21      	ldr	r3, [pc, #132]	@ (8006144 <prvAddCurrentTaskToDelayedList+0x90>)
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	60fb      	str	r3, [r7, #12]
 80060c4:	4b20      	ldr	r3, [pc, #128]	@ (8006148 <prvAddCurrentTaskToDelayedList+0x94>)
 80060c6:	681b      	ldr	r3, [r3, #0]
 80060c8:	3304      	adds	r3, #4
 80060ca:	4618      	mov	r0, r3
 80060cc:	f7fe fba4 	bl	8004818 <uxListRemove>
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80060d6:	d10a      	bne.n	80060ee <prvAddCurrentTaskToDelayedList+0x3a>
 80060d8:	683b      	ldr	r3, [r7, #0]
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d007      	beq.n	80060ee <prvAddCurrentTaskToDelayedList+0x3a>
 80060de:	4b1a      	ldr	r3, [pc, #104]	@ (8006148 <prvAddCurrentTaskToDelayedList+0x94>)
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	3304      	adds	r3, #4
 80060e4:	4619      	mov	r1, r3
 80060e6:	4819      	ldr	r0, [pc, #100]	@ (800614c <prvAddCurrentTaskToDelayedList+0x98>)
 80060e8:	f7fe fb3b 	bl	8004762 <vListInsertEnd>
 80060ec:	e026      	b.n	800613c <prvAddCurrentTaskToDelayedList+0x88>
 80060ee:	68fa      	ldr	r2, [r7, #12]
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	4413      	add	r3, r2
 80060f4:	60bb      	str	r3, [r7, #8]
 80060f6:	4b14      	ldr	r3, [pc, #80]	@ (8006148 <prvAddCurrentTaskToDelayedList+0x94>)
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	68ba      	ldr	r2, [r7, #8]
 80060fc:	605a      	str	r2, [r3, #4]
 80060fe:	68ba      	ldr	r2, [r7, #8]
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	429a      	cmp	r2, r3
 8006104:	d209      	bcs.n	800611a <prvAddCurrentTaskToDelayedList+0x66>
 8006106:	4b12      	ldr	r3, [pc, #72]	@ (8006150 <prvAddCurrentTaskToDelayedList+0x9c>)
 8006108:	681a      	ldr	r2, [r3, #0]
 800610a:	4b0f      	ldr	r3, [pc, #60]	@ (8006148 <prvAddCurrentTaskToDelayedList+0x94>)
 800610c:	681b      	ldr	r3, [r3, #0]
 800610e:	3304      	adds	r3, #4
 8006110:	4619      	mov	r1, r3
 8006112:	4610      	mov	r0, r2
 8006114:	f7fe fb48 	bl	80047a8 <vListInsert>
 8006118:	e010      	b.n	800613c <prvAddCurrentTaskToDelayedList+0x88>
 800611a:	4b0e      	ldr	r3, [pc, #56]	@ (8006154 <prvAddCurrentTaskToDelayedList+0xa0>)
 800611c:	681a      	ldr	r2, [r3, #0]
 800611e:	4b0a      	ldr	r3, [pc, #40]	@ (8006148 <prvAddCurrentTaskToDelayedList+0x94>)
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	3304      	adds	r3, #4
 8006124:	4619      	mov	r1, r3
 8006126:	4610      	mov	r0, r2
 8006128:	f7fe fb3e 	bl	80047a8 <vListInsert>
 800612c:	4b0a      	ldr	r3, [pc, #40]	@ (8006158 <prvAddCurrentTaskToDelayedList+0xa4>)
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	68ba      	ldr	r2, [r7, #8]
 8006132:	429a      	cmp	r2, r3
 8006134:	d202      	bcs.n	800613c <prvAddCurrentTaskToDelayedList+0x88>
 8006136:	4a08      	ldr	r2, [pc, #32]	@ (8006158 <prvAddCurrentTaskToDelayedList+0xa4>)
 8006138:	68bb      	ldr	r3, [r7, #8]
 800613a:	6013      	str	r3, [r2, #0]
 800613c:	bf00      	nop
 800613e:	3710      	adds	r7, #16
 8006140:	46bd      	mov	sp, r7
 8006142:	bd80      	pop	{r7, pc}
 8006144:	20000ed4 	.word	0x20000ed4
 8006148:	200009fc 	.word	0x200009fc
 800614c:	20000ebc 	.word	0x20000ebc
 8006150:	20000e8c 	.word	0x20000e8c
 8006154:	20000e88 	.word	0x20000e88
 8006158:	20000ef0 	.word	0x20000ef0

0800615c <xTimerCreateTimerTask>:
 800615c:	b580      	push	{r7, lr}
 800615e:	b08a      	sub	sp, #40	@ 0x28
 8006160:	af04      	add	r7, sp, #16
 8006162:	2300      	movs	r3, #0
 8006164:	617b      	str	r3, [r7, #20]
 8006166:	f000 fb11 	bl	800678c <prvCheckForValidListAndQueue>
 800616a:	4b1d      	ldr	r3, [pc, #116]	@ (80061e0 <xTimerCreateTimerTask+0x84>)
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	2b00      	cmp	r3, #0
 8006170:	d021      	beq.n	80061b6 <xTimerCreateTimerTask+0x5a>
 8006172:	2300      	movs	r3, #0
 8006174:	60fb      	str	r3, [r7, #12]
 8006176:	2300      	movs	r3, #0
 8006178:	60bb      	str	r3, [r7, #8]
 800617a:	1d3a      	adds	r2, r7, #4
 800617c:	f107 0108 	add.w	r1, r7, #8
 8006180:	f107 030c 	add.w	r3, r7, #12
 8006184:	4618      	mov	r0, r3
 8006186:	f7fe faa7 	bl	80046d8 <vApplicationGetTimerTaskMemory>
 800618a:	6879      	ldr	r1, [r7, #4]
 800618c:	68bb      	ldr	r3, [r7, #8]
 800618e:	68fa      	ldr	r2, [r7, #12]
 8006190:	9202      	str	r2, [sp, #8]
 8006192:	9301      	str	r3, [sp, #4]
 8006194:	2302      	movs	r3, #2
 8006196:	9300      	str	r3, [sp, #0]
 8006198:	2300      	movs	r3, #0
 800619a:	460a      	mov	r2, r1
 800619c:	4911      	ldr	r1, [pc, #68]	@ (80061e4 <xTimerCreateTimerTask+0x88>)
 800619e:	4812      	ldr	r0, [pc, #72]	@ (80061e8 <xTimerCreateTimerTask+0x8c>)
 80061a0:	f7ff f85c 	bl	800525c <xTaskCreateStatic>
 80061a4:	4603      	mov	r3, r0
 80061a6:	4a11      	ldr	r2, [pc, #68]	@ (80061ec <xTimerCreateTimerTask+0x90>)
 80061a8:	6013      	str	r3, [r2, #0]
 80061aa:	4b10      	ldr	r3, [pc, #64]	@ (80061ec <xTimerCreateTimerTask+0x90>)
 80061ac:	681b      	ldr	r3, [r3, #0]
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d001      	beq.n	80061b6 <xTimerCreateTimerTask+0x5a>
 80061b2:	2301      	movs	r3, #1
 80061b4:	617b      	str	r3, [r7, #20]
 80061b6:	697b      	ldr	r3, [r7, #20]
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	d10b      	bne.n	80061d4 <xTimerCreateTimerTask+0x78>
 80061bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80061c0:	f383 8811 	msr	BASEPRI, r3
 80061c4:	f3bf 8f6f 	isb	sy
 80061c8:	f3bf 8f4f 	dsb	sy
 80061cc:	613b      	str	r3, [r7, #16]
 80061ce:	bf00      	nop
 80061d0:	bf00      	nop
 80061d2:	e7fd      	b.n	80061d0 <xTimerCreateTimerTask+0x74>
 80061d4:	697b      	ldr	r3, [r7, #20]
 80061d6:	4618      	mov	r0, r3
 80061d8:	3718      	adds	r7, #24
 80061da:	46bd      	mov	sp, r7
 80061dc:	bd80      	pop	{r7, pc}
 80061de:	bf00      	nop
 80061e0:	20000f2c 	.word	0x20000f2c
 80061e4:	08007a20 	.word	0x08007a20
 80061e8:	08006329 	.word	0x08006329
 80061ec:	20000f30 	.word	0x20000f30

080061f0 <xTimerGenericCommand>:
 80061f0:	b580      	push	{r7, lr}
 80061f2:	b08a      	sub	sp, #40	@ 0x28
 80061f4:	af00      	add	r7, sp, #0
 80061f6:	60f8      	str	r0, [r7, #12]
 80061f8:	60b9      	str	r1, [r7, #8]
 80061fa:	607a      	str	r2, [r7, #4]
 80061fc:	603b      	str	r3, [r7, #0]
 80061fe:	2300      	movs	r3, #0
 8006200:	627b      	str	r3, [r7, #36]	@ 0x24
 8006202:	68fb      	ldr	r3, [r7, #12]
 8006204:	2b00      	cmp	r3, #0
 8006206:	d10b      	bne.n	8006220 <xTimerGenericCommand+0x30>
 8006208:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800620c:	f383 8811 	msr	BASEPRI, r3
 8006210:	f3bf 8f6f 	isb	sy
 8006214:	f3bf 8f4f 	dsb	sy
 8006218:	623b      	str	r3, [r7, #32]
 800621a:	bf00      	nop
 800621c:	bf00      	nop
 800621e:	e7fd      	b.n	800621c <xTimerGenericCommand+0x2c>
 8006220:	4b19      	ldr	r3, [pc, #100]	@ (8006288 <xTimerGenericCommand+0x98>)
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	2b00      	cmp	r3, #0
 8006226:	d02a      	beq.n	800627e <xTimerGenericCommand+0x8e>
 8006228:	68bb      	ldr	r3, [r7, #8]
 800622a:	613b      	str	r3, [r7, #16]
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	617b      	str	r3, [r7, #20]
 8006230:	68fb      	ldr	r3, [r7, #12]
 8006232:	61bb      	str	r3, [r7, #24]
 8006234:	68bb      	ldr	r3, [r7, #8]
 8006236:	2b05      	cmp	r3, #5
 8006238:	dc18      	bgt.n	800626c <xTimerGenericCommand+0x7c>
 800623a:	f7ff fead 	bl	8005f98 <xTaskGetSchedulerState>
 800623e:	4603      	mov	r3, r0
 8006240:	2b02      	cmp	r3, #2
 8006242:	d109      	bne.n	8006258 <xTimerGenericCommand+0x68>
 8006244:	4b10      	ldr	r3, [pc, #64]	@ (8006288 <xTimerGenericCommand+0x98>)
 8006246:	6818      	ldr	r0, [r3, #0]
 8006248:	f107 0110 	add.w	r1, r7, #16
 800624c:	2300      	movs	r3, #0
 800624e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006250:	f7fe fc16 	bl	8004a80 <xQueueGenericSend>
 8006254:	6278      	str	r0, [r7, #36]	@ 0x24
 8006256:	e012      	b.n	800627e <xTimerGenericCommand+0x8e>
 8006258:	4b0b      	ldr	r3, [pc, #44]	@ (8006288 <xTimerGenericCommand+0x98>)
 800625a:	6818      	ldr	r0, [r3, #0]
 800625c:	f107 0110 	add.w	r1, r7, #16
 8006260:	2300      	movs	r3, #0
 8006262:	2200      	movs	r2, #0
 8006264:	f7fe fc0c 	bl	8004a80 <xQueueGenericSend>
 8006268:	6278      	str	r0, [r7, #36]	@ 0x24
 800626a:	e008      	b.n	800627e <xTimerGenericCommand+0x8e>
 800626c:	4b06      	ldr	r3, [pc, #24]	@ (8006288 <xTimerGenericCommand+0x98>)
 800626e:	6818      	ldr	r0, [r3, #0]
 8006270:	f107 0110 	add.w	r1, r7, #16
 8006274:	2300      	movs	r3, #0
 8006276:	683a      	ldr	r2, [r7, #0]
 8006278:	f7fe fd04 	bl	8004c84 <xQueueGenericSendFromISR>
 800627c:	6278      	str	r0, [r7, #36]	@ 0x24
 800627e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006280:	4618      	mov	r0, r3
 8006282:	3728      	adds	r7, #40	@ 0x28
 8006284:	46bd      	mov	sp, r7
 8006286:	bd80      	pop	{r7, pc}
 8006288:	20000f2c 	.word	0x20000f2c

0800628c <prvProcessExpiredTimer>:
 800628c:	b580      	push	{r7, lr}
 800628e:	b088      	sub	sp, #32
 8006290:	af02      	add	r7, sp, #8
 8006292:	6078      	str	r0, [r7, #4]
 8006294:	6039      	str	r1, [r7, #0]
 8006296:	4b23      	ldr	r3, [pc, #140]	@ (8006324 <prvProcessExpiredTimer+0x98>)
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	68db      	ldr	r3, [r3, #12]
 800629c:	68db      	ldr	r3, [r3, #12]
 800629e:	617b      	str	r3, [r7, #20]
 80062a0:	697b      	ldr	r3, [r7, #20]
 80062a2:	3304      	adds	r3, #4
 80062a4:	4618      	mov	r0, r3
 80062a6:	f7fe fab7 	bl	8004818 <uxListRemove>
 80062aa:	697b      	ldr	r3, [r7, #20]
 80062ac:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80062b0:	f003 0304 	and.w	r3, r3, #4
 80062b4:	2b00      	cmp	r3, #0
 80062b6:	d023      	beq.n	8006300 <prvProcessExpiredTimer+0x74>
 80062b8:	697b      	ldr	r3, [r7, #20]
 80062ba:	699a      	ldr	r2, [r3, #24]
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	18d1      	adds	r1, r2, r3
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	683a      	ldr	r2, [r7, #0]
 80062c4:	6978      	ldr	r0, [r7, #20]
 80062c6:	f000 f8d3 	bl	8006470 <prvInsertTimerInActiveList>
 80062ca:	4603      	mov	r3, r0
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d020      	beq.n	8006312 <prvProcessExpiredTimer+0x86>
 80062d0:	2300      	movs	r3, #0
 80062d2:	9300      	str	r3, [sp, #0]
 80062d4:	2300      	movs	r3, #0
 80062d6:	687a      	ldr	r2, [r7, #4]
 80062d8:	2100      	movs	r1, #0
 80062da:	6978      	ldr	r0, [r7, #20]
 80062dc:	f7ff ff88 	bl	80061f0 <xTimerGenericCommand>
 80062e0:	6138      	str	r0, [r7, #16]
 80062e2:	693b      	ldr	r3, [r7, #16]
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	d114      	bne.n	8006312 <prvProcessExpiredTimer+0x86>
 80062e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80062ec:	f383 8811 	msr	BASEPRI, r3
 80062f0:	f3bf 8f6f 	isb	sy
 80062f4:	f3bf 8f4f 	dsb	sy
 80062f8:	60fb      	str	r3, [r7, #12]
 80062fa:	bf00      	nop
 80062fc:	bf00      	nop
 80062fe:	e7fd      	b.n	80062fc <prvProcessExpiredTimer+0x70>
 8006300:	697b      	ldr	r3, [r7, #20]
 8006302:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006306:	f023 0301 	bic.w	r3, r3, #1
 800630a:	b2da      	uxtb	r2, r3
 800630c:	697b      	ldr	r3, [r7, #20]
 800630e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006312:	697b      	ldr	r3, [r7, #20]
 8006314:	6a1b      	ldr	r3, [r3, #32]
 8006316:	6978      	ldr	r0, [r7, #20]
 8006318:	4798      	blx	r3
 800631a:	bf00      	nop
 800631c:	3718      	adds	r7, #24
 800631e:	46bd      	mov	sp, r7
 8006320:	bd80      	pop	{r7, pc}
 8006322:	bf00      	nop
 8006324:	20000f24 	.word	0x20000f24

08006328 <prvTimerTask>:
 8006328:	b580      	push	{r7, lr}
 800632a:	b084      	sub	sp, #16
 800632c:	af00      	add	r7, sp, #0
 800632e:	6078      	str	r0, [r7, #4]
 8006330:	f107 0308 	add.w	r3, r7, #8
 8006334:	4618      	mov	r0, r3
 8006336:	f000 f859 	bl	80063ec <prvGetNextExpireTime>
 800633a:	60f8      	str	r0, [r7, #12]
 800633c:	68bb      	ldr	r3, [r7, #8]
 800633e:	4619      	mov	r1, r3
 8006340:	68f8      	ldr	r0, [r7, #12]
 8006342:	f000 f805 	bl	8006350 <prvProcessTimerOrBlockTask>
 8006346:	f000 f8d5 	bl	80064f4 <prvProcessReceivedCommands>
 800634a:	bf00      	nop
 800634c:	e7f0      	b.n	8006330 <prvTimerTask+0x8>
	...

08006350 <prvProcessTimerOrBlockTask>:
 8006350:	b580      	push	{r7, lr}
 8006352:	b084      	sub	sp, #16
 8006354:	af00      	add	r7, sp, #0
 8006356:	6078      	str	r0, [r7, #4]
 8006358:	6039      	str	r1, [r7, #0]
 800635a:	f7ff fa2d 	bl	80057b8 <vTaskSuspendAll>
 800635e:	f107 0308 	add.w	r3, r7, #8
 8006362:	4618      	mov	r0, r3
 8006364:	f000 f864 	bl	8006430 <prvSampleTimeNow>
 8006368:	60f8      	str	r0, [r7, #12]
 800636a:	68bb      	ldr	r3, [r7, #8]
 800636c:	2b00      	cmp	r3, #0
 800636e:	d130      	bne.n	80063d2 <prvProcessTimerOrBlockTask+0x82>
 8006370:	683b      	ldr	r3, [r7, #0]
 8006372:	2b00      	cmp	r3, #0
 8006374:	d10a      	bne.n	800638c <prvProcessTimerOrBlockTask+0x3c>
 8006376:	687a      	ldr	r2, [r7, #4]
 8006378:	68fb      	ldr	r3, [r7, #12]
 800637a:	429a      	cmp	r2, r3
 800637c:	d806      	bhi.n	800638c <prvProcessTimerOrBlockTask+0x3c>
 800637e:	f7ff fa29 	bl	80057d4 <xTaskResumeAll>
 8006382:	68f9      	ldr	r1, [r7, #12]
 8006384:	6878      	ldr	r0, [r7, #4]
 8006386:	f7ff ff81 	bl	800628c <prvProcessExpiredTimer>
 800638a:	e024      	b.n	80063d6 <prvProcessTimerOrBlockTask+0x86>
 800638c:	683b      	ldr	r3, [r7, #0]
 800638e:	2b00      	cmp	r3, #0
 8006390:	d008      	beq.n	80063a4 <prvProcessTimerOrBlockTask+0x54>
 8006392:	4b13      	ldr	r3, [pc, #76]	@ (80063e0 <prvProcessTimerOrBlockTask+0x90>)
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	2b00      	cmp	r3, #0
 800639a:	d101      	bne.n	80063a0 <prvProcessTimerOrBlockTask+0x50>
 800639c:	2301      	movs	r3, #1
 800639e:	e000      	b.n	80063a2 <prvProcessTimerOrBlockTask+0x52>
 80063a0:	2300      	movs	r3, #0
 80063a2:	603b      	str	r3, [r7, #0]
 80063a4:	4b0f      	ldr	r3, [pc, #60]	@ (80063e4 <prvProcessTimerOrBlockTask+0x94>)
 80063a6:	6818      	ldr	r0, [r3, #0]
 80063a8:	687a      	ldr	r2, [r7, #4]
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	1ad3      	subs	r3, r2, r3
 80063ae:	683a      	ldr	r2, [r7, #0]
 80063b0:	4619      	mov	r1, r3
 80063b2:	f7fe ff1f 	bl	80051f4 <vQueueWaitForMessageRestricted>
 80063b6:	f7ff fa0d 	bl	80057d4 <xTaskResumeAll>
 80063ba:	4603      	mov	r3, r0
 80063bc:	2b00      	cmp	r3, #0
 80063be:	d10a      	bne.n	80063d6 <prvProcessTimerOrBlockTask+0x86>
 80063c0:	4b09      	ldr	r3, [pc, #36]	@ (80063e8 <prvProcessTimerOrBlockTask+0x98>)
 80063c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80063c6:	601a      	str	r2, [r3, #0]
 80063c8:	f3bf 8f4f 	dsb	sy
 80063cc:	f3bf 8f6f 	isb	sy
 80063d0:	e001      	b.n	80063d6 <prvProcessTimerOrBlockTask+0x86>
 80063d2:	f7ff f9ff 	bl	80057d4 <xTaskResumeAll>
 80063d6:	bf00      	nop
 80063d8:	3710      	adds	r7, #16
 80063da:	46bd      	mov	sp, r7
 80063dc:	bd80      	pop	{r7, pc}
 80063de:	bf00      	nop
 80063e0:	20000f28 	.word	0x20000f28
 80063e4:	20000f2c 	.word	0x20000f2c
 80063e8:	e000ed04 	.word	0xe000ed04

080063ec <prvGetNextExpireTime>:
 80063ec:	b480      	push	{r7}
 80063ee:	b085      	sub	sp, #20
 80063f0:	af00      	add	r7, sp, #0
 80063f2:	6078      	str	r0, [r7, #4]
 80063f4:	4b0d      	ldr	r3, [pc, #52]	@ (800642c <prvGetNextExpireTime+0x40>)
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	681b      	ldr	r3, [r3, #0]
 80063fa:	2b00      	cmp	r3, #0
 80063fc:	d101      	bne.n	8006402 <prvGetNextExpireTime+0x16>
 80063fe:	2201      	movs	r2, #1
 8006400:	e000      	b.n	8006404 <prvGetNextExpireTime+0x18>
 8006402:	2200      	movs	r2, #0
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	601a      	str	r2, [r3, #0]
 8006408:	687b      	ldr	r3, [r7, #4]
 800640a:	681b      	ldr	r3, [r3, #0]
 800640c:	2b00      	cmp	r3, #0
 800640e:	d105      	bne.n	800641c <prvGetNextExpireTime+0x30>
 8006410:	4b06      	ldr	r3, [pc, #24]	@ (800642c <prvGetNextExpireTime+0x40>)
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	68db      	ldr	r3, [r3, #12]
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	60fb      	str	r3, [r7, #12]
 800641a:	e001      	b.n	8006420 <prvGetNextExpireTime+0x34>
 800641c:	2300      	movs	r3, #0
 800641e:	60fb      	str	r3, [r7, #12]
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	4618      	mov	r0, r3
 8006424:	3714      	adds	r7, #20
 8006426:	46bd      	mov	sp, r7
 8006428:	bc80      	pop	{r7}
 800642a:	4770      	bx	lr
 800642c:	20000f24 	.word	0x20000f24

08006430 <prvSampleTimeNow>:
 8006430:	b580      	push	{r7, lr}
 8006432:	b084      	sub	sp, #16
 8006434:	af00      	add	r7, sp, #0
 8006436:	6078      	str	r0, [r7, #4]
 8006438:	f7ff fa6a 	bl	8005910 <xTaskGetTickCount>
 800643c:	60f8      	str	r0, [r7, #12]
 800643e:	4b0b      	ldr	r3, [pc, #44]	@ (800646c <prvSampleTimeNow+0x3c>)
 8006440:	681b      	ldr	r3, [r3, #0]
 8006442:	68fa      	ldr	r2, [r7, #12]
 8006444:	429a      	cmp	r2, r3
 8006446:	d205      	bcs.n	8006454 <prvSampleTimeNow+0x24>
 8006448:	f000 f93a 	bl	80066c0 <prvSwitchTimerLists>
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	2201      	movs	r2, #1
 8006450:	601a      	str	r2, [r3, #0]
 8006452:	e002      	b.n	800645a <prvSampleTimeNow+0x2a>
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	2200      	movs	r2, #0
 8006458:	601a      	str	r2, [r3, #0]
 800645a:	4a04      	ldr	r2, [pc, #16]	@ (800646c <prvSampleTimeNow+0x3c>)
 800645c:	68fb      	ldr	r3, [r7, #12]
 800645e:	6013      	str	r3, [r2, #0]
 8006460:	68fb      	ldr	r3, [r7, #12]
 8006462:	4618      	mov	r0, r3
 8006464:	3710      	adds	r7, #16
 8006466:	46bd      	mov	sp, r7
 8006468:	bd80      	pop	{r7, pc}
 800646a:	bf00      	nop
 800646c:	20000f34 	.word	0x20000f34

08006470 <prvInsertTimerInActiveList>:
 8006470:	b580      	push	{r7, lr}
 8006472:	b086      	sub	sp, #24
 8006474:	af00      	add	r7, sp, #0
 8006476:	60f8      	str	r0, [r7, #12]
 8006478:	60b9      	str	r1, [r7, #8]
 800647a:	607a      	str	r2, [r7, #4]
 800647c:	603b      	str	r3, [r7, #0]
 800647e:	2300      	movs	r3, #0
 8006480:	617b      	str	r3, [r7, #20]
 8006482:	68fb      	ldr	r3, [r7, #12]
 8006484:	68ba      	ldr	r2, [r7, #8]
 8006486:	605a      	str	r2, [r3, #4]
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	68fa      	ldr	r2, [r7, #12]
 800648c:	611a      	str	r2, [r3, #16]
 800648e:	68ba      	ldr	r2, [r7, #8]
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	429a      	cmp	r2, r3
 8006494:	d812      	bhi.n	80064bc <prvInsertTimerInActiveList+0x4c>
 8006496:	687a      	ldr	r2, [r7, #4]
 8006498:	683b      	ldr	r3, [r7, #0]
 800649a:	1ad2      	subs	r2, r2, r3
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	699b      	ldr	r3, [r3, #24]
 80064a0:	429a      	cmp	r2, r3
 80064a2:	d302      	bcc.n	80064aa <prvInsertTimerInActiveList+0x3a>
 80064a4:	2301      	movs	r3, #1
 80064a6:	617b      	str	r3, [r7, #20]
 80064a8:	e01b      	b.n	80064e2 <prvInsertTimerInActiveList+0x72>
 80064aa:	4b10      	ldr	r3, [pc, #64]	@ (80064ec <prvInsertTimerInActiveList+0x7c>)
 80064ac:	681a      	ldr	r2, [r3, #0]
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	3304      	adds	r3, #4
 80064b2:	4619      	mov	r1, r3
 80064b4:	4610      	mov	r0, r2
 80064b6:	f7fe f977 	bl	80047a8 <vListInsert>
 80064ba:	e012      	b.n	80064e2 <prvInsertTimerInActiveList+0x72>
 80064bc:	687a      	ldr	r2, [r7, #4]
 80064be:	683b      	ldr	r3, [r7, #0]
 80064c0:	429a      	cmp	r2, r3
 80064c2:	d206      	bcs.n	80064d2 <prvInsertTimerInActiveList+0x62>
 80064c4:	68ba      	ldr	r2, [r7, #8]
 80064c6:	683b      	ldr	r3, [r7, #0]
 80064c8:	429a      	cmp	r2, r3
 80064ca:	d302      	bcc.n	80064d2 <prvInsertTimerInActiveList+0x62>
 80064cc:	2301      	movs	r3, #1
 80064ce:	617b      	str	r3, [r7, #20]
 80064d0:	e007      	b.n	80064e2 <prvInsertTimerInActiveList+0x72>
 80064d2:	4b07      	ldr	r3, [pc, #28]	@ (80064f0 <prvInsertTimerInActiveList+0x80>)
 80064d4:	681a      	ldr	r2, [r3, #0]
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	3304      	adds	r3, #4
 80064da:	4619      	mov	r1, r3
 80064dc:	4610      	mov	r0, r2
 80064de:	f7fe f963 	bl	80047a8 <vListInsert>
 80064e2:	697b      	ldr	r3, [r7, #20]
 80064e4:	4618      	mov	r0, r3
 80064e6:	3718      	adds	r7, #24
 80064e8:	46bd      	mov	sp, r7
 80064ea:	bd80      	pop	{r7, pc}
 80064ec:	20000f28 	.word	0x20000f28
 80064f0:	20000f24 	.word	0x20000f24

080064f4 <prvProcessReceivedCommands>:
 80064f4:	b580      	push	{r7, lr}
 80064f6:	b08e      	sub	sp, #56	@ 0x38
 80064f8:	af02      	add	r7, sp, #8
 80064fa:	e0ce      	b.n	800669a <prvProcessReceivedCommands+0x1a6>
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	2b00      	cmp	r3, #0
 8006500:	da19      	bge.n	8006536 <prvProcessReceivedCommands+0x42>
 8006502:	1d3b      	adds	r3, r7, #4
 8006504:	3304      	adds	r3, #4
 8006506:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006508:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800650a:	2b00      	cmp	r3, #0
 800650c:	d10b      	bne.n	8006526 <prvProcessReceivedCommands+0x32>
 800650e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006512:	f383 8811 	msr	BASEPRI, r3
 8006516:	f3bf 8f6f 	isb	sy
 800651a:	f3bf 8f4f 	dsb	sy
 800651e:	61fb      	str	r3, [r7, #28]
 8006520:	bf00      	nop
 8006522:	bf00      	nop
 8006524:	e7fd      	b.n	8006522 <prvProcessReceivedCommands+0x2e>
 8006526:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006528:	681b      	ldr	r3, [r3, #0]
 800652a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800652c:	6850      	ldr	r0, [r2, #4]
 800652e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006530:	6892      	ldr	r2, [r2, #8]
 8006532:	4611      	mov	r1, r2
 8006534:	4798      	blx	r3
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	2b00      	cmp	r3, #0
 800653a:	f2c0 80ae 	blt.w	800669a <prvProcessReceivedCommands+0x1a6>
 800653e:	68fb      	ldr	r3, [r7, #12]
 8006540:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006542:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006544:	695b      	ldr	r3, [r3, #20]
 8006546:	2b00      	cmp	r3, #0
 8006548:	d004      	beq.n	8006554 <prvProcessReceivedCommands+0x60>
 800654a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800654c:	3304      	adds	r3, #4
 800654e:	4618      	mov	r0, r3
 8006550:	f7fe f962 	bl	8004818 <uxListRemove>
 8006554:	463b      	mov	r3, r7
 8006556:	4618      	mov	r0, r3
 8006558:	f7ff ff6a 	bl	8006430 <prvSampleTimeNow>
 800655c:	6278      	str	r0, [r7, #36]	@ 0x24
 800655e:	687b      	ldr	r3, [r7, #4]
 8006560:	2b09      	cmp	r3, #9
 8006562:	f200 8097 	bhi.w	8006694 <prvProcessReceivedCommands+0x1a0>
 8006566:	a201      	add	r2, pc, #4	@ (adr r2, 800656c <prvProcessReceivedCommands+0x78>)
 8006568:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800656c:	08006595 	.word	0x08006595
 8006570:	08006595 	.word	0x08006595
 8006574:	08006595 	.word	0x08006595
 8006578:	0800660b 	.word	0x0800660b
 800657c:	0800661f 	.word	0x0800661f
 8006580:	0800666b 	.word	0x0800666b
 8006584:	08006595 	.word	0x08006595
 8006588:	08006595 	.word	0x08006595
 800658c:	0800660b 	.word	0x0800660b
 8006590:	0800661f 	.word	0x0800661f
 8006594:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006596:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800659a:	f043 0301 	orr.w	r3, r3, #1
 800659e:	b2da      	uxtb	r2, r3
 80065a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80065a2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80065a6:	68ba      	ldr	r2, [r7, #8]
 80065a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80065aa:	699b      	ldr	r3, [r3, #24]
 80065ac:	18d1      	adds	r1, r2, r3
 80065ae:	68bb      	ldr	r3, [r7, #8]
 80065b0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80065b2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80065b4:	f7ff ff5c 	bl	8006470 <prvInsertTimerInActiveList>
 80065b8:	4603      	mov	r3, r0
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d06c      	beq.n	8006698 <prvProcessReceivedCommands+0x1a4>
 80065be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80065c0:	6a1b      	ldr	r3, [r3, #32]
 80065c2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80065c4:	4798      	blx	r3
 80065c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80065c8:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80065cc:	f003 0304 	and.w	r3, r3, #4
 80065d0:	2b00      	cmp	r3, #0
 80065d2:	d061      	beq.n	8006698 <prvProcessReceivedCommands+0x1a4>
 80065d4:	68ba      	ldr	r2, [r7, #8]
 80065d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80065d8:	699b      	ldr	r3, [r3, #24]
 80065da:	441a      	add	r2, r3
 80065dc:	2300      	movs	r3, #0
 80065de:	9300      	str	r3, [sp, #0]
 80065e0:	2300      	movs	r3, #0
 80065e2:	2100      	movs	r1, #0
 80065e4:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80065e6:	f7ff fe03 	bl	80061f0 <xTimerGenericCommand>
 80065ea:	6238      	str	r0, [r7, #32]
 80065ec:	6a3b      	ldr	r3, [r7, #32]
 80065ee:	2b00      	cmp	r3, #0
 80065f0:	d152      	bne.n	8006698 <prvProcessReceivedCommands+0x1a4>
 80065f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80065f6:	f383 8811 	msr	BASEPRI, r3
 80065fa:	f3bf 8f6f 	isb	sy
 80065fe:	f3bf 8f4f 	dsb	sy
 8006602:	61bb      	str	r3, [r7, #24]
 8006604:	bf00      	nop
 8006606:	bf00      	nop
 8006608:	e7fd      	b.n	8006606 <prvProcessReceivedCommands+0x112>
 800660a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800660c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006610:	f023 0301 	bic.w	r3, r3, #1
 8006614:	b2da      	uxtb	r2, r3
 8006616:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006618:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800661c:	e03d      	b.n	800669a <prvProcessReceivedCommands+0x1a6>
 800661e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006620:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006624:	f043 0301 	orr.w	r3, r3, #1
 8006628:	b2da      	uxtb	r2, r3
 800662a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800662c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006630:	68ba      	ldr	r2, [r7, #8]
 8006632:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006634:	619a      	str	r2, [r3, #24]
 8006636:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006638:	699b      	ldr	r3, [r3, #24]
 800663a:	2b00      	cmp	r3, #0
 800663c:	d10b      	bne.n	8006656 <prvProcessReceivedCommands+0x162>
 800663e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006642:	f383 8811 	msr	BASEPRI, r3
 8006646:	f3bf 8f6f 	isb	sy
 800664a:	f3bf 8f4f 	dsb	sy
 800664e:	617b      	str	r3, [r7, #20]
 8006650:	bf00      	nop
 8006652:	bf00      	nop
 8006654:	e7fd      	b.n	8006652 <prvProcessReceivedCommands+0x15e>
 8006656:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006658:	699a      	ldr	r2, [r3, #24]
 800665a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800665c:	18d1      	adds	r1, r2, r3
 800665e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006660:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006662:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8006664:	f7ff ff04 	bl	8006470 <prvInsertTimerInActiveList>
 8006668:	e017      	b.n	800669a <prvProcessReceivedCommands+0x1a6>
 800666a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800666c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006670:	f003 0302 	and.w	r3, r3, #2
 8006674:	2b00      	cmp	r3, #0
 8006676:	d103      	bne.n	8006680 <prvProcessReceivedCommands+0x18c>
 8006678:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800667a:	f000 fb87 	bl	8006d8c <vPortFree>
 800667e:	e00c      	b.n	800669a <prvProcessReceivedCommands+0x1a6>
 8006680:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006682:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8006686:	f023 0301 	bic.w	r3, r3, #1
 800668a:	b2da      	uxtb	r2, r3
 800668c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800668e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8006692:	e002      	b.n	800669a <prvProcessReceivedCommands+0x1a6>
 8006694:	bf00      	nop
 8006696:	e000      	b.n	800669a <prvProcessReceivedCommands+0x1a6>
 8006698:	bf00      	nop
 800669a:	4b08      	ldr	r3, [pc, #32]	@ (80066bc <prvProcessReceivedCommands+0x1c8>)
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	1d39      	adds	r1, r7, #4
 80066a0:	2200      	movs	r2, #0
 80066a2:	4618      	mov	r0, r3
 80066a4:	f7fe fb8c 	bl	8004dc0 <xQueueReceive>
 80066a8:	4603      	mov	r3, r0
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	f47f af26 	bne.w	80064fc <prvProcessReceivedCommands+0x8>
 80066b0:	bf00      	nop
 80066b2:	bf00      	nop
 80066b4:	3730      	adds	r7, #48	@ 0x30
 80066b6:	46bd      	mov	sp, r7
 80066b8:	bd80      	pop	{r7, pc}
 80066ba:	bf00      	nop
 80066bc:	20000f2c 	.word	0x20000f2c

080066c0 <prvSwitchTimerLists>:
 80066c0:	b580      	push	{r7, lr}
 80066c2:	b088      	sub	sp, #32
 80066c4:	af02      	add	r7, sp, #8
 80066c6:	e049      	b.n	800675c <prvSwitchTimerLists+0x9c>
 80066c8:	4b2e      	ldr	r3, [pc, #184]	@ (8006784 <prvSwitchTimerLists+0xc4>)
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	68db      	ldr	r3, [r3, #12]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	613b      	str	r3, [r7, #16]
 80066d2:	4b2c      	ldr	r3, [pc, #176]	@ (8006784 <prvSwitchTimerLists+0xc4>)
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	68db      	ldr	r3, [r3, #12]
 80066d8:	68db      	ldr	r3, [r3, #12]
 80066da:	60fb      	str	r3, [r7, #12]
 80066dc:	68fb      	ldr	r3, [r7, #12]
 80066de:	3304      	adds	r3, #4
 80066e0:	4618      	mov	r0, r3
 80066e2:	f7fe f899 	bl	8004818 <uxListRemove>
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	6a1b      	ldr	r3, [r3, #32]
 80066ea:	68f8      	ldr	r0, [r7, #12]
 80066ec:	4798      	blx	r3
 80066ee:	68fb      	ldr	r3, [r7, #12]
 80066f0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80066f4:	f003 0304 	and.w	r3, r3, #4
 80066f8:	2b00      	cmp	r3, #0
 80066fa:	d02f      	beq.n	800675c <prvSwitchTimerLists+0x9c>
 80066fc:	68fb      	ldr	r3, [r7, #12]
 80066fe:	699b      	ldr	r3, [r3, #24]
 8006700:	693a      	ldr	r2, [r7, #16]
 8006702:	4413      	add	r3, r2
 8006704:	60bb      	str	r3, [r7, #8]
 8006706:	68ba      	ldr	r2, [r7, #8]
 8006708:	693b      	ldr	r3, [r7, #16]
 800670a:	429a      	cmp	r2, r3
 800670c:	d90e      	bls.n	800672c <prvSwitchTimerLists+0x6c>
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	68ba      	ldr	r2, [r7, #8]
 8006712:	605a      	str	r2, [r3, #4]
 8006714:	68fb      	ldr	r3, [r7, #12]
 8006716:	68fa      	ldr	r2, [r7, #12]
 8006718:	611a      	str	r2, [r3, #16]
 800671a:	4b1a      	ldr	r3, [pc, #104]	@ (8006784 <prvSwitchTimerLists+0xc4>)
 800671c:	681a      	ldr	r2, [r3, #0]
 800671e:	68fb      	ldr	r3, [r7, #12]
 8006720:	3304      	adds	r3, #4
 8006722:	4619      	mov	r1, r3
 8006724:	4610      	mov	r0, r2
 8006726:	f7fe f83f 	bl	80047a8 <vListInsert>
 800672a:	e017      	b.n	800675c <prvSwitchTimerLists+0x9c>
 800672c:	2300      	movs	r3, #0
 800672e:	9300      	str	r3, [sp, #0]
 8006730:	2300      	movs	r3, #0
 8006732:	693a      	ldr	r2, [r7, #16]
 8006734:	2100      	movs	r1, #0
 8006736:	68f8      	ldr	r0, [r7, #12]
 8006738:	f7ff fd5a 	bl	80061f0 <xTimerGenericCommand>
 800673c:	6078      	str	r0, [r7, #4]
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	2b00      	cmp	r3, #0
 8006742:	d10b      	bne.n	800675c <prvSwitchTimerLists+0x9c>
 8006744:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006748:	f383 8811 	msr	BASEPRI, r3
 800674c:	f3bf 8f6f 	isb	sy
 8006750:	f3bf 8f4f 	dsb	sy
 8006754:	603b      	str	r3, [r7, #0]
 8006756:	bf00      	nop
 8006758:	bf00      	nop
 800675a:	e7fd      	b.n	8006758 <prvSwitchTimerLists+0x98>
 800675c:	4b09      	ldr	r3, [pc, #36]	@ (8006784 <prvSwitchTimerLists+0xc4>)
 800675e:	681b      	ldr	r3, [r3, #0]
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	2b00      	cmp	r3, #0
 8006764:	d1b0      	bne.n	80066c8 <prvSwitchTimerLists+0x8>
 8006766:	4b07      	ldr	r3, [pc, #28]	@ (8006784 <prvSwitchTimerLists+0xc4>)
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	617b      	str	r3, [r7, #20]
 800676c:	4b06      	ldr	r3, [pc, #24]	@ (8006788 <prvSwitchTimerLists+0xc8>)
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	4a04      	ldr	r2, [pc, #16]	@ (8006784 <prvSwitchTimerLists+0xc4>)
 8006772:	6013      	str	r3, [r2, #0]
 8006774:	4a04      	ldr	r2, [pc, #16]	@ (8006788 <prvSwitchTimerLists+0xc8>)
 8006776:	697b      	ldr	r3, [r7, #20]
 8006778:	6013      	str	r3, [r2, #0]
 800677a:	bf00      	nop
 800677c:	3718      	adds	r7, #24
 800677e:	46bd      	mov	sp, r7
 8006780:	bd80      	pop	{r7, pc}
 8006782:	bf00      	nop
 8006784:	20000f24 	.word	0x20000f24
 8006788:	20000f28 	.word	0x20000f28

0800678c <prvCheckForValidListAndQueue>:
 800678c:	b580      	push	{r7, lr}
 800678e:	b082      	sub	sp, #8
 8006790:	af02      	add	r7, sp, #8
 8006792:	f000 f92b 	bl	80069ec <vPortEnterCritical>
 8006796:	4b15      	ldr	r3, [pc, #84]	@ (80067ec <prvCheckForValidListAndQueue+0x60>)
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	2b00      	cmp	r3, #0
 800679c:	d120      	bne.n	80067e0 <prvCheckForValidListAndQueue+0x54>
 800679e:	4814      	ldr	r0, [pc, #80]	@ (80067f0 <prvCheckForValidListAndQueue+0x64>)
 80067a0:	f7fd ffb4 	bl	800470c <vListInitialise>
 80067a4:	4813      	ldr	r0, [pc, #76]	@ (80067f4 <prvCheckForValidListAndQueue+0x68>)
 80067a6:	f7fd ffb1 	bl	800470c <vListInitialise>
 80067aa:	4b13      	ldr	r3, [pc, #76]	@ (80067f8 <prvCheckForValidListAndQueue+0x6c>)
 80067ac:	4a10      	ldr	r2, [pc, #64]	@ (80067f0 <prvCheckForValidListAndQueue+0x64>)
 80067ae:	601a      	str	r2, [r3, #0]
 80067b0:	4b12      	ldr	r3, [pc, #72]	@ (80067fc <prvCheckForValidListAndQueue+0x70>)
 80067b2:	4a10      	ldr	r2, [pc, #64]	@ (80067f4 <prvCheckForValidListAndQueue+0x68>)
 80067b4:	601a      	str	r2, [r3, #0]
 80067b6:	2300      	movs	r3, #0
 80067b8:	9300      	str	r3, [sp, #0]
 80067ba:	4b11      	ldr	r3, [pc, #68]	@ (8006800 <prvCheckForValidListAndQueue+0x74>)
 80067bc:	4a11      	ldr	r2, [pc, #68]	@ (8006804 <prvCheckForValidListAndQueue+0x78>)
 80067be:	2110      	movs	r1, #16
 80067c0:	200a      	movs	r0, #10
 80067c2:	f7fe f8bd 	bl	8004940 <xQueueGenericCreateStatic>
 80067c6:	4603      	mov	r3, r0
 80067c8:	4a08      	ldr	r2, [pc, #32]	@ (80067ec <prvCheckForValidListAndQueue+0x60>)
 80067ca:	6013      	str	r3, [r2, #0]
 80067cc:	4b07      	ldr	r3, [pc, #28]	@ (80067ec <prvCheckForValidListAndQueue+0x60>)
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d005      	beq.n	80067e0 <prvCheckForValidListAndQueue+0x54>
 80067d4:	4b05      	ldr	r3, [pc, #20]	@ (80067ec <prvCheckForValidListAndQueue+0x60>)
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	490b      	ldr	r1, [pc, #44]	@ (8006808 <prvCheckForValidListAndQueue+0x7c>)
 80067da:	4618      	mov	r0, r3
 80067dc:	f7fe fce2 	bl	80051a4 <vQueueAddToRegistry>
 80067e0:	f000 f934 	bl	8006a4c <vPortExitCritical>
 80067e4:	bf00      	nop
 80067e6:	46bd      	mov	sp, r7
 80067e8:	bd80      	pop	{r7, pc}
 80067ea:	bf00      	nop
 80067ec:	20000f2c 	.word	0x20000f2c
 80067f0:	20000efc 	.word	0x20000efc
 80067f4:	20000f10 	.word	0x20000f10
 80067f8:	20000f24 	.word	0x20000f24
 80067fc:	20000f28 	.word	0x20000f28
 8006800:	20000fd8 	.word	0x20000fd8
 8006804:	20000f38 	.word	0x20000f38
 8006808:	08007a28 	.word	0x08007a28

0800680c <pxPortInitialiseStack>:
 800680c:	b480      	push	{r7}
 800680e:	b085      	sub	sp, #20
 8006810:	af00      	add	r7, sp, #0
 8006812:	60f8      	str	r0, [r7, #12]
 8006814:	60b9      	str	r1, [r7, #8]
 8006816:	607a      	str	r2, [r7, #4]
 8006818:	68fb      	ldr	r3, [r7, #12]
 800681a:	3b04      	subs	r3, #4
 800681c:	60fb      	str	r3, [r7, #12]
 800681e:	68fb      	ldr	r3, [r7, #12]
 8006820:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8006824:	601a      	str	r2, [r3, #0]
 8006826:	68fb      	ldr	r3, [r7, #12]
 8006828:	3b04      	subs	r3, #4
 800682a:	60fb      	str	r3, [r7, #12]
 800682c:	68bb      	ldr	r3, [r7, #8]
 800682e:	f023 0201 	bic.w	r2, r3, #1
 8006832:	68fb      	ldr	r3, [r7, #12]
 8006834:	601a      	str	r2, [r3, #0]
 8006836:	68fb      	ldr	r3, [r7, #12]
 8006838:	3b04      	subs	r3, #4
 800683a:	60fb      	str	r3, [r7, #12]
 800683c:	4a08      	ldr	r2, [pc, #32]	@ (8006860 <pxPortInitialiseStack+0x54>)
 800683e:	68fb      	ldr	r3, [r7, #12]
 8006840:	601a      	str	r2, [r3, #0]
 8006842:	68fb      	ldr	r3, [r7, #12]
 8006844:	3b14      	subs	r3, #20
 8006846:	60fb      	str	r3, [r7, #12]
 8006848:	687a      	ldr	r2, [r7, #4]
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	601a      	str	r2, [r3, #0]
 800684e:	68fb      	ldr	r3, [r7, #12]
 8006850:	3b20      	subs	r3, #32
 8006852:	60fb      	str	r3, [r7, #12]
 8006854:	68fb      	ldr	r3, [r7, #12]
 8006856:	4618      	mov	r0, r3
 8006858:	3714      	adds	r7, #20
 800685a:	46bd      	mov	sp, r7
 800685c:	bc80      	pop	{r7}
 800685e:	4770      	bx	lr
 8006860:	08006865 	.word	0x08006865

08006864 <prvTaskExitError>:
 8006864:	b480      	push	{r7}
 8006866:	b085      	sub	sp, #20
 8006868:	af00      	add	r7, sp, #0
 800686a:	2300      	movs	r3, #0
 800686c:	607b      	str	r3, [r7, #4]
 800686e:	4b12      	ldr	r3, [pc, #72]	@ (80068b8 <prvTaskExitError+0x54>)
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006876:	d00b      	beq.n	8006890 <prvTaskExitError+0x2c>
 8006878:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800687c:	f383 8811 	msr	BASEPRI, r3
 8006880:	f3bf 8f6f 	isb	sy
 8006884:	f3bf 8f4f 	dsb	sy
 8006888:	60fb      	str	r3, [r7, #12]
 800688a:	bf00      	nop
 800688c:	bf00      	nop
 800688e:	e7fd      	b.n	800688c <prvTaskExitError+0x28>
 8006890:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006894:	f383 8811 	msr	BASEPRI, r3
 8006898:	f3bf 8f6f 	isb	sy
 800689c:	f3bf 8f4f 	dsb	sy
 80068a0:	60bb      	str	r3, [r7, #8]
 80068a2:	bf00      	nop
 80068a4:	bf00      	nop
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	2b00      	cmp	r3, #0
 80068aa:	d0fc      	beq.n	80068a6 <prvTaskExitError+0x42>
 80068ac:	bf00      	nop
 80068ae:	bf00      	nop
 80068b0:	3714      	adds	r7, #20
 80068b2:	46bd      	mov	sp, r7
 80068b4:	bc80      	pop	{r7}
 80068b6:	4770      	bx	lr
 80068b8:	20000010 	.word	0x20000010
 80068bc:	00000000 	.word	0x00000000

080068c0 <SVC_Handler>:
 80068c0:	4b07      	ldr	r3, [pc, #28]	@ (80068e0 <pxCurrentTCBConst2>)
 80068c2:	6819      	ldr	r1, [r3, #0]
 80068c4:	6808      	ldr	r0, [r1, #0]
 80068c6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80068ca:	f380 8809 	msr	PSP, r0
 80068ce:	f3bf 8f6f 	isb	sy
 80068d2:	f04f 0000 	mov.w	r0, #0
 80068d6:	f380 8811 	msr	BASEPRI, r0
 80068da:	f04e 0e0d 	orr.w	lr, lr, #13
 80068de:	4770      	bx	lr

080068e0 <pxCurrentTCBConst2>:
 80068e0:	200009fc 	.word	0x200009fc
 80068e4:	bf00      	nop
 80068e6:	bf00      	nop

080068e8 <prvPortStartFirstTask>:
 80068e8:	4806      	ldr	r0, [pc, #24]	@ (8006904 <prvPortStartFirstTask+0x1c>)
 80068ea:	6800      	ldr	r0, [r0, #0]
 80068ec:	6800      	ldr	r0, [r0, #0]
 80068ee:	f380 8808 	msr	MSP, r0
 80068f2:	b662      	cpsie	i
 80068f4:	b661      	cpsie	f
 80068f6:	f3bf 8f4f 	dsb	sy
 80068fa:	f3bf 8f6f 	isb	sy
 80068fe:	df00      	svc	0
 8006900:	bf00      	nop
 8006902:	bf00      	nop
 8006904:	e000ed08 	.word	0xe000ed08

08006908 <xPortStartScheduler>:
 8006908:	b580      	push	{r7, lr}
 800690a:	b084      	sub	sp, #16
 800690c:	af00      	add	r7, sp, #0
 800690e:	4b32      	ldr	r3, [pc, #200]	@ (80069d8 <xPortStartScheduler+0xd0>)
 8006910:	60fb      	str	r3, [r7, #12]
 8006912:	68fb      	ldr	r3, [r7, #12]
 8006914:	781b      	ldrb	r3, [r3, #0]
 8006916:	b2db      	uxtb	r3, r3
 8006918:	607b      	str	r3, [r7, #4]
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	22ff      	movs	r2, #255	@ 0xff
 800691e:	701a      	strb	r2, [r3, #0]
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	781b      	ldrb	r3, [r3, #0]
 8006924:	b2db      	uxtb	r3, r3
 8006926:	70fb      	strb	r3, [r7, #3]
 8006928:	78fb      	ldrb	r3, [r7, #3]
 800692a:	b2db      	uxtb	r3, r3
 800692c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8006930:	b2da      	uxtb	r2, r3
 8006932:	4b2a      	ldr	r3, [pc, #168]	@ (80069dc <xPortStartScheduler+0xd4>)
 8006934:	701a      	strb	r2, [r3, #0]
 8006936:	4b2a      	ldr	r3, [pc, #168]	@ (80069e0 <xPortStartScheduler+0xd8>)
 8006938:	2207      	movs	r2, #7
 800693a:	601a      	str	r2, [r3, #0]
 800693c:	e009      	b.n	8006952 <xPortStartScheduler+0x4a>
 800693e:	4b28      	ldr	r3, [pc, #160]	@ (80069e0 <xPortStartScheduler+0xd8>)
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	3b01      	subs	r3, #1
 8006944:	4a26      	ldr	r2, [pc, #152]	@ (80069e0 <xPortStartScheduler+0xd8>)
 8006946:	6013      	str	r3, [r2, #0]
 8006948:	78fb      	ldrb	r3, [r7, #3]
 800694a:	b2db      	uxtb	r3, r3
 800694c:	005b      	lsls	r3, r3, #1
 800694e:	b2db      	uxtb	r3, r3
 8006950:	70fb      	strb	r3, [r7, #3]
 8006952:	78fb      	ldrb	r3, [r7, #3]
 8006954:	b2db      	uxtb	r3, r3
 8006956:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800695a:	2b80      	cmp	r3, #128	@ 0x80
 800695c:	d0ef      	beq.n	800693e <xPortStartScheduler+0x36>
 800695e:	4b20      	ldr	r3, [pc, #128]	@ (80069e0 <xPortStartScheduler+0xd8>)
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	f1c3 0307 	rsb	r3, r3, #7
 8006966:	2b04      	cmp	r3, #4
 8006968:	d00b      	beq.n	8006982 <xPortStartScheduler+0x7a>
 800696a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800696e:	f383 8811 	msr	BASEPRI, r3
 8006972:	f3bf 8f6f 	isb	sy
 8006976:	f3bf 8f4f 	dsb	sy
 800697a:	60bb      	str	r3, [r7, #8]
 800697c:	bf00      	nop
 800697e:	bf00      	nop
 8006980:	e7fd      	b.n	800697e <xPortStartScheduler+0x76>
 8006982:	4b17      	ldr	r3, [pc, #92]	@ (80069e0 <xPortStartScheduler+0xd8>)
 8006984:	681b      	ldr	r3, [r3, #0]
 8006986:	021b      	lsls	r3, r3, #8
 8006988:	4a15      	ldr	r2, [pc, #84]	@ (80069e0 <xPortStartScheduler+0xd8>)
 800698a:	6013      	str	r3, [r2, #0]
 800698c:	4b14      	ldr	r3, [pc, #80]	@ (80069e0 <xPortStartScheduler+0xd8>)
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8006994:	4a12      	ldr	r2, [pc, #72]	@ (80069e0 <xPortStartScheduler+0xd8>)
 8006996:	6013      	str	r3, [r2, #0]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	b2da      	uxtb	r2, r3
 800699c:	68fb      	ldr	r3, [r7, #12]
 800699e:	701a      	strb	r2, [r3, #0]
 80069a0:	4b10      	ldr	r3, [pc, #64]	@ (80069e4 <xPortStartScheduler+0xdc>)
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	4a0f      	ldr	r2, [pc, #60]	@ (80069e4 <xPortStartScheduler+0xdc>)
 80069a6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80069aa:	6013      	str	r3, [r2, #0]
 80069ac:	4b0d      	ldr	r3, [pc, #52]	@ (80069e4 <xPortStartScheduler+0xdc>)
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	4a0c      	ldr	r2, [pc, #48]	@ (80069e4 <xPortStartScheduler+0xdc>)
 80069b2:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80069b6:	6013      	str	r3, [r2, #0]
 80069b8:	f000 f8b8 	bl	8006b2c <vPortSetupTimerInterrupt>
 80069bc:	4b0a      	ldr	r3, [pc, #40]	@ (80069e8 <xPortStartScheduler+0xe0>)
 80069be:	2200      	movs	r2, #0
 80069c0:	601a      	str	r2, [r3, #0]
 80069c2:	f7ff ff91 	bl	80068e8 <prvPortStartFirstTask>
 80069c6:	f7ff f86b 	bl	8005aa0 <vTaskSwitchContext>
 80069ca:	f7ff ff4b 	bl	8006864 <prvTaskExitError>
 80069ce:	2300      	movs	r3, #0
 80069d0:	4618      	mov	r0, r3
 80069d2:	3710      	adds	r7, #16
 80069d4:	46bd      	mov	sp, r7
 80069d6:	bd80      	pop	{r7, pc}
 80069d8:	e000e400 	.word	0xe000e400
 80069dc:	20001028 	.word	0x20001028
 80069e0:	2000102c 	.word	0x2000102c
 80069e4:	e000ed20 	.word	0xe000ed20
 80069e8:	20000010 	.word	0x20000010

080069ec <vPortEnterCritical>:
 80069ec:	b480      	push	{r7}
 80069ee:	b083      	sub	sp, #12
 80069f0:	af00      	add	r7, sp, #0
 80069f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80069f6:	f383 8811 	msr	BASEPRI, r3
 80069fa:	f3bf 8f6f 	isb	sy
 80069fe:	f3bf 8f4f 	dsb	sy
 8006a02:	607b      	str	r3, [r7, #4]
 8006a04:	bf00      	nop
 8006a06:	4b0f      	ldr	r3, [pc, #60]	@ (8006a44 <vPortEnterCritical+0x58>)
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	3301      	adds	r3, #1
 8006a0c:	4a0d      	ldr	r2, [pc, #52]	@ (8006a44 <vPortEnterCritical+0x58>)
 8006a0e:	6013      	str	r3, [r2, #0]
 8006a10:	4b0c      	ldr	r3, [pc, #48]	@ (8006a44 <vPortEnterCritical+0x58>)
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	2b01      	cmp	r3, #1
 8006a16:	d110      	bne.n	8006a3a <vPortEnterCritical+0x4e>
 8006a18:	4b0b      	ldr	r3, [pc, #44]	@ (8006a48 <vPortEnterCritical+0x5c>)
 8006a1a:	681b      	ldr	r3, [r3, #0]
 8006a1c:	b2db      	uxtb	r3, r3
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	d00b      	beq.n	8006a3a <vPortEnterCritical+0x4e>
 8006a22:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006a26:	f383 8811 	msr	BASEPRI, r3
 8006a2a:	f3bf 8f6f 	isb	sy
 8006a2e:	f3bf 8f4f 	dsb	sy
 8006a32:	603b      	str	r3, [r7, #0]
 8006a34:	bf00      	nop
 8006a36:	bf00      	nop
 8006a38:	e7fd      	b.n	8006a36 <vPortEnterCritical+0x4a>
 8006a3a:	bf00      	nop
 8006a3c:	370c      	adds	r7, #12
 8006a3e:	46bd      	mov	sp, r7
 8006a40:	bc80      	pop	{r7}
 8006a42:	4770      	bx	lr
 8006a44:	20000010 	.word	0x20000010
 8006a48:	e000ed04 	.word	0xe000ed04

08006a4c <vPortExitCritical>:
 8006a4c:	b480      	push	{r7}
 8006a4e:	b083      	sub	sp, #12
 8006a50:	af00      	add	r7, sp, #0
 8006a52:	4b12      	ldr	r3, [pc, #72]	@ (8006a9c <vPortExitCritical+0x50>)
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	d10b      	bne.n	8006a72 <vPortExitCritical+0x26>
 8006a5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006a5e:	f383 8811 	msr	BASEPRI, r3
 8006a62:	f3bf 8f6f 	isb	sy
 8006a66:	f3bf 8f4f 	dsb	sy
 8006a6a:	607b      	str	r3, [r7, #4]
 8006a6c:	bf00      	nop
 8006a6e:	bf00      	nop
 8006a70:	e7fd      	b.n	8006a6e <vPortExitCritical+0x22>
 8006a72:	4b0a      	ldr	r3, [pc, #40]	@ (8006a9c <vPortExitCritical+0x50>)
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	3b01      	subs	r3, #1
 8006a78:	4a08      	ldr	r2, [pc, #32]	@ (8006a9c <vPortExitCritical+0x50>)
 8006a7a:	6013      	str	r3, [r2, #0]
 8006a7c:	4b07      	ldr	r3, [pc, #28]	@ (8006a9c <vPortExitCritical+0x50>)
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	d105      	bne.n	8006a90 <vPortExitCritical+0x44>
 8006a84:	2300      	movs	r3, #0
 8006a86:	603b      	str	r3, [r7, #0]
 8006a88:	683b      	ldr	r3, [r7, #0]
 8006a8a:	f383 8811 	msr	BASEPRI, r3
 8006a8e:	bf00      	nop
 8006a90:	bf00      	nop
 8006a92:	370c      	adds	r7, #12
 8006a94:	46bd      	mov	sp, r7
 8006a96:	bc80      	pop	{r7}
 8006a98:	4770      	bx	lr
 8006a9a:	bf00      	nop
 8006a9c:	20000010 	.word	0x20000010

08006aa0 <PendSV_Handler>:
 8006aa0:	f3ef 8009 	mrs	r0, PSP
 8006aa4:	f3bf 8f6f 	isb	sy
 8006aa8:	4b0d      	ldr	r3, [pc, #52]	@ (8006ae0 <pxCurrentTCBConst>)
 8006aaa:	681a      	ldr	r2, [r3, #0]
 8006aac:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006ab0:	6010      	str	r0, [r2, #0]
 8006ab2:	e92d 4008 	stmdb	sp!, {r3, lr}
 8006ab6:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8006aba:	f380 8811 	msr	BASEPRI, r0
 8006abe:	f7fe ffef 	bl	8005aa0 <vTaskSwitchContext>
 8006ac2:	f04f 0000 	mov.w	r0, #0
 8006ac6:	f380 8811 	msr	BASEPRI, r0
 8006aca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8006ace:	6819      	ldr	r1, [r3, #0]
 8006ad0:	6808      	ldr	r0, [r1, #0]
 8006ad2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8006ad6:	f380 8809 	msr	PSP, r0
 8006ada:	f3bf 8f6f 	isb	sy
 8006ade:	4770      	bx	lr

08006ae0 <pxCurrentTCBConst>:
 8006ae0:	200009fc 	.word	0x200009fc
 8006ae4:	bf00      	nop
 8006ae6:	bf00      	nop

08006ae8 <xPortSysTickHandler>:
 8006ae8:	b580      	push	{r7, lr}
 8006aea:	b082      	sub	sp, #8
 8006aec:	af00      	add	r7, sp, #0
 8006aee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006af2:	f383 8811 	msr	BASEPRI, r3
 8006af6:	f3bf 8f6f 	isb	sy
 8006afa:	f3bf 8f4f 	dsb	sy
 8006afe:	607b      	str	r3, [r7, #4]
 8006b00:	bf00      	nop
 8006b02:	f7fe ff13 	bl	800592c <xTaskIncrementTick>
 8006b06:	4603      	mov	r3, r0
 8006b08:	2b00      	cmp	r3, #0
 8006b0a:	d003      	beq.n	8006b14 <xPortSysTickHandler+0x2c>
 8006b0c:	4b06      	ldr	r3, [pc, #24]	@ (8006b28 <xPortSysTickHandler+0x40>)
 8006b0e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006b12:	601a      	str	r2, [r3, #0]
 8006b14:	2300      	movs	r3, #0
 8006b16:	603b      	str	r3, [r7, #0]
 8006b18:	683b      	ldr	r3, [r7, #0]
 8006b1a:	f383 8811 	msr	BASEPRI, r3
 8006b1e:	bf00      	nop
 8006b20:	bf00      	nop
 8006b22:	3708      	adds	r7, #8
 8006b24:	46bd      	mov	sp, r7
 8006b26:	bd80      	pop	{r7, pc}
 8006b28:	e000ed04 	.word	0xe000ed04

08006b2c <vPortSetupTimerInterrupt>:
 8006b2c:	b480      	push	{r7}
 8006b2e:	af00      	add	r7, sp, #0
 8006b30:	4b0a      	ldr	r3, [pc, #40]	@ (8006b5c <vPortSetupTimerInterrupt+0x30>)
 8006b32:	2200      	movs	r2, #0
 8006b34:	601a      	str	r2, [r3, #0]
 8006b36:	4b0a      	ldr	r3, [pc, #40]	@ (8006b60 <vPortSetupTimerInterrupt+0x34>)
 8006b38:	2200      	movs	r2, #0
 8006b3a:	601a      	str	r2, [r3, #0]
 8006b3c:	4b09      	ldr	r3, [pc, #36]	@ (8006b64 <vPortSetupTimerInterrupt+0x38>)
 8006b3e:	681b      	ldr	r3, [r3, #0]
 8006b40:	4a09      	ldr	r2, [pc, #36]	@ (8006b68 <vPortSetupTimerInterrupt+0x3c>)
 8006b42:	fba2 2303 	umull	r2, r3, r2, r3
 8006b46:	099b      	lsrs	r3, r3, #6
 8006b48:	4a08      	ldr	r2, [pc, #32]	@ (8006b6c <vPortSetupTimerInterrupt+0x40>)
 8006b4a:	3b01      	subs	r3, #1
 8006b4c:	6013      	str	r3, [r2, #0]
 8006b4e:	4b03      	ldr	r3, [pc, #12]	@ (8006b5c <vPortSetupTimerInterrupt+0x30>)
 8006b50:	2207      	movs	r2, #7
 8006b52:	601a      	str	r2, [r3, #0]
 8006b54:	bf00      	nop
 8006b56:	46bd      	mov	sp, r7
 8006b58:	bc80      	pop	{r7}
 8006b5a:	4770      	bx	lr
 8006b5c:	e000e010 	.word	0xe000e010
 8006b60:	e000e018 	.word	0xe000e018
 8006b64:	20000004 	.word	0x20000004
 8006b68:	10624dd3 	.word	0x10624dd3
 8006b6c:	e000e014 	.word	0xe000e014

08006b70 <vPortValidateInterruptPriority>:
 8006b70:	b480      	push	{r7}
 8006b72:	b085      	sub	sp, #20
 8006b74:	af00      	add	r7, sp, #0
 8006b76:	f3ef 8305 	mrs	r3, IPSR
 8006b7a:	60fb      	str	r3, [r7, #12]
 8006b7c:	68fb      	ldr	r3, [r7, #12]
 8006b7e:	2b0f      	cmp	r3, #15
 8006b80:	d915      	bls.n	8006bae <vPortValidateInterruptPriority+0x3e>
 8006b82:	4a17      	ldr	r2, [pc, #92]	@ (8006be0 <vPortValidateInterruptPriority+0x70>)
 8006b84:	68fb      	ldr	r3, [r7, #12]
 8006b86:	4413      	add	r3, r2
 8006b88:	781b      	ldrb	r3, [r3, #0]
 8006b8a:	72fb      	strb	r3, [r7, #11]
 8006b8c:	4b15      	ldr	r3, [pc, #84]	@ (8006be4 <vPortValidateInterruptPriority+0x74>)
 8006b8e:	781b      	ldrb	r3, [r3, #0]
 8006b90:	7afa      	ldrb	r2, [r7, #11]
 8006b92:	429a      	cmp	r2, r3
 8006b94:	d20b      	bcs.n	8006bae <vPortValidateInterruptPriority+0x3e>
 8006b96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006b9a:	f383 8811 	msr	BASEPRI, r3
 8006b9e:	f3bf 8f6f 	isb	sy
 8006ba2:	f3bf 8f4f 	dsb	sy
 8006ba6:	607b      	str	r3, [r7, #4]
 8006ba8:	bf00      	nop
 8006baa:	bf00      	nop
 8006bac:	e7fd      	b.n	8006baa <vPortValidateInterruptPriority+0x3a>
 8006bae:	4b0e      	ldr	r3, [pc, #56]	@ (8006be8 <vPortValidateInterruptPriority+0x78>)
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8006bb6:	4b0d      	ldr	r3, [pc, #52]	@ (8006bec <vPortValidateInterruptPriority+0x7c>)
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	429a      	cmp	r2, r3
 8006bbc:	d90b      	bls.n	8006bd6 <vPortValidateInterruptPriority+0x66>
 8006bbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006bc2:	f383 8811 	msr	BASEPRI, r3
 8006bc6:	f3bf 8f6f 	isb	sy
 8006bca:	f3bf 8f4f 	dsb	sy
 8006bce:	603b      	str	r3, [r7, #0]
 8006bd0:	bf00      	nop
 8006bd2:	bf00      	nop
 8006bd4:	e7fd      	b.n	8006bd2 <vPortValidateInterruptPriority+0x62>
 8006bd6:	bf00      	nop
 8006bd8:	3714      	adds	r7, #20
 8006bda:	46bd      	mov	sp, r7
 8006bdc:	bc80      	pop	{r7}
 8006bde:	4770      	bx	lr
 8006be0:	e000e3f0 	.word	0xe000e3f0
 8006be4:	20001028 	.word	0x20001028
 8006be8:	e000ed0c 	.word	0xe000ed0c
 8006bec:	2000102c 	.word	0x2000102c

08006bf0 <pvPortMalloc>:
 8006bf0:	b580      	push	{r7, lr}
 8006bf2:	b08a      	sub	sp, #40	@ 0x28
 8006bf4:	af00      	add	r7, sp, #0
 8006bf6:	6078      	str	r0, [r7, #4]
 8006bf8:	2300      	movs	r3, #0
 8006bfa:	61fb      	str	r3, [r7, #28]
 8006bfc:	f7fe fddc 	bl	80057b8 <vTaskSuspendAll>
 8006c00:	4b5c      	ldr	r3, [pc, #368]	@ (8006d74 <pvPortMalloc+0x184>)
 8006c02:	681b      	ldr	r3, [r3, #0]
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d101      	bne.n	8006c0c <pvPortMalloc+0x1c>
 8006c08:	f000 f924 	bl	8006e54 <prvHeapInit>
 8006c0c:	4b5a      	ldr	r3, [pc, #360]	@ (8006d78 <pvPortMalloc+0x188>)
 8006c0e:	681a      	ldr	r2, [r3, #0]
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	4013      	ands	r3, r2
 8006c14:	2b00      	cmp	r3, #0
 8006c16:	f040 8095 	bne.w	8006d44 <pvPortMalloc+0x154>
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d01e      	beq.n	8006c5e <pvPortMalloc+0x6e>
 8006c20:	2208      	movs	r2, #8
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	4413      	add	r3, r2
 8006c26:	607b      	str	r3, [r7, #4]
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	f003 0307 	and.w	r3, r3, #7
 8006c2e:	2b00      	cmp	r3, #0
 8006c30:	d015      	beq.n	8006c5e <pvPortMalloc+0x6e>
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	f023 0307 	bic.w	r3, r3, #7
 8006c38:	3308      	adds	r3, #8
 8006c3a:	607b      	str	r3, [r7, #4]
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	f003 0307 	and.w	r3, r3, #7
 8006c42:	2b00      	cmp	r3, #0
 8006c44:	d00b      	beq.n	8006c5e <pvPortMalloc+0x6e>
 8006c46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006c4a:	f383 8811 	msr	BASEPRI, r3
 8006c4e:	f3bf 8f6f 	isb	sy
 8006c52:	f3bf 8f4f 	dsb	sy
 8006c56:	617b      	str	r3, [r7, #20]
 8006c58:	bf00      	nop
 8006c5a:	bf00      	nop
 8006c5c:	e7fd      	b.n	8006c5a <pvPortMalloc+0x6a>
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	2b00      	cmp	r3, #0
 8006c62:	d06f      	beq.n	8006d44 <pvPortMalloc+0x154>
 8006c64:	4b45      	ldr	r3, [pc, #276]	@ (8006d7c <pvPortMalloc+0x18c>)
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	687a      	ldr	r2, [r7, #4]
 8006c6a:	429a      	cmp	r2, r3
 8006c6c:	d86a      	bhi.n	8006d44 <pvPortMalloc+0x154>
 8006c6e:	4b44      	ldr	r3, [pc, #272]	@ (8006d80 <pvPortMalloc+0x190>)
 8006c70:	623b      	str	r3, [r7, #32]
 8006c72:	4b43      	ldr	r3, [pc, #268]	@ (8006d80 <pvPortMalloc+0x190>)
 8006c74:	681b      	ldr	r3, [r3, #0]
 8006c76:	627b      	str	r3, [r7, #36]	@ 0x24
 8006c78:	e004      	b.n	8006c84 <pvPortMalloc+0x94>
 8006c7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c7c:	623b      	str	r3, [r7, #32]
 8006c7e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	627b      	str	r3, [r7, #36]	@ 0x24
 8006c84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c86:	685b      	ldr	r3, [r3, #4]
 8006c88:	687a      	ldr	r2, [r7, #4]
 8006c8a:	429a      	cmp	r2, r3
 8006c8c:	d903      	bls.n	8006c96 <pvPortMalloc+0xa6>
 8006c8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c90:	681b      	ldr	r3, [r3, #0]
 8006c92:	2b00      	cmp	r3, #0
 8006c94:	d1f1      	bne.n	8006c7a <pvPortMalloc+0x8a>
 8006c96:	4b37      	ldr	r3, [pc, #220]	@ (8006d74 <pvPortMalloc+0x184>)
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006c9c:	429a      	cmp	r2, r3
 8006c9e:	d051      	beq.n	8006d44 <pvPortMalloc+0x154>
 8006ca0:	6a3b      	ldr	r3, [r7, #32]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	2208      	movs	r2, #8
 8006ca6:	4413      	add	r3, r2
 8006ca8:	61fb      	str	r3, [r7, #28]
 8006caa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cac:	681a      	ldr	r2, [r3, #0]
 8006cae:	6a3b      	ldr	r3, [r7, #32]
 8006cb0:	601a      	str	r2, [r3, #0]
 8006cb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cb4:	685a      	ldr	r2, [r3, #4]
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	1ad2      	subs	r2, r2, r3
 8006cba:	2308      	movs	r3, #8
 8006cbc:	005b      	lsls	r3, r3, #1
 8006cbe:	429a      	cmp	r2, r3
 8006cc0:	d920      	bls.n	8006d04 <pvPortMalloc+0x114>
 8006cc2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	4413      	add	r3, r2
 8006cc8:	61bb      	str	r3, [r7, #24]
 8006cca:	69bb      	ldr	r3, [r7, #24]
 8006ccc:	f003 0307 	and.w	r3, r3, #7
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d00b      	beq.n	8006cec <pvPortMalloc+0xfc>
 8006cd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006cd8:	f383 8811 	msr	BASEPRI, r3
 8006cdc:	f3bf 8f6f 	isb	sy
 8006ce0:	f3bf 8f4f 	dsb	sy
 8006ce4:	613b      	str	r3, [r7, #16]
 8006ce6:	bf00      	nop
 8006ce8:	bf00      	nop
 8006cea:	e7fd      	b.n	8006ce8 <pvPortMalloc+0xf8>
 8006cec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cee:	685a      	ldr	r2, [r3, #4]
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	1ad2      	subs	r2, r2, r3
 8006cf4:	69bb      	ldr	r3, [r7, #24]
 8006cf6:	605a      	str	r2, [r3, #4]
 8006cf8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cfa:	687a      	ldr	r2, [r7, #4]
 8006cfc:	605a      	str	r2, [r3, #4]
 8006cfe:	69b8      	ldr	r0, [r7, #24]
 8006d00:	f000 f90a 	bl	8006f18 <prvInsertBlockIntoFreeList>
 8006d04:	4b1d      	ldr	r3, [pc, #116]	@ (8006d7c <pvPortMalloc+0x18c>)
 8006d06:	681a      	ldr	r2, [r3, #0]
 8006d08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006d0a:	685b      	ldr	r3, [r3, #4]
 8006d0c:	1ad3      	subs	r3, r2, r3
 8006d0e:	4a1b      	ldr	r2, [pc, #108]	@ (8006d7c <pvPortMalloc+0x18c>)
 8006d10:	6013      	str	r3, [r2, #0]
 8006d12:	4b1a      	ldr	r3, [pc, #104]	@ (8006d7c <pvPortMalloc+0x18c>)
 8006d14:	681a      	ldr	r2, [r3, #0]
 8006d16:	4b1b      	ldr	r3, [pc, #108]	@ (8006d84 <pvPortMalloc+0x194>)
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	429a      	cmp	r2, r3
 8006d1c:	d203      	bcs.n	8006d26 <pvPortMalloc+0x136>
 8006d1e:	4b17      	ldr	r3, [pc, #92]	@ (8006d7c <pvPortMalloc+0x18c>)
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	4a18      	ldr	r2, [pc, #96]	@ (8006d84 <pvPortMalloc+0x194>)
 8006d24:	6013      	str	r3, [r2, #0]
 8006d26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006d28:	685a      	ldr	r2, [r3, #4]
 8006d2a:	4b13      	ldr	r3, [pc, #76]	@ (8006d78 <pvPortMalloc+0x188>)
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	431a      	orrs	r2, r3
 8006d30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006d32:	605a      	str	r2, [r3, #4]
 8006d34:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006d36:	2200      	movs	r2, #0
 8006d38:	601a      	str	r2, [r3, #0]
 8006d3a:	4b13      	ldr	r3, [pc, #76]	@ (8006d88 <pvPortMalloc+0x198>)
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	3301      	adds	r3, #1
 8006d40:	4a11      	ldr	r2, [pc, #68]	@ (8006d88 <pvPortMalloc+0x198>)
 8006d42:	6013      	str	r3, [r2, #0]
 8006d44:	f7fe fd46 	bl	80057d4 <xTaskResumeAll>
 8006d48:	69fb      	ldr	r3, [r7, #28]
 8006d4a:	f003 0307 	and.w	r3, r3, #7
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d00b      	beq.n	8006d6a <pvPortMalloc+0x17a>
 8006d52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006d56:	f383 8811 	msr	BASEPRI, r3
 8006d5a:	f3bf 8f6f 	isb	sy
 8006d5e:	f3bf 8f4f 	dsb	sy
 8006d62:	60fb      	str	r3, [r7, #12]
 8006d64:	bf00      	nop
 8006d66:	bf00      	nop
 8006d68:	e7fd      	b.n	8006d66 <pvPortMalloc+0x176>
 8006d6a:	69fb      	ldr	r3, [r7, #28]
 8006d6c:	4618      	mov	r0, r3
 8006d6e:	3728      	adds	r7, #40	@ 0x28
 8006d70:	46bd      	mov	sp, r7
 8006d72:	bd80      	pop	{r7, pc}
 8006d74:	20001c38 	.word	0x20001c38
 8006d78:	20001c4c 	.word	0x20001c4c
 8006d7c:	20001c3c 	.word	0x20001c3c
 8006d80:	20001c30 	.word	0x20001c30
 8006d84:	20001c40 	.word	0x20001c40
 8006d88:	20001c44 	.word	0x20001c44

08006d8c <vPortFree>:
 8006d8c:	b580      	push	{r7, lr}
 8006d8e:	b086      	sub	sp, #24
 8006d90:	af00      	add	r7, sp, #0
 8006d92:	6078      	str	r0, [r7, #4]
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	617b      	str	r3, [r7, #20]
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d04f      	beq.n	8006e3e <vPortFree+0xb2>
 8006d9e:	2308      	movs	r3, #8
 8006da0:	425b      	negs	r3, r3
 8006da2:	697a      	ldr	r2, [r7, #20]
 8006da4:	4413      	add	r3, r2
 8006da6:	617b      	str	r3, [r7, #20]
 8006da8:	697b      	ldr	r3, [r7, #20]
 8006daa:	613b      	str	r3, [r7, #16]
 8006dac:	693b      	ldr	r3, [r7, #16]
 8006dae:	685a      	ldr	r2, [r3, #4]
 8006db0:	4b25      	ldr	r3, [pc, #148]	@ (8006e48 <vPortFree+0xbc>)
 8006db2:	681b      	ldr	r3, [r3, #0]
 8006db4:	4013      	ands	r3, r2
 8006db6:	2b00      	cmp	r3, #0
 8006db8:	d10b      	bne.n	8006dd2 <vPortFree+0x46>
 8006dba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006dbe:	f383 8811 	msr	BASEPRI, r3
 8006dc2:	f3bf 8f6f 	isb	sy
 8006dc6:	f3bf 8f4f 	dsb	sy
 8006dca:	60fb      	str	r3, [r7, #12]
 8006dcc:	bf00      	nop
 8006dce:	bf00      	nop
 8006dd0:	e7fd      	b.n	8006dce <vPortFree+0x42>
 8006dd2:	693b      	ldr	r3, [r7, #16]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	2b00      	cmp	r3, #0
 8006dd8:	d00b      	beq.n	8006df2 <vPortFree+0x66>
 8006dda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8006dde:	f383 8811 	msr	BASEPRI, r3
 8006de2:	f3bf 8f6f 	isb	sy
 8006de6:	f3bf 8f4f 	dsb	sy
 8006dea:	60bb      	str	r3, [r7, #8]
 8006dec:	bf00      	nop
 8006dee:	bf00      	nop
 8006df0:	e7fd      	b.n	8006dee <vPortFree+0x62>
 8006df2:	693b      	ldr	r3, [r7, #16]
 8006df4:	685a      	ldr	r2, [r3, #4]
 8006df6:	4b14      	ldr	r3, [pc, #80]	@ (8006e48 <vPortFree+0xbc>)
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	4013      	ands	r3, r2
 8006dfc:	2b00      	cmp	r3, #0
 8006dfe:	d01e      	beq.n	8006e3e <vPortFree+0xb2>
 8006e00:	693b      	ldr	r3, [r7, #16]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	2b00      	cmp	r3, #0
 8006e06:	d11a      	bne.n	8006e3e <vPortFree+0xb2>
 8006e08:	693b      	ldr	r3, [r7, #16]
 8006e0a:	685a      	ldr	r2, [r3, #4]
 8006e0c:	4b0e      	ldr	r3, [pc, #56]	@ (8006e48 <vPortFree+0xbc>)
 8006e0e:	681b      	ldr	r3, [r3, #0]
 8006e10:	43db      	mvns	r3, r3
 8006e12:	401a      	ands	r2, r3
 8006e14:	693b      	ldr	r3, [r7, #16]
 8006e16:	605a      	str	r2, [r3, #4]
 8006e18:	f7fe fcce 	bl	80057b8 <vTaskSuspendAll>
 8006e1c:	693b      	ldr	r3, [r7, #16]
 8006e1e:	685a      	ldr	r2, [r3, #4]
 8006e20:	4b0a      	ldr	r3, [pc, #40]	@ (8006e4c <vPortFree+0xc0>)
 8006e22:	681b      	ldr	r3, [r3, #0]
 8006e24:	4413      	add	r3, r2
 8006e26:	4a09      	ldr	r2, [pc, #36]	@ (8006e4c <vPortFree+0xc0>)
 8006e28:	6013      	str	r3, [r2, #0]
 8006e2a:	6938      	ldr	r0, [r7, #16]
 8006e2c:	f000 f874 	bl	8006f18 <prvInsertBlockIntoFreeList>
 8006e30:	4b07      	ldr	r3, [pc, #28]	@ (8006e50 <vPortFree+0xc4>)
 8006e32:	681b      	ldr	r3, [r3, #0]
 8006e34:	3301      	adds	r3, #1
 8006e36:	4a06      	ldr	r2, [pc, #24]	@ (8006e50 <vPortFree+0xc4>)
 8006e38:	6013      	str	r3, [r2, #0]
 8006e3a:	f7fe fccb 	bl	80057d4 <xTaskResumeAll>
 8006e3e:	bf00      	nop
 8006e40:	3718      	adds	r7, #24
 8006e42:	46bd      	mov	sp, r7
 8006e44:	bd80      	pop	{r7, pc}
 8006e46:	bf00      	nop
 8006e48:	20001c4c 	.word	0x20001c4c
 8006e4c:	20001c3c 	.word	0x20001c3c
 8006e50:	20001c48 	.word	0x20001c48

08006e54 <prvHeapInit>:
 8006e54:	b480      	push	{r7}
 8006e56:	b085      	sub	sp, #20
 8006e58:	af00      	add	r7, sp, #0
 8006e5a:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8006e5e:	60bb      	str	r3, [r7, #8]
 8006e60:	4b27      	ldr	r3, [pc, #156]	@ (8006f00 <prvHeapInit+0xac>)
 8006e62:	60fb      	str	r3, [r7, #12]
 8006e64:	68fb      	ldr	r3, [r7, #12]
 8006e66:	f003 0307 	and.w	r3, r3, #7
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d00c      	beq.n	8006e88 <prvHeapInit+0x34>
 8006e6e:	68fb      	ldr	r3, [r7, #12]
 8006e70:	3307      	adds	r3, #7
 8006e72:	60fb      	str	r3, [r7, #12]
 8006e74:	68fb      	ldr	r3, [r7, #12]
 8006e76:	f023 0307 	bic.w	r3, r3, #7
 8006e7a:	60fb      	str	r3, [r7, #12]
 8006e7c:	68ba      	ldr	r2, [r7, #8]
 8006e7e:	68fb      	ldr	r3, [r7, #12]
 8006e80:	1ad3      	subs	r3, r2, r3
 8006e82:	4a1f      	ldr	r2, [pc, #124]	@ (8006f00 <prvHeapInit+0xac>)
 8006e84:	4413      	add	r3, r2
 8006e86:	60bb      	str	r3, [r7, #8]
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	607b      	str	r3, [r7, #4]
 8006e8c:	4a1d      	ldr	r2, [pc, #116]	@ (8006f04 <prvHeapInit+0xb0>)
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	6013      	str	r3, [r2, #0]
 8006e92:	4b1c      	ldr	r3, [pc, #112]	@ (8006f04 <prvHeapInit+0xb0>)
 8006e94:	2200      	movs	r2, #0
 8006e96:	605a      	str	r2, [r3, #4]
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	68ba      	ldr	r2, [r7, #8]
 8006e9c:	4413      	add	r3, r2
 8006e9e:	60fb      	str	r3, [r7, #12]
 8006ea0:	2208      	movs	r2, #8
 8006ea2:	68fb      	ldr	r3, [r7, #12]
 8006ea4:	1a9b      	subs	r3, r3, r2
 8006ea6:	60fb      	str	r3, [r7, #12]
 8006ea8:	68fb      	ldr	r3, [r7, #12]
 8006eaa:	f023 0307 	bic.w	r3, r3, #7
 8006eae:	60fb      	str	r3, [r7, #12]
 8006eb0:	68fb      	ldr	r3, [r7, #12]
 8006eb2:	4a15      	ldr	r2, [pc, #84]	@ (8006f08 <prvHeapInit+0xb4>)
 8006eb4:	6013      	str	r3, [r2, #0]
 8006eb6:	4b14      	ldr	r3, [pc, #80]	@ (8006f08 <prvHeapInit+0xb4>)
 8006eb8:	681b      	ldr	r3, [r3, #0]
 8006eba:	2200      	movs	r2, #0
 8006ebc:	605a      	str	r2, [r3, #4]
 8006ebe:	4b12      	ldr	r3, [pc, #72]	@ (8006f08 <prvHeapInit+0xb4>)
 8006ec0:	681b      	ldr	r3, [r3, #0]
 8006ec2:	2200      	movs	r2, #0
 8006ec4:	601a      	str	r2, [r3, #0]
 8006ec6:	687b      	ldr	r3, [r7, #4]
 8006ec8:	603b      	str	r3, [r7, #0]
 8006eca:	683b      	ldr	r3, [r7, #0]
 8006ecc:	68fa      	ldr	r2, [r7, #12]
 8006ece:	1ad2      	subs	r2, r2, r3
 8006ed0:	683b      	ldr	r3, [r7, #0]
 8006ed2:	605a      	str	r2, [r3, #4]
 8006ed4:	4b0c      	ldr	r3, [pc, #48]	@ (8006f08 <prvHeapInit+0xb4>)
 8006ed6:	681a      	ldr	r2, [r3, #0]
 8006ed8:	683b      	ldr	r3, [r7, #0]
 8006eda:	601a      	str	r2, [r3, #0]
 8006edc:	683b      	ldr	r3, [r7, #0]
 8006ede:	685b      	ldr	r3, [r3, #4]
 8006ee0:	4a0a      	ldr	r2, [pc, #40]	@ (8006f0c <prvHeapInit+0xb8>)
 8006ee2:	6013      	str	r3, [r2, #0]
 8006ee4:	683b      	ldr	r3, [r7, #0]
 8006ee6:	685b      	ldr	r3, [r3, #4]
 8006ee8:	4a09      	ldr	r2, [pc, #36]	@ (8006f10 <prvHeapInit+0xbc>)
 8006eea:	6013      	str	r3, [r2, #0]
 8006eec:	4b09      	ldr	r3, [pc, #36]	@ (8006f14 <prvHeapInit+0xc0>)
 8006eee:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 8006ef2:	601a      	str	r2, [r3, #0]
 8006ef4:	bf00      	nop
 8006ef6:	3714      	adds	r7, #20
 8006ef8:	46bd      	mov	sp, r7
 8006efa:	bc80      	pop	{r7}
 8006efc:	4770      	bx	lr
 8006efe:	bf00      	nop
 8006f00:	20001030 	.word	0x20001030
 8006f04:	20001c30 	.word	0x20001c30
 8006f08:	20001c38 	.word	0x20001c38
 8006f0c:	20001c40 	.word	0x20001c40
 8006f10:	20001c3c 	.word	0x20001c3c
 8006f14:	20001c4c 	.word	0x20001c4c

08006f18 <prvInsertBlockIntoFreeList>:
 8006f18:	b480      	push	{r7}
 8006f1a:	b085      	sub	sp, #20
 8006f1c:	af00      	add	r7, sp, #0
 8006f1e:	6078      	str	r0, [r7, #4]
 8006f20:	4b27      	ldr	r3, [pc, #156]	@ (8006fc0 <prvInsertBlockIntoFreeList+0xa8>)
 8006f22:	60fb      	str	r3, [r7, #12]
 8006f24:	e002      	b.n	8006f2c <prvInsertBlockIntoFreeList+0x14>
 8006f26:	68fb      	ldr	r3, [r7, #12]
 8006f28:	681b      	ldr	r3, [r3, #0]
 8006f2a:	60fb      	str	r3, [r7, #12]
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	687a      	ldr	r2, [r7, #4]
 8006f32:	429a      	cmp	r2, r3
 8006f34:	d8f7      	bhi.n	8006f26 <prvInsertBlockIntoFreeList+0xe>
 8006f36:	68fb      	ldr	r3, [r7, #12]
 8006f38:	60bb      	str	r3, [r7, #8]
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	685b      	ldr	r3, [r3, #4]
 8006f3e:	68ba      	ldr	r2, [r7, #8]
 8006f40:	4413      	add	r3, r2
 8006f42:	687a      	ldr	r2, [r7, #4]
 8006f44:	429a      	cmp	r2, r3
 8006f46:	d108      	bne.n	8006f5a <prvInsertBlockIntoFreeList+0x42>
 8006f48:	68fb      	ldr	r3, [r7, #12]
 8006f4a:	685a      	ldr	r2, [r3, #4]
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	685b      	ldr	r3, [r3, #4]
 8006f50:	441a      	add	r2, r3
 8006f52:	68fb      	ldr	r3, [r7, #12]
 8006f54:	605a      	str	r2, [r3, #4]
 8006f56:	68fb      	ldr	r3, [r7, #12]
 8006f58:	607b      	str	r3, [r7, #4]
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	60bb      	str	r3, [r7, #8]
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	685b      	ldr	r3, [r3, #4]
 8006f62:	68ba      	ldr	r2, [r7, #8]
 8006f64:	441a      	add	r2, r3
 8006f66:	68fb      	ldr	r3, [r7, #12]
 8006f68:	681b      	ldr	r3, [r3, #0]
 8006f6a:	429a      	cmp	r2, r3
 8006f6c:	d118      	bne.n	8006fa0 <prvInsertBlockIntoFreeList+0x88>
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	681a      	ldr	r2, [r3, #0]
 8006f72:	4b14      	ldr	r3, [pc, #80]	@ (8006fc4 <prvInsertBlockIntoFreeList+0xac>)
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	429a      	cmp	r2, r3
 8006f78:	d00d      	beq.n	8006f96 <prvInsertBlockIntoFreeList+0x7e>
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	685a      	ldr	r2, [r3, #4]
 8006f7e:	68fb      	ldr	r3, [r7, #12]
 8006f80:	681b      	ldr	r3, [r3, #0]
 8006f82:	685b      	ldr	r3, [r3, #4]
 8006f84:	441a      	add	r2, r3
 8006f86:	687b      	ldr	r3, [r7, #4]
 8006f88:	605a      	str	r2, [r3, #4]
 8006f8a:	68fb      	ldr	r3, [r7, #12]
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	681a      	ldr	r2, [r3, #0]
 8006f90:	687b      	ldr	r3, [r7, #4]
 8006f92:	601a      	str	r2, [r3, #0]
 8006f94:	e008      	b.n	8006fa8 <prvInsertBlockIntoFreeList+0x90>
 8006f96:	4b0b      	ldr	r3, [pc, #44]	@ (8006fc4 <prvInsertBlockIntoFreeList+0xac>)
 8006f98:	681a      	ldr	r2, [r3, #0]
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	601a      	str	r2, [r3, #0]
 8006f9e:	e003      	b.n	8006fa8 <prvInsertBlockIntoFreeList+0x90>
 8006fa0:	68fb      	ldr	r3, [r7, #12]
 8006fa2:	681a      	ldr	r2, [r3, #0]
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	601a      	str	r2, [r3, #0]
 8006fa8:	68fa      	ldr	r2, [r7, #12]
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	429a      	cmp	r2, r3
 8006fae:	d002      	beq.n	8006fb6 <prvInsertBlockIntoFreeList+0x9e>
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	687a      	ldr	r2, [r7, #4]
 8006fb4:	601a      	str	r2, [r3, #0]
 8006fb6:	bf00      	nop
 8006fb8:	3714      	adds	r7, #20
 8006fba:	46bd      	mov	sp, r7
 8006fbc:	bc80      	pop	{r7}
 8006fbe:	4770      	bx	lr
 8006fc0:	20001c30 	.word	0x20001c30
 8006fc4:	20001c38 	.word	0x20001c38

08006fc8 <siprintf>:
 8006fc8:	b40e      	push	{r1, r2, r3}
 8006fca:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8006fce:	b510      	push	{r4, lr}
 8006fd0:	2400      	movs	r4, #0
 8006fd2:	b09d      	sub	sp, #116	@ 0x74
 8006fd4:	ab1f      	add	r3, sp, #124	@ 0x7c
 8006fd6:	9002      	str	r0, [sp, #8]
 8006fd8:	9006      	str	r0, [sp, #24]
 8006fda:	9107      	str	r1, [sp, #28]
 8006fdc:	9104      	str	r1, [sp, #16]
 8006fde:	4809      	ldr	r0, [pc, #36]	@ (8007004 <siprintf+0x3c>)
 8006fe0:	4909      	ldr	r1, [pc, #36]	@ (8007008 <siprintf+0x40>)
 8006fe2:	f853 2b04 	ldr.w	r2, [r3], #4
 8006fe6:	9105      	str	r1, [sp, #20]
 8006fe8:	6800      	ldr	r0, [r0, #0]
 8006fea:	a902      	add	r1, sp, #8
 8006fec:	9301      	str	r3, [sp, #4]
 8006fee:	941b      	str	r4, [sp, #108]	@ 0x6c
 8006ff0:	f000 f9fe 	bl	80073f0 <_svfiprintf_r>
 8006ff4:	9b02      	ldr	r3, [sp, #8]
 8006ff6:	701c      	strb	r4, [r3, #0]
 8006ff8:	b01d      	add	sp, #116	@ 0x74
 8006ffa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006ffe:	b003      	add	sp, #12
 8007000:	4770      	bx	lr
 8007002:	bf00      	nop
 8007004:	20000014 	.word	0x20000014
 8007008:	ffff0208 	.word	0xffff0208

0800700c <memset>:
 800700c:	4603      	mov	r3, r0
 800700e:	4402      	add	r2, r0
 8007010:	4293      	cmp	r3, r2
 8007012:	d100      	bne.n	8007016 <memset+0xa>
 8007014:	4770      	bx	lr
 8007016:	f803 1b01 	strb.w	r1, [r3], #1
 800701a:	e7f9      	b.n	8007010 <memset+0x4>

0800701c <_reclaim_reent>:
 800701c:	4b2d      	ldr	r3, [pc, #180]	@ (80070d4 <_reclaim_reent+0xb8>)
 800701e:	b570      	push	{r4, r5, r6, lr}
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	4604      	mov	r4, r0
 8007024:	4283      	cmp	r3, r0
 8007026:	d053      	beq.n	80070d0 <_reclaim_reent+0xb4>
 8007028:	69c3      	ldr	r3, [r0, #28]
 800702a:	b31b      	cbz	r3, 8007074 <_reclaim_reent+0x58>
 800702c:	68db      	ldr	r3, [r3, #12]
 800702e:	b163      	cbz	r3, 800704a <_reclaim_reent+0x2e>
 8007030:	2500      	movs	r5, #0
 8007032:	69e3      	ldr	r3, [r4, #28]
 8007034:	68db      	ldr	r3, [r3, #12]
 8007036:	5959      	ldr	r1, [r3, r5]
 8007038:	b9b1      	cbnz	r1, 8007068 <_reclaim_reent+0x4c>
 800703a:	3504      	adds	r5, #4
 800703c:	2d80      	cmp	r5, #128	@ 0x80
 800703e:	d1f8      	bne.n	8007032 <_reclaim_reent+0x16>
 8007040:	69e3      	ldr	r3, [r4, #28]
 8007042:	4620      	mov	r0, r4
 8007044:	68d9      	ldr	r1, [r3, #12]
 8007046:	f000 f881 	bl	800714c <_free_r>
 800704a:	69e3      	ldr	r3, [r4, #28]
 800704c:	6819      	ldr	r1, [r3, #0]
 800704e:	b111      	cbz	r1, 8007056 <_reclaim_reent+0x3a>
 8007050:	4620      	mov	r0, r4
 8007052:	f000 f87b 	bl	800714c <_free_r>
 8007056:	69e3      	ldr	r3, [r4, #28]
 8007058:	689d      	ldr	r5, [r3, #8]
 800705a:	b15d      	cbz	r5, 8007074 <_reclaim_reent+0x58>
 800705c:	4629      	mov	r1, r5
 800705e:	4620      	mov	r0, r4
 8007060:	682d      	ldr	r5, [r5, #0]
 8007062:	f000 f873 	bl	800714c <_free_r>
 8007066:	e7f8      	b.n	800705a <_reclaim_reent+0x3e>
 8007068:	680e      	ldr	r6, [r1, #0]
 800706a:	4620      	mov	r0, r4
 800706c:	f000 f86e 	bl	800714c <_free_r>
 8007070:	4631      	mov	r1, r6
 8007072:	e7e1      	b.n	8007038 <_reclaim_reent+0x1c>
 8007074:	6961      	ldr	r1, [r4, #20]
 8007076:	b111      	cbz	r1, 800707e <_reclaim_reent+0x62>
 8007078:	4620      	mov	r0, r4
 800707a:	f000 f867 	bl	800714c <_free_r>
 800707e:	69e1      	ldr	r1, [r4, #28]
 8007080:	b111      	cbz	r1, 8007088 <_reclaim_reent+0x6c>
 8007082:	4620      	mov	r0, r4
 8007084:	f000 f862 	bl	800714c <_free_r>
 8007088:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800708a:	b111      	cbz	r1, 8007092 <_reclaim_reent+0x76>
 800708c:	4620      	mov	r0, r4
 800708e:	f000 f85d 	bl	800714c <_free_r>
 8007092:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8007094:	b111      	cbz	r1, 800709c <_reclaim_reent+0x80>
 8007096:	4620      	mov	r0, r4
 8007098:	f000 f858 	bl	800714c <_free_r>
 800709c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800709e:	b111      	cbz	r1, 80070a6 <_reclaim_reent+0x8a>
 80070a0:	4620      	mov	r0, r4
 80070a2:	f000 f853 	bl	800714c <_free_r>
 80070a6:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 80070a8:	b111      	cbz	r1, 80070b0 <_reclaim_reent+0x94>
 80070aa:	4620      	mov	r0, r4
 80070ac:	f000 f84e 	bl	800714c <_free_r>
 80070b0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 80070b2:	b111      	cbz	r1, 80070ba <_reclaim_reent+0x9e>
 80070b4:	4620      	mov	r0, r4
 80070b6:	f000 f849 	bl	800714c <_free_r>
 80070ba:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80070bc:	b111      	cbz	r1, 80070c4 <_reclaim_reent+0xa8>
 80070be:	4620      	mov	r0, r4
 80070c0:	f000 f844 	bl	800714c <_free_r>
 80070c4:	6a23      	ldr	r3, [r4, #32]
 80070c6:	b11b      	cbz	r3, 80070d0 <_reclaim_reent+0xb4>
 80070c8:	4620      	mov	r0, r4
 80070ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80070ce:	4718      	bx	r3
 80070d0:	bd70      	pop	{r4, r5, r6, pc}
 80070d2:	bf00      	nop
 80070d4:	20000014 	.word	0x20000014

080070d8 <__errno>:
 80070d8:	4b01      	ldr	r3, [pc, #4]	@ (80070e0 <__errno+0x8>)
 80070da:	6818      	ldr	r0, [r3, #0]
 80070dc:	4770      	bx	lr
 80070de:	bf00      	nop
 80070e0:	20000014 	.word	0x20000014

080070e4 <__libc_init_array>:
 80070e4:	b570      	push	{r4, r5, r6, lr}
 80070e6:	2600      	movs	r6, #0
 80070e8:	4d0c      	ldr	r5, [pc, #48]	@ (800711c <__libc_init_array+0x38>)
 80070ea:	4c0d      	ldr	r4, [pc, #52]	@ (8007120 <__libc_init_array+0x3c>)
 80070ec:	1b64      	subs	r4, r4, r5
 80070ee:	10a4      	asrs	r4, r4, #2
 80070f0:	42a6      	cmp	r6, r4
 80070f2:	d109      	bne.n	8007108 <__libc_init_array+0x24>
 80070f4:	f000 fc76 	bl	80079e4 <_init>
 80070f8:	2600      	movs	r6, #0
 80070fa:	4d0a      	ldr	r5, [pc, #40]	@ (8007124 <__libc_init_array+0x40>)
 80070fc:	4c0a      	ldr	r4, [pc, #40]	@ (8007128 <__libc_init_array+0x44>)
 80070fe:	1b64      	subs	r4, r4, r5
 8007100:	10a4      	asrs	r4, r4, #2
 8007102:	42a6      	cmp	r6, r4
 8007104:	d105      	bne.n	8007112 <__libc_init_array+0x2e>
 8007106:	bd70      	pop	{r4, r5, r6, pc}
 8007108:	f855 3b04 	ldr.w	r3, [r5], #4
 800710c:	4798      	blx	r3
 800710e:	3601      	adds	r6, #1
 8007110:	e7ee      	b.n	80070f0 <__libc_init_array+0xc>
 8007112:	f855 3b04 	ldr.w	r3, [r5], #4
 8007116:	4798      	blx	r3
 8007118:	3601      	adds	r6, #1
 800711a:	e7f2      	b.n	8007102 <__libc_init_array+0x1e>
 800711c:	08007adc 	.word	0x08007adc
 8007120:	08007adc 	.word	0x08007adc
 8007124:	08007adc 	.word	0x08007adc
 8007128:	08007ae0 	.word	0x08007ae0

0800712c <__retarget_lock_acquire_recursive>:
 800712c:	4770      	bx	lr

0800712e <__retarget_lock_release_recursive>:
 800712e:	4770      	bx	lr

08007130 <memcpy>:
 8007130:	440a      	add	r2, r1
 8007132:	4291      	cmp	r1, r2
 8007134:	f100 33ff 	add.w	r3, r0, #4294967295
 8007138:	d100      	bne.n	800713c <memcpy+0xc>
 800713a:	4770      	bx	lr
 800713c:	b510      	push	{r4, lr}
 800713e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007142:	4291      	cmp	r1, r2
 8007144:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007148:	d1f9      	bne.n	800713e <memcpy+0xe>
 800714a:	bd10      	pop	{r4, pc}

0800714c <_free_r>:
 800714c:	b538      	push	{r3, r4, r5, lr}
 800714e:	4605      	mov	r5, r0
 8007150:	2900      	cmp	r1, #0
 8007152:	d040      	beq.n	80071d6 <_free_r+0x8a>
 8007154:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007158:	1f0c      	subs	r4, r1, #4
 800715a:	2b00      	cmp	r3, #0
 800715c:	bfb8      	it	lt
 800715e:	18e4      	addlt	r4, r4, r3
 8007160:	f000 f8de 	bl	8007320 <__malloc_lock>
 8007164:	4a1c      	ldr	r2, [pc, #112]	@ (80071d8 <_free_r+0x8c>)
 8007166:	6813      	ldr	r3, [r2, #0]
 8007168:	b933      	cbnz	r3, 8007178 <_free_r+0x2c>
 800716a:	6063      	str	r3, [r4, #4]
 800716c:	6014      	str	r4, [r2, #0]
 800716e:	4628      	mov	r0, r5
 8007170:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007174:	f000 b8da 	b.w	800732c <__malloc_unlock>
 8007178:	42a3      	cmp	r3, r4
 800717a:	d908      	bls.n	800718e <_free_r+0x42>
 800717c:	6820      	ldr	r0, [r4, #0]
 800717e:	1821      	adds	r1, r4, r0
 8007180:	428b      	cmp	r3, r1
 8007182:	bf01      	itttt	eq
 8007184:	6819      	ldreq	r1, [r3, #0]
 8007186:	685b      	ldreq	r3, [r3, #4]
 8007188:	1809      	addeq	r1, r1, r0
 800718a:	6021      	streq	r1, [r4, #0]
 800718c:	e7ed      	b.n	800716a <_free_r+0x1e>
 800718e:	461a      	mov	r2, r3
 8007190:	685b      	ldr	r3, [r3, #4]
 8007192:	b10b      	cbz	r3, 8007198 <_free_r+0x4c>
 8007194:	42a3      	cmp	r3, r4
 8007196:	d9fa      	bls.n	800718e <_free_r+0x42>
 8007198:	6811      	ldr	r1, [r2, #0]
 800719a:	1850      	adds	r0, r2, r1
 800719c:	42a0      	cmp	r0, r4
 800719e:	d10b      	bne.n	80071b8 <_free_r+0x6c>
 80071a0:	6820      	ldr	r0, [r4, #0]
 80071a2:	4401      	add	r1, r0
 80071a4:	1850      	adds	r0, r2, r1
 80071a6:	4283      	cmp	r3, r0
 80071a8:	6011      	str	r1, [r2, #0]
 80071aa:	d1e0      	bne.n	800716e <_free_r+0x22>
 80071ac:	6818      	ldr	r0, [r3, #0]
 80071ae:	685b      	ldr	r3, [r3, #4]
 80071b0:	4408      	add	r0, r1
 80071b2:	6010      	str	r0, [r2, #0]
 80071b4:	6053      	str	r3, [r2, #4]
 80071b6:	e7da      	b.n	800716e <_free_r+0x22>
 80071b8:	d902      	bls.n	80071c0 <_free_r+0x74>
 80071ba:	230c      	movs	r3, #12
 80071bc:	602b      	str	r3, [r5, #0]
 80071be:	e7d6      	b.n	800716e <_free_r+0x22>
 80071c0:	6820      	ldr	r0, [r4, #0]
 80071c2:	1821      	adds	r1, r4, r0
 80071c4:	428b      	cmp	r3, r1
 80071c6:	bf01      	itttt	eq
 80071c8:	6819      	ldreq	r1, [r3, #0]
 80071ca:	685b      	ldreq	r3, [r3, #4]
 80071cc:	1809      	addeq	r1, r1, r0
 80071ce:	6021      	streq	r1, [r4, #0]
 80071d0:	6063      	str	r3, [r4, #4]
 80071d2:	6054      	str	r4, [r2, #4]
 80071d4:	e7cb      	b.n	800716e <_free_r+0x22>
 80071d6:	bd38      	pop	{r3, r4, r5, pc}
 80071d8:	20001d94 	.word	0x20001d94

080071dc <sbrk_aligned>:
 80071dc:	b570      	push	{r4, r5, r6, lr}
 80071de:	4e0f      	ldr	r6, [pc, #60]	@ (800721c <sbrk_aligned+0x40>)
 80071e0:	460c      	mov	r4, r1
 80071e2:	6831      	ldr	r1, [r6, #0]
 80071e4:	4605      	mov	r5, r0
 80071e6:	b911      	cbnz	r1, 80071ee <sbrk_aligned+0x12>
 80071e8:	f000 fba8 	bl	800793c <_sbrk_r>
 80071ec:	6030      	str	r0, [r6, #0]
 80071ee:	4621      	mov	r1, r4
 80071f0:	4628      	mov	r0, r5
 80071f2:	f000 fba3 	bl	800793c <_sbrk_r>
 80071f6:	1c43      	adds	r3, r0, #1
 80071f8:	d103      	bne.n	8007202 <sbrk_aligned+0x26>
 80071fa:	f04f 34ff 	mov.w	r4, #4294967295
 80071fe:	4620      	mov	r0, r4
 8007200:	bd70      	pop	{r4, r5, r6, pc}
 8007202:	1cc4      	adds	r4, r0, #3
 8007204:	f024 0403 	bic.w	r4, r4, #3
 8007208:	42a0      	cmp	r0, r4
 800720a:	d0f8      	beq.n	80071fe <sbrk_aligned+0x22>
 800720c:	1a21      	subs	r1, r4, r0
 800720e:	4628      	mov	r0, r5
 8007210:	f000 fb94 	bl	800793c <_sbrk_r>
 8007214:	3001      	adds	r0, #1
 8007216:	d1f2      	bne.n	80071fe <sbrk_aligned+0x22>
 8007218:	e7ef      	b.n	80071fa <sbrk_aligned+0x1e>
 800721a:	bf00      	nop
 800721c:	20001d90 	.word	0x20001d90

08007220 <_malloc_r>:
 8007220:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007224:	1ccd      	adds	r5, r1, #3
 8007226:	f025 0503 	bic.w	r5, r5, #3
 800722a:	3508      	adds	r5, #8
 800722c:	2d0c      	cmp	r5, #12
 800722e:	bf38      	it	cc
 8007230:	250c      	movcc	r5, #12
 8007232:	2d00      	cmp	r5, #0
 8007234:	4606      	mov	r6, r0
 8007236:	db01      	blt.n	800723c <_malloc_r+0x1c>
 8007238:	42a9      	cmp	r1, r5
 800723a:	d904      	bls.n	8007246 <_malloc_r+0x26>
 800723c:	230c      	movs	r3, #12
 800723e:	6033      	str	r3, [r6, #0]
 8007240:	2000      	movs	r0, #0
 8007242:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007246:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800731c <_malloc_r+0xfc>
 800724a:	f000 f869 	bl	8007320 <__malloc_lock>
 800724e:	f8d8 3000 	ldr.w	r3, [r8]
 8007252:	461c      	mov	r4, r3
 8007254:	bb44      	cbnz	r4, 80072a8 <_malloc_r+0x88>
 8007256:	4629      	mov	r1, r5
 8007258:	4630      	mov	r0, r6
 800725a:	f7ff ffbf 	bl	80071dc <sbrk_aligned>
 800725e:	1c43      	adds	r3, r0, #1
 8007260:	4604      	mov	r4, r0
 8007262:	d158      	bne.n	8007316 <_malloc_r+0xf6>
 8007264:	f8d8 4000 	ldr.w	r4, [r8]
 8007268:	4627      	mov	r7, r4
 800726a:	2f00      	cmp	r7, #0
 800726c:	d143      	bne.n	80072f6 <_malloc_r+0xd6>
 800726e:	2c00      	cmp	r4, #0
 8007270:	d04b      	beq.n	800730a <_malloc_r+0xea>
 8007272:	6823      	ldr	r3, [r4, #0]
 8007274:	4639      	mov	r1, r7
 8007276:	4630      	mov	r0, r6
 8007278:	eb04 0903 	add.w	r9, r4, r3
 800727c:	f000 fb5e 	bl	800793c <_sbrk_r>
 8007280:	4581      	cmp	r9, r0
 8007282:	d142      	bne.n	800730a <_malloc_r+0xea>
 8007284:	6821      	ldr	r1, [r4, #0]
 8007286:	4630      	mov	r0, r6
 8007288:	1a6d      	subs	r5, r5, r1
 800728a:	4629      	mov	r1, r5
 800728c:	f7ff ffa6 	bl	80071dc <sbrk_aligned>
 8007290:	3001      	adds	r0, #1
 8007292:	d03a      	beq.n	800730a <_malloc_r+0xea>
 8007294:	6823      	ldr	r3, [r4, #0]
 8007296:	442b      	add	r3, r5
 8007298:	6023      	str	r3, [r4, #0]
 800729a:	f8d8 3000 	ldr.w	r3, [r8]
 800729e:	685a      	ldr	r2, [r3, #4]
 80072a0:	bb62      	cbnz	r2, 80072fc <_malloc_r+0xdc>
 80072a2:	f8c8 7000 	str.w	r7, [r8]
 80072a6:	e00f      	b.n	80072c8 <_malloc_r+0xa8>
 80072a8:	6822      	ldr	r2, [r4, #0]
 80072aa:	1b52      	subs	r2, r2, r5
 80072ac:	d420      	bmi.n	80072f0 <_malloc_r+0xd0>
 80072ae:	2a0b      	cmp	r2, #11
 80072b0:	d917      	bls.n	80072e2 <_malloc_r+0xc2>
 80072b2:	1961      	adds	r1, r4, r5
 80072b4:	42a3      	cmp	r3, r4
 80072b6:	6025      	str	r5, [r4, #0]
 80072b8:	bf18      	it	ne
 80072ba:	6059      	strne	r1, [r3, #4]
 80072bc:	6863      	ldr	r3, [r4, #4]
 80072be:	bf08      	it	eq
 80072c0:	f8c8 1000 	streq.w	r1, [r8]
 80072c4:	5162      	str	r2, [r4, r5]
 80072c6:	604b      	str	r3, [r1, #4]
 80072c8:	4630      	mov	r0, r6
 80072ca:	f000 f82f 	bl	800732c <__malloc_unlock>
 80072ce:	f104 000b 	add.w	r0, r4, #11
 80072d2:	1d23      	adds	r3, r4, #4
 80072d4:	f020 0007 	bic.w	r0, r0, #7
 80072d8:	1ac2      	subs	r2, r0, r3
 80072da:	bf1c      	itt	ne
 80072dc:	1a1b      	subne	r3, r3, r0
 80072de:	50a3      	strne	r3, [r4, r2]
 80072e0:	e7af      	b.n	8007242 <_malloc_r+0x22>
 80072e2:	6862      	ldr	r2, [r4, #4]
 80072e4:	42a3      	cmp	r3, r4
 80072e6:	bf0c      	ite	eq
 80072e8:	f8c8 2000 	streq.w	r2, [r8]
 80072ec:	605a      	strne	r2, [r3, #4]
 80072ee:	e7eb      	b.n	80072c8 <_malloc_r+0xa8>
 80072f0:	4623      	mov	r3, r4
 80072f2:	6864      	ldr	r4, [r4, #4]
 80072f4:	e7ae      	b.n	8007254 <_malloc_r+0x34>
 80072f6:	463c      	mov	r4, r7
 80072f8:	687f      	ldr	r7, [r7, #4]
 80072fa:	e7b6      	b.n	800726a <_malloc_r+0x4a>
 80072fc:	461a      	mov	r2, r3
 80072fe:	685b      	ldr	r3, [r3, #4]
 8007300:	42a3      	cmp	r3, r4
 8007302:	d1fb      	bne.n	80072fc <_malloc_r+0xdc>
 8007304:	2300      	movs	r3, #0
 8007306:	6053      	str	r3, [r2, #4]
 8007308:	e7de      	b.n	80072c8 <_malloc_r+0xa8>
 800730a:	230c      	movs	r3, #12
 800730c:	4630      	mov	r0, r6
 800730e:	6033      	str	r3, [r6, #0]
 8007310:	f000 f80c 	bl	800732c <__malloc_unlock>
 8007314:	e794      	b.n	8007240 <_malloc_r+0x20>
 8007316:	6005      	str	r5, [r0, #0]
 8007318:	e7d6      	b.n	80072c8 <_malloc_r+0xa8>
 800731a:	bf00      	nop
 800731c:	20001d94 	.word	0x20001d94

08007320 <__malloc_lock>:
 8007320:	4801      	ldr	r0, [pc, #4]	@ (8007328 <__malloc_lock+0x8>)
 8007322:	f7ff bf03 	b.w	800712c <__retarget_lock_acquire_recursive>
 8007326:	bf00      	nop
 8007328:	20001d8c 	.word	0x20001d8c

0800732c <__malloc_unlock>:
 800732c:	4801      	ldr	r0, [pc, #4]	@ (8007334 <__malloc_unlock+0x8>)
 800732e:	f7ff befe 	b.w	800712e <__retarget_lock_release_recursive>
 8007332:	bf00      	nop
 8007334:	20001d8c 	.word	0x20001d8c

08007338 <__ssputs_r>:
 8007338:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800733c:	461f      	mov	r7, r3
 800733e:	688e      	ldr	r6, [r1, #8]
 8007340:	4682      	mov	sl, r0
 8007342:	42be      	cmp	r6, r7
 8007344:	460c      	mov	r4, r1
 8007346:	4690      	mov	r8, r2
 8007348:	680b      	ldr	r3, [r1, #0]
 800734a:	d82d      	bhi.n	80073a8 <__ssputs_r+0x70>
 800734c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007350:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8007354:	d026      	beq.n	80073a4 <__ssputs_r+0x6c>
 8007356:	6965      	ldr	r5, [r4, #20]
 8007358:	6909      	ldr	r1, [r1, #16]
 800735a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800735e:	eba3 0901 	sub.w	r9, r3, r1
 8007362:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007366:	1c7b      	adds	r3, r7, #1
 8007368:	444b      	add	r3, r9
 800736a:	106d      	asrs	r5, r5, #1
 800736c:	429d      	cmp	r5, r3
 800736e:	bf38      	it	cc
 8007370:	461d      	movcc	r5, r3
 8007372:	0553      	lsls	r3, r2, #21
 8007374:	d527      	bpl.n	80073c6 <__ssputs_r+0x8e>
 8007376:	4629      	mov	r1, r5
 8007378:	f7ff ff52 	bl	8007220 <_malloc_r>
 800737c:	4606      	mov	r6, r0
 800737e:	b360      	cbz	r0, 80073da <__ssputs_r+0xa2>
 8007380:	464a      	mov	r2, r9
 8007382:	6921      	ldr	r1, [r4, #16]
 8007384:	f7ff fed4 	bl	8007130 <memcpy>
 8007388:	89a3      	ldrh	r3, [r4, #12]
 800738a:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800738e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007392:	81a3      	strh	r3, [r4, #12]
 8007394:	6126      	str	r6, [r4, #16]
 8007396:	444e      	add	r6, r9
 8007398:	6026      	str	r6, [r4, #0]
 800739a:	463e      	mov	r6, r7
 800739c:	6165      	str	r5, [r4, #20]
 800739e:	eba5 0509 	sub.w	r5, r5, r9
 80073a2:	60a5      	str	r5, [r4, #8]
 80073a4:	42be      	cmp	r6, r7
 80073a6:	d900      	bls.n	80073aa <__ssputs_r+0x72>
 80073a8:	463e      	mov	r6, r7
 80073aa:	4632      	mov	r2, r6
 80073ac:	4641      	mov	r1, r8
 80073ae:	6820      	ldr	r0, [r4, #0]
 80073b0:	f000 faaa 	bl	8007908 <memmove>
 80073b4:	2000      	movs	r0, #0
 80073b6:	68a3      	ldr	r3, [r4, #8]
 80073b8:	1b9b      	subs	r3, r3, r6
 80073ba:	60a3      	str	r3, [r4, #8]
 80073bc:	6823      	ldr	r3, [r4, #0]
 80073be:	4433      	add	r3, r6
 80073c0:	6023      	str	r3, [r4, #0]
 80073c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80073c6:	462a      	mov	r2, r5
 80073c8:	f000 fad6 	bl	8007978 <_realloc_r>
 80073cc:	4606      	mov	r6, r0
 80073ce:	2800      	cmp	r0, #0
 80073d0:	d1e0      	bne.n	8007394 <__ssputs_r+0x5c>
 80073d2:	4650      	mov	r0, sl
 80073d4:	6921      	ldr	r1, [r4, #16]
 80073d6:	f7ff feb9 	bl	800714c <_free_r>
 80073da:	230c      	movs	r3, #12
 80073dc:	f8ca 3000 	str.w	r3, [sl]
 80073e0:	89a3      	ldrh	r3, [r4, #12]
 80073e2:	f04f 30ff 	mov.w	r0, #4294967295
 80073e6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80073ea:	81a3      	strh	r3, [r4, #12]
 80073ec:	e7e9      	b.n	80073c2 <__ssputs_r+0x8a>
	...

080073f0 <_svfiprintf_r>:
 80073f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073f4:	4698      	mov	r8, r3
 80073f6:	898b      	ldrh	r3, [r1, #12]
 80073f8:	4607      	mov	r7, r0
 80073fa:	061b      	lsls	r3, r3, #24
 80073fc:	460d      	mov	r5, r1
 80073fe:	4614      	mov	r4, r2
 8007400:	b09d      	sub	sp, #116	@ 0x74
 8007402:	d510      	bpl.n	8007426 <_svfiprintf_r+0x36>
 8007404:	690b      	ldr	r3, [r1, #16]
 8007406:	b973      	cbnz	r3, 8007426 <_svfiprintf_r+0x36>
 8007408:	2140      	movs	r1, #64	@ 0x40
 800740a:	f7ff ff09 	bl	8007220 <_malloc_r>
 800740e:	6028      	str	r0, [r5, #0]
 8007410:	6128      	str	r0, [r5, #16]
 8007412:	b930      	cbnz	r0, 8007422 <_svfiprintf_r+0x32>
 8007414:	230c      	movs	r3, #12
 8007416:	603b      	str	r3, [r7, #0]
 8007418:	f04f 30ff 	mov.w	r0, #4294967295
 800741c:	b01d      	add	sp, #116	@ 0x74
 800741e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007422:	2340      	movs	r3, #64	@ 0x40
 8007424:	616b      	str	r3, [r5, #20]
 8007426:	2300      	movs	r3, #0
 8007428:	9309      	str	r3, [sp, #36]	@ 0x24
 800742a:	2320      	movs	r3, #32
 800742c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007430:	2330      	movs	r3, #48	@ 0x30
 8007432:	f04f 0901 	mov.w	r9, #1
 8007436:	f8cd 800c 	str.w	r8, [sp, #12]
 800743a:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80075d4 <_svfiprintf_r+0x1e4>
 800743e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8007442:	4623      	mov	r3, r4
 8007444:	469a      	mov	sl, r3
 8007446:	f813 2b01 	ldrb.w	r2, [r3], #1
 800744a:	b10a      	cbz	r2, 8007450 <_svfiprintf_r+0x60>
 800744c:	2a25      	cmp	r2, #37	@ 0x25
 800744e:	d1f9      	bne.n	8007444 <_svfiprintf_r+0x54>
 8007450:	ebba 0b04 	subs.w	fp, sl, r4
 8007454:	d00b      	beq.n	800746e <_svfiprintf_r+0x7e>
 8007456:	465b      	mov	r3, fp
 8007458:	4622      	mov	r2, r4
 800745a:	4629      	mov	r1, r5
 800745c:	4638      	mov	r0, r7
 800745e:	f7ff ff6b 	bl	8007338 <__ssputs_r>
 8007462:	3001      	adds	r0, #1
 8007464:	f000 80a7 	beq.w	80075b6 <_svfiprintf_r+0x1c6>
 8007468:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800746a:	445a      	add	r2, fp
 800746c:	9209      	str	r2, [sp, #36]	@ 0x24
 800746e:	f89a 3000 	ldrb.w	r3, [sl]
 8007472:	2b00      	cmp	r3, #0
 8007474:	f000 809f 	beq.w	80075b6 <_svfiprintf_r+0x1c6>
 8007478:	2300      	movs	r3, #0
 800747a:	f04f 32ff 	mov.w	r2, #4294967295
 800747e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007482:	f10a 0a01 	add.w	sl, sl, #1
 8007486:	9304      	str	r3, [sp, #16]
 8007488:	9307      	str	r3, [sp, #28]
 800748a:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800748e:	931a      	str	r3, [sp, #104]	@ 0x68
 8007490:	4654      	mov	r4, sl
 8007492:	2205      	movs	r2, #5
 8007494:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007498:	484e      	ldr	r0, [pc, #312]	@ (80075d4 <_svfiprintf_r+0x1e4>)
 800749a:	f000 fa5f 	bl	800795c <memchr>
 800749e:	9a04      	ldr	r2, [sp, #16]
 80074a0:	b9d8      	cbnz	r0, 80074da <_svfiprintf_r+0xea>
 80074a2:	06d0      	lsls	r0, r2, #27
 80074a4:	bf44      	itt	mi
 80074a6:	2320      	movmi	r3, #32
 80074a8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80074ac:	0711      	lsls	r1, r2, #28
 80074ae:	bf44      	itt	mi
 80074b0:	232b      	movmi	r3, #43	@ 0x2b
 80074b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80074b6:	f89a 3000 	ldrb.w	r3, [sl]
 80074ba:	2b2a      	cmp	r3, #42	@ 0x2a
 80074bc:	d015      	beq.n	80074ea <_svfiprintf_r+0xfa>
 80074be:	4654      	mov	r4, sl
 80074c0:	2000      	movs	r0, #0
 80074c2:	f04f 0c0a 	mov.w	ip, #10
 80074c6:	9a07      	ldr	r2, [sp, #28]
 80074c8:	4621      	mov	r1, r4
 80074ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80074ce:	3b30      	subs	r3, #48	@ 0x30
 80074d0:	2b09      	cmp	r3, #9
 80074d2:	d94b      	bls.n	800756c <_svfiprintf_r+0x17c>
 80074d4:	b1b0      	cbz	r0, 8007504 <_svfiprintf_r+0x114>
 80074d6:	9207      	str	r2, [sp, #28]
 80074d8:	e014      	b.n	8007504 <_svfiprintf_r+0x114>
 80074da:	eba0 0308 	sub.w	r3, r0, r8
 80074de:	fa09 f303 	lsl.w	r3, r9, r3
 80074e2:	4313      	orrs	r3, r2
 80074e4:	46a2      	mov	sl, r4
 80074e6:	9304      	str	r3, [sp, #16]
 80074e8:	e7d2      	b.n	8007490 <_svfiprintf_r+0xa0>
 80074ea:	9b03      	ldr	r3, [sp, #12]
 80074ec:	1d19      	adds	r1, r3, #4
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	9103      	str	r1, [sp, #12]
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	bfbb      	ittet	lt
 80074f6:	425b      	neglt	r3, r3
 80074f8:	f042 0202 	orrlt.w	r2, r2, #2
 80074fc:	9307      	strge	r3, [sp, #28]
 80074fe:	9307      	strlt	r3, [sp, #28]
 8007500:	bfb8      	it	lt
 8007502:	9204      	strlt	r2, [sp, #16]
 8007504:	7823      	ldrb	r3, [r4, #0]
 8007506:	2b2e      	cmp	r3, #46	@ 0x2e
 8007508:	d10a      	bne.n	8007520 <_svfiprintf_r+0x130>
 800750a:	7863      	ldrb	r3, [r4, #1]
 800750c:	2b2a      	cmp	r3, #42	@ 0x2a
 800750e:	d132      	bne.n	8007576 <_svfiprintf_r+0x186>
 8007510:	9b03      	ldr	r3, [sp, #12]
 8007512:	3402      	adds	r4, #2
 8007514:	1d1a      	adds	r2, r3, #4
 8007516:	681b      	ldr	r3, [r3, #0]
 8007518:	9203      	str	r2, [sp, #12]
 800751a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800751e:	9305      	str	r3, [sp, #20]
 8007520:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80075d8 <_svfiprintf_r+0x1e8>
 8007524:	2203      	movs	r2, #3
 8007526:	4650      	mov	r0, sl
 8007528:	7821      	ldrb	r1, [r4, #0]
 800752a:	f000 fa17 	bl	800795c <memchr>
 800752e:	b138      	cbz	r0, 8007540 <_svfiprintf_r+0x150>
 8007530:	2240      	movs	r2, #64	@ 0x40
 8007532:	9b04      	ldr	r3, [sp, #16]
 8007534:	eba0 000a 	sub.w	r0, r0, sl
 8007538:	4082      	lsls	r2, r0
 800753a:	4313      	orrs	r3, r2
 800753c:	3401      	adds	r4, #1
 800753e:	9304      	str	r3, [sp, #16]
 8007540:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007544:	2206      	movs	r2, #6
 8007546:	4825      	ldr	r0, [pc, #148]	@ (80075dc <_svfiprintf_r+0x1ec>)
 8007548:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800754c:	f000 fa06 	bl	800795c <memchr>
 8007550:	2800      	cmp	r0, #0
 8007552:	d036      	beq.n	80075c2 <_svfiprintf_r+0x1d2>
 8007554:	4b22      	ldr	r3, [pc, #136]	@ (80075e0 <_svfiprintf_r+0x1f0>)
 8007556:	bb1b      	cbnz	r3, 80075a0 <_svfiprintf_r+0x1b0>
 8007558:	9b03      	ldr	r3, [sp, #12]
 800755a:	3307      	adds	r3, #7
 800755c:	f023 0307 	bic.w	r3, r3, #7
 8007560:	3308      	adds	r3, #8
 8007562:	9303      	str	r3, [sp, #12]
 8007564:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007566:	4433      	add	r3, r6
 8007568:	9309      	str	r3, [sp, #36]	@ 0x24
 800756a:	e76a      	b.n	8007442 <_svfiprintf_r+0x52>
 800756c:	460c      	mov	r4, r1
 800756e:	2001      	movs	r0, #1
 8007570:	fb0c 3202 	mla	r2, ip, r2, r3
 8007574:	e7a8      	b.n	80074c8 <_svfiprintf_r+0xd8>
 8007576:	2300      	movs	r3, #0
 8007578:	f04f 0c0a 	mov.w	ip, #10
 800757c:	4619      	mov	r1, r3
 800757e:	3401      	adds	r4, #1
 8007580:	9305      	str	r3, [sp, #20]
 8007582:	4620      	mov	r0, r4
 8007584:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007588:	3a30      	subs	r2, #48	@ 0x30
 800758a:	2a09      	cmp	r2, #9
 800758c:	d903      	bls.n	8007596 <_svfiprintf_r+0x1a6>
 800758e:	2b00      	cmp	r3, #0
 8007590:	d0c6      	beq.n	8007520 <_svfiprintf_r+0x130>
 8007592:	9105      	str	r1, [sp, #20]
 8007594:	e7c4      	b.n	8007520 <_svfiprintf_r+0x130>
 8007596:	4604      	mov	r4, r0
 8007598:	2301      	movs	r3, #1
 800759a:	fb0c 2101 	mla	r1, ip, r1, r2
 800759e:	e7f0      	b.n	8007582 <_svfiprintf_r+0x192>
 80075a0:	ab03      	add	r3, sp, #12
 80075a2:	9300      	str	r3, [sp, #0]
 80075a4:	462a      	mov	r2, r5
 80075a6:	4638      	mov	r0, r7
 80075a8:	4b0e      	ldr	r3, [pc, #56]	@ (80075e4 <_svfiprintf_r+0x1f4>)
 80075aa:	a904      	add	r1, sp, #16
 80075ac:	f3af 8000 	nop.w
 80075b0:	1c42      	adds	r2, r0, #1
 80075b2:	4606      	mov	r6, r0
 80075b4:	d1d6      	bne.n	8007564 <_svfiprintf_r+0x174>
 80075b6:	89ab      	ldrh	r3, [r5, #12]
 80075b8:	065b      	lsls	r3, r3, #25
 80075ba:	f53f af2d 	bmi.w	8007418 <_svfiprintf_r+0x28>
 80075be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80075c0:	e72c      	b.n	800741c <_svfiprintf_r+0x2c>
 80075c2:	ab03      	add	r3, sp, #12
 80075c4:	9300      	str	r3, [sp, #0]
 80075c6:	462a      	mov	r2, r5
 80075c8:	4638      	mov	r0, r7
 80075ca:	4b06      	ldr	r3, [pc, #24]	@ (80075e4 <_svfiprintf_r+0x1f4>)
 80075cc:	a904      	add	r1, sp, #16
 80075ce:	f000 f87d 	bl	80076cc <_printf_i>
 80075d2:	e7ed      	b.n	80075b0 <_svfiprintf_r+0x1c0>
 80075d4:	08007aa6 	.word	0x08007aa6
 80075d8:	08007aac 	.word	0x08007aac
 80075dc:	08007ab0 	.word	0x08007ab0
 80075e0:	00000000 	.word	0x00000000
 80075e4:	08007339 	.word	0x08007339

080075e8 <_printf_common>:
 80075e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80075ec:	4616      	mov	r6, r2
 80075ee:	4698      	mov	r8, r3
 80075f0:	688a      	ldr	r2, [r1, #8]
 80075f2:	690b      	ldr	r3, [r1, #16]
 80075f4:	4607      	mov	r7, r0
 80075f6:	4293      	cmp	r3, r2
 80075f8:	bfb8      	it	lt
 80075fa:	4613      	movlt	r3, r2
 80075fc:	6033      	str	r3, [r6, #0]
 80075fe:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007602:	460c      	mov	r4, r1
 8007604:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007608:	b10a      	cbz	r2, 800760e <_printf_common+0x26>
 800760a:	3301      	adds	r3, #1
 800760c:	6033      	str	r3, [r6, #0]
 800760e:	6823      	ldr	r3, [r4, #0]
 8007610:	0699      	lsls	r1, r3, #26
 8007612:	bf42      	ittt	mi
 8007614:	6833      	ldrmi	r3, [r6, #0]
 8007616:	3302      	addmi	r3, #2
 8007618:	6033      	strmi	r3, [r6, #0]
 800761a:	6825      	ldr	r5, [r4, #0]
 800761c:	f015 0506 	ands.w	r5, r5, #6
 8007620:	d106      	bne.n	8007630 <_printf_common+0x48>
 8007622:	f104 0a19 	add.w	sl, r4, #25
 8007626:	68e3      	ldr	r3, [r4, #12]
 8007628:	6832      	ldr	r2, [r6, #0]
 800762a:	1a9b      	subs	r3, r3, r2
 800762c:	42ab      	cmp	r3, r5
 800762e:	dc2b      	bgt.n	8007688 <_printf_common+0xa0>
 8007630:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007634:	6822      	ldr	r2, [r4, #0]
 8007636:	3b00      	subs	r3, #0
 8007638:	bf18      	it	ne
 800763a:	2301      	movne	r3, #1
 800763c:	0692      	lsls	r2, r2, #26
 800763e:	d430      	bmi.n	80076a2 <_printf_common+0xba>
 8007640:	4641      	mov	r1, r8
 8007642:	4638      	mov	r0, r7
 8007644:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007648:	47c8      	blx	r9
 800764a:	3001      	adds	r0, #1
 800764c:	d023      	beq.n	8007696 <_printf_common+0xae>
 800764e:	6823      	ldr	r3, [r4, #0]
 8007650:	6922      	ldr	r2, [r4, #16]
 8007652:	f003 0306 	and.w	r3, r3, #6
 8007656:	2b04      	cmp	r3, #4
 8007658:	bf14      	ite	ne
 800765a:	2500      	movne	r5, #0
 800765c:	6833      	ldreq	r3, [r6, #0]
 800765e:	f04f 0600 	mov.w	r6, #0
 8007662:	bf08      	it	eq
 8007664:	68e5      	ldreq	r5, [r4, #12]
 8007666:	f104 041a 	add.w	r4, r4, #26
 800766a:	bf08      	it	eq
 800766c:	1aed      	subeq	r5, r5, r3
 800766e:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8007672:	bf08      	it	eq
 8007674:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007678:	4293      	cmp	r3, r2
 800767a:	bfc4      	itt	gt
 800767c:	1a9b      	subgt	r3, r3, r2
 800767e:	18ed      	addgt	r5, r5, r3
 8007680:	42b5      	cmp	r5, r6
 8007682:	d11a      	bne.n	80076ba <_printf_common+0xd2>
 8007684:	2000      	movs	r0, #0
 8007686:	e008      	b.n	800769a <_printf_common+0xb2>
 8007688:	2301      	movs	r3, #1
 800768a:	4652      	mov	r2, sl
 800768c:	4641      	mov	r1, r8
 800768e:	4638      	mov	r0, r7
 8007690:	47c8      	blx	r9
 8007692:	3001      	adds	r0, #1
 8007694:	d103      	bne.n	800769e <_printf_common+0xb6>
 8007696:	f04f 30ff 	mov.w	r0, #4294967295
 800769a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800769e:	3501      	adds	r5, #1
 80076a0:	e7c1      	b.n	8007626 <_printf_common+0x3e>
 80076a2:	2030      	movs	r0, #48	@ 0x30
 80076a4:	18e1      	adds	r1, r4, r3
 80076a6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80076aa:	1c5a      	adds	r2, r3, #1
 80076ac:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80076b0:	4422      	add	r2, r4
 80076b2:	3302      	adds	r3, #2
 80076b4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80076b8:	e7c2      	b.n	8007640 <_printf_common+0x58>
 80076ba:	2301      	movs	r3, #1
 80076bc:	4622      	mov	r2, r4
 80076be:	4641      	mov	r1, r8
 80076c0:	4638      	mov	r0, r7
 80076c2:	47c8      	blx	r9
 80076c4:	3001      	adds	r0, #1
 80076c6:	d0e6      	beq.n	8007696 <_printf_common+0xae>
 80076c8:	3601      	adds	r6, #1
 80076ca:	e7d9      	b.n	8007680 <_printf_common+0x98>

080076cc <_printf_i>:
 80076cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80076d0:	7e0f      	ldrb	r7, [r1, #24]
 80076d2:	4691      	mov	r9, r2
 80076d4:	2f78      	cmp	r7, #120	@ 0x78
 80076d6:	4680      	mov	r8, r0
 80076d8:	460c      	mov	r4, r1
 80076da:	469a      	mov	sl, r3
 80076dc:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80076de:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80076e2:	d807      	bhi.n	80076f4 <_printf_i+0x28>
 80076e4:	2f62      	cmp	r7, #98	@ 0x62
 80076e6:	d80a      	bhi.n	80076fe <_printf_i+0x32>
 80076e8:	2f00      	cmp	r7, #0
 80076ea:	f000 80d1 	beq.w	8007890 <_printf_i+0x1c4>
 80076ee:	2f58      	cmp	r7, #88	@ 0x58
 80076f0:	f000 80b8 	beq.w	8007864 <_printf_i+0x198>
 80076f4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80076f8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80076fc:	e03a      	b.n	8007774 <_printf_i+0xa8>
 80076fe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8007702:	2b15      	cmp	r3, #21
 8007704:	d8f6      	bhi.n	80076f4 <_printf_i+0x28>
 8007706:	a101      	add	r1, pc, #4	@ (adr r1, 800770c <_printf_i+0x40>)
 8007708:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800770c:	08007765 	.word	0x08007765
 8007710:	08007779 	.word	0x08007779
 8007714:	080076f5 	.word	0x080076f5
 8007718:	080076f5 	.word	0x080076f5
 800771c:	080076f5 	.word	0x080076f5
 8007720:	080076f5 	.word	0x080076f5
 8007724:	08007779 	.word	0x08007779
 8007728:	080076f5 	.word	0x080076f5
 800772c:	080076f5 	.word	0x080076f5
 8007730:	080076f5 	.word	0x080076f5
 8007734:	080076f5 	.word	0x080076f5
 8007738:	08007877 	.word	0x08007877
 800773c:	080077a3 	.word	0x080077a3
 8007740:	08007831 	.word	0x08007831
 8007744:	080076f5 	.word	0x080076f5
 8007748:	080076f5 	.word	0x080076f5
 800774c:	08007899 	.word	0x08007899
 8007750:	080076f5 	.word	0x080076f5
 8007754:	080077a3 	.word	0x080077a3
 8007758:	080076f5 	.word	0x080076f5
 800775c:	080076f5 	.word	0x080076f5
 8007760:	08007839 	.word	0x08007839
 8007764:	6833      	ldr	r3, [r6, #0]
 8007766:	1d1a      	adds	r2, r3, #4
 8007768:	681b      	ldr	r3, [r3, #0]
 800776a:	6032      	str	r2, [r6, #0]
 800776c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007770:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8007774:	2301      	movs	r3, #1
 8007776:	e09c      	b.n	80078b2 <_printf_i+0x1e6>
 8007778:	6833      	ldr	r3, [r6, #0]
 800777a:	6820      	ldr	r0, [r4, #0]
 800777c:	1d19      	adds	r1, r3, #4
 800777e:	6031      	str	r1, [r6, #0]
 8007780:	0606      	lsls	r6, r0, #24
 8007782:	d501      	bpl.n	8007788 <_printf_i+0xbc>
 8007784:	681d      	ldr	r5, [r3, #0]
 8007786:	e003      	b.n	8007790 <_printf_i+0xc4>
 8007788:	0645      	lsls	r5, r0, #25
 800778a:	d5fb      	bpl.n	8007784 <_printf_i+0xb8>
 800778c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007790:	2d00      	cmp	r5, #0
 8007792:	da03      	bge.n	800779c <_printf_i+0xd0>
 8007794:	232d      	movs	r3, #45	@ 0x2d
 8007796:	426d      	negs	r5, r5
 8007798:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800779c:	230a      	movs	r3, #10
 800779e:	4858      	ldr	r0, [pc, #352]	@ (8007900 <_printf_i+0x234>)
 80077a0:	e011      	b.n	80077c6 <_printf_i+0xfa>
 80077a2:	6821      	ldr	r1, [r4, #0]
 80077a4:	6833      	ldr	r3, [r6, #0]
 80077a6:	0608      	lsls	r0, r1, #24
 80077a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80077ac:	d402      	bmi.n	80077b4 <_printf_i+0xe8>
 80077ae:	0649      	lsls	r1, r1, #25
 80077b0:	bf48      	it	mi
 80077b2:	b2ad      	uxthmi	r5, r5
 80077b4:	2f6f      	cmp	r7, #111	@ 0x6f
 80077b6:	6033      	str	r3, [r6, #0]
 80077b8:	bf14      	ite	ne
 80077ba:	230a      	movne	r3, #10
 80077bc:	2308      	moveq	r3, #8
 80077be:	4850      	ldr	r0, [pc, #320]	@ (8007900 <_printf_i+0x234>)
 80077c0:	2100      	movs	r1, #0
 80077c2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80077c6:	6866      	ldr	r6, [r4, #4]
 80077c8:	2e00      	cmp	r6, #0
 80077ca:	60a6      	str	r6, [r4, #8]
 80077cc:	db05      	blt.n	80077da <_printf_i+0x10e>
 80077ce:	6821      	ldr	r1, [r4, #0]
 80077d0:	432e      	orrs	r6, r5
 80077d2:	f021 0104 	bic.w	r1, r1, #4
 80077d6:	6021      	str	r1, [r4, #0]
 80077d8:	d04b      	beq.n	8007872 <_printf_i+0x1a6>
 80077da:	4616      	mov	r6, r2
 80077dc:	fbb5 f1f3 	udiv	r1, r5, r3
 80077e0:	fb03 5711 	mls	r7, r3, r1, r5
 80077e4:	5dc7      	ldrb	r7, [r0, r7]
 80077e6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80077ea:	462f      	mov	r7, r5
 80077ec:	42bb      	cmp	r3, r7
 80077ee:	460d      	mov	r5, r1
 80077f0:	d9f4      	bls.n	80077dc <_printf_i+0x110>
 80077f2:	2b08      	cmp	r3, #8
 80077f4:	d10b      	bne.n	800780e <_printf_i+0x142>
 80077f6:	6823      	ldr	r3, [r4, #0]
 80077f8:	07df      	lsls	r7, r3, #31
 80077fa:	d508      	bpl.n	800780e <_printf_i+0x142>
 80077fc:	6923      	ldr	r3, [r4, #16]
 80077fe:	6861      	ldr	r1, [r4, #4]
 8007800:	4299      	cmp	r1, r3
 8007802:	bfde      	ittt	le
 8007804:	2330      	movle	r3, #48	@ 0x30
 8007806:	f806 3c01 	strble.w	r3, [r6, #-1]
 800780a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800780e:	1b92      	subs	r2, r2, r6
 8007810:	6122      	str	r2, [r4, #16]
 8007812:	464b      	mov	r3, r9
 8007814:	4621      	mov	r1, r4
 8007816:	4640      	mov	r0, r8
 8007818:	f8cd a000 	str.w	sl, [sp]
 800781c:	aa03      	add	r2, sp, #12
 800781e:	f7ff fee3 	bl	80075e8 <_printf_common>
 8007822:	3001      	adds	r0, #1
 8007824:	d14a      	bne.n	80078bc <_printf_i+0x1f0>
 8007826:	f04f 30ff 	mov.w	r0, #4294967295
 800782a:	b004      	add	sp, #16
 800782c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007830:	6823      	ldr	r3, [r4, #0]
 8007832:	f043 0320 	orr.w	r3, r3, #32
 8007836:	6023      	str	r3, [r4, #0]
 8007838:	2778      	movs	r7, #120	@ 0x78
 800783a:	4832      	ldr	r0, [pc, #200]	@ (8007904 <_printf_i+0x238>)
 800783c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007840:	6823      	ldr	r3, [r4, #0]
 8007842:	6831      	ldr	r1, [r6, #0]
 8007844:	061f      	lsls	r7, r3, #24
 8007846:	f851 5b04 	ldr.w	r5, [r1], #4
 800784a:	d402      	bmi.n	8007852 <_printf_i+0x186>
 800784c:	065f      	lsls	r7, r3, #25
 800784e:	bf48      	it	mi
 8007850:	b2ad      	uxthmi	r5, r5
 8007852:	6031      	str	r1, [r6, #0]
 8007854:	07d9      	lsls	r1, r3, #31
 8007856:	bf44      	itt	mi
 8007858:	f043 0320 	orrmi.w	r3, r3, #32
 800785c:	6023      	strmi	r3, [r4, #0]
 800785e:	b11d      	cbz	r5, 8007868 <_printf_i+0x19c>
 8007860:	2310      	movs	r3, #16
 8007862:	e7ad      	b.n	80077c0 <_printf_i+0xf4>
 8007864:	4826      	ldr	r0, [pc, #152]	@ (8007900 <_printf_i+0x234>)
 8007866:	e7e9      	b.n	800783c <_printf_i+0x170>
 8007868:	6823      	ldr	r3, [r4, #0]
 800786a:	f023 0320 	bic.w	r3, r3, #32
 800786e:	6023      	str	r3, [r4, #0]
 8007870:	e7f6      	b.n	8007860 <_printf_i+0x194>
 8007872:	4616      	mov	r6, r2
 8007874:	e7bd      	b.n	80077f2 <_printf_i+0x126>
 8007876:	6833      	ldr	r3, [r6, #0]
 8007878:	6825      	ldr	r5, [r4, #0]
 800787a:	1d18      	adds	r0, r3, #4
 800787c:	6961      	ldr	r1, [r4, #20]
 800787e:	6030      	str	r0, [r6, #0]
 8007880:	062e      	lsls	r6, r5, #24
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	d501      	bpl.n	800788a <_printf_i+0x1be>
 8007886:	6019      	str	r1, [r3, #0]
 8007888:	e002      	b.n	8007890 <_printf_i+0x1c4>
 800788a:	0668      	lsls	r0, r5, #25
 800788c:	d5fb      	bpl.n	8007886 <_printf_i+0x1ba>
 800788e:	8019      	strh	r1, [r3, #0]
 8007890:	2300      	movs	r3, #0
 8007892:	4616      	mov	r6, r2
 8007894:	6123      	str	r3, [r4, #16]
 8007896:	e7bc      	b.n	8007812 <_printf_i+0x146>
 8007898:	6833      	ldr	r3, [r6, #0]
 800789a:	2100      	movs	r1, #0
 800789c:	1d1a      	adds	r2, r3, #4
 800789e:	6032      	str	r2, [r6, #0]
 80078a0:	681e      	ldr	r6, [r3, #0]
 80078a2:	6862      	ldr	r2, [r4, #4]
 80078a4:	4630      	mov	r0, r6
 80078a6:	f000 f859 	bl	800795c <memchr>
 80078aa:	b108      	cbz	r0, 80078b0 <_printf_i+0x1e4>
 80078ac:	1b80      	subs	r0, r0, r6
 80078ae:	6060      	str	r0, [r4, #4]
 80078b0:	6863      	ldr	r3, [r4, #4]
 80078b2:	6123      	str	r3, [r4, #16]
 80078b4:	2300      	movs	r3, #0
 80078b6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80078ba:	e7aa      	b.n	8007812 <_printf_i+0x146>
 80078bc:	4632      	mov	r2, r6
 80078be:	4649      	mov	r1, r9
 80078c0:	4640      	mov	r0, r8
 80078c2:	6923      	ldr	r3, [r4, #16]
 80078c4:	47d0      	blx	sl
 80078c6:	3001      	adds	r0, #1
 80078c8:	d0ad      	beq.n	8007826 <_printf_i+0x15a>
 80078ca:	6823      	ldr	r3, [r4, #0]
 80078cc:	079b      	lsls	r3, r3, #30
 80078ce:	d413      	bmi.n	80078f8 <_printf_i+0x22c>
 80078d0:	68e0      	ldr	r0, [r4, #12]
 80078d2:	9b03      	ldr	r3, [sp, #12]
 80078d4:	4298      	cmp	r0, r3
 80078d6:	bfb8      	it	lt
 80078d8:	4618      	movlt	r0, r3
 80078da:	e7a6      	b.n	800782a <_printf_i+0x15e>
 80078dc:	2301      	movs	r3, #1
 80078de:	4632      	mov	r2, r6
 80078e0:	4649      	mov	r1, r9
 80078e2:	4640      	mov	r0, r8
 80078e4:	47d0      	blx	sl
 80078e6:	3001      	adds	r0, #1
 80078e8:	d09d      	beq.n	8007826 <_printf_i+0x15a>
 80078ea:	3501      	adds	r5, #1
 80078ec:	68e3      	ldr	r3, [r4, #12]
 80078ee:	9903      	ldr	r1, [sp, #12]
 80078f0:	1a5b      	subs	r3, r3, r1
 80078f2:	42ab      	cmp	r3, r5
 80078f4:	dcf2      	bgt.n	80078dc <_printf_i+0x210>
 80078f6:	e7eb      	b.n	80078d0 <_printf_i+0x204>
 80078f8:	2500      	movs	r5, #0
 80078fa:	f104 0619 	add.w	r6, r4, #25
 80078fe:	e7f5      	b.n	80078ec <_printf_i+0x220>
 8007900:	08007ab7 	.word	0x08007ab7
 8007904:	08007ac8 	.word	0x08007ac8

08007908 <memmove>:
 8007908:	4288      	cmp	r0, r1
 800790a:	b510      	push	{r4, lr}
 800790c:	eb01 0402 	add.w	r4, r1, r2
 8007910:	d902      	bls.n	8007918 <memmove+0x10>
 8007912:	4284      	cmp	r4, r0
 8007914:	4623      	mov	r3, r4
 8007916:	d807      	bhi.n	8007928 <memmove+0x20>
 8007918:	1e43      	subs	r3, r0, #1
 800791a:	42a1      	cmp	r1, r4
 800791c:	d008      	beq.n	8007930 <memmove+0x28>
 800791e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007922:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007926:	e7f8      	b.n	800791a <memmove+0x12>
 8007928:	4601      	mov	r1, r0
 800792a:	4402      	add	r2, r0
 800792c:	428a      	cmp	r2, r1
 800792e:	d100      	bne.n	8007932 <memmove+0x2a>
 8007930:	bd10      	pop	{r4, pc}
 8007932:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007936:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800793a:	e7f7      	b.n	800792c <memmove+0x24>

0800793c <_sbrk_r>:
 800793c:	b538      	push	{r3, r4, r5, lr}
 800793e:	2300      	movs	r3, #0
 8007940:	4d05      	ldr	r5, [pc, #20]	@ (8007958 <_sbrk_r+0x1c>)
 8007942:	4604      	mov	r4, r0
 8007944:	4608      	mov	r0, r1
 8007946:	602b      	str	r3, [r5, #0]
 8007948:	f7fa f97c 	bl	8001c44 <_sbrk>
 800794c:	1c43      	adds	r3, r0, #1
 800794e:	d102      	bne.n	8007956 <_sbrk_r+0x1a>
 8007950:	682b      	ldr	r3, [r5, #0]
 8007952:	b103      	cbz	r3, 8007956 <_sbrk_r+0x1a>
 8007954:	6023      	str	r3, [r4, #0]
 8007956:	bd38      	pop	{r3, r4, r5, pc}
 8007958:	20001d88 	.word	0x20001d88

0800795c <memchr>:
 800795c:	4603      	mov	r3, r0
 800795e:	b510      	push	{r4, lr}
 8007960:	b2c9      	uxtb	r1, r1
 8007962:	4402      	add	r2, r0
 8007964:	4293      	cmp	r3, r2
 8007966:	4618      	mov	r0, r3
 8007968:	d101      	bne.n	800796e <memchr+0x12>
 800796a:	2000      	movs	r0, #0
 800796c:	e003      	b.n	8007976 <memchr+0x1a>
 800796e:	7804      	ldrb	r4, [r0, #0]
 8007970:	3301      	adds	r3, #1
 8007972:	428c      	cmp	r4, r1
 8007974:	d1f6      	bne.n	8007964 <memchr+0x8>
 8007976:	bd10      	pop	{r4, pc}

08007978 <_realloc_r>:
 8007978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800797c:	4607      	mov	r7, r0
 800797e:	4614      	mov	r4, r2
 8007980:	460d      	mov	r5, r1
 8007982:	b921      	cbnz	r1, 800798e <_realloc_r+0x16>
 8007984:	4611      	mov	r1, r2
 8007986:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800798a:	f7ff bc49 	b.w	8007220 <_malloc_r>
 800798e:	b92a      	cbnz	r2, 800799c <_realloc_r+0x24>
 8007990:	f7ff fbdc 	bl	800714c <_free_r>
 8007994:	4625      	mov	r5, r4
 8007996:	4628      	mov	r0, r5
 8007998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800799c:	f000 f81a 	bl	80079d4 <_malloc_usable_size_r>
 80079a0:	4284      	cmp	r4, r0
 80079a2:	4606      	mov	r6, r0
 80079a4:	d802      	bhi.n	80079ac <_realloc_r+0x34>
 80079a6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80079aa:	d8f4      	bhi.n	8007996 <_realloc_r+0x1e>
 80079ac:	4621      	mov	r1, r4
 80079ae:	4638      	mov	r0, r7
 80079b0:	f7ff fc36 	bl	8007220 <_malloc_r>
 80079b4:	4680      	mov	r8, r0
 80079b6:	b908      	cbnz	r0, 80079bc <_realloc_r+0x44>
 80079b8:	4645      	mov	r5, r8
 80079ba:	e7ec      	b.n	8007996 <_realloc_r+0x1e>
 80079bc:	42b4      	cmp	r4, r6
 80079be:	4622      	mov	r2, r4
 80079c0:	4629      	mov	r1, r5
 80079c2:	bf28      	it	cs
 80079c4:	4632      	movcs	r2, r6
 80079c6:	f7ff fbb3 	bl	8007130 <memcpy>
 80079ca:	4629      	mov	r1, r5
 80079cc:	4638      	mov	r0, r7
 80079ce:	f7ff fbbd 	bl	800714c <_free_r>
 80079d2:	e7f1      	b.n	80079b8 <_realloc_r+0x40>

080079d4 <_malloc_usable_size_r>:
 80079d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80079d8:	1f18      	subs	r0, r3, #4
 80079da:	2b00      	cmp	r3, #0
 80079dc:	bfbc      	itt	lt
 80079de:	580b      	ldrlt	r3, [r1, r0]
 80079e0:	18c0      	addlt	r0, r0, r3
 80079e2:	4770      	bx	lr

080079e4 <_init>:
 80079e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80079e6:	bf00      	nop
 80079e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80079ea:	bc08      	pop	{r3}
 80079ec:	469e      	mov	lr, r3
 80079ee:	4770      	bx	lr

080079f0 <_fini>:
 80079f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80079f2:	bf00      	nop
 80079f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80079f6:	bc08      	pop	{r3}
 80079f8:	469e      	mov	lr, r3
 80079fa:	4770      	bx	lr
